ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SPI1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_SPI1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_SPI1_Init:
  26              	.LFB126:
  27              		.file 1 "Src/spi.c"
   1:Src/spi.c     **** /**
   2:Src/spi.c     ****   ******************************************************************************
   3:Src/spi.c     ****   * File Name          : SPI.c
   4:Src/spi.c     ****   * Description        : This file provides code for the configuration
   5:Src/spi.c     ****   *                      of the SPI instances.
   6:Src/spi.c     ****   ******************************************************************************
   7:Src/spi.c     ****   ** This notice applies to any and all portions of this file
   8:Src/spi.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/spi.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/spi.c     ****   * inserted by the user or by software development tools
  11:Src/spi.c     ****   * are owned by their respective copyright owners.
  12:Src/spi.c     ****   *
  13:Src/spi.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/spi.c     ****   *
  15:Src/spi.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/spi.c     ****   * are permitted provided that the following conditions are met:
  17:Src/spi.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/spi.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/spi.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/spi.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/spi.c     ****   *      and/or other materials provided with the distribution.
  22:Src/spi.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/spi.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/spi.c     ****   *      without specific prior written permission.
  25:Src/spi.c     ****   *
  26:Src/spi.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/spi.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/spi.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/spi.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/spi.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/spi.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 2


  32:Src/spi.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/spi.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/spi.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/spi.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/spi.c     ****   *
  37:Src/spi.c     ****   ******************************************************************************
  38:Src/spi.c     ****   */
  39:Src/spi.c     **** 
  40:Src/spi.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/spi.c     **** #include "spi.h"
  42:Src/spi.c     **** 
  43:Src/spi.c     **** #include "gpio.h"
  44:Src/spi.c     **** 
  45:Src/spi.c     **** /* USER CODE BEGIN 0 */
  46:Src/spi.c     **** //mpu6500
  47:Src/spi.c     **** #define WHO_AM_I      0x75
  48:Src/spi.c     **** #define Certain       0x70//return from "WHO_AM_I"
  49:Src/spi.c     **** #define CONFIG        0x1A
  50:Src/spi.c     **** #define GYRO_CONFIG   0x1B
  51:Src/spi.c     **** #define ACCEL_CONFIG  0x1C
  52:Src/spi.c     **** #define PWR_MGMT_1    0x6B
  53:Src/spi.c     **** 
  54:Src/spi.c     **** #define GYRO_OUT_X_H  0x43
  55:Src/spi.c     **** #define GYRO_OUT_X_L  0x44
  56:Src/spi.c     **** 
  57:Src/spi.c     **** #define GYRO_OUT_Y_H  0x45
  58:Src/spi.c     **** #define GYRO_OUT_Y_L  0x46
  59:Src/spi.c     **** 
  60:Src/spi.c     **** #define GYRO_OUT_Z_H  0x47
  61:Src/spi.c     **** #define GYRO_OUT_Z_L  0x48
  62:Src/spi.c     **** 
  63:Src/spi.c     **** #define ACCEL_XOUT_H  0x3B
  64:Src/spi.c     **** #define ACCEL_XOUT_L  0x3C
  65:Src/spi.c     **** 
  66:Src/spi.c     **** #define ACCEL_YOUT_H  0x3D
  67:Src/spi.c     **** #define ACCEL_YOUT_L  0x3E
  68:Src/spi.c     **** 
  69:Src/spi.c     **** #define ACCEL_ZOUT_H  0x3F
  70:Src/spi.c     **** #define ACCEL_ZOUT_L  0x40
  71:Src/spi.c     **** 
  72:Src/spi.c     **** #define SETTING       0x80  //0b1000 0000 8bitの上位bitを立てると
  73:Src/spi.c     **** 
  74:Src/spi.c     **** #define GYRO_FACTOR  16.4f
  75:Src/spi.c     **** #define ACCEL_FACTOR 418.0f//4096/9.80665(-16~+16[/g])
  76:Src/spi.c     **** 
  77:Src/spi.c     **** #define TRUE 0
  78:Src/spi.c     **** #define FALSE 1
  79:Src/spi.c     **** 
  80:Src/spi.c     **** #define dt 0.001f
  81:Src/spi.c     **** 
  82:Src/spi.c     **** volatile float gyro_x;
  83:Src/spi.c     **** volatile float gyro_y;
  84:Src/spi.c     **** gyro_t gyro_z;
  85:Src/spi.c     **** uint8_t flag_gyro_calc;
  86:Src/spi.c     **** volatile accel_t accel;
  87:Src/spi.c     **** /* USER CODE END 0 */
  88:Src/spi.c     **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 3


  89:Src/spi.c     **** SPI_HandleTypeDef hspi1;
  90:Src/spi.c     **** 
  91:Src/spi.c     **** /* SPI1 init function */
  92:Src/spi.c     **** void MX_SPI1_Init(void)
  93:Src/spi.c     **** {
  28              		.loc 1 93 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  94:Src/spi.c     **** 
  95:Src/spi.c     ****   hspi1.Instance = SPI1;
  37              		.loc 1 95 0
  38 0002 0F48     		ldr	r0, .L5
  39 0004 0F4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  96:Src/spi.c     ****   hspi1.Init.Mode = SPI_MODE_MASTER;
  41              		.loc 1 96 0
  42 0008 4FF48273 		mov	r3, #260
  43 000c 4360     		str	r3, [r0, #4]
  97:Src/spi.c     ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  44              		.loc 1 97 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  98:Src/spi.c     ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  47              		.loc 1 98 0
  48 0012 C360     		str	r3, [r0, #12]
  99:Src/spi.c     ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  49              		.loc 1 99 0
  50 0014 0361     		str	r3, [r0, #16]
 100:Src/spi.c     ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  51              		.loc 1 100 0
  52 0016 4361     		str	r3, [r0, #20]
 101:Src/spi.c     ****   hspi1.Init.NSS = SPI_NSS_SOFT;
  53              		.loc 1 101 0
  54 0018 4FF40072 		mov	r2, #512
  55 001c 8261     		str	r2, [r0, #24]
 102:Src/spi.c     ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
  56              		.loc 1 102 0
  57 001e 2022     		movs	r2, #32
  58 0020 C261     		str	r2, [r0, #28]
 103:Src/spi.c     ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  59              		.loc 1 103 0
  60 0022 0362     		str	r3, [r0, #32]
 104:Src/spi.c     ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  61              		.loc 1 104 0
  62 0024 4362     		str	r3, [r0, #36]
 105:Src/spi.c     ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  63              		.loc 1 105 0
  64 0026 8362     		str	r3, [r0, #40]
 106:Src/spi.c     ****   hspi1.Init.CRCPolynomial = 10;
  65              		.loc 1 106 0
  66 0028 0A23     		movs	r3, #10
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 4


  67 002a C362     		str	r3, [r0, #44]
 107:Src/spi.c     ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
  68              		.loc 1 107 0
  69 002c FFF7FEFF 		bl	HAL_SPI_Init
  70              	.LVL0:
  71 0030 00B9     		cbnz	r0, .L4
  72              	.L1:
 108:Src/spi.c     ****   {
 109:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
 110:Src/spi.c     ****   }
 111:Src/spi.c     **** 
 112:Src/spi.c     **** }
  73              		.loc 1 112 0
  74 0032 08BD     		pop	{r3, pc}
  75              	.L4:
 109:Src/spi.c     ****   }
  76              		.loc 1 109 0
  77 0034 6D21     		movs	r1, #109
  78 0036 0448     		ldr	r0, .L5+8
  79 0038 FFF7FEFF 		bl	_Error_Handler
  80              	.LVL1:
  81              		.loc 1 112 0
  82 003c F9E7     		b	.L1
  83              	.L6:
  84 003e 00BF     		.align	2
  85              	.L5:
  86 0040 00000000 		.word	hspi1
  87 0044 00300140 		.word	1073819648
  88 0048 00000000 		.word	.LC0
  89              		.cfi_endproc
  90              	.LFE126:
  92              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
  93              		.align	1
  94              		.global	HAL_SPI_MspInit
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	HAL_SPI_MspInit:
 101              	.LFB127:
 113:Src/spi.c     **** 
 114:Src/spi.c     **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
 115:Src/spi.c     **** {
 102              		.loc 1 115 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 24
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              	.LVL2:
 116:Src/spi.c     **** 
 117:Src/spi.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 118:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 107              		.loc 1 118 0
 108 0000 0268     		ldr	r2, [r0]
 109 0002 114B     		ldr	r3, .L14
 110 0004 9A42     		cmp	r2, r3
 111 0006 00D0     		beq	.L13
 112 0008 7047     		bx	lr
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 5


 113              	.L13:
 115:Src/spi.c     **** 
 114              		.loc 1 115 0
 115 000a 00B5     		push	{lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 4
 118              		.cfi_offset 14, -4
 119 000c 87B0     		sub	sp, sp, #28
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 32
 122              	.LBB2:
 119:Src/spi.c     ****   {
 120:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 0 */
 121:Src/spi.c     **** 
 122:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 0 */
 123:Src/spi.c     ****     /* SPI1 clock enable */
 124:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_ENABLE();
 123              		.loc 1 124 0
 124 000e 0021     		movs	r1, #0
 125 0010 0091     		str	r1, [sp]
 126 0012 03F58433 		add	r3, r3, #67584
 127 0016 5A6C     		ldr	r2, [r3, #68]
 128 0018 42F48052 		orr	r2, r2, #4096
 129 001c 5A64     		str	r2, [r3, #68]
 130 001e 5B6C     		ldr	r3, [r3, #68]
 131 0020 03F48053 		and	r3, r3, #4096
 132 0024 0093     		str	r3, [sp]
 133 0026 009B     		ldr	r3, [sp]
 134              	.LBE2:
 125:Src/spi.c     ****   
 126:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 127:Src/spi.c     ****     PA5     ------> SPI1_SCK
 128:Src/spi.c     ****     PA6     ------> SPI1_MISO
 129:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 130:Src/spi.c     ****     */
 131:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 135              		.loc 1 131 0
 136 0028 E023     		movs	r3, #224
 137 002a 0193     		str	r3, [sp, #4]
 132:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 138              		.loc 1 132 0
 139 002c 0223     		movs	r3, #2
 140 002e 0293     		str	r3, [sp, #8]
 133:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 133 0
 142 0030 0391     		str	r1, [sp, #12]
 134:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 143              		.loc 1 134 0
 144 0032 0323     		movs	r3, #3
 145 0034 0493     		str	r3, [sp, #16]
 135:Src/spi.c     ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 146              		.loc 1 135 0
 147 0036 0523     		movs	r3, #5
 148 0038 0593     		str	r3, [sp, #20]
 136:Src/spi.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 149              		.loc 1 136 0
 150 003a 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 6


 151 003c 0348     		ldr	r0, .L14+4
 152              	.LVL3:
 153 003e FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL4:
 137:Src/spi.c     **** 
 138:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 139:Src/spi.c     **** 
 140:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 1 */
 141:Src/spi.c     ****   }
 142:Src/spi.c     **** }
 155              		.loc 1 142 0
 156 0042 07B0     		add	sp, sp, #28
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 4
 159              		@ sp needed
 160 0044 5DF804FB 		ldr	pc, [sp], #4
 161              	.L15:
 162              		.align	2
 163              	.L14:
 164 0048 00300140 		.word	1073819648
 165 004c 00000240 		.word	1073872896
 166              		.cfi_endproc
 167              	.LFE127:
 169              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_SPI_MspDeInit
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	HAL_SPI_MspDeInit:
 178              	.LFB128:
 143:Src/spi.c     **** 
 144:Src/spi.c     **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 145:Src/spi.c     **** {
 179              		.loc 1 145 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL5:
 184 0000 08B5     		push	{r3, lr}
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 3, -8
 188              		.cfi_offset 14, -4
 146:Src/spi.c     **** 
 147:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 189              		.loc 1 147 0
 190 0002 0268     		ldr	r2, [r0]
 191 0004 064B     		ldr	r3, .L20
 192 0006 9A42     		cmp	r2, r3
 193 0008 00D0     		beq	.L19
 194              	.LVL6:
 195              	.L16:
 148:Src/spi.c     ****   {
 149:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 150:Src/spi.c     **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 7


 151:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 0 */
 152:Src/spi.c     ****     /* Peripheral clock disable */
 153:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_DISABLE();
 154:Src/spi.c     ****   
 155:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 156:Src/spi.c     ****     PA5     ------> SPI1_SCK
 157:Src/spi.c     ****     PA6     ------> SPI1_MISO
 158:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 159:Src/spi.c     ****     */
 160:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 161:Src/spi.c     **** 
 162:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 1 */
 163:Src/spi.c     **** 
 164:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 1 */
 165:Src/spi.c     ****   }
 166:Src/spi.c     **** } 
 196              		.loc 1 166 0
 197 000a 08BD     		pop	{r3, pc}
 198              	.LVL7:
 199              	.L19:
 153:Src/spi.c     ****   
 200              		.loc 1 153 0
 201 000c 054A     		ldr	r2, .L20+4
 202 000e 536C     		ldr	r3, [r2, #68]
 203 0010 23F48053 		bic	r3, r3, #4096
 204 0014 5364     		str	r3, [r2, #68]
 160:Src/spi.c     **** 
 205              		.loc 1 160 0
 206 0016 E021     		movs	r1, #224
 207 0018 0348     		ldr	r0, .L20+8
 208              	.LVL8:
 209 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 210              	.LVL9:
 211              		.loc 1 166 0
 212 001e F4E7     		b	.L16
 213              	.L21:
 214              		.align	2
 215              	.L20:
 216 0020 00300140 		.word	1073819648
 217 0024 00380240 		.word	1073887232
 218 0028 00000240 		.word	1073872896
 219              		.cfi_endproc
 220              	.LFE128:
 222              		.section	.text.read_byte,"ax",%progbits
 223              		.align	1
 224              		.global	read_byte
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	read_byte:
 231              	.LFB129:
 167:Src/spi.c     **** 
 168:Src/spi.c     **** /* USER CODE BEGIN 1 */
 169:Src/spi.c     **** /********************************************************************
 170:Src/spi.c     ****  * Overview : spi read register
 171:Src/spi.c     ****  * Argument : register
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 8


 172:Src/spi.c     ****  * Return : 1byte data
 173:Src/spi.c     **** ********************************************************************/
 174:Src/spi.c     **** uint8_t read_byte(uint8_t reg){
 232              		.loc 1 174 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 8
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL10:
 237 0000 30B5     		push	{r4, r5, lr}
 238              	.LCFI5:
 239              		.cfi_def_cfa_offset 12
 240              		.cfi_offset 4, -12
 241              		.cfi_offset 5, -8
 242              		.cfi_offset 14, -4
 243 0002 83B0     		sub	sp, sp, #12
 244              	.LCFI6:
 245              		.cfi_def_cfa_offset 24
 246 0004 0446     		mov	r4, r0
 175:Src/spi.c     ****   uint8_t ret,val;
 176:Src/spi.c     ****   HAL_GPIO_WritePin(gyro_cs_GPIO_Port,gyro_cs_Pin,GPIO_PIN_RESET);
 247              		.loc 1 176 0
 248 0006 114D     		ldr	r5, .L24
 249 0008 0022     		movs	r2, #0
 250 000a 4FF48051 		mov	r1, #4096
 251 000e 2846     		mov	r0, r5
 252              	.LVL11:
 253 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL12:
 177:Src/spi.c     ****   ret = reg|SETTING ;
 255              		.loc 1 177 0
 256 0014 64F07F04 		orn	r4, r4, #127
 257 0018 02A9     		add	r1, sp, #8
 258 001a 01F8014D 		strb	r4, [r1, #-1]!
 178:Src/spi.c     ****   HAL_SPI_Transmit(&hspi1,&ret,1,100);
 259              		.loc 1 178 0
 260 001e 0C4C     		ldr	r4, .L24+4
 261 0020 6423     		movs	r3, #100
 262 0022 0122     		movs	r2, #1
 263 0024 2046     		mov	r0, r4
 264 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 265              	.LVL13:
 179:Src/spi.c     ****   HAL_SPI_Receive(&hspi1,&val,1,100);
 266              		.loc 1 179 0
 267 002a 6423     		movs	r3, #100
 268 002c 0122     		movs	r2, #1
 269 002e 0DF10601 		add	r1, sp, #6
 270 0032 2046     		mov	r0, r4
 271 0034 FFF7FEFF 		bl	HAL_SPI_Receive
 272              	.LVL14:
 180:Src/spi.c     ****   HAL_GPIO_WritePin(gyro_cs_GPIO_Port,gyro_cs_Pin,GPIO_PIN_SET);
 273              		.loc 1 180 0
 274 0038 0122     		movs	r2, #1
 275 003a 4FF48051 		mov	r1, #4096
 276 003e 2846     		mov	r0, r5
 277 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 278              	.LVL15:
 181:Src/spi.c     ****   return val;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 9


 182:Src/spi.c     **** }
 279              		.loc 1 182 0
 280 0044 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 281 0048 03B0     		add	sp, sp, #12
 282              	.LCFI7:
 283              		.cfi_def_cfa_offset 12
 284              		@ sp needed
 285 004a 30BD     		pop	{r4, r5, pc}
 286              	.L25:
 287              		.align	2
 288              	.L24:
 289 004c 00040240 		.word	1073873920
 290 0050 00000000 		.word	hspi1
 291              		.cfi_endproc
 292              	.LFE129:
 294              		.section	.text.read_shift_byte,"ax",%progbits
 295              		.align	1
 296              		.global	read_shift_byte
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	read_shift_byte:
 303              	.LFB130:
 183:Src/spi.c     **** 
 184:Src/spi.c     **** 
 185:Src/spi.c     **** /****************************************************************
 186:Src/spi.c     ****  * Overview : shift 8bit and spi read register
 187:Src/spi.c     ****  * Argument : register
 188:Src/spi.c     ****  * Return : 2byte data (shift 8bit)
 189:Src/spi.c     ****  ************************************************************/
 190:Src/spi.c     **** int16_t read_shift_byte(uint8_t reg){
 304              		.loc 1 190 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              	.LVL16:
 309 0000 30B5     		push	{r4, r5, lr}
 310              	.LCFI8:
 311              		.cfi_def_cfa_offset 12
 312              		.cfi_offset 4, -12
 313              		.cfi_offset 5, -8
 314              		.cfi_offset 14, -4
 315 0002 83B0     		sub	sp, sp, #12
 316              	.LCFI9:
 317              		.cfi_def_cfa_offset 24
 318 0004 0446     		mov	r4, r0
 191:Src/spi.c     ****   uint8_t address,val_1;
 192:Src/spi.c     ****   int16_t val_2;
 193:Src/spi.c     ****   HAL_GPIO_WritePin(gyro_cs_GPIO_Port,gyro_cs_Pin,GPIO_PIN_RESET);
 319              		.loc 1 193 0
 320 0006 134D     		ldr	r5, .L28
 321 0008 0022     		movs	r2, #0
 322 000a 4FF48051 		mov	r1, #4096
 323 000e 2846     		mov	r0, r5
 324              	.LVL17:
 325 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 10


 326              	.LVL18:
 194:Src/spi.c     ****   address = reg | SETTING ;
 327              		.loc 1 194 0
 328 0014 64F07F04 		orn	r4, r4, #127
 329 0018 02A9     		add	r1, sp, #8
 330 001a 01F8014D 		strb	r4, [r1, #-1]!
 195:Src/spi.c     ****   HAL_SPI_Transmit(&hspi1,&address,1,100);
 331              		.loc 1 195 0
 332 001e 0E4C     		ldr	r4, .L28+4
 333 0020 6423     		movs	r3, #100
 334 0022 0122     		movs	r2, #1
 335 0024 2046     		mov	r0, r4
 336 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 337              	.LVL19:
 196:Src/spi.c     ****   HAL_SPI_Receive(&hspi1,&val_1,1,100);
 338              		.loc 1 196 0
 339 002a 6423     		movs	r3, #100
 340 002c 0122     		movs	r2, #1
 341 002e 0DF10601 		add	r1, sp, #6
 342 0032 2046     		mov	r0, r4
 343 0034 FFF7FEFF 		bl	HAL_SPI_Receive
 344              	.LVL20:
 197:Src/spi.c     ****   val_2 = (int16_t)(val_1 << 8);
 345              		.loc 1 197 0
 346 0038 9DF80640 		ldrb	r4, [sp, #6]	@ zero_extendqisi2
 347 003c 2402     		lsls	r4, r4, #8
 348 003e 24B2     		sxth	r4, r4
 349              	.LVL21:
 198:Src/spi.c     ****   HAL_GPIO_WritePin(gyro_cs_GPIO_Port,gyro_cs_Pin,GPIO_PIN_SET);
 350              		.loc 1 198 0
 351 0040 0122     		movs	r2, #1
 352 0042 4FF48051 		mov	r1, #4096
 353 0046 2846     		mov	r0, r5
 354 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 355              	.LVL22:
 199:Src/spi.c     ****   return val_2;
 200:Src/spi.c     **** }
 356              		.loc 1 200 0
 357 004c 2046     		mov	r0, r4
 358 004e 03B0     		add	sp, sp, #12
 359              	.LCFI10:
 360              		.cfi_def_cfa_offset 12
 361              		@ sp needed
 362 0050 30BD     		pop	{r4, r5, pc}
 363              	.LVL23:
 364              	.L29:
 365 0052 00BF     		.align	2
 366              	.L28:
 367 0054 00040240 		.word	1073873920
 368 0058 00000000 		.word	hspi1
 369              		.cfi_endproc
 370              	.LFE130:
 372              		.section	.text.write_byte,"ax",%progbits
 373              		.align	1
 374              		.global	write_byte
 375              		.syntax unified
 376              		.thumb
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 11


 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	write_byte:
 381              	.LFB131:
 201:Src/spi.c     **** 
 202:Src/spi.c     **** 
 203:Src/spi.c     **** /**************************************************************
 204:Src/spi.c     ****  * Overview : spi write 1byte
 205:Src/spi.c     ****  * Argument : register
 206:Src/spi.c     ****  * Return : 
 207:Src/spi.c     ****  *************************************************************/
 208:Src/spi.c     **** void write_byte( uint8_t reg,uint8_t val){
 382              		.loc 1 208 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 16
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL24:
 387 0000 70B5     		push	{r4, r5, r6, lr}
 388              	.LCFI11:
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 4, -16
 391              		.cfi_offset 5, -12
 392              		.cfi_offset 6, -8
 393              		.cfi_offset 14, -4
 394 0002 84B0     		sub	sp, sp, #16
 395              	.LCFI12:
 396              		.cfi_def_cfa_offset 32
 397 0004 8DF80710 		strb	r1, [sp, #7]
 209:Src/spi.c     ****   uint8_t ret;
 210:Src/spi.c     ****   ret = reg & 0x7F;
 398              		.loc 1 210 0
 399 0008 00F07F00 		and	r0, r0, #127
 400              	.LVL25:
 401 000c 04AC     		add	r4, sp, #16
 402 000e 04F8010D 		strb	r0, [r4, #-1]!
 211:Src/spi.c     ****   HAL_GPIO_WritePin(gyro_cs_GPIO_Port,gyro_cs_Pin,GPIO_PIN_RESET);
 403              		.loc 1 211 0
 404 0012 0E4D     		ldr	r5, .L32
 405 0014 0022     		movs	r2, #0
 406 0016 4FF48051 		mov	r1, #4096
 407              	.LVL26:
 408 001a 2846     		mov	r0, r5
 409 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 410              	.LVL27:
 212:Src/spi.c     ****   HAL_SPI_Transmit(&hspi1,&ret,1,100);
 411              		.loc 1 212 0
 412 0020 0B4E     		ldr	r6, .L32+4
 413 0022 6423     		movs	r3, #100
 414 0024 0122     		movs	r2, #1
 415 0026 2146     		mov	r1, r4
 416 0028 3046     		mov	r0, r6
 417 002a FFF7FEFF 		bl	HAL_SPI_Transmit
 418              	.LVL28:
 213:Src/spi.c     ****   HAL_SPI_Transmit(&hspi1,&val,1,100);
 419              		.loc 1 213 0
 420 002e 6423     		movs	r3, #100
 421 0030 0122     		movs	r2, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 12


 422 0032 0DF10701 		add	r1, sp, #7
 423 0036 3046     		mov	r0, r6
 424 0038 FFF7FEFF 		bl	HAL_SPI_Transmit
 425              	.LVL29:
 214:Src/spi.c     ****   HAL_GPIO_WritePin(gyro_cs_GPIO_Port,gyro_cs_Pin,GPIO_PIN_SET);
 426              		.loc 1 214 0
 427 003c 0122     		movs	r2, #1
 428 003e 4FF48051 		mov	r1, #4096
 429 0042 2846     		mov	r0, r5
 430 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 431              	.LVL30:
 215:Src/spi.c     **** }
 432              		.loc 1 215 0
 433 0048 04B0     		add	sp, sp, #16
 434              	.LCFI13:
 435              		.cfi_def_cfa_offset 16
 436              		@ sp needed
 437 004a 70BD     		pop	{r4, r5, r6, pc}
 438              	.L33:
 439              		.align	2
 440              	.L32:
 441 004c 00040240 		.word	1073873920
 442 0050 00000000 		.word	hspi1
 443              		.cfi_endproc
 444              	.LFE131:
 446              		.section	.text.Spi_SetGyro,"ax",%progbits
 447              		.align	1
 448              		.global	Spi_SetGyro
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	Spi_SetGyro:
 455              	.LFB132:
 216:Src/spi.c     **** 
 217:Src/spi.c     **** 
 218:Src/spi.c     **** /****************************************************************
 219:Src/spi.c     ****  * Overview : set up mpu6500
 220:Src/spi.c     ****  * argument : void
 221:Src/spi.c     ****  * return   : void
 222:Src/spi.c     ****  ****************************************************************/
 223:Src/spi.c     **** void Spi_SetGyro(void){
 456              		.loc 1 223 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI14:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
 465              	.LVL31:
 224:Src/spi.c     ****   uint8_t val = 0x00;
 466              		.loc 1 224 0
 467 0002 0020     		movs	r0, #0
 225:Src/spi.c     ****   while(val!=Certain){
 468              		.loc 1 225 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 13


 469 0004 02E0     		b	.L35
 470              	.LVL32:
 471              	.L36:
 226:Src/spi.c     ****     val = read_byte(WHO_AM_I);
 472              		.loc 1 226 0
 473 0006 7520     		movs	r0, #117
 474              	.LVL33:
 475 0008 FFF7FEFF 		bl	read_byte
 476              	.LVL34:
 477              	.L35:
 225:Src/spi.c     ****   while(val!=Certain){
 478              		.loc 1 225 0
 479 000c 7028     		cmp	r0, #112
 480 000e FAD1     		bne	.L36
 227:Src/spi.c     ****   }
 228:Src/spi.c     ****   printf("\r\nI am 0x%x\r\n",val );
 481              		.loc 1 228 0
 482 0010 0146     		mov	r1, r0
 483 0012 0B48     		ldr	r0, .L38
 484              	.LVL35:
 485 0014 FFF7FEFF 		bl	printf
 486              	.LVL36:
 229:Src/spi.c     ****   write_byte(PWR_MGMT_1,0x00);
 487              		.loc 1 229 0
 488 0018 0021     		movs	r1, #0
 489 001a 6B20     		movs	r0, #107
 490 001c FFF7FEFF 		bl	write_byte
 491              	.LVL37:
 230:Src/spi.c     ****   write_byte(CONFIG,0x00);
 492              		.loc 1 230 0
 493 0020 0021     		movs	r1, #0
 494 0022 1A20     		movs	r0, #26
 495 0024 FFF7FEFF 		bl	write_byte
 496              	.LVL38:
 231:Src/spi.c     ****   write_byte(GYRO_CONFIG,0x18);
 497              		.loc 1 231 0
 498 0028 1821     		movs	r1, #24
 499 002a 1B20     		movs	r0, #27
 500 002c FFF7FEFF 		bl	write_byte
 501              	.LVL39:
 232:Src/spi.c     ****   write_byte(ACCEL_CONFIG,0x10);
 502              		.loc 1 232 0
 503 0030 1021     		movs	r1, #16
 504 0032 1C20     		movs	r0, #28
 505 0034 FFF7FEFF 		bl	write_byte
 506              	.LVL40:
 233:Src/spi.c     **** 
 234:Src/spi.c     ****   //reset value
 235:Src/spi.c     ****   gyro_x = 0;
 507              		.loc 1 235 0
 508 0038 024B     		ldr	r3, .L38+4
 509 003a 0022     		movs	r2, #0
 510 003c 1A60     		str	r2, [r3]	@ float
 236:Src/spi.c     **** }
 511              		.loc 1 236 0
 512 003e 08BD     		pop	{r3, pc}
 513              	.L39:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 14


 514              		.align	2
 515              	.L38:
 516 0040 00000000 		.word	.LC1
 517 0044 00000000 		.word	gyro_x
 518              		.cfi_endproc
 519              	.LFE132:
 521              		.section	.text.get_gyro_z,"ax",%progbits
 522              		.align	1
 523              		.global	get_gyro_z
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu fpv4-sp-d16
 529              	get_gyro_z:
 530              	.LFB133:
 237:Src/spi.c     **** 
 238:Src/spi.c     **** 
 239:Src/spi.c     **** /*****************************************************************
 240:Src/spi.c     ****  * Overview : get gyro value
 241:Src/spi.c     ****  * argument : void
 242:Src/spi.c     ****  * Return   : degree (2000 deg/sec)
 243:Src/spi.c     ****  ****************************************************************/
 244:Src/spi.c     **** int16_t get_gyro_z(void){
 531              		.loc 1 244 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535 0000 10B5     		push	{r4, lr}
 536              	.LCFI15:
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 4, -8
 539              		.cfi_offset 14, -4
 245:Src/spi.c     ****   int16_t buff_gyro;
 246:Src/spi.c     ****   buff_gyro = (int16_t)(read_shift_byte(GYRO_OUT_Z_H) | read_byte(GYRO_OUT_Z_L));
 540              		.loc 1 246 0
 541 0002 4720     		movs	r0, #71
 542 0004 FFF7FEFF 		bl	read_shift_byte
 543              	.LVL41:
 544 0008 0446     		mov	r4, r0
 545 000a 4820     		movs	r0, #72
 546 000c FFF7FEFF 		bl	read_byte
 547              	.LVL42:
 548 0010 00B2     		sxth	r0, r0
 549 0012 2043     		orrs	r0, r0, r4
 550 0014 00B2     		sxth	r0, r0
 551              	.LVL43:
 247:Src/spi.c     ****   buff_gyro -= (int16_t)gyro_z.offset;
 552              		.loc 1 247 0
 553 0016 024B     		ldr	r3, .L42
 554 0018 1C8A     		ldrh	r4, [r3, #16]
 555 001a 001B     		subs	r0, r0, r4
 556              	.LVL44:
 248:Src/spi.c     ****   return buff_gyro;
 249:Src/spi.c     **** }
 557              		.loc 1 249 0
 558 001c 00B2     		sxth	r0, r0
 559 001e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 15


 560              	.L43:
 561              		.align	2
 562              	.L42:
 563 0020 00000000 		.word	gyro_z
 564              		.cfi_endproc
 565              	.LFE133:
 567              		.section	.text.gyro_offset_calc,"ax",%progbits
 568              		.align	1
 569              		.global	gyro_offset_calc
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv4-sp-d16
 575              	gyro_offset_calc:
 576              	.LFB134:
 250:Src/spi.c     **** 
 251:Src/spi.c     **** /*****************************************************************
 252:Src/spi.c     ****  * Overview : calculate gyro offset
 253:Src/spi.c     ****  * argument : void
 254:Src/spi.c     ****  * Return   : void
 255:Src/spi.c     ****  ****************************************************************/
 256:Src/spi.c     **** void gyro_offset_calc(void){
 577              		.loc 1 256 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 10B5     		push	{r4, lr}
 582              	.LCFI16:
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 4, -8
 585              		.cfi_offset 14, -4
 257:Src/spi.c     ****   int16_t buff_gyro;
 258:Src/spi.c     **** 
 259:Src/spi.c     ****   buff_gyro = (int16_t)(read_shift_byte(GYRO_OUT_Z_H) | read_byte(GYRO_OUT_Z_L));
 586              		.loc 1 259 0
 587 0002 4720     		movs	r0, #71
 588 0004 FFF7FEFF 		bl	read_shift_byte
 589              	.LVL45:
 590 0008 0446     		mov	r4, r0
 591 000a 4820     		movs	r0, #72
 592 000c FFF7FEFF 		bl	read_byte
 593              	.LVL46:
 594 0010 00B2     		sxth	r0, r0
 595 0012 0443     		orrs	r4, r4, r0
 596              	.LVL47:
 260:Src/spi.c     **** 
 261:Src/spi.c     ****   if(gyro_z.offset_cnt<1024){
 597              		.loc 1 261 0
 598 0014 0C4B     		ldr	r3, .L51
 599 0016 9B89     		ldrh	r3, [r3, #12]
 600 0018 B3F5806F 		cmp	r3, #1024
 601 001c 09D3     		bcc	.L49
 262:Src/spi.c     ****     gyro_z.offset += buff_gyro;
 263:Src/spi.c     ****     gyro_z.offset_cnt++;
 264:Src/spi.c     ****   }else{
 265:Src/spi.c     ****     gyro_z.offset /= 1024;
 602              		.loc 1 265 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 16


 603 001e 0A4A     		ldr	r2, .L51
 604 0020 1369     		ldr	r3, [r2, #16]
 605 0022 002B     		cmp	r3, #0
 606 0024 0DDB     		blt	.L50
 607              	.L47:
 608 0026 9B12     		asrs	r3, r3, #10
 609 0028 1361     		str	r3, [r2, #16]
 266:Src/spi.c     ****     flag_gyro_calc = TRUE;
 610              		.loc 1 266 0
 611 002a 084B     		ldr	r3, .L51+4
 612 002c 0022     		movs	r2, #0
 613 002e 1A70     		strb	r2, [r3]
 614              	.LVL48:
 615              	.L44:
 267:Src/spi.c     ****   }
 268:Src/spi.c     **** }
 616              		.loc 1 268 0
 617 0030 10BD     		pop	{r4, pc}
 618              	.LVL49:
 619              	.L49:
 620 0032 24B2     		sxth	r4, r4
 262:Src/spi.c     ****     gyro_z.offset_cnt++;
 621              		.loc 1 262 0
 622 0034 044A     		ldr	r2, .L51
 623 0036 1169     		ldr	r1, [r2, #16]
 624 0038 0C44     		add	r4, r4, r1
 625              	.LVL50:
 626 003a 1461     		str	r4, [r2, #16]
 263:Src/spi.c     ****   }else{
 627              		.loc 1 263 0
 628 003c 0133     		adds	r3, r3, #1
 629 003e 9381     		strh	r3, [r2, #12]	@ movhi
 630 0040 F6E7     		b	.L44
 631              	.LVL51:
 632              	.L50:
 265:Src/spi.c     ****     flag_gyro_calc = TRUE;
 633              		.loc 1 265 0
 634 0042 03F2FF33 		addw	r3, r3, #1023
 635 0046 EEE7     		b	.L47
 636              	.L52:
 637              		.align	2
 638              	.L51:
 639 0048 00000000 		.word	gyro_z
 640 004c 00000000 		.word	flag_gyro_calc
 641              		.cfi_endproc
 642              	.LFE134:
 644              		.global	__aeabi_f2d
 645              		.global	__aeabi_dmul
 646              		.global	__aeabi_dadd
 647              		.global	__aeabi_d2f
 648              		.section	.text.Spi_UpdateGyro_Z,"ax",%progbits
 649              		.align	1
 650              		.global	Spi_UpdateGyro_Z
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 17


 656              	Spi_UpdateGyro_Z:
 657              	.LFB135:
 269:Src/spi.c     **** 
 270:Src/spi.c     **** void Spi_UpdateGyro_Z(void){
 658              		.loc 1 270 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662 0000 D0B5     		push	{r4, r6, r7, lr}
 663              	.LCFI17:
 664              		.cfi_def_cfa_offset 16
 665              		.cfi_offset 4, -16
 666              		.cfi_offset 6, -12
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 271:Src/spi.c     ****   if(flag_gyro_calc == TRUE){
 669              		.loc 1 271 0
 670 0002 174B     		ldr	r3, .L58+8
 671 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 672 0006 13B1     		cbz	r3, .L57
 272:Src/spi.c     ****     gyro_z.velocity = (float)get_gyro_z()/GYRO_FACTOR;
 273:Src/spi.c     ****     gyro_z.degree += gyro_z.velocity*0.001;
 274:Src/spi.c     ****   }else{
 275:Src/spi.c     ****     gyro_offset_calc();
 673              		.loc 1 275 0
 674 0008 FFF7FEFF 		bl	gyro_offset_calc
 675              	.LVL52:
 676              	.L53:
 276:Src/spi.c     ****   }
 277:Src/spi.c     **** }
 677              		.loc 1 277 0
 678 000c D0BD     		pop	{r4, r6, r7, pc}
 679              	.L57:
 272:Src/spi.c     ****     gyro_z.velocity = (float)get_gyro_z()/GYRO_FACTOR;
 680              		.loc 1 272 0
 681 000e FFF7FEFF 		bl	get_gyro_z
 682              	.LVL53:
 683 0012 07EE900A 		vmov	s15, r0	@ int
 684 0016 F8EEE76A 		vcvt.f32.s32	s13, s15
 685 001a 9FED127A 		vldr.32	s14, .L58+12
 686 001e C6EE877A 		vdiv.f32	s15, s13, s14
 687 0022 114C     		ldr	r4, .L58+16
 688 0024 C4ED007A 		vstr.32	s15, [r4]
 273:Src/spi.c     ****   }else{
 689              		.loc 1 273 0
 690 0028 17EE900A 		vmov	r0, s15
 691 002c FFF7FEFF 		bl	__aeabi_f2d
 692              	.LVL54:
 693 0030 09A3     		adr	r3, .L58
 694 0032 D3E90023 		ldrd	r2, [r3]
 695 0036 FFF7FEFF 		bl	__aeabi_dmul
 696              	.LVL55:
 697 003a 0646     		mov	r6, r0
 698 003c 0F46     		mov	r7, r1
 699 003e 6068     		ldr	r0, [r4, #4]	@ float
 700 0040 FFF7FEFF 		bl	__aeabi_f2d
 701              	.LVL56:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 18


 702 0044 3246     		mov	r2, r6
 703 0046 3B46     		mov	r3, r7
 704 0048 FFF7FEFF 		bl	__aeabi_dadd
 705              	.LVL57:
 706 004c FFF7FEFF 		bl	__aeabi_d2f
 707              	.LVL58:
 708 0050 6060     		str	r0, [r4, #4]	@ float
 709 0052 DBE7     		b	.L53
 710              	.L59:
 711 0054 AFF30080 		.align	3
 712              	.L58:
 713 0058 FCA9F1D2 		.word	-755914244
 714 005c 4D62503F 		.word	1062232653
 715 0060 00000000 		.word	flag_gyro_calc
 716 0064 33338341 		.word	1099117363
 717 0068 00000000 		.word	gyro_z
 718              		.cfi_endproc
 719              	.LFE135:
 721              		.section	.text.Spi_UpdateGyro_Y,"ax",%progbits
 722              		.align	1
 723              		.global	Spi_UpdateGyro_Y
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	Spi_UpdateGyro_Y:
 730              	.LFB136:
 278:Src/spi.c     **** 
 279:Src/spi.c     **** void Spi_UpdateGyro_Y(void){
 731              		.loc 1 279 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735 0000 10B5     		push	{r4, lr}
 736              	.LCFI18:
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 4, -8
 739              		.cfi_offset 14, -4
 280:Src/spi.c     ****   gyro_y = (float)(read_shift_byte(GYRO_OUT_Y_H) | read_byte(GYRO_OUT_Y_L))/GYRO_FACTOR;
 740              		.loc 1 280 0
 741 0002 4520     		movs	r0, #69
 742 0004 FFF7FEFF 		bl	read_shift_byte
 743              	.LVL59:
 744 0008 0446     		mov	r4, r0
 745 000a 4620     		movs	r0, #70
 746 000c FFF7FEFF 		bl	read_byte
 747              	.LVL60:
 748 0010 2043     		orrs	r0, r0, r4
 749 0012 07EE900A 		vmov	s15, r0	@ int
 750 0016 F8EEE77A 		vcvt.f32.s32	s15, s15
 751 001a DFED046A 		vldr.32	s13, .L62
 752 001e 87EEA67A 		vdiv.f32	s14, s15, s13
 753 0022 034B     		ldr	r3, .L62+4
 754 0024 83ED007A 		vstr.32	s14, [r3]
 281:Src/spi.c     **** }
 755              		.loc 1 281 0
 756 0028 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 19


 757              	.L63:
 758 002a 00BF     		.align	2
 759              	.L62:
 760 002c 33338341 		.word	1099117363
 761 0030 00000000 		.word	gyro_y
 762              		.cfi_endproc
 763              	.LFE136:
 765              		.section	.text.Spi_UpdateAccel,"ax",%progbits
 766              		.align	1
 767              		.global	Spi_UpdateAccel
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv4-sp-d16
 773              	Spi_UpdateAccel:
 774              	.LFB137:
 282:Src/spi.c     **** 
 283:Src/spi.c     **** 
 284:Src/spi.c     **** void Spi_UpdateAccel(void){
 775              		.loc 1 284 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779 0000 38B5     		push	{r3, r4, r5, lr}
 780              	.LCFI19:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 3, -16
 783              		.cfi_offset 4, -12
 784              		.cfi_offset 5, -8
 785              		.cfi_offset 14, -4
 786 0002 2DED028B 		vpush.64	{d8}
 787              	.LCFI20:
 788              		.cfi_def_cfa_offset 24
 789              		.cfi_offset 80, -24
 790              		.cfi_offset 81, -20
 285:Src/spi.c     ****   accel.x = (float)(read_shift_byte(ACCEL_XOUT_H) | read_byte(ACCEL_XOUT_L))/ACCEL_FACTOR;
 791              		.loc 1 285 0
 792 0006 3B20     		movs	r0, #59
 793 0008 FFF7FEFF 		bl	read_shift_byte
 794              	.LVL61:
 795 000c 0446     		mov	r4, r0
 796 000e 3C20     		movs	r0, #60
 797 0010 FFF7FEFF 		bl	read_byte
 798              	.LVL62:
 799 0014 2043     		orrs	r0, r0, r4
 800 0016 07EE900A 		vmov	s15, r0	@ int
 801 001a F8EEE77A 		vcvt.f32.s32	s15, s15
 802 001e 9FED158A 		vldr.32	s16, .L66
 803 0022 87EE887A 		vdiv.f32	s14, s15, s16
 804 0026 144D     		ldr	r5, .L66+4
 805 0028 85ED007A 		vstr.32	s14, [r5]
 286:Src/spi.c     ****   accel.y = (float)(read_shift_byte(ACCEL_YOUT_H) | read_byte(ACCEL_YOUT_L))/ACCEL_FACTOR;
 806              		.loc 1 286 0
 807 002c 3D20     		movs	r0, #61
 808 002e FFF7FEFF 		bl	read_shift_byte
 809              	.LVL63:
 810 0032 0446     		mov	r4, r0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 20


 811 0034 3E20     		movs	r0, #62
 812 0036 FFF7FEFF 		bl	read_byte
 813              	.LVL64:
 814 003a 2043     		orrs	r0, r0, r4
 815 003c 07EE900A 		vmov	s15, r0	@ int
 816 0040 F8EEE77A 		vcvt.f32.s32	s15, s15
 817 0044 87EE887A 		vdiv.f32	s14, s15, s16
 818 0048 85ED017A 		vstr.32	s14, [r5, #4]
 287:Src/spi.c     ****   accel.z = (float)(read_shift_byte(ACCEL_ZOUT_H) | read_byte(ACCEL_ZOUT_L))/ACCEL_FACTOR;
 819              		.loc 1 287 0
 820 004c 3F20     		movs	r0, #63
 821 004e FFF7FEFF 		bl	read_shift_byte
 822              	.LVL65:
 823 0052 0446     		mov	r4, r0
 824 0054 4020     		movs	r0, #64
 825 0056 FFF7FEFF 		bl	read_byte
 826              	.LVL66:
 827 005a 2043     		orrs	r0, r0, r4
 828 005c 07EE900A 		vmov	s15, r0	@ int
 829 0060 F8EEE77A 		vcvt.f32.s32	s15, s15
 830 0064 87EE887A 		vdiv.f32	s14, s15, s16
 831 0068 85ED027A 		vstr.32	s14, [r5, #8]
 288:Src/spi.c     **** }
 832              		.loc 1 288 0
 833 006c BDEC028B 		vldm	sp!, {d8}
 834              	.LCFI21:
 835              		.cfi_restore 80
 836              		.cfi_restore 81
 837              		.cfi_def_cfa_offset 16
 838 0070 38BD     		pop	{r3, r4, r5, pc}
 839              	.L67:
 840 0072 00BF     		.align	2
 841              	.L66:
 842 0074 0000D143 		.word	1137770496
 843 0078 00000000 		.word	accel
 844              		.cfi_endproc
 845              	.LFE137:
 847              		.section	.text.Spi_GyroReset,"ax",%progbits
 848              		.align	1
 849              		.global	Spi_GyroReset
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
 853              		.fpu fpv4-sp-d16
 855              	Spi_GyroReset:
 856              	.LFB138:
 289:Src/spi.c     **** 
 290:Src/spi.c     **** 
 291:Src/spi.c     **** /*****************************************************************
 292:Src/spi.c     ****  * Overview : reset gyro offset variable
 293:Src/spi.c     ****  * argument : void
 294:Src/spi.c     ****  * Return   : void
 295:Src/spi.c     ****  ****************************************************************/
 296:Src/spi.c     **** void Spi_GyroReset(void){
 857              		.loc 1 296 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 21


 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 297:Src/spi.c     ****   gyro_z.offset = 0;
 862              		.loc 1 297 0
 863 0000 044B     		ldr	r3, .L69
 864 0002 0022     		movs	r2, #0
 865 0004 1A61     		str	r2, [r3, #16]
 298:Src/spi.c     ****   gyro_z.offset_cnt = 0;
 866              		.loc 1 298 0
 867 0006 9A81     		strh	r2, [r3, #12]	@ movhi
 299:Src/spi.c     **** 
 300:Src/spi.c     ****   flag_gyro_calc = FALSE;
 868              		.loc 1 300 0
 869 0008 034A     		ldr	r2, .L69+4
 870 000a 0121     		movs	r1, #1
 871 000c 1170     		strb	r1, [r2]
 301:Src/spi.c     **** 
 302:Src/spi.c     ****   gyro_z.degree = 0;
 872              		.loc 1 302 0
 873 000e 0022     		movs	r2, #0
 874 0010 5A60     		str	r2, [r3, #4]	@ float
 303:Src/spi.c     **** }
 875              		.loc 1 303 0
 876 0012 7047     		bx	lr
 877              	.L70:
 878              		.align	2
 879              	.L69:
 880 0014 00000000 		.word	gyro_z
 881 0018 00000000 		.word	flag_gyro_calc
 882              		.cfi_endproc
 883              	.LFE138:
 885              		.comm	hspi1,88,4
 886              		.comm	accel,12,4
 887              		.comm	flag_gyro_calc,1,1
 888              		.comm	gyro_z,20,4
 889              		.comm	gyro_y,4,4
 890              		.comm	gyro_x,4,4
 891              		.section	.rodata.MX_SPI1_Init.str1.4,"aMS",%progbits,1
 892              		.align	2
 893              	.LC0:
 894 0000 5372632F 		.ascii	"Src/spi.c\000"
 894      7370692E 
 894      6300
 895              		.section	.rodata.Spi_SetGyro.str1.4,"aMS",%progbits,1
 896              		.align	2
 897              	.LC1:
 898 0000 0D0A4920 		.ascii	"\015\012I am 0x%x\015\012\000"
 898      616D2030 
 898      7825780D 
 898      0A00
 899              		.text
 900              	.Letext0:
 901              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 902              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 903              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 904              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 905              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 22


 906              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 907              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 908              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 909              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 910              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 911              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 912              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 913              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 914              		.file 15 "Inc/spi.h"
 915              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 spi.c
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:18     .text.MX_SPI1_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:25     .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:86     .text.MX_SPI1_Init:00000040 $d
                            *COM*:00000058 hspi1
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:93     .text.HAL_SPI_MspInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:100    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:164    .text.HAL_SPI_MspInit:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:170    .text.HAL_SPI_MspDeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:177    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:216    .text.HAL_SPI_MspDeInit:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:223    .text.read_byte:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:230    .text.read_byte:00000000 read_byte
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:289    .text.read_byte:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:295    .text.read_shift_byte:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:302    .text.read_shift_byte:00000000 read_shift_byte
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:367    .text.read_shift_byte:00000054 $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:373    .text.write_byte:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:380    .text.write_byte:00000000 write_byte
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:441    .text.write_byte:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:447    .text.Spi_SetGyro:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:454    .text.Spi_SetGyro:00000000 Spi_SetGyro
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:516    .text.Spi_SetGyro:00000040 $d
                            *COM*:00000004 gyro_x
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:522    .text.get_gyro_z:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:529    .text.get_gyro_z:00000000 get_gyro_z
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:563    .text.get_gyro_z:00000020 $d
                            *COM*:00000014 gyro_z
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:568    .text.gyro_offset_calc:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:575    .text.gyro_offset_calc:00000000 gyro_offset_calc
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:639    .text.gyro_offset_calc:00000048 $d
                            *COM*:00000001 flag_gyro_calc
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:649    .text.Spi_UpdateGyro_Z:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:656    .text.Spi_UpdateGyro_Z:00000000 Spi_UpdateGyro_Z
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:713    .text.Spi_UpdateGyro_Z:00000058 $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:722    .text.Spi_UpdateGyro_Y:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:729    .text.Spi_UpdateGyro_Y:00000000 Spi_UpdateGyro_Y
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:760    .text.Spi_UpdateGyro_Y:0000002c $d
                            *COM*:00000004 gyro_y
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:766    .text.Spi_UpdateAccel:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:773    .text.Spi_UpdateAccel:00000000 Spi_UpdateAccel
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:842    .text.Spi_UpdateAccel:00000074 $d
                            *COM*:0000000c accel
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:848    .text.Spi_GyroReset:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:855    .text.Spi_GyroReset:00000000 Spi_GyroReset
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:880    .text.Spi_GyroReset:00000014 $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:892    .rodata.MX_SPI1_Init.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s:896    .rodata.Spi_SetGyro.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_SPI_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
HAL_GPIO_WritePin
HAL_SPI_Transmit
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccOWCIJd.s 			page 24


HAL_SPI_Receive
printf
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
