ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"control.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PID_value,"ax",%progbits
  18              		.align	1
  19              		.global	PID_value
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	PID_value:
  26              	.LFB126:
  27              		.file 1 "Src/control.c"
   1:Src/control.c **** #include "stdint.h"
   2:Src/control.c **** #include "tim.h"
   3:Src/control.c **** #include "spi.h"
   4:Src/control.c **** #include "control.h"
   5:Src/control.c **** #include "flash.h"
   6:Src/control.c **** #include "adc.h"
   7:Src/control.c **** #include "gpio.h"
   8:Src/control.c **** 
   9:Src/control.c **** #define dt 0.0010f
  10:Src/control.c **** #define TRUE 1
  11:Src/control.c **** #define FALSE 0
  12:Src/control.c **** #define SLIP_K 50000.0f
  13:Src/control.c **** 
  14:Src/control.c **** extern sensor_t sen_l;
  15:Src/control.c **** extern sensor_t sen_fl;
  16:Src/control.c **** extern sensor_t sen_front;
  17:Src/control.c **** extern sensor_t sen_fr;
  18:Src/control.c **** extern sensor_t sen_r;
  19:Src/control.c **** extern enc_t enc;
  20:Src/control.c **** extern gyro_t gyro_z;
  21:Src/control.c **** extern volatile accel_t accel;
  22:Src/control.c **** 
  23:Src/control.c **** extern volatile uint8_t motion_end_flag;
  24:Src/control.c **** 
  25:Src/control.c **** //straight
  26:Src/control.c **** target_t straight;
  27:Src/control.c **** volatile float dist_idial = 0.0f;
  28:Src/control.c **** float error_sum = 0.0f;
  29:Src/control.c **** float error_old = 0.0f;
  30:Src/control.c **** 
  31:Src/control.c **** //angle
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 2


  32:Src/control.c **** target_t angle;
  33:Src/control.c **** loger_t loger;
  34:Src/control.c **** volatile float ang_idial = 0.0f;
  35:Src/control.c **** float error_ang_sum = 0.0f;
  36:Src/control.c **** float error_ang_old = 0.0f;
  37:Src/control.c **** 
  38:Src/control.c **** volatile uint8_t motor_flag;
  39:Src/control.c **** 
  40:Src/control.c **** float slip_ang = 0.0f;
  41:Src/control.c **** uint8_t slip_cnt = 0;
  42:Src/control.c **** 
  43:Src/control.c **** //control wall
  44:Src/control.c **** float wall_dif = 0;
  45:Src/control.c **** unsigned char add_l = 0, add_r = 0;
  46:Src/control.c **** volatile uint8_t control_wall_flag;
  47:Src/control.c **** 
  48:Src/control.c **** /****************************************************************************************
  49:Src/control.c ****  * outline  : PID control
  50:Src/control.c ****  * argument : 
  51:Src/control.c ****  * return   : control value
  52:Src/control.c **** ********************************************************************************************/
  53:Src/control.c **** float PID_value(float target, float measured, float *sum, float *old, float Kp, float Ki, float Kd)
  54:Src/control.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  55:Src/control.c ****     float error;
  56:Src/control.c ****     float p, i, d;
  57:Src/control.c **** 
  58:Src/control.c ****     error = target - measured;
  34              		.loc 1 58 0
  35 0000 70EE600A 		vsub.f32	s1, s0, s1
  36              	.LVL1:
  59:Src/control.c ****     p = Kp * error;
  37              		.loc 1 59 0
  38 0004 20EE811A 		vmul.f32	s2, s1, s2
  39              	.LVL2:
  60:Src/control.c **** 
  61:Src/control.c ****     *sum += error * dt;
  40              		.loc 1 61 0
  41 0008 DFED0C7A 		vldr.32	s15, .L2
  42 000c 60EEA77A 		vmul.f32	s15, s1, s15
  43 0010 90ED000A 		vldr.32	s0, [r0]
  44              	.LVL3:
  45 0014 77EE807A 		vadd.f32	s15, s15, s0
  46 0018 C0ED007A 		vstr.32	s15, [r0]
  62:Src/control.c ****     i = *sum * Ki;
  47              		.loc 1 62 0
  48 001c 67EEA11A 		vmul.f32	s3, s15, s3
  49              	.LVL4:
  63:Src/control.c **** 
  64:Src/control.c ****     d = Kd * (*old - error);
  50              		.loc 1 64 0
  51 0020 91ED007A 		vldr.32	s14, [r1]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 3


  52 0024 37EE607A 		vsub.f32	s14, s14, s1
  53 0028 27EE022A 		vmul.f32	s4, s14, s4
  54              	.LVL5:
  65:Src/control.c ****     *old = error;
  55              		.loc 1 65 0
  56 002c C1ED000A 		vstr.32	s1, [r1]
  66:Src/control.c **** 
  67:Src/control.c ****     return (p + i + d);
  57              		.loc 1 67 0
  58 0030 71EE211A 		vadd.f32	s3, s2, s3
  59              	.LVL6:
  68:Src/control.c **** }
  60              		.loc 1 68 0
  61 0034 31EE820A 		vadd.f32	s0, s3, s4
  62 0038 7047     		bx	lr
  63              	.L3:
  64 003a 00BF     		.align	2
  65              	.L2:
  66 003c 6F12833A 		.word	981668463
  67              		.cfi_endproc
  68              	.LFE126:
  70              		.section	.text.Control_StrCalculator,"ax",%progbits
  71              		.align	1
  72              		.global	Control_StrCalculator
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	Control_StrCalculator:
  79              	.LFB127:
  69:Src/control.c **** 
  70:Src/control.c **** /****************************************************************************************
  71:Src/control.c ****  * outline  : calcurate accele distance
  72:Src/control.c ****  * argument : var[mm],velo_m[mm/s],velo_e[mm/s],accel[mm/s],dir
  73:Src/control.c ****  * return   : void
  74:Src/control.c **** ********************************************************************************************/
  75:Src/control.c **** void Control_StrCalculator(float var, float velo_s, float velo_m, float velo_e, float accel, float 
  76:Src/control.c **** {
  80              		.loc 1 76 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL7:
  77:Src/control.c ****     straight.up_term = (velo_m * velo_m - straight.v_now * straight.v_now) / 2.0f / accel;
  86              		.loc 1 77 0
  87 0000 21EE011A 		vmul.f32	s2, s2, s2
  88              	.LVL8:
  89 0004 134B     		ldr	r3, .L5
  90 0006 D3ED037A 		vldr.32	s15, [r3, #12]
  91 000a 67EEA77A 		vmul.f32	s15, s15, s15
  92 000e 71EE677A 		vsub.f32	s15, s2, s15
  93 0012 B6EE007A 		vmov.f32	s14, #5.0e-1
  94 0016 67EE877A 		vmul.f32	s15, s15, s14
  95 001a C7EE826A 		vdiv.f32	s13, s15, s4
  96 001e C3ED006A 		vstr.32	s13, [r3]
  78:Src/control.c ****     straight.const_term = var - (velo_m * velo_m - velo_e * velo_e) / 2.0f / accel;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 4


  97              		.loc 1 78 0
  98 0022 61EEA11A 		vmul.f32	s3, s3, s3
  99              	.LVL9:
 100 0026 31EE611A 		vsub.f32	s2, s2, s3
 101 002a 21EE071A 		vmul.f32	s2, s2, s14
 102 002e C1EE027A 		vdiv.f32	s15, s2, s4
 103 0032 70EE677A 		vsub.f32	s15, s0, s15
 104 0036 C3ED017A 		vstr.32	s15, [r3, #4]
  79:Src/control.c ****     straight.down_term = var;
 105              		.loc 1 79 0
 106 003a 83ED020A 		vstr.32	s0, [r3, #8]
  80:Src/control.c ****     straight.v_now = velo_s;
 107              		.loc 1 80 0
 108 003e C3ED030A 		vstr.32	s1, [r3, #12]
  81:Src/control.c ****     straight.accel = accel;
 109              		.loc 1 81 0
 110 0042 83ED042A 		vstr.32	s4, [r3, #16]
  82:Src/control.c ****     straight.dir = dir;
 111              		.loc 1 82 0
 112 0046 C3ED052A 		vstr.32	s5, [r3, #20]
  83:Src/control.c ****     dist_idial = 0;
 113              		.loc 1 83 0
 114 004a 034B     		ldr	r3, .L5+4
 115 004c 0022     		movs	r2, #0
 116 004e 1A60     		str	r2, [r3]	@ float
  84:Src/control.c ****     //printf("up:%f,cnt:%f,dwn:%f\r\n", straight.up_term, straight.const_term, straight.down_term);
  85:Src/control.c **** }
 117              		.loc 1 85 0
 118 0050 7047     		bx	lr
 119              	.L6:
 120 0052 00BF     		.align	2
 121              	.L5:
 122 0054 00000000 		.word	straight
 123 0058 00000000 		.word	.LANCHOR0
 124              		.cfi_endproc
 125              	.LFE127:
 127              		.section	.text.Control_AngCalculator,"ax",%progbits
 128              		.align	1
 129              		.global	Control_AngCalculator
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv4-sp-d16
 135              	Control_AngCalculator:
 136              	.LFB128:
  86:Src/control.c **** 
  87:Src/control.c **** /****************************************************************************************
  88:Src/control.c ****  * outline  : calcurate accele distance
  89:Src/control.c ****  * argument : var[mm],velo_m[mm/s],velo_e[mm/s],accel[mm/s],dir
  90:Src/control.c ****  * return   : void
  91:Src/control.c **** ********************************************************************************************/
  92:Src/control.c **** void Control_AngCalculator(float var, float velo_s, float velo_m, float velo_e, float accel, float 
  93:Src/control.c **** {
 137              		.loc 1 93 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 5


 141              		@ link register save eliminated.
 142              	.LVL10:
  94:Src/control.c ****     gyro_z.degree = 0;
 143              		.loc 1 94 0
 144 0000 0022     		movs	r2, #0
 145 0002 154B     		ldr	r3, .L8
 146 0004 5A60     		str	r2, [r3, #4]	@ float
  95:Src/control.c ****     angle.up_term = (velo_m * velo_m - angle.v_now * angle.v_now) / 2.0f / accel;
 147              		.loc 1 95 0
 148 0006 21EE011A 		vmul.f32	s2, s2, s2
 149              	.LVL11:
 150 000a 144B     		ldr	r3, .L8+4
 151 000c D3ED037A 		vldr.32	s15, [r3, #12]
 152 0010 67EEA77A 		vmul.f32	s15, s15, s15
 153 0014 71EE677A 		vsub.f32	s15, s2, s15
 154 0018 B6EE007A 		vmov.f32	s14, #5.0e-1
 155 001c 67EE877A 		vmul.f32	s15, s15, s14
 156 0020 C7EE826A 		vdiv.f32	s13, s15, s4
 157 0024 C3ED006A 		vstr.32	s13, [r3]
  96:Src/control.c ****     angle.const_term = var - (velo_m * velo_m - velo_e * velo_e) / 2.0f / accel;
 158              		.loc 1 96 0
 159 0028 61EEA11A 		vmul.f32	s3, s3, s3
 160              	.LVL12:
 161 002c 31EE611A 		vsub.f32	s2, s2, s3
 162 0030 21EE071A 		vmul.f32	s2, s2, s14
 163 0034 C1EE027A 		vdiv.f32	s15, s2, s4
 164 0038 70EE677A 		vsub.f32	s15, s0, s15
 165 003c C3ED017A 		vstr.32	s15, [r3, #4]
  97:Src/control.c ****     angle.down_term = var;
 166              		.loc 1 97 0
 167 0040 83ED020A 		vstr.32	s0, [r3, #8]
  98:Src/control.c ****     angle.v_now = velo_s;
 168              		.loc 1 98 0
 169 0044 C3ED030A 		vstr.32	s1, [r3, #12]
  99:Src/control.c ****     angle.accel = accel;
 170              		.loc 1 99 0
 171 0048 83ED042A 		vstr.32	s4, [r3, #16]
 100:Src/control.c ****     angle.dir = dir;
 172              		.loc 1 100 0
 173 004c C3ED052A 		vstr.32	s5, [r3, #20]
 101:Src/control.c ****     ang_idial = 0;
 174              		.loc 1 101 0
 175 0050 034B     		ldr	r3, .L8+8
 176 0052 1A60     		str	r2, [r3]	@ float
 102:Src/control.c **** }
 177              		.loc 1 102 0
 178 0054 7047     		bx	lr
 179              	.L9:
 180 0056 00BF     		.align	2
 181              	.L8:
 182 0058 00000000 		.word	gyro_z
 183 005c 00000000 		.word	angle
 184 0060 00000000 		.word	.LANCHOR1
 185              		.cfi_endproc
 186              	.LFE128:
 188              		.section	.text.UpdateTargets,"ax",%progbits
 189              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 6


 190              		.global	UpdateTargets
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	UpdateTargets:
 197              	.LFB129:
 103:Src/control.c **** 
 104:Src/control.c **** void UpdateTargets(volatile float *var, float *velo, float accel)
 105:Src/control.c **** {
 198              		.loc 1 105 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              	.LVL13:
 204 0000 82B0     		sub	sp, sp, #8
 205              	.LCFI0:
 206              		.cfi_def_cfa_offset 8
 106:Src/control.c ****     volatile float buff;
 107:Src/control.c **** 
 108:Src/control.c ****     buff = *velo * 1000.0f;
 207              		.loc 1 108 0
 208 0002 91ED007A 		vldr.32	s14, [r1]
 209 0006 DFED137A 		vldr.32	s15, .L12
 210 000a 27EE277A 		vmul.f32	s14, s14, s15
 211 000e 8DED017A 		vstr.32	s14, [sp, #4]
 109:Src/control.c ****     buff += accel;
 212              		.loc 1 109 0
 213 0012 9DED017A 		vldr.32	s14, [sp, #4]
 214 0016 37EE000A 		vadd.f32	s0, s14, s0
 215              	.LVL14:
 216 001a 8DED010A 		vstr.32	s0, [sp, #4]
 110:Src/control.c ****     *velo = buff / 1000.0f;
 217              		.loc 1 110 0
 218 001e DDED016A 		vldr.32	s13, [sp, #4]
 219 0022 86EEA77A 		vdiv.f32	s14, s13, s15
 220 0026 81ED007A 		vstr.32	s14, [r1]
 111:Src/control.c **** 
 112:Src/control.c ****     buff = *var * 1000.0f;
 221              		.loc 1 112 0
 222 002a D0ED006A 		vldr.32	s13, [r0]
 223 002e 66EEA76A 		vmul.f32	s13, s13, s15
 224 0032 CDED016A 		vstr.32	s13, [sp, #4]
 113:Src/control.c ****     buff += *velo;
 225              		.loc 1 113 0
 226 0036 DDED016A 		vldr.32	s13, [sp, #4]
 227 003a 37EE267A 		vadd.f32	s14, s14, s13
 228 003e 8DED017A 		vstr.32	s14, [sp, #4]
 114:Src/control.c ****     *var = buff / 1000.0f;
 229              		.loc 1 114 0
 230 0042 DDED016A 		vldr.32	s13, [sp, #4]
 231 0046 86EEA77A 		vdiv.f32	s14, s13, s15
 232 004a 80ED007A 		vstr.32	s14, [r0]
 115:Src/control.c **** }
 233              		.loc 1 115 0
 234 004e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 7


 235              	.LCFI1:
 236              		.cfi_def_cfa_offset 0
 237              		@ sp needed
 238 0050 7047     		bx	lr
 239              	.L13:
 240 0052 00BF     		.align	2
 241              	.L12:
 242 0054 00007A44 		.word	1148846080
 243              		.cfi_endproc
 244              	.LFE129:
 246              		.section	.text.UpdateStrTarget,"ax",%progbits
 247              		.align	1
 248              		.global	UpdateStrTarget
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	UpdateStrTarget:
 255              	.LFB130:
 116:Src/control.c **** 
 117:Src/control.c **** /****************************************************************************************
 118:Src/control.c ****  * outline  : output pwm for trapezoid accele straight by feadbuck control
 119:Src/control.c ****  * argument : void
 120:Src/control.c ****  * return   : void
 121:Src/control.c **** ********************************************************************************************/
 122:Src/control.c **** void UpdateStrTarget()
 123:Src/control.c **** {
 256              		.loc 1 123 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 124:Src/control.c ****     if (straight.dir == 0.0f)
 265              		.loc 1 124 0
 266 0002 354B     		ldr	r3, .L38
 267 0004 D3ED057A 		vldr.32	s15, [r3, #20]
 268 0008 F5EE407A 		vcmp.f32	s15, #0
 269 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 270 0010 46D0     		beq	.L34
 125:Src/control.c ****     {
 126:Src/control.c ****         straight.v_now = 0.0f;
 127:Src/control.c ****     }
 128:Src/control.c ****     else
 129:Src/control.c ****     {
 130:Src/control.c ****         if (dist_idial < straight.up_term)
 271              		.loc 1 130 0
 272 0012 314B     		ldr	r3, .L38
 273 0014 93ED007A 		vldr.32	s14, [r3]
 274 0018 304B     		ldr	r3, .L38+4
 275 001a D3ED007A 		vldr.32	s15, [r3]
 276 001e B4EEE77A 		vcmpe.f32	s14, s15
 277 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 278 0026 3EDC     		bgt	.L35
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 8


 131:Src/control.c ****         {
 132:Src/control.c ****             UpdateTargets(&dist_idial, &straight.v_now, straight.accel);
 133:Src/control.c ****         }
 134:Src/control.c ****         else if (dist_idial < straight.const_term)
 279              		.loc 1 134 0
 280 0028 2B4B     		ldr	r3, .L38
 281 002a 93ED017A 		vldr.32	s14, [r3, #4]
 282 002e 2B4B     		ldr	r3, .L38+4
 283 0030 D3ED007A 		vldr.32	s15, [r3]
 284 0034 B4EEE77A 		vcmpe.f32	s14, s15
 285 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 286 003c 3BDC     		bgt	.L36
 135:Src/control.c ****         {
 136:Src/control.c ****             UpdateTargets(&dist_idial, &straight.v_now, 0);
 137:Src/control.c ****         }
 138:Src/control.c ****         else if (dist_idial < straight.down_term && straight.v_now > 0.0f)
 287              		.loc 1 138 0
 288 003e 264B     		ldr	r3, .L38
 289 0040 93ED027A 		vldr.32	s14, [r3, #8]
 290 0044 254B     		ldr	r3, .L38+4
 291 0046 D3ED007A 		vldr.32	s15, [r3]
 292 004a B4EEE77A 		vcmpe.f32	s14, s15
 293 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 294 0052 07DD     		ble	.L22
 295              		.loc 1 138 0 is_stmt 0 discriminator 1
 296 0054 204B     		ldr	r3, .L38
 297 0056 D3ED037A 		vldr.32	s15, [r3, #12]
 298 005a F5EEC07A 		vcmpe.f32	s15, #0
 299 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 300 0062 2FDC     		bgt	.L37
 301              	.L22:
 139:Src/control.c ****         {
 140:Src/control.c ****             UpdateTargets(&dist_idial, &straight.v_now, -(straight.accel));
 141:Src/control.c ****         }
 142:Src/control.c ****         else
 143:Src/control.c ****         {
 144:Src/control.c ****             motion_end_flag = TRUE;
 302              		.loc 1 144 0 is_stmt 1
 303 0064 1E4B     		ldr	r3, .L38+8
 304 0066 0122     		movs	r2, #1
 305 0068 1A70     		strb	r2, [r3]
 306              	.L19:
 145:Src/control.c ****         }
 146:Src/control.c ****         if (accel.y > 10 && straight.dir == -1)
 307              		.loc 1 146 0
 308 006a 1E4B     		ldr	r3, .L38+12
 309 006c 93ED017A 		vldr.32	s14, [r3, #4]
 310 0070 F2EE047A 		vmov.f32	s15, #1.0e+1
 311 0074 B4EEE77A 		vcmpe.f32	s14, s15
 312 0078 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 313 007c 12DD     		ble	.L14
 314              		.loc 1 146 0 is_stmt 0 discriminator 1
 315 007e 164B     		ldr	r3, .L38
 316 0080 93ED057A 		vldr.32	s14, [r3, #20]
 317 0084 FFEE007A 		vmov.f32	s15, #-1.0e+0
 318 0088 B4EE677A 		vcmp.f32	s14, s15
 319 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 9


 320 0090 08D1     		bne	.L14
 147:Src/control.c ****         {
 148:Src/control.c ****             motion_end_flag = TRUE;
 321              		.loc 1 148 0 is_stmt 1
 322 0092 134B     		ldr	r3, .L38+8
 323 0094 0122     		movs	r2, #1
 324 0096 1A70     		strb	r2, [r3]
 149:Src/control.c ****             straight.v_now = 0;
 325              		.loc 1 149 0
 326 0098 0F4B     		ldr	r3, .L38
 327 009a 0022     		movs	r2, #0
 328 009c DA60     		str	r2, [r3, #12]	@ float
 150:Src/control.c ****         }
 151:Src/control.c ****     }
 152:Src/control.c **** }
 329              		.loc 1 152 0
 330 009e 01E0     		b	.L14
 331              	.L34:
 126:Src/control.c ****     }
 332              		.loc 1 126 0
 333 00a0 0022     		movs	r2, #0
 334 00a2 DA60     		str	r2, [r3, #12]	@ float
 335              	.L14:
 336              		.loc 1 152 0
 337 00a4 08BD     		pop	{r3, pc}
 338              	.L35:
 132:Src/control.c ****         }
 339              		.loc 1 132 0
 340 00a6 0C49     		ldr	r1, .L38
 341 00a8 91ED040A 		vldr.32	s0, [r1, #16]
 342 00ac 0C31     		adds	r1, r1, #12
 343 00ae 1846     		mov	r0, r3
 344 00b0 FFF7FEFF 		bl	UpdateTargets
 345              	.LVL15:
 346 00b4 D9E7     		b	.L19
 347              	.L36:
 136:Src/control.c ****         }
 348              		.loc 1 136 0
 349 00b6 9FED0C0A 		vldr.32	s0, .L38+16
 350 00ba 0C49     		ldr	r1, .L38+20
 351 00bc 1846     		mov	r0, r3
 352 00be FFF7FEFF 		bl	UpdateTargets
 353              	.LVL16:
 354 00c2 D2E7     		b	.L19
 355              	.L37:
 140:Src/control.c ****         }
 356              		.loc 1 140 0
 357 00c4 1946     		mov	r1, r3
 358 00c6 93ED040A 		vldr.32	s0, [r3, #16]
 359 00ca B1EE400A 		vneg.f32	s0, s0
 360 00ce 0C31     		adds	r1, r1, #12
 361 00d0 0248     		ldr	r0, .L38+4
 362 00d2 FFF7FEFF 		bl	UpdateTargets
 363              	.LVL17:
 364 00d6 C8E7     		b	.L19
 365              	.L39:
 366              		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 10


 367              	.L38:
 368 00d8 00000000 		.word	straight
 369 00dc 00000000 		.word	.LANCHOR0
 370 00e0 00000000 		.word	motion_end_flag
 371 00e4 00000000 		.word	accel
 372 00e8 00000000 		.word	0
 373 00ec 0C000000 		.word	straight+12
 374              		.cfi_endproc
 375              	.LFE130:
 377              		.section	.text.Control_Side_Wall,"ax",%progbits
 378              		.align	1
 379              		.global	Control_Side_Wall
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv4-sp-d16
 385              	Control_Side_Wall:
 386              	.LFB131:
 153:Src/control.c **** 
 154:Src/control.c **** void Control_Side_Wall(void)
 155:Src/control.c **** {
 387              		.loc 1 155 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391 0000 10B5     		push	{r4, lr}
 392              	.LCFI3:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 4, -8
 395              		.cfi_offset 14, -4
 396              	.LVL18:
 156:Src/control.c ****     float kp = 0.2f;
 157:Src/control.c ****     if (sen_l.diff_1ms < -10 /*|| sen_r.diff_1ms > 5*/)
 397              		.loc 1 157 0
 398 0002 514B     		ldr	r3, .L53
 399 0004 B3F90A30 		ldrsh	r3, [r3, #10]
 400 0008 13F10A0F 		cmn	r3, #10
 401 000c 02DA     		bge	.L41
 158:Src/control.c ****     {
 159:Src/control.c ****         add_l = 10;
 402              		.loc 1 159 0
 403 000e 4F4B     		ldr	r3, .L53+4
 404 0010 0A22     		movs	r2, #10
 405 0012 1A70     		strb	r2, [r3]
 406              	.L41:
 160:Src/control.c ****     }
 161:Src/control.c ****     if (sen_r.diff_1ms < -10 /*|| sen_r.diff_1ms > 5*/)
 407              		.loc 1 161 0
 408 0014 4E4B     		ldr	r3, .L53+8
 409 0016 B3F90A30 		ldrsh	r3, [r3, #10]
 410 001a 13F10A0F 		cmn	r3, #10
 411 001e 02DA     		bge	.L42
 162:Src/control.c ****     {
 163:Src/control.c ****         add_r = 20;
 412              		.loc 1 163 0
 413 0020 4C4B     		ldr	r3, .L53+12
 414 0022 1422     		movs	r2, #20
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 11


 415 0024 1A70     		strb	r2, [r3]
 416              	.L42:
 164:Src/control.c ****     }
 165:Src/control.c ****     if (sen_l.now > sen_l.threshold + add_l && sen_r.now > sen_r.threshold + add_r)
 417              		.loc 1 165 0
 418 0026 484B     		ldr	r3, .L53
 419 0028 B3F90020 		ldrsh	r2, [r3]
 420 002c B3F90610 		ldrsh	r1, [r3, #6]
 421 0030 464B     		ldr	r3, .L53+4
 422 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423 0034 0B44     		add	r3, r3, r1
 424 0036 9A42     		cmp	r2, r3
 425 0038 09DD     		ble	.L43
 426              		.loc 1 165 0 is_stmt 0 discriminator 1
 427 003a 4549     		ldr	r1, .L53+8
 428 003c B1F90000 		ldrsh	r0, [r1]
 429 0040 B1F90640 		ldrsh	r4, [r1, #6]
 430 0044 4349     		ldr	r1, .L53+12
 431 0046 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 432 0048 2144     		add	r1, r1, r4
 433 004a 8842     		cmp	r0, r1
 434 004c 3BDC     		bgt	.L51
 435              	.L43:
 166:Src/control.c ****     {
 167:Src/control.c **** 
 168:Src/control.c ****         Gpio_SideLed(LED_L | LED_R);
 169:Src/control.c ****         wall_dif = kp * ((sen_l.now - sen_l.reference) - (sen_r.now - sen_r.reference));
 170:Src/control.c ****         add_l = 0;
 171:Src/control.c ****         add_r = 0;
 172:Src/control.c ****     }
 173:Src/control.c ****     else if (sen_l.now > sen_l.threshold + add_l)
 436              		.loc 1 173 0 is_stmt 1
 437 004e 9A42     		cmp	r2, r3
 438 0050 5ADC     		bgt	.L52
 174:Src/control.c ****     {
 175:Src/control.c ****         Gpio_SideLed(LED_L);
 176:Src/control.c ****         wall_dif = 2 * kp * (sen_l.now - sen_l.reference);
 177:Src/control.c ****         add_l = 0;
 178:Src/control.c ****     }
 179:Src/control.c ****     else if (sen_r.now > sen_r.threshold + add_r)
 439              		.loc 1 179 0
 440 0052 3F4B     		ldr	r3, .L53+8
 441 0054 B3F90020 		ldrsh	r2, [r3]
 442 0058 B3F90610 		ldrsh	r1, [r3, #6]
 443 005c 3D4B     		ldr	r3, .L53+12
 444 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 445 0060 0B44     		add	r3, r3, r1
 446 0062 9A42     		cmp	r2, r3
 447 0064 68DD     		ble	.L46
 180:Src/control.c ****     {
 181:Src/control.c ****         Gpio_SideLed(LED_R);
 448              		.loc 1 181 0
 449 0066 0120     		movs	r0, #1
 450 0068 FFF7FEFF 		bl	Gpio_SideLed
 451              	.LVL19:
 182:Src/control.c ****         wall_dif = -2 * kp * (sen_r.now - sen_r.reference);
 452              		.loc 1 182 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 12


 453 006c 384A     		ldr	r2, .L53+8
 454 006e B2F90030 		ldrsh	r3, [r2]
 455 0072 B2F90420 		ldrsh	r2, [r2, #4]
 456 0076 9B1A     		subs	r3, r3, r2
 457 0078 07EE903A 		vmov	s15, r3	@ int
 458 007c F8EEE77A 		vcvt.f32.s32	s15, s15
 459 0080 9FED357A 		vldr.32	s14, .L53+16
 460 0084 67EE877A 		vmul.f32	s15, s15, s14
 461 0088 344B     		ldr	r3, .L53+20
 462 008a C3ED007A 		vstr.32	s15, [r3]
 183:Src/control.c ****         add_r = 0;
 463              		.loc 1 183 0
 464 008e 314B     		ldr	r3, .L53+12
 465 0090 0022     		movs	r2, #0
 466 0092 1A70     		strb	r2, [r3]
 467              	.L44:
 184:Src/control.c ****     }
 185:Src/control.c ****     else
 186:Src/control.c ****     {
 187:Src/control.c ****         Gpio_SideLed(0);
 188:Src/control.c ****         wall_dif = 0;
 189:Src/control.c ****     }
 190:Src/control.c **** 
 191:Src/control.c ****     if (angle.dir != 0 || enc.velocity < 100)
 468              		.loc 1 191 0
 469 0094 324B     		ldr	r3, .L53+24
 470 0096 D3ED057A 		vldr.32	s15, [r3, #20]
 471 009a F5EE407A 		vcmp.f32	s15, #0
 472 009e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 473 00a2 09D1     		bne	.L47
 474              		.loc 1 191 0 is_stmt 0 discriminator 1
 475 00a4 2F4B     		ldr	r3, .L53+28
 476 00a6 93ED017A 		vldr.32	s14, [r3, #4]
 477 00aa DFED2F7A 		vldr.32	s15, .L53+32
 478 00ae B4EEE77A 		vcmpe.f32	s14, s15
 479 00b2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 480 00b6 05D5     		bpl	.L40
 481              	.L47:
 192:Src/control.c ****     {
 193:Src/control.c ****         wall_dif = 0;
 482              		.loc 1 193 0 is_stmt 1
 483 00b8 284B     		ldr	r3, .L53+20
 484 00ba 0022     		movs	r2, #0
 485 00bc 1A60     		str	r2, [r3]	@ float
 194:Src/control.c ****         Gpio_SideLed(0);
 486              		.loc 1 194 0
 487 00be 0020     		movs	r0, #0
 488 00c0 FFF7FEFF 		bl	Gpio_SideLed
 489              	.LVL20:
 490              	.L40:
 195:Src/control.c ****     }
 196:Src/control.c ****     //wall_dif = kp * ((sen_l.now - sen_l.reference) - (sen_r.now - sen_r.reference));
 197:Src/control.c **** }
 491              		.loc 1 197 0
 492 00c4 10BD     		pop	{r4, pc}
 493              	.L51:
 168:Src/control.c ****         wall_dif = kp * ((sen_l.now - sen_l.reference) - (sen_r.now - sen_r.reference));
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 13


 494              		.loc 1 168 0
 495 00c6 0320     		movs	r0, #3
 496 00c8 FFF7FEFF 		bl	Gpio_SideLed
 497              	.LVL21:
 169:Src/control.c ****         add_l = 0;
 498              		.loc 1 169 0
 499 00cc 1E4A     		ldr	r2, .L53
 500 00ce B2F90030 		ldrsh	r3, [r2]
 501 00d2 B2F90420 		ldrsh	r2, [r2, #4]
 502 00d6 9B1A     		subs	r3, r3, r2
 503 00d8 1D49     		ldr	r1, .L53+8
 504 00da B1F90020 		ldrsh	r2, [r1]
 505 00de B1F90410 		ldrsh	r1, [r1, #4]
 506 00e2 521A     		subs	r2, r2, r1
 507 00e4 9B1A     		subs	r3, r3, r2
 508 00e6 07EE903A 		vmov	s15, r3	@ int
 509 00ea F8EEE77A 		vcvt.f32.s32	s15, s15
 510 00ee 9FED1F7A 		vldr.32	s14, .L53+36
 511 00f2 67EE877A 		vmul.f32	s15, s15, s14
 512 00f6 194B     		ldr	r3, .L53+20
 513 00f8 C3ED007A 		vstr.32	s15, [r3]
 170:Src/control.c ****         add_r = 0;
 514              		.loc 1 170 0
 515 00fc 0023     		movs	r3, #0
 516 00fe 134A     		ldr	r2, .L53+4
 517 0100 1370     		strb	r3, [r2]
 171:Src/control.c ****     }
 518              		.loc 1 171 0
 519 0102 144A     		ldr	r2, .L53+12
 520 0104 1370     		strb	r3, [r2]
 521 0106 C5E7     		b	.L44
 522              	.L52:
 175:Src/control.c ****         wall_dif = 2 * kp * (sen_l.now - sen_l.reference);
 523              		.loc 1 175 0
 524 0108 0220     		movs	r0, #2
 525 010a FFF7FEFF 		bl	Gpio_SideLed
 526              	.LVL22:
 176:Src/control.c ****         add_l = 0;
 527              		.loc 1 176 0
 528 010e 0E4A     		ldr	r2, .L53
 529 0110 B2F90030 		ldrsh	r3, [r2]
 530 0114 B2F90420 		ldrsh	r2, [r2, #4]
 531 0118 9B1A     		subs	r3, r3, r2
 532 011a 07EE903A 		vmov	s15, r3	@ int
 533 011e F8EEE77A 		vcvt.f32.s32	s15, s15
 534 0122 9FED137A 		vldr.32	s14, .L53+40
 535 0126 67EE877A 		vmul.f32	s15, s15, s14
 536 012a 0C4B     		ldr	r3, .L53+20
 537 012c C3ED007A 		vstr.32	s15, [r3]
 177:Src/control.c ****     }
 538              		.loc 1 177 0
 539 0130 064B     		ldr	r3, .L53+4
 540 0132 0022     		movs	r2, #0
 541 0134 1A70     		strb	r2, [r3]
 542 0136 ADE7     		b	.L44
 543              	.L46:
 187:Src/control.c ****         wall_dif = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 14


 544              		.loc 1 187 0
 545 0138 0020     		movs	r0, #0
 546 013a FFF7FEFF 		bl	Gpio_SideLed
 547              	.LVL23:
 188:Src/control.c ****     }
 548              		.loc 1 188 0
 549 013e 074B     		ldr	r3, .L53+20
 550 0140 0022     		movs	r2, #0
 551 0142 1A60     		str	r2, [r3]	@ float
 552 0144 A6E7     		b	.L44
 553              	.L54:
 554 0146 00BF     		.align	2
 555              	.L53:
 556 0148 00000000 		.word	sen_l
 557 014c 00000000 		.word	.LANCHOR2
 558 0150 00000000 		.word	sen_r
 559 0154 00000000 		.word	.LANCHOR3
 560 0158 CDCCCCBE 		.word	-1093874483
 561 015c 00000000 		.word	.LANCHOR4
 562 0160 00000000 		.word	angle
 563 0164 00000000 		.word	enc
 564 0168 0000C842 		.word	1120403456
 565 016c CDCC4C3E 		.word	1045220557
 566 0170 CDCCCC3E 		.word	1053609165
 567              		.cfi_endproc
 568              	.LFE131:
 570              		.section	.text.UpdateAngTarget,"ax",%progbits
 571              		.align	1
 572              		.global	UpdateAngTarget
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu fpv4-sp-d16
 578              	UpdateAngTarget:
 579              	.LFB132:
 198:Src/control.c **** 
 199:Src/control.c **** void UpdateAngTarget(void)
 200:Src/control.c **** {
 580              		.loc 1 200 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 08B5     		push	{r3, lr}
 585              	.LCFI4:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 3, -8
 588              		.cfi_offset 14, -4
 201:Src/control.c ****     if (angle.dir == 0.0f)
 589              		.loc 1 201 0
 590 0002 2B4B     		ldr	r3, .L76
 591 0004 D3ED057A 		vldr.32	s15, [r3, #20]
 592 0008 F5EE407A 		vcmp.f32	s15, #0
 593 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 594 0010 31D0     		beq	.L72
 202:Src/control.c ****     {
 203:Src/control.c ****         angle.v_now = 0.0f;
 204:Src/control.c ****     }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 15


 205:Src/control.c ****     else
 206:Src/control.c ****     {
 207:Src/control.c ****         if (ang_idial < angle.up_term)
 595              		.loc 1 207 0
 596 0012 274B     		ldr	r3, .L76
 597 0014 93ED007A 		vldr.32	s14, [r3]
 598 0018 264B     		ldr	r3, .L76+4
 599 001a D3ED007A 		vldr.32	s15, [r3]
 600 001e B4EEE77A 		vcmpe.f32	s14, s15
 601 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 602 0026 29DC     		bgt	.L73
 208:Src/control.c ****         {
 209:Src/control.c ****             UpdateTargets(&ang_idial, &angle.v_now, angle.accel);
 210:Src/control.c ****         }
 211:Src/control.c ****         else if (ang_idial < angle.const_term)
 603              		.loc 1 211 0
 604 0028 214B     		ldr	r3, .L76
 605 002a 93ED017A 		vldr.32	s14, [r3, #4]
 606 002e 214B     		ldr	r3, .L76+4
 607 0030 D3ED007A 		vldr.32	s15, [r3]
 608 0034 B4EEE77A 		vcmpe.f32	s14, s15
 609 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 610 003c 26DC     		bgt	.L74
 212:Src/control.c ****         {
 213:Src/control.c ****             UpdateTargets(&ang_idial, &angle.v_now, 0);
 214:Src/control.c ****         }
 215:Src/control.c ****         else if (ang_idial < angle.down_term && angle.v_now > 0.0f)
 611              		.loc 1 215 0
 612 003e 1C4B     		ldr	r3, .L76
 613 0040 93ED027A 		vldr.32	s14, [r3, #8]
 614 0044 1B4B     		ldr	r3, .L76+4
 615 0046 D3ED007A 		vldr.32	s15, [r3]
 616 004a B4EEE77A 		vcmpe.f32	s14, s15
 617 004e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 618 0052 07DD     		ble	.L62
 619              		.loc 1 215 0 is_stmt 0 discriminator 1
 620 0054 164B     		ldr	r3, .L76
 621 0056 D3ED037A 		vldr.32	s15, [r3, #12]
 622 005a F5EEC07A 		vcmpe.f32	s15, #0
 623 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 624 0062 1ADC     		bgt	.L75
 625              	.L62:
 216:Src/control.c ****         {
 217:Src/control.c ****             UpdateTargets(&ang_idial, &angle.v_now, -(angle.accel));
 218:Src/control.c ****         }
 219:Src/control.c ****         else
 220:Src/control.c ****         {
 221:Src/control.c ****             ang_idial = 0.0f;
 626              		.loc 1 221 0 is_stmt 1
 627 0064 0023     		movs	r3, #0
 628 0066 134A     		ldr	r2, .L76+4
 629 0068 1360     		str	r3, [r2]	@ float
 222:Src/control.c ****             angle.error = 0;
 630              		.loc 1 222 0
 631 006a 114A     		ldr	r2, .L76
 632 006c 9361     		str	r3, [r2, #24]	@ float
 223:Src/control.c ****             motion_end_flag = TRUE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 16


 633              		.loc 1 223 0
 634 006e 124B     		ldr	r3, .L76+8
 635 0070 0122     		movs	r2, #1
 636 0072 1A70     		strb	r2, [r3]
 224:Src/control.c ****         }
 225:Src/control.c ****     }
 226:Src/control.c **** }
 637              		.loc 1 226 0
 638 0074 01E0     		b	.L55
 639              	.L72:
 203:Src/control.c ****     }
 640              		.loc 1 203 0
 641 0076 0022     		movs	r2, #0
 642 0078 DA60     		str	r2, [r3, #12]	@ float
 643              	.L55:
 644              		.loc 1 226 0
 645 007a 08BD     		pop	{r3, pc}
 646              	.L73:
 209:Src/control.c ****         }
 647              		.loc 1 209 0
 648 007c 0C49     		ldr	r1, .L76
 649 007e 91ED040A 		vldr.32	s0, [r1, #16]
 650 0082 0C31     		adds	r1, r1, #12
 651 0084 1846     		mov	r0, r3
 652 0086 FFF7FEFF 		bl	UpdateTargets
 653              	.LVL24:
 654 008a F6E7     		b	.L55
 655              	.L74:
 213:Src/control.c ****         }
 656              		.loc 1 213 0
 657 008c 9FED0B0A 		vldr.32	s0, .L76+12
 658 0090 0B49     		ldr	r1, .L76+16
 659 0092 1846     		mov	r0, r3
 660 0094 FFF7FEFF 		bl	UpdateTargets
 661              	.LVL25:
 662 0098 EFE7     		b	.L55
 663              	.L75:
 217:Src/control.c ****         }
 664              		.loc 1 217 0
 665 009a 1946     		mov	r1, r3
 666 009c 93ED040A 		vldr.32	s0, [r3, #16]
 667 00a0 B1EE400A 		vneg.f32	s0, s0
 668 00a4 0C31     		adds	r1, r1, #12
 669 00a6 0348     		ldr	r0, .L76+4
 670 00a8 FFF7FEFF 		bl	UpdateTargets
 671              	.LVL26:
 672 00ac E5E7     		b	.L55
 673              	.L77:
 674 00ae 00BF     		.align	2
 675              	.L76:
 676 00b0 00000000 		.word	angle
 677 00b4 00000000 		.word	.LANCHOR1
 678 00b8 00000000 		.word	motion_end_flag
 679 00bc 00000000 		.word	0
 680 00c0 0C000000 		.word	angle+12
 681              		.cfi_endproc
 682              	.LFE132:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 17


 684              		.section	.text.UpdateLoger,"ax",%progbits
 685              		.align	1
 686              		.global	UpdateLoger
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv4-sp-d16
 692              	UpdateLoger:
 693              	.LFB133:
 227:Src/control.c **** 
 228:Src/control.c **** void UpdateLoger(void)
 229:Src/control.c **** {
 694              		.loc 1 229 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 230:Src/control.c ****     loger.target_velo[loger.cnt] = (int16_t)straight.v_now;
 699              		.loc 1 230 0
 700 0000 1F4B     		ldr	r3, .L80
 701 0002 D3ED037A 		vldr.32	s15, [r3, #12]
 702 0006 1F4A     		ldr	r2, .L80+4
 703 0008 1388     		ldrh	r3, [r2]
 704 000a FDEEE77A 		vcvt.s32.f32	s15, s15
 705 000e 02EB4301 		add	r1, r2, r3, lsl #1
 706 0012 17EE900A 		vmov	r0, s15	@ int
 707 0016 4880     		strh	r0, [r1, #2]	@ movhi
 231:Src/control.c ****     loger.target_velo_ang[loger.cnt] = (int16_t)angle.v_now;
 708              		.loc 1 231 0
 709 0018 1B49     		ldr	r1, .L80+8
 710 001a D1ED037A 		vldr.32	s15, [r1, #12]
 711 001e FDEEE77A 		vcvt.s32.f32	s15, s15
 712 0022 03F6B831 		addw	r1, r3, #3000
 713 0026 02EB4101 		add	r1, r2, r1, lsl #1
 714 002a 17EE900A 		vmov	r0, s15	@ int
 715 002e 4880     		strh	r0, [r1, #2]	@ movhi
 232:Src/control.c ****     loger.velo[loger.cnt] = (int16_t)enc.velocity;
 716              		.loc 1 232 0
 717 0030 1649     		ldr	r1, .L80+12
 718 0032 D1ED017A 		vldr.32	s15, [r1, #4]
 719 0036 FDEEE77A 		vcvt.s32.f32	s15, s15
 720 003a 03F5BB51 		add	r1, r3, #5984
 721 003e 1031     		adds	r1, r1, #16
 722 0040 02EB4101 		add	r1, r2, r1, lsl #1
 723 0044 17EE900A 		vmov	r0, s15	@ int
 724 0048 4880     		strh	r0, [r1, #2]	@ movhi
 233:Src/control.c ****     loger.velo_ang[loger.cnt] = (int16_t)gyro_z.velocity;
 725              		.loc 1 233 0
 726 004a 1149     		ldr	r1, .L80+16
 727 004c D1ED007A 		vldr.32	s15, [r1]
 728 0050 FDEEE77A 		vcvt.s32.f32	s15, s15
 729 0054 03F50C51 		add	r1, r3, #8960
 730 0058 2831     		adds	r1, r1, #40
 731 005a 02EB4101 		add	r1, r2, r1, lsl #1
 732 005e 17EE900A 		vmov	r0, s15	@ int
 733 0062 4880     		strh	r0, [r1, #2]	@ movhi
 234:Src/control.c ****     //loger.velo[loger.cnt] = (int16_t)accel.y;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 18


 235:Src/control.c ****     loger.cnt++;
 734              		.loc 1 235 0
 735 0064 0133     		adds	r3, r3, #1
 736 0066 9BB2     		uxth	r3, r3
 737 0068 1380     		strh	r3, [r2]	@ movhi
 236:Src/control.c ****     if (loger.cnt > 3000)
 738              		.loc 1 236 0
 739 006a 40F6B832 		movw	r2, #3000
 740 006e 9342     		cmp	r3, r2
 741 0070 05D9     		bls	.L78
 237:Src/control.c ****     {
 238:Src/control.c ****         motion_end_flag = TRUE;
 742              		.loc 1 238 0
 743 0072 084B     		ldr	r3, .L80+20
 744 0074 0122     		movs	r2, #1
 745 0076 1A70     		strb	r2, [r3]
 239:Src/control.c ****         motor_flag = FALSE;
 746              		.loc 1 239 0
 747 0078 074B     		ldr	r3, .L80+24
 748 007a 0022     		movs	r2, #0
 749 007c 1A70     		strb	r2, [r3]
 750              	.L78:
 240:Src/control.c ****     }
 241:Src/control.c **** }
 751              		.loc 1 241 0
 752 007e 7047     		bx	lr
 753              	.L81:
 754              		.align	2
 755              	.L80:
 756 0080 00000000 		.word	straight
 757 0084 00000000 		.word	loger
 758 0088 00000000 		.word	angle
 759 008c 00000000 		.word	enc
 760 0090 00000000 		.word	gyro_z
 761 0094 00000000 		.word	motion_end_flag
 762 0098 00000000 		.word	motor_flag
 763              		.cfi_endproc
 764              	.LFE133:
 766              		.global	__aeabi_f2d
 767              		.global	__aeabi_dmul
 768              		.global	__aeabi_dsub
 769              		.global	__aeabi_dadd
 770              		.global	__aeabi_ddiv
 771              		.global	__aeabi_d2f
 772              		.section	.text.UpdateSlipAngle,"ax",%progbits
 773              		.align	1
 774              		.global	UpdateSlipAngle
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	UpdateSlipAngle:
 781              	.LFB134:
 242:Src/control.c **** 
 243:Src/control.c **** void UpdateSlipAngle(void)
 244:Src/control.c **** {
 782              		.loc 1 244 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 19


 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786 0000 D0B5     		push	{r4, r6, r7, lr}
 787              	.LCFI5:
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 4, -16
 790              		.cfi_offset 6, -12
 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 2DED028B 		vpush.64	{d8}
 794              	.LCFI6:
 795              		.cfi_def_cfa_offset 24
 796              		.cfi_offset 80, -24
 797              		.cfi_offset 81, -20
 245:Src/control.c ****     if (straight.v_now != 0)
 798              		.loc 1 245 0
 799 0006 234B     		ldr	r3, .L88
 800 0008 93ED038A 		vldr.32	s16, [r3, #12]
 801 000c B5EE408A 		vcmp.f32	s16, #0
 802 0010 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 803 0014 39D0     		beq	.L83
 246:Src/control.c ****     {
 247:Src/control.c ****         if (slip_cnt == 4)
 804              		.loc 1 247 0
 805 0016 204B     		ldr	r3, .L88+4
 806 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 807 001a 042B     		cmp	r3, #4
 808 001c 06D0     		beq	.L87
 809              	.L84:
 248:Src/control.c ****         {
 249:Src/control.c ****             slip_ang = (slip_ang * 200.0 - angle.v_now) / (200.0 + SLIP_K / straight.v_now);
 250:Src/control.c ****             slip_cnt = 0;
 251:Src/control.c ****         }
 252:Src/control.c ****         slip_cnt++;
 810              		.loc 1 252 0
 811 001e 1E4A     		ldr	r2, .L88+4
 812 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 813 0022 0133     		adds	r3, r3, #1
 814 0024 1370     		strb	r3, [r2]
 815              	.L82:
 253:Src/control.c ****     }
 254:Src/control.c ****     else
 255:Src/control.c ****     {
 256:Src/control.c ****         slip_ang = 0;
 257:Src/control.c ****     }
 258:Src/control.c **** }
 816              		.loc 1 258 0
 817 0026 BDEC028B 		vldm	sp!, {d8}
 818              	.LCFI7:
 819              		.cfi_remember_state
 820              		.cfi_restore 80
 821              		.cfi_restore 81
 822              		.cfi_def_cfa_offset 16
 823 002a D0BD     		pop	{r4, r6, r7, pc}
 824              	.L87:
 825              	.LCFI8:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 20


 826              		.cfi_restore_state
 249:Src/control.c ****             slip_cnt = 0;
 827              		.loc 1 249 0
 828 002c 1B4C     		ldr	r4, .L88+8
 829 002e 2068     		ldr	r0, [r4]	@ float
 830 0030 FFF7FEFF 		bl	__aeabi_f2d
 831              	.LVL27:
 832 0034 0022     		movs	r2, #0
 833 0036 1A4B     		ldr	r3, .L88+12
 834 0038 FFF7FEFF 		bl	__aeabi_dmul
 835              	.LVL28:
 836 003c 0646     		mov	r6, r0
 837 003e 0F46     		mov	r7, r1
 838 0040 184B     		ldr	r3, .L88+16
 839 0042 D868     		ldr	r0, [r3, #12]	@ float
 840 0044 FFF7FEFF 		bl	__aeabi_f2d
 841              	.LVL29:
 842 0048 0246     		mov	r2, r0
 843 004a 0B46     		mov	r3, r1
 844 004c 3046     		mov	r0, r6
 845 004e 3946     		mov	r1, r7
 846 0050 FFF7FEFF 		bl	__aeabi_dsub
 847              	.LVL30:
 848 0054 0646     		mov	r6, r0
 849 0056 0F46     		mov	r7, r1
 850 0058 DFED137A 		vldr.32	s15, .L88+20
 851 005c C7EE887A 		vdiv.f32	s15, s15, s16
 852 0060 17EE900A 		vmov	r0, s15
 853 0064 FFF7FEFF 		bl	__aeabi_f2d
 854              	.LVL31:
 855 0068 0022     		movs	r2, #0
 856 006a 0D4B     		ldr	r3, .L88+12
 857 006c FFF7FEFF 		bl	__aeabi_dadd
 858              	.LVL32:
 859 0070 0246     		mov	r2, r0
 860 0072 0B46     		mov	r3, r1
 861 0074 3046     		mov	r0, r6
 862 0076 3946     		mov	r1, r7
 863 0078 FFF7FEFF 		bl	__aeabi_ddiv
 864              	.LVL33:
 865 007c FFF7FEFF 		bl	__aeabi_d2f
 866              	.LVL34:
 867 0080 2060     		str	r0, [r4]	@ float
 250:Src/control.c ****         }
 868              		.loc 1 250 0
 869 0082 054B     		ldr	r3, .L88+4
 870 0084 0022     		movs	r2, #0
 871 0086 1A70     		strb	r2, [r3]
 872 0088 C9E7     		b	.L84
 873              	.L83:
 256:Src/control.c ****     }
 874              		.loc 1 256 0
 875 008a 044B     		ldr	r3, .L88+8
 876 008c 0022     		movs	r2, #0
 877 008e 1A60     		str	r2, [r3]	@ float
 878              		.loc 1 258 0
 879 0090 C9E7     		b	.L82
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 21


 880              	.L89:
 881 0092 00BF     		.align	2
 882              	.L88:
 883 0094 00000000 		.word	straight
 884 0098 00000000 		.word	.LANCHOR5
 885 009c 00000000 		.word	.LANCHOR6
 886 00a0 00006940 		.word	1080623104
 887 00a4 00000000 		.word	angle
 888 00a8 00504347 		.word	1195593728
 889              		.cfi_endproc
 890              	.LFE134:
 892              		.section	.text.Control_UpdatePwm,"ax",%progbits
 893              		.align	1
 894              		.global	Control_UpdatePwm
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 898              		.fpu fpv4-sp-d16
 900              	Control_UpdatePwm:
 901              	.LFB135:
 259:Src/control.c **** 
 260:Src/control.c **** void Control_UpdatePwm(void)
 261:Src/control.c **** {
 902              		.loc 1 261 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906 0000 70B5     		push	{r4, r5, r6, lr}
 907              	.LCFI9:
 908              		.cfi_def_cfa_offset 16
 909              		.cfi_offset 4, -16
 910              		.cfi_offset 5, -12
 911              		.cfi_offset 6, -8
 912              		.cfi_offset 14, -4
 262:Src/control.c ****     if (motor_flag == TRUE)
 913              		.loc 1 262 0
 914 0002 414B     		ldr	r3, .L103
 915 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 0006 DBB2     		uxtb	r3, r3
 917 0008 012B     		cmp	r3, #1
 918 000a 77D1     		bne	.L91
 919              	.LBB2:
 263:Src/control.c ****     {
 264:Src/control.c ****         //UpdateLoger();
 265:Src/control.c ****         if (motion_end_flag == FALSE)
 920              		.loc 1 265 0
 921 000c 3F4B     		ldr	r3, .L103+4
 922 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 923 0010 002B     		cmp	r3, #0
 924 0012 6BD0     		beq	.L101
 925              	.L92:
 266:Src/control.c ****         {
 267:Src/control.c ****             UpdateStrTarget();
 268:Src/control.c ****             UpdateAngTarget();
 269:Src/control.c ****         }
 270:Src/control.c ****         if (control_wall_flag == TRUE)
 926              		.loc 1 270 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 22


 927 0014 3E4B     		ldr	r3, .L103+8
 928 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 929 0018 DBB2     		uxtb	r3, r3
 930 001a 012B     		cmp	r3, #1
 931 001c 6BD0     		beq	.L102
 932              	.L93:
 271:Src/control.c ****         {
 272:Src/control.c ****             Control_Side_Wall();
 273:Src/control.c ****         }
 274:Src/control.c ****         //UpdateSlipAngle();
 275:Src/control.c ****         int16_t str_buff = (int16_t)PID_value(straight.dir * straight.v_now, enc.velocity, &error_s
 933              		.loc 1 275 0
 934 001e 3D4B     		ldr	r3, .L103+12
 935 0020 93ED050A 		vldr.32	s0, [r3, #20]
 936 0024 D3ED037A 		vldr.32	s15, [r3, #12]
 937 0028 3B4B     		ldr	r3, .L103+16
 938 002a D3ED010A 		vldr.32	s1, [r3, #4]
 939 002e 9FED3B2A 		vldr.32	s4, .L103+20
 940 0032 F2EE071A 		vmov.f32	s3, #1.15e+1
 941 0036 9FED3A1A 		vldr.32	s2, .L103+24
 942 003a 3A49     		ldr	r1, .L103+28
 943 003c 3A48     		ldr	r0, .L103+32
 944 003e 20EE270A 		vmul.f32	s0, s0, s15
 945 0042 FFF7FEFF 		bl	PID_value
 946              	.LVL35:
 947 0046 BDEEC00A 		vcvt.s32.f32	s0, s0
 948 004a 10EE103A 		vmov	r3, s0	@ int
 949 004e 1CB2     		sxth	r4, r3
 950              	.LVL36:
 276:Src/control.c ****         int16_t ang_buff = (int16_t)PID_value(angle.dir * angle.v_now - wall_dif, gyro_z.velocity, 
 951              		.loc 1 276 0
 952 0050 364D     		ldr	r5, .L103+36
 953 0052 D5ED057A 		vldr.32	s15, [r5, #20]
 954 0056 95ED030A 		vldr.32	s0, [r5, #12]
 955 005a 67EE807A 		vmul.f32	s15, s15, s0
 956 005e 344E     		ldr	r6, .L103+40
 957 0060 344B     		ldr	r3, .L103+44
 958 0062 93ED000A 		vldr.32	s0, [r3]
 959 0066 B7EE002A 		vmov.f32	s4, #1.0e+0
 960 006a F3EE041A 		vmov.f32	s3, #2.0e+1
 961 006e 9FED321A 		vldr.32	s2, .L103+48
 962 0072 3249     		ldr	r1, .L103+52
 963 0074 3248     		ldr	r0, .L103+56
 964 0076 D6ED000A 		vldr.32	s1, [r6]
 965 007a 37EEC00A 		vsub.f32	s0, s15, s0
 966 007e FFF7FEFF 		bl	PID_value
 967              	.LVL37:
 968 0082 BDEEC00A 		vcvt.s32.f32	s0, s0
 969              	.LVL38:
 277:Src/control.c ****         Tim_MotorPwm(str_buff - ang_buff, str_buff + ang_buff);
 970              		.loc 1 277 0
 971 0086 A1B2     		uxth	r1, r4
 972 0088 10EE103A 		vmov	r3, s0	@ int
 973 008c 9BB2     		uxth	r3, r3
 974 008e C81A     		subs	r0, r1, r3
 975 0090 1944     		add	r1, r1, r3
 976 0092 09B2     		sxth	r1, r1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 23


 977 0094 00B2     		sxth	r0, r0
 978 0096 FFF7FEFF 		bl	Tim_MotorPwm
 979              	.LVL39:
 278:Src/control.c ****         if (angle.dir * angle.v_now - gyro_z.velocity < -400 || angle.dir * angle.v_now - gyro_z.ve
 980              		.loc 1 278 0
 981 009a D5ED057A 		vldr.32	s15, [r5, #20]
 982 009e 95ED037A 		vldr.32	s14, [r5, #12]
 983 00a2 67EE877A 		vmul.f32	s15, s15, s14
 984 00a6 96ED007A 		vldr.32	s14, [r6]
 985 00aa 77EEC77A 		vsub.f32	s15, s15, s14
 986 00ae 9FED257A 		vldr.32	s14, .L103+60
 987 00b2 F4EEC77A 		vcmpe.f32	s15, s14
 988 00b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 989 00ba 06D4     		bmi	.L94
 990              		.loc 1 278 0 is_stmt 0 discriminator 1
 991 00bc 9FED227A 		vldr.32	s14, .L103+64
 992 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 993 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 994 00c8 02DD     		ble	.L95
 995              	.L94:
 279:Src/control.c ****         {
 280:Src/control.c ****             motor_flag = FALSE;
 996              		.loc 1 280 0 is_stmt 1
 997 00ca 0F4B     		ldr	r3, .L103
 998 00cc 0022     		movs	r2, #0
 999 00ce 1A70     		strb	r2, [r3]
 1000              	.L95:
 281:Src/control.c ****         }
 282:Src/control.c ****         if (accel.y < -100.0f)
 1001              		.loc 1 282 0
 1002 00d0 1E4B     		ldr	r3, .L103+68
 1003 00d2 93ED017A 		vldr.32	s14, [r3, #4]
 1004 00d6 DFED1E7A 		vldr.32	s15, .L103+72
 1005 00da B4EEE77A 		vcmpe.f32	s14, s15
 1006 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1007 00e2 0FD5     		bpl	.L90
 283:Src/control.c ****         {
 284:Src/control.c ****             motor_flag = FALSE;
 1008              		.loc 1 284 0
 1009 00e4 084B     		ldr	r3, .L103
 1010 00e6 0022     		movs	r2, #0
 1011 00e8 1A70     		strb	r2, [r3]
 1012 00ea 0BE0     		b	.L90
 1013              	.LVL40:
 1014              	.L101:
 267:Src/control.c ****             UpdateAngTarget();
 1015              		.loc 1 267 0
 1016 00ec FFF7FEFF 		bl	UpdateStrTarget
 1017              	.LVL41:
 268:Src/control.c ****         }
 1018              		.loc 1 268 0
 1019 00f0 FFF7FEFF 		bl	UpdateAngTarget
 1020              	.LVL42:
 1021 00f4 8EE7     		b	.L92
 1022              	.L102:
 272:Src/control.c ****         }
 1023              		.loc 1 272 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 24


 1024 00f6 FFF7FEFF 		bl	Control_Side_Wall
 1025              	.LVL43:
 1026 00fa 90E7     		b	.L93
 1027              	.L91:
 1028              	.LBE2:
 285:Src/control.c ****         }
 286:Src/control.c ****     }
 287:Src/control.c ****     else
 288:Src/control.c ****     {
 289:Src/control.c ****         Tim_MotorPwm(0, 0);
 1029              		.loc 1 289 0
 1030 00fc 0021     		movs	r1, #0
 1031 00fe 0846     		mov	r0, r1
 1032 0100 FFF7FEFF 		bl	Tim_MotorPwm
 1033              	.LVL44:
 1034              	.L90:
 290:Src/control.c ****     }
 291:Src/control.c **** }
 1035              		.loc 1 291 0
 1036 0104 70BD     		pop	{r4, r5, r6, pc}
 1037              	.L104:
 1038 0106 00BF     		.align	2
 1039              	.L103:
 1040 0108 00000000 		.word	motor_flag
 1041 010c 00000000 		.word	motion_end_flag
 1042 0110 00000000 		.word	control_wall_flag
 1043 0114 00000000 		.word	straight
 1044 0118 00000000 		.word	enc
 1045 011c 00000000 		.word	0
 1046 0120 9A99D93F 		.word	1071225242
 1047 0124 00000000 		.word	.LANCHOR7
 1048 0128 00000000 		.word	.LANCHOR8
 1049 012c 00000000 		.word	angle
 1050 0130 00000000 		.word	gyro_z
 1051 0134 00000000 		.word	.LANCHOR4
 1052 0138 CDCC4C3F 		.word	1061997773
 1053 013c 00000000 		.word	.LANCHOR9
 1054 0140 00000000 		.word	.LANCHOR10
 1055 0144 0000C8C3 		.word	-1010302976
 1056 0148 0000C843 		.word	1137180672
 1057 014c 00000000 		.word	accel
 1058 0150 0000C8C2 		.word	-1027080192
 1059              		.cfi_endproc
 1060              	.LFE135:
 1062              		.section	.text.Control_ResetVelo,"ax",%progbits
 1063              		.align	1
 1064              		.global	Control_ResetVelo
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv4-sp-d16
 1070              	Control_ResetVelo:
 1071              	.LFB136:
 292:Src/control.c **** 
 293:Src/control.c **** void Control_ResetVelo(void)
 294:Src/control.c **** {
 1072              		.loc 1 294 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 25


 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 295:Src/control.c ****     straight.v_now = 0.0f;
 1077              		.loc 1 295 0
 1078 0000 0023     		movs	r3, #0
 1079 0002 0B4A     		ldr	r2, .L106
 1080 0004 D360     		str	r3, [r2, #12]	@ float
 296:Src/control.c ****     dist_idial = 0.0f;
 1081              		.loc 1 296 0
 1082 0006 0B4A     		ldr	r2, .L106+4
 1083 0008 1360     		str	r3, [r2]	@ float
 297:Src/control.c ****     error_sum = 0.0f;
 1084              		.loc 1 297 0
 1085 000a 0B4A     		ldr	r2, .L106+8
 1086 000c 1360     		str	r3, [r2]	@ float
 298:Src/control.c ****     error_old = 0.0f;
 1087              		.loc 1 298 0
 1088 000e 0B4A     		ldr	r2, .L106+12
 1089 0010 1360     		str	r3, [r2]	@ float
 299:Src/control.c ****     angle.v_now = 0.0f;
 1090              		.loc 1 299 0
 1091 0012 0B4A     		ldr	r2, .L106+16
 1092 0014 D360     		str	r3, [r2, #12]	@ float
 300:Src/control.c ****     ang_idial = 0.0f;
 1093              		.loc 1 300 0
 1094 0016 0B4A     		ldr	r2, .L106+20
 1095 0018 1360     		str	r3, [r2]	@ float
 301:Src/control.c ****     error_ang_sum = 0.0f;
 1096              		.loc 1 301 0
 1097 001a 0B4A     		ldr	r2, .L106+24
 1098 001c 1360     		str	r3, [r2]	@ float
 302:Src/control.c ****     error_ang_old = 0.0f;
 1099              		.loc 1 302 0
 1100 001e 0B4A     		ldr	r2, .L106+28
 1101 0020 1360     		str	r3, [r2]	@ float
 303:Src/control.c ****     loger.cnt = 0;
 1102              		.loc 1 303 0
 1103 0022 0B4A     		ldr	r2, .L106+32
 1104 0024 0021     		movs	r1, #0
 1105 0026 1180     		strh	r1, [r2]	@ movhi
 304:Src/control.c ****     enc.offset = 0;
 1106              		.loc 1 304 0
 1107 0028 0A4A     		ldr	r2, .L106+36
 1108 002a 9360     		str	r3, [r2, #8]	@ float
 305:Src/control.c ****     enc.distance = 0;
 1109              		.loc 1 305 0
 1110 002c 1360     		str	r3, [r2]	@ float
 306:Src/control.c **** }...
 1111              		.loc 1 306 0
 1112 002e 7047     		bx	lr
 1113              	.L107:
 1114              		.align	2
 1115              	.L106:
 1116 0030 00000000 		.word	straight
 1117 0034 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 26


 1118 0038 00000000 		.word	.LANCHOR8
 1119 003c 00000000 		.word	.LANCHOR7
 1120 0040 00000000 		.word	angle
 1121 0044 00000000 		.word	.LANCHOR1
 1122 0048 00000000 		.word	.LANCHOR10
 1123 004c 00000000 		.word	.LANCHOR9
 1124 0050 00000000 		.word	loger
 1125 0054 00000000 		.word	enc
 1126              		.cfi_endproc
 1127              	.LFE136:
 1129              		.comm	control_wall_flag,1,1
 1130              		.global	add_r
 1131              		.global	add_l
 1132              		.global	wall_dif
 1133              		.global	slip_cnt
 1134              		.global	slip_ang
 1135              		.comm	motor_flag,1,1
 1136              		.global	error_ang_old
 1137              		.global	error_ang_sum
 1138              		.global	ang_idial
 1139              		.comm	loger,24002,4
 1140              		.comm	angle,28,4
 1141              		.global	error_old
 1142              		.global	error_sum
 1143              		.global	dist_idial
 1144              		.comm	straight,28,4
 1145              		.section	.bss.add_l,"aw",%nobits
 1146              		.set	.LANCHOR2,. + 0
 1149              	add_l:
 1150 0000 00       		.space	1
 1151              		.section	.bss.add_r,"aw",%nobits
 1152              		.set	.LANCHOR3,. + 0
 1155              	add_r:
 1156 0000 00       		.space	1
 1157              		.section	.bss.ang_idial,"aw",%nobits
 1158              		.align	2
 1159              		.set	.LANCHOR1,. + 0
 1162              	ang_idial:
 1163 0000 00000000 		.space	4
 1164              		.section	.bss.dist_idial,"aw",%nobits
 1165              		.align	2
 1166              		.set	.LANCHOR0,. + 0
 1169              	dist_idial:
 1170 0000 00000000 		.space	4
 1171              		.section	.bss.error_ang_old,"aw",%nobits
 1172              		.align	2
 1173              		.set	.LANCHOR9,. + 0
 1176              	error_ang_old:
 1177 0000 00000000 		.space	4
 1178              		.section	.bss.error_ang_sum,"aw",%nobits
 1179              		.align	2
 1180              		.set	.LANCHOR10,. + 0
 1183              	error_ang_sum:
 1184 0000 00000000 		.space	4
 1185              		.section	.bss.error_old,"aw",%nobits
 1186              		.align	2
 1187              		.set	.LANCHOR7,. + 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 27


 1190              	error_old:
 1191 0000 00000000 		.space	4
 1192              		.section	.bss.error_sum,"aw",%nobits
 1193              		.align	2
 1194              		.set	.LANCHOR8,. + 0
 1197              	error_sum:
 1198 0000 00000000 		.space	4
 1199              		.section	.bss.slip_ang,"aw",%nobits
 1200              		.align	2
 1201              		.set	.LANCHOR6,. + 0
 1204              	slip_ang:
 1205 0000 00000000 		.space	4
 1206              		.section	.bss.slip_cnt,"aw",%nobits
 1207              		.set	.LANCHOR5,. + 0
 1210              	slip_cnt:
 1211 0000 00       		.space	1
 1212              		.section	.bss.wall_dif,"aw",%nobits
 1213              		.align	2
 1214              		.set	.LANCHOR4,. + 0
 1217              	wall_dif:
 1218 0000 00000000 		.space	4
 1219              		.text
 1220              	.Letext0:
 1221              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1222              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1223              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1224              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1225              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1226              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1227              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1228              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1229              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1230              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1231              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1232              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1233              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1234              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1235              		.file 16 "Inc/tim.h"
 1236              		.file 17 "Inc/spi.h"
 1237              		.file 18 "Inc/control.h"
 1238              		.file 19 "Inc/flash.h"
 1239              		.file 20 "Inc/adc.h"
 1240              		.file 21 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 control.c
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:18     .text.PID_value:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:25     .text.PID_value:00000000 PID_value
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:66     .text.PID_value:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:71     .text.Control_StrCalculator:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:78     .text.Control_StrCalculator:00000000 Control_StrCalculator
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:122    .text.Control_StrCalculator:00000054 $d
                            *COM*:0000001c straight
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:128    .text.Control_AngCalculator:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:135    .text.Control_AngCalculator:00000000 Control_AngCalculator
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:182    .text.Control_AngCalculator:00000058 $d
                            *COM*:0000001c angle
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:189    .text.UpdateTargets:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:196    .text.UpdateTargets:00000000 UpdateTargets
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:242    .text.UpdateTargets:00000054 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:247    .text.UpdateStrTarget:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:254    .text.UpdateStrTarget:00000000 UpdateStrTarget
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:368    .text.UpdateStrTarget:000000d8 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:378    .text.Control_Side_Wall:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:385    .text.Control_Side_Wall:00000000 Control_Side_Wall
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:556    .text.Control_Side_Wall:00000148 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:571    .text.UpdateAngTarget:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:578    .text.UpdateAngTarget:00000000 UpdateAngTarget
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:676    .text.UpdateAngTarget:000000b0 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:685    .text.UpdateLoger:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:692    .text.UpdateLoger:00000000 UpdateLoger
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:756    .text.UpdateLoger:00000080 $d
                            *COM*:00005dc2 loger
                            *COM*:00000001 motor_flag
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:773    .text.UpdateSlipAngle:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:780    .text.UpdateSlipAngle:00000000 UpdateSlipAngle
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:883    .text.UpdateSlipAngle:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:893    .text.Control_UpdatePwm:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:900    .text.Control_UpdatePwm:00000000 Control_UpdatePwm
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1040   .text.Control_UpdatePwm:00000108 $d
                            *COM*:00000001 control_wall_flag
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1063   .text.Control_ResetVelo:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1070   .text.Control_ResetVelo:00000000 Control_ResetVelo
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1116   .text.Control_ResetVelo:00000030 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1155   .bss.add_r:00000000 add_r
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1149   .bss.add_l:00000000 add_l
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1217   .bss.wall_dif:00000000 wall_dif
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1210   .bss.slip_cnt:00000000 slip_cnt
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1204   .bss.slip_ang:00000000 slip_ang
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1176   .bss.error_ang_old:00000000 error_ang_old
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1183   .bss.error_ang_sum:00000000 error_ang_sum
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1162   .bss.ang_idial:00000000 ang_idial
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1190   .bss.error_old:00000000 error_old
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1197   .bss.error_sum:00000000 error_sum
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1169   .bss.dist_idial:00000000 dist_idial
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1150   .bss.add_l:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1156   .bss.add_r:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1158   .bss.ang_idial:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1165   .bss.dist_idial:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1172   .bss.error_ang_old:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1179   .bss.error_ang_sum:00000000 $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s 			page 29


C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1186   .bss.error_old:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1193   .bss.error_sum:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1200   .bss.slip_ang:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1211   .bss.slip_cnt:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccsPBBwM.s:1213   .bss.wall_dif:00000000 $d

UNDEFINED SYMBOLS
gyro_z
motion_end_flag
accel
Gpio_SideLed
sen_l
sen_r
enc
__aeabi_f2d
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_ddiv
__aeabi_d2f
Tim_MotorPwm
