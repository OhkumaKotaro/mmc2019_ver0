ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** extern uint8_t counter_s;
  30:Src/mode.c    **** 
  31:Src/mode.c    **** unsigned char gx = 1, gy = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 2


  32:Src/mode.c    **** walledge_t walledge_search={-8,-8,0,0,17.0f,19.0f,0,0};//{-8,-8,0,0,107.0f,109.0f,0,0};
  33:Src/mode.c    **** walledge_t walledge_800 = {-10,-10,-10,-10,13.0f,13.0f,20.0f,21.0f};
  34:Src/mode.c    **** walledge_t walledge_1200 = {-11,-19,-10,-10,11.0f,19.0f,20.0f,20.0f};
  35:Src/mode.c    **** 
  36:Src/mode.c    **** //Prototype Function
  37:Src/mode.c    **** void SensorCheck(void);
  38:Src/mode.c    **** void SetRunMode(uint8_t fan_flag);
  39:Src/mode.c    **** void CheckStraight(uint8_t block);
  40:Src/mode.c    **** void CheckFastStraight(uint8_t block);
  41:Src/mode.c    **** void CheckFastestStraight(uint8_t block);
  42:Src/mode.c    **** void CheckDiagonal(uint8_t block, int8_t dir);
  43:Src/mode.c    **** void CheckTurn(uint8_t num);
  44:Src/mode.c    **** void PrintOutPut(void);
  45:Src/mode.c    **** void PrintWallData(void);
  46:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail);
  47:Src/mode.c    **** void AdjustStraight(void);
  48:Src/mode.c    **** void AdjustTurn(void);
  49:Src/mode.c    **** void SearchRun(void);
  50:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn);
  51:Src/mode.c    **** void Mode_FastestRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn);
  52:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  53:Src/mode.c    **** void TestComb(uint8_t num, uint8_t dir);
  54:Src/mode.c    **** void TestSteps(uint8_t num);
  55:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  56:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  57:Src/mode.c    **** void TurnBig90_Test(int8_t dir);
  58:Src/mode.c    **** void TurnBig180_Test(int8_t dir);
  59:Src/mode.c    **** void TurnV90_Test(int8_t dir);
  60:Src/mode.c    **** void FastestTurnTest(uint8_t dir, uint8_t deg);
  61:Src/mode.c    **** 
  62:Src/mode.c    **** /****************************************************************************************
  63:Src/mode.c    ****  * outline  : wright mode 
  64:Src/mode.c    ****  * argument : mode nomber
  65:Src/mode.c    ****  * return   : void
  66:Src/mode.c    **** ********************************************************************************************/
  67:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  68:Src/mode.c    **** {
  69:Src/mode.c    ****     switch (mode)
  70:Src/mode.c    ****     {
  71:Src/mode.c    ****     //WHITE
  72:Src/mode.c    ****     case 0:
  73:Src/mode.c    ****         SearchRun();
  74:Src/mode.c    ****         break;
  75:Src/mode.c    ****     case 1:
  76:Src/mode.c    ****         //Tim_FanPwm(4);
  77:Src/mode.c    ****         //Mode_FastRun(FALSE, 160.0f, 1, 3);
  78:Src/mode.c    ****         Mode_FastRun(TRUE, 0.0f, 7, 5);
  79:Src/mode.c    ****         break;
  80:Src/mode.c    ****     case 2:
  81:Src/mode.c    ****         /*
  82:Src/mode.c    ****         SetRunMode();
  83:Src/mode.c    ****         control_wall_flag = FALSE;
  84:Src/mode.c    ****         Motion_enkai();
  85:Src/mode.c    ****         */
  86:Src/mode.c    ****         Mode_FastRun(TRUE, 120.0f, 7, 5);
  87:Src/mode.c    ****         //Mode_FastestRun(FALSE, 100.0f, 1, 3);
  88:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 3


  89:Src/mode.c    ****     case 3:
  90:Src/mode.c    ****         Mode_FastRun(FALSE, 120.0f, 1, 3);
  91:Src/mode.c    ****         //Mode_FastRun(TRUE, 160.0f, 7, 5);
  92:Src/mode.c    ****         //SensorCheck();
  93:Src/mode.c    ****         break;
  94:Src/mode.c    ****     //CYAN
  95:Src/mode.c    ****     case 4:
  96:Src/mode.c    ****         PrintOutPut();
  97:Src/mode.c    ****         break;
  98:Src/mode.c    ****     case 5:
  99:Src/mode.c    ****         PrintWallData();
 100:Src/mode.c    ****         break;
 101:Src/mode.c    ****     case 6: //straight
 102:Src/mode.c    ****         SensorCheck();
 103:Src/mode.c    ****         /*
 104:Src/mode.c    ****         control_wall_flag = 0;
 105:Src/mode.c    ****         CheckDiagonal(4, 1);
 106:Src/mode.c    ****         */
 107:Src/mode.c    ****        /*
 108:Src/mode.c    ****         control_wall_flag = 1;
 109:Src/mode.c    ****         CheckStraight(0);
 110:Src/mode.c    ****         */
 111:Src/mode.c    ****         /*
 112:Src/mode.c    ****        control_wall_flag = 2;
 113:Src/mode.c    ****        CheckFastStraight(6);
 114:Src/mode.c    ****        */
 115:Src/mode.c    ****         /*
 116:Src/mode.c    ****         control_wall_flag = 0;
 117:Src/mode.c    ****         CheckFastestStraight(4);
 118:Src/mode.c    ****         */
 119:Src/mode.c    ****         break;
 120:Src/mode.c    ****     case 7: //turn
 121:Src/mode.c    ****             //control_wall_flag = 3;
 122:Src/mode.c    ****             //CheckDiagonal(4, 1);
 123:Src/mode.c    ****         control_wall_flag = 0;
 124:Src/mode.c    ****         CheckTurn(1);
 125:Src/mode.c    ****         break;
 126:Src/mode.c    ****     //YELLOW
 127:Src/mode.c    ****     case 8: //left turn
 128:Src/mode.c    ****         control_wall_flag = FALSE;
 129:Src/mode.c    ****         SetRunMode(0);
 130:Src/mode.c    ****         Motion_Start();
 131:Src/mode.c    ****         Motion_LeftTurn();
 132:Src/mode.c    ****         Motion_End();
 133:Src/mode.c    ****         motor_flag = FALSE;
 134:Src/mode.c    ****         HAL_Delay(500);
 135:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 136:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 137:Src/mode.c    ****         HAL_Delay(200);
 138:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 139:Src/mode.c    ****         //control_wall_flag = FALSE;
 140:Src/mode.c    ****         //FastestTurnTest(1, SEARCH);
 141:Src/mode.c    ****         break;
 142:Src/mode.c    ****     case 9: //right turn
 143:Src/mode.c    ****         control_wall_flag = FALSE;
 144:Src/mode.c    ****         SetRunMode(0);
 145:Src/mode.c    ****         Motion_Start();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 4


 146:Src/mode.c    ****         Motion_RightTurn();
 147:Src/mode.c    ****         Motion_End();
 148:Src/mode.c    ****         motor_flag = FALSE;
 149:Src/mode.c    ****         HAL_Delay(500);
 150:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 151:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 152:Src/mode.c    ****         HAL_Delay(200);
 153:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 154:Src/mode.c    ****         //control_wall_flag = FALSE;
 155:Src/mode.c    ****         //FastestTurnTest(-1, SEARCH);
 156:Src/mode.c    ****         break;
 157:Src/mode.c    ****     case 10: //circuit left
 158:Src/mode.c    ****         control_wall_flag = FALSE;
 159:Src/mode.c    ****         SetRunMode(0);
 160:Src/mode.c    ****         //Circuit(2, 2, 3, 1);
 161:Src/mode.c    ****         TestComb(6, LEFT);
 162:Src/mode.c    ****         break;
 163:Src/mode.c    ****     case 11: //circuit right
 164:Src/mode.c    ****         control_wall_flag = FALSE;
 165:Src/mode.c    ****         SetRunMode(0);
 166:Src/mode.c    ****         //Circuit(2, 2, 3, -1);
 167:Src/mode.c    ****         TestComb(6, RIGHT);
 168:Src/mode.c    ****         break;
 169:Src/mode.c    ****     //GREEN
 170:Src/mode.c    ****     case 12: //left quarter turn
 171:Src/mode.c    ****         control_wall_flag = 3;
 172:Src/mode.c    ****         //Turn45_Test(FRONT, LEFT, 1);
 173:Src/mode.c    ****         Turn135_Test(FRONT, LEFT, 0);
 174:Src/mode.c    ****         break;
 175:Src/mode.c    ****     case 13: //right quarter turn
 176:Src/mode.c    ****         control_wall_flag = 3;
 177:Src/mode.c    ****         //Turn45_Test(FRONT, RIGHT, 1);
 178:Src/mode.c    ****         Turn135_Test(FRONT, RIGHT, 0);
 179:Src/mode.c    ****         break;
 180:Src/mode.c    ****     case 14:
 181:Src/mode.c    ****         control_wall_flag = 2;
 182:Src/mode.c    ****         //Turn45_Test(LEFT, FRONT, 1);
 183:Src/mode.c    ****         Turn135_Test(LEFT, FRONT, 1);
 184:Src/mode.c    ****         break;
 185:Src/mode.c    ****     case 15:
 186:Src/mode.c    ****         control_wall_flag = 2;
 187:Src/mode.c    ****         //Turn45_Test(RIGHT, FRONT, 1);
 188:Src/mode.c    ****         Turn135_Test(RIGHT, FRONT, 1);
 189:Src/mode.c    ****         break;
 190:Src/mode.c    ****     //MAGENTA
 191:Src/mode.c    ****     case 16:
 192:Src/mode.c    ****         Mode_FastestRun(TRUE, 0.0f, 7, 5);
 193:Src/mode.c    ****         break;
 194:Src/mode.c    ****     case 17:
 195:Src/mode.c    ****         Mode_FastestRun(TRUE, 100.0f, 7, 5);
 196:Src/mode.c    ****         break;
 197:Src/mode.c    ****     case 18:
 198:Src/mode.c    ****         Mode_FastestRun(TRUE, 180.0f, 7, 5);
 199:Src/mode.c    ****         break;
 200:Src/mode.c    ****     case 19:
 201:Src/mode.c    ****         control_wall_flag = 0;
 202:Src/mode.c    ****         //TurnBig180_Test(RIGHT);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 5


 203:Src/mode.c    ****         //TurnV90_Test(RIGHT);
 204:Src/mode.c    ****         FastestTurnTest(-1, T_180);
 205:Src/mode.c    ****         break;
 206:Src/mode.c    ****     default:
 207:Src/mode.c    ****         break;
 208:Src/mode.c    ****     }
 209:Src/mode.c    **** }
 210:Src/mode.c    **** 
 211:Src/mode.c    **** char Mode_Select(void)
 212:Src/mode.c    **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 213:Src/mode.c    ****     int8_t mode = 0;
 214:Src/mode.c    ****     uint8_t state = 0;
 215:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 215 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
  42              	.LVL1:
 216:Src/mode.c    ****     accel.z = 0;
  43              		.loc 1 216 0
  44 0006 524B     		ldr	r3, .L34
  45 0008 0022     		movs	r2, #0
  46 000a 9A60     		str	r2, [r3, #8]	@ float
 214:Src/mode.c    ****     Control_ResetVelo();
  47              		.loc 1 214 0
  48 000c 0024     		movs	r4, #0
 213:Src/mode.c    ****     int8_t mode = 0;
  49              		.loc 1 213 0
  50 000e 2546     		mov	r5, r4
  51 0010 50E0     		b	.L18
  52              	.LVL2:
  53              	.L28:
 217:Src/mode.c    **** 
 218:Src/mode.c    ****     while (1)
 219:Src/mode.c    ****     {
 220:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 221:Src/mode.c    ****         {
 222:Src/mode.c    ****             if (gyro_y < -300.0f)
 223:Src/mode.c    ****             {
 224:Src/mode.c    ****                 mode++;
 225:Src/mode.c    ****             }
 226:Src/mode.c    ****             else if (gyro_y > 300.0f)
  54              		.loc 1 226 0
  55 0012 504B     		ldr	r3, .L34+4
  56 0014 93ED007A 		vldr.32	s14, [r3]
  57 0018 DFED4F7A 		vldr.32	s15, .L34+8
  58 001c B4EEE77A 		vcmpe.f32	s14, s15
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 6


  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 65DD     		ble	.L7
 227:Src/mode.c    ****             {
 228:Src/mode.c    ****                 mode--;
  61              		.loc 1 228 0
  62 0026 013D     		subs	r5, r5, #1
  63              	.LVL3:
  64 0028 6DB2     		sxtb	r5, r5
  65              	.LVL4:
  66 002a 62E0     		b	.L7
  67              	.L19:
 229:Src/mode.c    ****             }
 230:Src/mode.c    ****             if (mode > 3)
 231:Src/mode.c    ****             {
 232:Src/mode.c    ****                 mode = 0;
  68              		.loc 1 232 0
  69 002c 0025     		movs	r5, #0
  70              	.LVL5:
  71              	.L9:
 233:Src/mode.c    ****             }
 234:Src/mode.c    ****             else if (mode < 0)
 235:Src/mode.c    ****             {
 236:Src/mode.c    ****                 mode = 3;
 237:Src/mode.c    ****             }
 238:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  72              		.loc 1 238 0
  73 002e 6FF00900 		mvn	r0, #9
  74 0032 00FB05F0 		mul	r0, r0, r5
  75 0036 4FF49671 		mov	r1, #300
  76 003a AA30     		adds	r0, r0, #170
  77 003c FFF7FEFF 		bl	Tim_BuzzerPwm
  78              	.LVL6:
 239:Src/mode.c    ****             HAL_Delay(100);
  79              		.loc 1 239 0
  80 0040 6420     		movs	r0, #100
  81 0042 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL7:
 240:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  83              		.loc 1 240 0
  84 0046 0021     		movs	r1, #0
  85 0048 0A20     		movs	r0, #10
  86 004a FFF7FEFF 		bl	Tim_BuzzerPwm
  87              	.LVL8:
 241:Src/mode.c    ****             HAL_Delay(500);
  88              		.loc 1 241 0
  89 004e 4FF4FA70 		mov	r0, #500
  90 0052 FFF7FEFF 		bl	HAL_Delay
  91              	.LVL9:
  92              	.L3:
 242:Src/mode.c    ****         }
 243:Src/mode.c    ****         if (enc.offset > 20)
  93              		.loc 1 243 0
  94 0056 414B     		ldr	r3, .L34+12
  95 0058 93ED027A 		vldr.32	s14, [r3, #8]
  96 005c F3EE047A 		vmov.f32	s15, #2.0e+1
  97 0060 B4EEE77A 		vcmpe.f32	s14, s15
  98 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 7


  99 0068 4BDD     		ble	.L29
 244:Src/mode.c    ****         {
 245:Src/mode.c    ****             if (state == 16)
 100              		.loc 1 245 0
 101 006a 102C     		cmp	r4, #16
 102 006c 47D0     		beq	.L21
 246:Src/mode.c    ****             {
 247:Src/mode.c    ****                 state = 0;
 248:Src/mode.c    ****             }
 249:Src/mode.c    ****             else
 250:Src/mode.c    ****             {
 251:Src/mode.c    ****                 state += 4;
 103              		.loc 1 251 0
 104 006e 0434     		adds	r4, r4, #4
 105              	.LVL10:
 106 0070 E4B2     		uxtb	r4, r4
 107              	.LVL11:
 108              	.L12:
 252:Src/mode.c    ****             }
 253:Src/mode.c    ****             enc.offset = 0;
 109              		.loc 1 253 0
 110 0072 3A4B     		ldr	r3, .L34+12
 111 0074 0022     		movs	r2, #0
 112 0076 9A60     		str	r2, [r3, #8]	@ float
 113              	.L13:
 254:Src/mode.c    ****         }
 255:Src/mode.c    ****         else if (enc.offset < -20)
 256:Src/mode.c    ****         {
 257:Src/mode.c    ****             if (state == 0)
 258:Src/mode.c    ****             {
 259:Src/mode.c    ****                 state = 16;
 260:Src/mode.c    ****             }
 261:Src/mode.c    ****             else
 262:Src/mode.c    ****             {
 263:Src/mode.c    ****                 state -= 4;
 264:Src/mode.c    ****             }
 265:Src/mode.c    ****             enc.offset = 0;
 266:Src/mode.c    ****         }
 267:Src/mode.c    ****         if (accel.z > 30.0f)
 114              		.loc 1 267 0
 115 0078 354B     		ldr	r3, .L34
 116 007a 93ED027A 		vldr.32	s14, [r3, #8]
 117 007e F3EE0E7A 		vmov.f32	s15, #3.0e+1
 118 0082 B4EEE77A 		vcmpe.f32	s14, s15
 119 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 120 008a 4DDC     		bgt	.L32
 268:Src/mode.c    ****         {
 269:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 270:Src/mode.c    ****             HAL_Delay(100);
 271:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 272:Src/mode.c    ****             HAL_Delay(500);
 273:Src/mode.c    ****             break;
 274:Src/mode.c    ****         }
 275:Src/mode.c    ****         Gpio_FullColor(state % 7);
 121              		.loc 1 275 0
 122 008c 3448     		ldr	r0, .L34+16
 123 008e A0FB0430 		umull	r3, r0, r0, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 8


 124 0092 231A     		subs	r3, r4, r0
 125 0094 00EB5300 		add	r0, r0, r3, lsr #1
 126 0098 8008     		lsrs	r0, r0, #2
 127 009a C0EBC000 		rsb	r0, r0, r0, lsl #3
 128 009e 201A     		subs	r0, r4, r0
 129 00a0 C0B2     		uxtb	r0, r0
 130 00a2 FFF7FEFF 		bl	Gpio_FullColor
 131              	.LVL12:
 276:Src/mode.c    ****         Gpio_SideLed(mode);
 132              		.loc 1 276 0
 133 00a6 E8B2     		uxtb	r0, r5
 134 00a8 FFF7FEFF 		bl	Gpio_SideLed
 135              	.LVL13:
 277:Src/mode.c    ****         printf("%d\r", mode + state);
 136              		.loc 1 277 0
 137 00ac 2919     		adds	r1, r5, r4
 138 00ae 2D48     		ldr	r0, .L34+20
 139 00b0 FFF7FEFF 		bl	printf
 140              	.LVL14:
 141              	.L18:
 220:Src/mode.c    ****         {
 142              		.loc 1 220 0
 143 00b4 274B     		ldr	r3, .L34+4
 144 00b6 93ED007A 		vldr.32	s14, [r3]
 145 00ba DFED277A 		vldr.32	s15, .L34+8
 146 00be B4EEE77A 		vcmpe.f32	s14, s15
 147 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 148 00c6 08DC     		bgt	.L2
 220:Src/mode.c    ****         {
 149              		.loc 1 220 0 is_stmt 0 discriminator 1
 150 00c8 93ED007A 		vldr.32	s14, [r3]
 151 00cc DFED267A 		vldr.32	s15, .L34+24
 152 00d0 B4EEE77A 		vcmpe.f32	s14, s15
 153 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 00d8 BDD5     		bpl	.L3
 155              	.L2:
 222:Src/mode.c    ****             {
 156              		.loc 1 222 0 is_stmt 1
 157 00da 1E4B     		ldr	r3, .L34+4
 158 00dc 93ED007A 		vldr.32	s14, [r3]
 159 00e0 DFED217A 		vldr.32	s15, .L34+24
 160 00e4 B4EEE77A 		vcmpe.f32	s14, s15
 161 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 00ec 91D5     		bpl	.L28
 224:Src/mode.c    ****             }
 163              		.loc 1 224 0
 164 00ee 0135     		adds	r5, r5, #1
 165              	.LVL15:
 166 00f0 6DB2     		sxtb	r5, r5
 167              	.LVL16:
 168              	.L7:
 230:Src/mode.c    ****             {
 169              		.loc 1 230 0
 170 00f2 032D     		cmp	r5, #3
 171 00f4 9ADC     		bgt	.L19
 234:Src/mode.c    ****             {
 172              		.loc 1 234 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 9


 173 00f6 002D     		cmp	r5, #0
 174 00f8 99DA     		bge	.L9
 236:Src/mode.c    ****             }
 175              		.loc 1 236 0
 176 00fa 0325     		movs	r5, #3
 177              	.LVL17:
 178 00fc 97E7     		b	.L9
 179              	.LVL18:
 180              	.L21:
 247:Src/mode.c    ****             }
 181              		.loc 1 247 0
 182 00fe 0024     		movs	r4, #0
 183              	.LVL19:
 184 0100 B7E7     		b	.L12
 185              	.LVL20:
 186              	.L29:
 255:Src/mode.c    ****         {
 187              		.loc 1 255 0
 188 0102 164B     		ldr	r3, .L34+12
 189 0104 93ED027A 		vldr.32	s14, [r3, #8]
 190 0108 FBEE047A 		vmov.f32	s15, #-2.0e+1
 191 010c B4EEE77A 		vcmpe.f32	s14, s15
 192 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193 0114 B0D5     		bpl	.L13
 257:Src/mode.c    ****             {
 194              		.loc 1 257 0
 195 0116 2CB1     		cbz	r4, .L22
 263:Src/mode.c    ****             }
 196              		.loc 1 263 0
 197 0118 043C     		subs	r4, r4, #4
 198              	.LVL21:
 199 011a E4B2     		uxtb	r4, r4
 200              	.LVL22:
 201              	.L15:
 265:Src/mode.c    ****         }
 202              		.loc 1 265 0
 203 011c 0F4B     		ldr	r3, .L34+12
 204 011e 0022     		movs	r2, #0
 205 0120 9A60     		str	r2, [r3, #8]	@ float
 206 0122 A9E7     		b	.L13
 207              	.L22:
 259:Src/mode.c    ****             }
 208              		.loc 1 259 0
 209 0124 1024     		movs	r4, #16
 210              	.LVL23:
 211 0126 F9E7     		b	.L15
 212              	.LVL24:
 213              	.L32:
 269:Src/mode.c    ****             HAL_Delay(100);
 214              		.loc 1 269 0
 215 0128 4FF49671 		mov	r1, #300
 216 012c 4C20     		movs	r0, #76
 217 012e FFF7FEFF 		bl	Tim_BuzzerPwm
 218              	.LVL25:
 270:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 219              		.loc 1 270 0
 220 0132 6420     		movs	r0, #100
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 10


 221 0134 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL26:
 271:Src/mode.c    ****             HAL_Delay(500);
 223              		.loc 1 271 0
 224 0138 0021     		movs	r1, #0
 225 013a 0A20     		movs	r0, #10
 226 013c FFF7FEFF 		bl	Tim_BuzzerPwm
 227              	.LVL27:
 272:Src/mode.c    ****             break;
 228              		.loc 1 272 0
 229 0140 4FF4FA70 		mov	r0, #500
 230 0144 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL28:
 278:Src/mode.c    ****     }
 279:Src/mode.c    ****     return mode + state;
 232              		.loc 1 279 0
 233 0148 2C44     		add	r4, r4, r5
 234              	.LVL29:
 235 014a E0B2     		uxtb	r0, r4
 280:Src/mode.c    **** }
 236              		.loc 1 280 0
 237 014c 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL30:
 239              	.L35:
 240 014e 00BF     		.align	2
 241              	.L34:
 242 0150 00000000 		.word	accel
 243 0154 00000000 		.word	gyro_y
 244 0158 00009643 		.word	1133903872
 245 015c 00000000 		.word	enc
 246 0160 25499224 		.word	613566757
 247 0164 00000000 		.word	.LC0
 248 0168 000096C3 		.word	-1013579776
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.SensorCheck,"ax",%progbits
 253              		.align	1
 254              		.global	SensorCheck
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	SensorCheck:
 261              	.LFB128:
 281:Src/mode.c    **** 
 282:Src/mode.c    **** void SensorCheck(void)
 283:Src/mode.c    **** {
 262              		.loc 1 283 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 11


 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 284:Src/mode.c    ****     Adc_IrSensorStart();
 274              		.loc 1 284 0
 275 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 276              	.LVL31:
 277 0008 2CE0     		b	.L43
 278              	.L48:
 285:Src/mode.c    **** 
 286:Src/mode.c    ****     while (1)
 287:Src/mode.c    ****     {
 288:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 289:Src/mode.c    ****         {
 290:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 279              		.loc 1 290 0
 280 000a 0022     		movs	r2, #0
 281 000c 8021     		movs	r1, #128
 282 000e 2D48     		ldr	r0, .L51
 283 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL32:
 285 0014 2FE0     		b	.L38
 286              	.L49:
 291:Src/mode.c    ****         }
 292:Src/mode.c    ****         else
 293:Src/mode.c    ****         {
 294:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 295:Src/mode.c    ****         }
 296:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 297:Src/mode.c    ****         {
 298:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 287              		.loc 1 298 0
 288 0016 0022     		movs	r2, #0
 289 0018 1021     		movs	r1, #16
 290 001a 2B48     		ldr	r0, .L51+4
 291 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL33:
 293 0020 32E0     		b	.L40
 294              	.L50:
 299:Src/mode.c    ****         }
 300:Src/mode.c    ****         else
 301:Src/mode.c    ****         {
 302:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 303:Src/mode.c    ****         }
 304:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 305:Src/mode.c    ****         {
 306:Src/mode.c    ****             Gpio_FullColor(WHITE);
 295              		.loc 1 306 0
 296 0022 0020     		movs	r0, #0
 297 0024 FFF7FEFF 		bl	Gpio_FullColor
 298              	.LVL34:
 299              	.L42:
 307:Src/mode.c    ****         }
 308:Src/mode.c    ****         else
 309:Src/mode.c    ****         {
 310:Src/mode.c    ****             Gpio_FullColor(DARK);
 311:Src/mode.c    ****         }
 312:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r\n", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now,
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 12


 300              		.loc 1 312 0
 301 0028 284B     		ldr	r3, .L51+8
 302 002a B3F90010 		ldrsh	r1, [r3]
 303 002e 284B     		ldr	r3, .L51+12
 304 0030 B3F90020 		ldrsh	r2, [r3]
 305 0034 274B     		ldr	r3, .L51+16
 306 0036 B3F90030 		ldrsh	r3, [r3]
 307 003a 2748     		ldr	r0, .L51+20
 308 003c B0F90000 		ldrsh	r0, [r0]
 309 0040 264C     		ldr	r4, .L51+24
 310 0042 B4F90040 		ldrsh	r4, [r4]
 311 0046 0194     		str	r4, [sp, #4]
 312 0048 0090     		str	r0, [sp]
 313 004a 2548     		ldr	r0, .L51+28
 314 004c FFF7FEFF 		bl	printf
 315              	.LVL35:
 313:Src/mode.c    **** 
 314:Src/mode.c    ****         if (accel.x > 60)
 316              		.loc 1 314 0
 317 0050 244B     		ldr	r3, .L51+32
 318 0052 93ED007A 		vldr.32	s14, [r3]
 319 0056 DFED247A 		vldr.32	s15, .L51+36
 320 005a B4EEE77A 		vcmpe.f32	s14, s15
 321 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 322 0062 19DC     		bgt	.L47
 323              	.L43:
 288:Src/mode.c    ****         {
 324              		.loc 1 288 0
 325 0064 1D4B     		ldr	r3, .L51+24
 326 0066 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 327 0068 012B     		cmp	r3, #1
 328 006a CED0     		beq	.L48
 294:Src/mode.c    ****         }
 329              		.loc 1 294 0
 330 006c 0122     		movs	r2, #1
 331 006e 8021     		movs	r1, #128
 332 0070 1448     		ldr	r0, .L51
 333 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL36:
 335              	.L38:
 296:Src/mode.c    ****         {
 336              		.loc 1 296 0
 337 0076 154B     		ldr	r3, .L51+8
 338 0078 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 339 007a 012B     		cmp	r3, #1
 340 007c CBD0     		beq	.L49
 302:Src/mode.c    ****         }
 341              		.loc 1 302 0
 342 007e 0122     		movs	r2, #1
 343 0080 1021     		movs	r1, #16
 344 0082 1148     		ldr	r0, .L51+4
 345 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL37:
 347              	.L40:
 304:Src/mode.c    ****         {
 348              		.loc 1 304 0
 349 0088 124B     		ldr	r3, .L51+16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 13


 350 008a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 351 008c 012B     		cmp	r3, #1
 352 008e C8D0     		beq	.L50
 310:Src/mode.c    ****         }
 353              		.loc 1 310 0
 354 0090 0720     		movs	r0, #7
 355 0092 FFF7FEFF 		bl	Gpio_FullColor
 356              	.LVL38:
 357 0096 C7E7     		b	.L42
 358              	.L47:
 315:Src/mode.c    ****         {
 316:Src/mode.c    ****             Adc_IrSensorFinish();
 359              		.loc 1 316 0
 360 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 361              	.LVL39:
 317:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 362              		.loc 1 317 0
 363 009c 4FF49671 		mov	r1, #300
 364 00a0 4C20     		movs	r0, #76
 365 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 366              	.LVL40:
 318:Src/mode.c    ****             HAL_Delay(300);
 367              		.loc 1 318 0
 368 00a6 4FF49670 		mov	r0, #300
 369 00aa FFF7FEFF 		bl	HAL_Delay
 370              	.LVL41:
 319:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 371              		.loc 1 319 0
 372 00ae 0021     		movs	r1, #0
 373 00b0 0A20     		movs	r0, #10
 374 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 375              	.LVL42:
 320:Src/mode.c    ****             HAL_Delay(500);
 376              		.loc 1 320 0
 377 00b6 4FF4FA70 		mov	r0, #500
 378 00ba FFF7FEFF 		bl	HAL_Delay
 379              	.LVL43:
 321:Src/mode.c    ****             break;
 322:Src/mode.c    ****         }
 323:Src/mode.c    ****     }
 324:Src/mode.c    **** }
 380              		.loc 1 324 0
 381 00be 02B0     		add	sp, sp, #8
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 00c0 10BD     		pop	{r4, pc}
 386              	.L52:
 387 00c2 00BF     		.align	2
 388              	.L51:
 389 00c4 00040240 		.word	1073873920
 390 00c8 00000240 		.word	1073872896
 391 00cc 00000000 		.word	sen_l
 392 00d0 00000000 		.word	sen_fl
 393 00d4 00000000 		.word	sen_front
 394 00d8 00000000 		.word	sen_fr
 395 00dc 00000000 		.word	sen_r
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 14


 396 00e0 00000000 		.word	.LC1
 397 00e4 00000000 		.word	accel
 398 00e8 00007042 		.word	1114636288
 399              		.cfi_endproc
 400              	.LFE128:
 402              		.section	.text.SetRunMode,"ax",%progbits
 403              		.align	1
 404              		.global	SetRunMode
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SetRunMode:
 411              	.LFB129:
 325:Src/mode.c    **** 
 326:Src/mode.c    **** void SetRunMode(uint8_t fan_flag)
 327:Src/mode.c    **** {
 412              		.loc 1 327 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL44:
 417 0000 10B5     		push	{r4, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422 0002 0446     		mov	r4, r0
 328:Src/mode.c    ****     Adc_IrSensorStart();
 423              		.loc 1 328 0
 424 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 425              	.LVL45:
 426              	.L54:
 329:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 427              		.loc 1 329 0 discriminator 1
 428 0008 254B     		ldr	r3, .L59
 429 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 430 000c 012B     		cmp	r3, #1
 431 000e FBD1     		bne	.L54
 330:Src/mode.c    ****     {
 331:Src/mode.c    ****     }
 332:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 432              		.loc 1 332 0
 433 0010 4FF49671 		mov	r1, #300
 434 0014 4C20     		movs	r0, #76
 435 0016 FFF7FEFF 		bl	Tim_BuzzerPwm
 436              	.LVL46:
 333:Src/mode.c    ****     HAL_Delay(100);
 437              		.loc 1 333 0
 438 001a 6420     		movs	r0, #100
 439 001c FFF7FEFF 		bl	HAL_Delay
 440              	.LVL47:
 334:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 441              		.loc 1 334 0
 442 0020 0021     		movs	r1, #0
 443 0022 0A20     		movs	r0, #10
 444 0024 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 15


 445              	.LVL48:
 335:Src/mode.c    ****     Gpio_FullColor(DARK);
 446              		.loc 1 335 0
 447 0028 0720     		movs	r0, #7
 448 002a FFF7FEFF 		bl	Gpio_FullColor
 449              	.LVL49:
 336:Src/mode.c    ****     Gpio_SideLed(0);
 450              		.loc 1 336 0
 451 002e 0020     		movs	r0, #0
 452 0030 FFF7FEFF 		bl	Gpio_SideLed
 453              	.LVL50:
 337:Src/mode.c    ****     HAL_Delay(5000);
 454              		.loc 1 337 0
 455 0034 41F28830 		movw	r0, #5000
 456 0038 FFF7FEFF 		bl	HAL_Delay
 457              	.LVL51:
 338:Src/mode.c    ****     Spi_GyroReset();
 458              		.loc 1 338 0
 459 003c FFF7FEFF 		bl	Spi_GyroReset
 460              	.LVL52:
 339:Src/mode.c    ****     HAL_Delay(1200);
 461              		.loc 1 339 0
 462 0040 4FF49660 		mov	r0, #1200
 463 0044 FFF7FEFF 		bl	HAL_Delay
 464              	.LVL53:
 340:Src/mode.c    ****     if (fan_flag == 0)
 465              		.loc 1 340 0
 466 0048 E4B1     		cbz	r4, .L58
 341:Src/mode.c    ****     {
 342:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 343:Src/mode.c    ****         HAL_Delay(100);
 344:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 345:Src/mode.c    ****     }
 346:Src/mode.c    ****     else
 347:Src/mode.c    ****     {
 348:Src/mode.c    ****         Control_SetupStraightPID(4.0f, 11.5f, 0);
 467              		.loc 1 348 0
 468 004a 9FED161A 		vldr.32	s2, .L59+4
 469 004e F2EE070A 		vmov.f32	s1, #1.15e+1
 470 0052 B1EE000A 		vmov.f32	s0, #4.0e+0
 471 0056 FFF7FEFF 		bl	Control_SetupStraightPID
 472              	.LVL54:
 349:Src/mode.c    ****         Control_SetupTurnPID(1.2f, 21.0f, 1.0f);
 473              		.loc 1 349 0
 474 005a B7EE001A 		vmov.f32	s2, #1.0e+0
 475 005e F3EE050A 		vmov.f32	s1, #2.1e+1
 476 0062 9FED110A 		vldr.32	s0, .L59+8
 477 0066 FFF7FEFF 		bl	Control_SetupTurnPID
 478              	.LVL55:
 350:Src/mode.c    ****         //Tim_SetTireRadius(12.37f);
 351:Src/mode.c    ****         Tim_FanPwm(3);
 479              		.loc 1 351 0
 480 006a 0320     		movs	r0, #3
 481 006c FFF7FEFF 		bl	Tim_FanPwm
 482              	.LVL56:
 352:Src/mode.c    ****         HAL_Delay(3000);
 483              		.loc 1 352 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 16


 484 0070 40F6B830 		movw	r0, #3000
 485 0074 FFF7FEFF 		bl	HAL_Delay
 486              	.LVL57:
 487              	.L56:
 353:Src/mode.c    ****     }
 354:Src/mode.c    ****     Control_ResetVelo();
 488              		.loc 1 354 0
 489 0078 FFF7FEFF 		bl	Control_ResetVelo
 490              	.LVL58:
 355:Src/mode.c    ****     motor_flag = TRUE;
 491              		.loc 1 355 0
 492 007c 0B4B     		ldr	r3, .L59+12
 493 007e 0122     		movs	r2, #1
 494 0080 1A70     		strb	r2, [r3]
 356:Src/mode.c    **** }
 495              		.loc 1 356 0
 496 0082 10BD     		pop	{r4, pc}
 497              	.L58:
 342:Src/mode.c    ****         HAL_Delay(100);
 498              		.loc 1 342 0
 499 0084 4FF49671 		mov	r1, #300
 500 0088 4C20     		movs	r0, #76
 501 008a FFF7FEFF 		bl	Tim_BuzzerPwm
 502              	.LVL59:
 343:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 503              		.loc 1 343 0
 504 008e 6420     		movs	r0, #100
 505 0090 FFF7FEFF 		bl	HAL_Delay
 506              	.LVL60:
 344:Src/mode.c    ****     }
 507              		.loc 1 344 0
 508 0094 0021     		movs	r1, #0
 509 0096 0A20     		movs	r0, #10
 510 0098 FFF7FEFF 		bl	Tim_BuzzerPwm
 511              	.LVL61:
 512 009c ECE7     		b	.L56
 513              	.L60:
 514 009e 00BF     		.align	2
 515              	.L59:
 516 00a0 00000000 		.word	sen_front
 517 00a4 00000000 		.word	0
 518 00a8 9A99993F 		.word	1067030938
 519 00ac 00000000 		.word	motor_flag
 520              		.cfi_endproc
 521              	.LFE129:
 523              		.section	.text.Get_WallData,"ax",%progbits
 524              		.align	1
 525              		.global	Get_WallData
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	Get_WallData:
 532              	.LFB130:
 357:Src/mode.c    **** 
 358:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 359:Src/mode.c    **** {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 17


 533              		.loc 1 359 0
 534              		.cfi_startproc
 535              		@ args = 12, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL62:
 539 0000 10B4     		push	{r4}
 540              	.LCFI5:
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 4, -4
 543 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 360:Src/mode.c    ****     // 方向別に壁の状態を取得
 361:Src/mode.c    ****     switch (direction)
 544              		.loc 1 361 0
 545 0006 032C     		cmp	r4, #3
 546 0008 0ED8     		bhi	.L61
 547 000a DFE804F0 		tbb	[pc, r4]
 548              	.L64:
 549 000e 02       		.byte	(.L63-.L64)/2
 550 000f 28       		.byte	(.L65-.L64)/2
 551 0010 1C       		.byte	(.L66-.L64)/2
 552 0011 10       		.byte	(.L67-.L64)/2
 553              		.p2align 1
 554              	.L63:
 362:Src/mode.c    ****     {
 363:Src/mode.c    ****     case NORTH:
 364:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 555              		.loc 1 364 0
 556 0012 194C     		ldr	r4, .L69
 557 0014 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 558 0016 0470     		strb	r4, [r0]
 365:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 559              		.loc 1 365 0
 560 0018 1848     		ldr	r0, .L69+4
 561              	.LVL63:
 562 001a 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 563 001c 0870     		strb	r0, [r1]
 366:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 564              		.loc 1 366 0
 565 001e 1849     		ldr	r1, .L69+8
 566              	.LVL64:
 567 0020 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 568 0022 1170     		strb	r1, [r2]
 367:Src/mode.c    ****         *s_wall = 0;
 569              		.loc 1 367 0
 570 0024 0022     		movs	r2, #0
 571              	.LVL65:
 572 0026 1A70     		strb	r2, [r3]
 573              	.LVL66:
 574              	.L61:
 368:Src/mode.c    ****         break;
 369:Src/mode.c    ****     case EAST:
 370:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 371:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 372:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 373:Src/mode.c    ****         *w_wall = 0;
 374:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 18


 375:Src/mode.c    ****     case SOUTH:
 376:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 377:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 378:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 379:Src/mode.c    ****         *n_wall = 0;
 380:Src/mode.c    ****         break;
 381:Src/mode.c    ****     case WEST:
 382:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 383:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 384:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 385:Src/mode.c    ****         *e_wall = 0;
 386:Src/mode.c    ****         break;
 387:Src/mode.c    ****     default:
 388:Src/mode.c    ****         break;
 389:Src/mode.c    ****     }
 390:Src/mode.c    **** }
 575              		.loc 1 390 0
 576 0028 5DF8044B 		ldr	r4, [sp], #4
 577              	.LCFI6:
 578              		.cfi_remember_state
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581              	.LVL67:
 582 002c 7047     		bx	lr
 583              	.LVL68:
 584              	.L67:
 585              	.LCFI7:
 586              		.cfi_restore_state
 370:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 587              		.loc 1 370 0
 588 002e 124C     		ldr	r4, .L69
 589 0030 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 590 0032 0C70     		strb	r4, [r1]
 371:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 591              		.loc 1 371 0
 592 0034 1149     		ldr	r1, .L69+4
 593              	.LVL69:
 594 0036 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 595 0038 1970     		strb	r1, [r3]
 372:Src/mode.c    ****         *w_wall = 0;
 596              		.loc 1 372 0
 597 003a 114B     		ldr	r3, .L69+8
 598              	.LVL70:
 599 003c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 600 003e 0370     		strb	r3, [r0]
 373:Src/mode.c    ****         break;
 601              		.loc 1 373 0
 602 0040 0023     		movs	r3, #0
 603 0042 1370     		strb	r3, [r2]
 374:Src/mode.c    ****     case SOUTH:
 604              		.loc 1 374 0
 605 0044 F0E7     		b	.L61
 606              	.LVL71:
 607              	.L66:
 376:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 608              		.loc 1 376 0
 609 0046 0C4C     		ldr	r4, .L69
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 19


 610 0048 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 611 004a 1C70     		strb	r4, [r3]
 377:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 612              		.loc 1 377 0
 613 004c 0B4B     		ldr	r3, .L69+4
 614              	.LVL72:
 615 004e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 616 0050 1370     		strb	r3, [r2]
 378:Src/mode.c    ****         *n_wall = 0;
 617              		.loc 1 378 0
 618 0052 0B4B     		ldr	r3, .L69+8
 619 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 620 0056 0B70     		strb	r3, [r1]
 379:Src/mode.c    ****         break;
 621              		.loc 1 379 0
 622 0058 0023     		movs	r3, #0
 623 005a 0370     		strb	r3, [r0]
 380:Src/mode.c    ****     case WEST:
 624              		.loc 1 380 0
 625 005c E4E7     		b	.L61
 626              	.LVL73:
 627              	.L65:
 382:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 628              		.loc 1 382 0
 629 005e 064C     		ldr	r4, .L69
 630 0060 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 631 0062 1470     		strb	r4, [r2]
 383:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 632              		.loc 1 383 0
 633 0064 054A     		ldr	r2, .L69+4
 634              	.LVL74:
 635 0066 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 636 0068 0270     		strb	r2, [r0]
 384:Src/mode.c    ****         *e_wall = 0;
 637              		.loc 1 384 0
 638 006a 054A     		ldr	r2, .L69+8
 639 006c 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 640 006e 1A70     		strb	r2, [r3]
 385:Src/mode.c    ****         break;
 641              		.loc 1 385 0
 642 0070 0023     		movs	r3, #0
 643              	.LVL75:
 644 0072 0B70     		strb	r3, [r1]
 645              		.loc 1 390 0
 646 0074 D8E7     		b	.L61
 647              	.L70:
 648 0076 00BF     		.align	2
 649              	.L69:
 650 0078 00000000 		.word	sen_front
 651 007c 00000000 		.word	sen_r
 652 0080 00000000 		.word	sen_l
 653              		.cfi_endproc
 654              	.LFE130:
 656              		.section	.text.SearchRun,"ax",%progbits
 657              		.align	1
 658              		.global	SearchRun
 659              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 20


 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	SearchRun:
 665              	.LFB131:
 391:Src/mode.c    **** 
 392:Src/mode.c    **** void SearchRun(void)
 393:Src/mode.c    **** {
 666              		.loc 1 393 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 288
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 671              	.LCFI8:
 672              		.cfi_def_cfa_offset 20
 673              		.cfi_offset 4, -20
 674              		.cfi_offset 5, -16
 675              		.cfi_offset 6, -12
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 CDB0     		sub	sp, sp, #308
 679              	.LCFI9:
 680              		.cfi_def_cfa_offset 328
 394:Src/mode.c    ****     //壁情報を持った構造体を定義
 395:Src/mode.c    ****     wallData_t wall_data;
 396:Src/mode.c    ****     wallData_t wall_data_fast;
 397:Src/mode.c    **** 
 398:Src/mode.c    ****     //ポジションを定義、初期化
 399:Src/mode.c    ****     pos_t mypos;
 400:Src/mode.c    ****     mypos.dir = 0;
 681              		.loc 1 400 0
 682 0004 0024     		movs	r4, #0
 683 0006 8DF81E40 		strb	r4, [sp, #30]
 401:Src/mode.c    ****     mypos.x = 0;
 684              		.loc 1 401 0
 685 000a 8DF81C40 		strb	r4, [sp, #28]
 402:Src/mode.c    ****     mypos.y = 1;
 686              		.loc 1 402 0
 687 000e 0125     		movs	r5, #1
 688 0010 8DF81D50 		strb	r5, [sp, #29]
 403:Src/mode.c    **** 
 404:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 405:Src/mode.c    ****     Map_Init(&wall_data);
 689              		.loc 1 405 0
 690 0014 2AA8     		add	r0, sp, #168
 691 0016 FFF7FEFF 		bl	Map_Init
 692              	.LVL76:
 406:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 693              		.loc 1 406 0
 694 001a 08A8     		add	r0, sp, #32
 695 001c FFF7FEFF 		bl	Map_InitFast
 696              	.LVL77:
 407:Src/mode.c    **** 
 408:Src/mode.c    ****     //歩数マップの作製
 409:Src/mode.c    ****     uint16_t nextdir = FRONT;
 410:Src/mode.c    ****     //最初の区画は進んでいるものとする
 411:Src/mode.c    ****     unsigned char flag_goal = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 21


 697              		.loc 1 411 0
 698 0020 8DF81B40 		strb	r4, [sp, #27]
 412:Src/mode.c    ****     //enable control side wall
 413:Src/mode.c    ****     control_wall_flag = 1;
 699              		.loc 1 413 0
 700 0024 984B     		ldr	r3, .L82
 701 0026 1D70     		strb	r5, [r3]
 414:Src/mode.c    ****     //counter set
 415:Src/mode.c    ****     counter_s = 0;
 702              		.loc 1 415 0
 703 0028 984B     		ldr	r3, .L82+4
 704 002a 1C70     		strb	r4, [r3]
 416:Src/mode.c    ****     Control_WallEdgeSet(walledge_search);
 705              		.loc 1 416 0
 706 002c 984B     		ldr	r3, .L82+8
 707 002e 03F11002 		add	r2, r3, #16
 708 0032 92E80300 		ldm	r2, {r0, r1}
 709 0036 8DE80300 		stm	sp, {r0, r1}
 710 003a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 711 003c FFF7FEFF 		bl	Control_WallEdgeSet
 712              	.LVL78:
 417:Src/mode.c    ****     SetRunMode(0);
 713              		.loc 1 417 0
 714 0040 2046     		mov	r0, r4
 715 0042 FFF7FEFF 		bl	SetRunMode
 716              	.LVL79:
 418:Src/mode.c    ****     Motion_Start();
 717              		.loc 1 418 0
 718 0046 FFF7FEFF 		bl	Motion_Start
 719              	.LVL80:
 720 004a 81E0     		b	.L77
 721              	.LVL81:
 722              	.L80:
 723              	.LBB2:
 419:Src/mode.c    ****     while (1)
 420:Src/mode.c    ****     {
 421:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 422:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 423:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 424:Src/mode.c    **** 
 425:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 426:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 427:Src/mode.c    ****         Map_AddUnknownWall(mypos.x,mypos.y,&wall_data,Maze_GetGoalSize(),gx,gy);
 428:Src/mode.c    **** 
 429:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 430:Src/mode.c    **** 
 431:Src/mode.c    ****         if(flag_goal==0 && Maze_GetStep(mypos.x,mypos.y)==MAX_STEP){
 724              		.loc 1 431 0 discriminator 1
 725 004c 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2
 726 0050 9DF81C00 		ldrb	r0, [sp, #28]	@ zero_extendqisi2
 727 0054 FFF7FEFF 		bl	Maze_GetStep
 728              	.LVL82:
 729 0058 FF28     		cmp	r0, #255
 730 005a 40F0CE80 		bne	.L72
 432:Src/mode.c    ****             Maze_ResetWall(&wall_data,mypos);
 731              		.loc 1 432 0
 732 005e 0799     		ldr	r1, [sp, #28]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 22


 733 0060 2AA8     		add	r0, sp, #168
 734 0062 FFF7FEFF 		bl	Maze_ResetWall
 735              	.LVL83:
 736 0066 C8E0     		b	.L72
 737              	.L81:
 433:Src/mode.c    ****         }
 434:Src/mode.c    ****         
 435:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 436:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 437:Src/mode.c    ****         Maze_UnknownStepAccel(&mypos,&wall_data,nextdir);
 438:Src/mode.c    ****         //Maze_UpdatePosition(nextdir, &mypos);
 439:Src/mode.c    ****         Motion_Switch(nextdir);
 440:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 738              		.loc 1 440 0 discriminator 1
 739 0068 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 740 006c 8949     		ldr	r1, .L82+12
 741 006e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 742 0070 8A42     		cmp	r2, r1
 743 0072 40F0DB80 		bne	.L73
 441:Src/mode.c    ****         {
 442:Src/mode.c    ****             if (flag_goal == 0)
 744              		.loc 1 442 0
 745 0076 9DF81B10 		ldrb	r1, [sp, #27]	@ zero_extendqisi2
 746 007a 0029     		cmp	r1, #0
 747 007c 40F0D680 		bne	.L73
 443:Src/mode.c    ****             {
 444:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 748              		.loc 1 444 0
 749 0080 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 750 0084 0291     		str	r1, [sp, #8]
 751 0086 0192     		str	r2, [sp, #4]
 752 0088 0093     		str	r3, [sp]
 753 008a 0DF11A03 		add	r3, sp, #26
 754 008e 0DF11902 		add	r2, sp, #25
 755 0092 06A9     		add	r1, sp, #24
 756 0094 0DF11700 		add	r0, sp, #23
 757 0098 FFF7FEFF 		bl	Get_WallData
 758              	.LVL84:
 445:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 759              		.loc 1 445 0
 760 009c 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 761 00a0 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 762 00a4 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 763 00a8 0191     		str	r1, [sp, #4]
 764 00aa 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 765 00ae 0091     		str	r1, [sp]
 766 00b0 07A9     		add	r1, sp, #28
 767 00b2 2AA8     		add	r0, sp, #168
 768 00b4 FFF7FEFF 		bl	Map_addWall
 769              	.LVL85:
 446:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 770              		.loc 1 446 0
 771 00b8 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 772 00bc 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 773 00c0 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 774 00c4 0191     		str	r1, [sp, #4]
 775 00c6 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 23


 776 00ca 0091     		str	r1, [sp]
 777 00cc 07A9     		add	r1, sp, #28
 778 00ce 08A8     		add	r0, sp, #32
 779 00d0 FFF7FEFF 		bl	Map_DelWall
 780              	.LVL86:
 447:Src/mode.c    ****                 Motion_End();
 781              		.loc 1 447 0
 782 00d4 FFF7FEFF 		bl	Motion_End
 783              	.LVL87:
 448:Src/mode.c    ****                 motor_flag = FALSE;
 784              		.loc 1 448 0
 785 00d8 0024     		movs	r4, #0
 786 00da 6F4B     		ldr	r3, .L82+16
 787 00dc 1C70     		strb	r4, [r3]
 449:Src/mode.c    ****                 flag_goal = 1;
 788              		.loc 1 449 0
 789 00de 0123     		movs	r3, #1
 790 00e0 8DF81B30 		strb	r3, [sp, #27]
 450:Src/mode.c    ****                 HAL_Delay(1000);
 791              		.loc 1 450 0
 792 00e4 4FF47A70 		mov	r0, #1000
 793 00e8 FFF7FEFF 		bl	HAL_Delay
 794              	.LVL88:
 451:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 795              		.loc 1 451 0
 796 00ec 8822     		movs	r2, #136
 797 00ee 08A9     		add	r1, sp, #32
 798 00f0 6A4B     		ldr	r3, .L82+20
 799 00f2 1868     		ldr	r0, [r3]
 800 00f4 FFF7FEFF 		bl	Flash_Write
 801              	.LVL89:
 452:Src/mode.c    ****                 HAL_Delay(2000);
 802              		.loc 1 452 0
 803 00f8 4FF4FA60 		mov	r0, #2000
 804 00fc FFF7FEFF 		bl	HAL_Delay
 805              	.LVL90:
 453:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 806              		.loc 1 453 0
 807 0100 4FF49671 		mov	r1, #300
 808 0104 5B20     		movs	r0, #91
 809 0106 FFF7FEFF 		bl	Tim_BuzzerPwm
 810              	.LVL91:
 454:Src/mode.c    ****                 HAL_Delay(200);
 811              		.loc 1 454 0
 812 010a C820     		movs	r0, #200
 813 010c FFF7FEFF 		bl	HAL_Delay
 814              	.LVL92:
 455:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 815              		.loc 1 455 0
 816 0110 2146     		mov	r1, r4
 817 0112 0A20     		movs	r0, #10
 818 0114 FFF7FEFF 		bl	Tim_BuzzerPwm
 819              	.LVL93:
 456:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 820              		.loc 1 456 0
 821 0118 614B     		ldr	r3, .L82+24
 822 011a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 24


 823 011c 53B9     		cbnz	r3, .L74
 824              	.LVL94:
 457:Src/mode.c    ****                 {
 458:Src/mode.c    ****                     nextdir = FRONT;
 459:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 825              		.loc 1 459 0
 826 011e 07A9     		add	r1, sp, #28
 827 0120 2046     		mov	r0, r4
 828 0122 FFF7FEFF 		bl	Maze_UpdatePosition
 829              	.LVL95:
 460:Src/mode.c    ****                     motor_flag = TRUE;
 830              		.loc 1 460 0
 831 0126 5C4B     		ldr	r3, .L82+16
 832 0128 0122     		movs	r2, #1
 833 012a 1A70     		strb	r2, [r3]
 461:Src/mode.c    ****                     Motion_Restart(FALSE);
 834              		.loc 1 461 0
 835 012c 2046     		mov	r0, r4
 836 012e FFF7FEFF 		bl	Motion_Restart
 837              	.LVL96:
 838 0132 7BE0     		b	.L73
 839              	.LVL97:
 840              	.L74:
 462:Src/mode.c    ****                 }
 463:Src/mode.c    ****                 else
 464:Src/mode.c    ****                 {
 465:Src/mode.c    ****                     nextdir = PIVO_REAR;
 466:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 841              		.loc 1 466 0
 842 0134 07A9     		add	r1, sp, #28
 843 0136 0420     		movs	r0, #4
 844 0138 FFF7FEFF 		bl	Maze_UpdatePosition
 845              	.LVL98:
 467:Src/mode.c    ****                     motor_flag = TRUE;
 846              		.loc 1 467 0
 847 013c 0120     		movs	r0, #1
 848 013e 564B     		ldr	r3, .L82+16
 849 0140 1870     		strb	r0, [r3]
 468:Src/mode.c    ****                     Motion_Restart(TRUE);
 850              		.loc 1 468 0
 851 0142 FFF7FEFF 		bl	Motion_Restart
 852              	.LVL99:
 853 0146 71E0     		b	.L73
 854              	.LVL100:
 855              	.L75:
 469:Src/mode.c    ****                 }
 470:Src/mode.c    ****             }
 471:Src/mode.c    ****         }
 472:Src/mode.c    ****         if (counter_s > 150 && flag_goal == 1)
 473:Src/mode.c    ****         {
 474:Src/mode.c    ****             flag_goal = 2;
 475:Src/mode.c    ****         }
 476:Src/mode.c    ****         if (flag_goal == 2)
 856              		.loc 1 476 0
 857 0148 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 858 014c 022B     		cmp	r3, #2
 859 014e 79D0     		beq	.L79
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 25


 860              	.L77:
 421:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 861              		.loc 1 421 0
 862 0150 0023     		movs	r3, #0
 863 0152 8DF81730 		strb	r3, [sp, #23]
 864 0156 8DF81830 		strb	r3, [sp, #24]
 865 015a 8DF81930 		strb	r3, [sp, #25]
 866 015e 8DF81A30 		strb	r3, [sp, #26]
 423:Src/mode.c    **** 
 867              		.loc 1 423 0
 868 0162 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 869 0166 0293     		str	r3, [sp, #8]
 870 0168 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 871 016c 0193     		str	r3, [sp, #4]
 872 016e 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 873 0172 0093     		str	r3, [sp]
 874 0174 0DF11A03 		add	r3, sp, #26
 875 0178 0DF11902 		add	r2, sp, #25
 876 017c 06A9     		add	r1, sp, #24
 877 017e 0DF11700 		add	r0, sp, #23
 878 0182 FFF7FEFF 		bl	Get_WallData
 879              	.LVL101:
 425:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 880              		.loc 1 425 0
 881 0186 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 882 018a 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 883 018e 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 884 0192 0191     		str	r1, [sp, #4]
 885 0194 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 886 0198 0091     		str	r1, [sp]
 887 019a 07A9     		add	r1, sp, #28
 888 019c 2AA8     		add	r0, sp, #168
 889 019e FFF7FEFF 		bl	Map_addWall
 890              	.LVL102:
 426:Src/mode.c    ****         Map_AddUnknownWall(mypos.x,mypos.y,&wall_data,Maze_GetGoalSize(),gx,gy);
 891              		.loc 1 426 0
 892 01a2 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 893 01a6 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 894 01aa 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 895 01ae 0191     		str	r1, [sp, #4]
 896 01b0 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 897 01b4 0091     		str	r1, [sp]
 898 01b6 07A9     		add	r1, sp, #28
 899 01b8 08A8     		add	r0, sp, #32
 900 01ba FFF7FEFF 		bl	Map_DelWall
 901              	.LVL103:
 427:Src/mode.c    **** 
 902              		.loc 1 427 0
 903 01be 9DF81C60 		ldrb	r6, [sp, #28]	@ zero_extendqisi2
 904 01c2 9DF81D70 		ldrb	r7, [sp, #29]	@ zero_extendqisi2
 905 01c6 FFF7FEFF 		bl	Maze_GetGoalSize
 906              	.LVL104:
 907 01ca 324D     		ldr	r5, .L82+12
 908 01cc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 909 01ce 0193     		str	r3, [sp, #4]
 910 01d0 344C     		ldr	r4, .L82+28
 911 01d2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 26


 912 01d4 0093     		str	r3, [sp]
 913 01d6 0346     		mov	r3, r0
 914 01d8 2AAA     		add	r2, sp, #168
 915 01da 3946     		mov	r1, r7
 916 01dc 3046     		mov	r0, r6
 917 01de FFF7FEFF 		bl	Map_AddUnknownWall
 918              	.LVL105:
 429:Src/mode.c    **** 
 919              		.loc 1 429 0
 920 01e2 2AAB     		add	r3, sp, #168
 921 01e4 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 922 01e6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 923 01e8 0DF11B00 		add	r0, sp, #27
 924 01ec FFF7FEFF 		bl	Maze_UpdateStepMap
 925              	.LVL106:
 431:Src/mode.c    ****             Maze_ResetWall(&wall_data,mypos);
 926              		.loc 1 431 0
 927 01f0 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 928 01f4 002B     		cmp	r3, #0
 929 01f6 3FF429AF 		beq	.L80
 930              	.L72:
 435:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 931              		.loc 1 435 0
 932 01fa 2AA9     		add	r1, sp, #168
 933 01fc 07A8     		add	r0, sp, #28
 934 01fe FFF7FEFF 		bl	Maze_GetNextMotion
 935              	.LVL107:
 436:Src/mode.c    ****         Maze_UnknownStepAccel(&mypos,&wall_data,nextdir);
 936              		.loc 1 436 0
 937 0202 82B2     		uxth	r2, r0
 938 0204 2AA9     		add	r1, sp, #168
 939 0206 07A8     		add	r0, sp, #28
 940              	.LVL108:
 941 0208 FFF7FEFF 		bl	Maze_KnownStepAccel
 942              	.LVL109:
 943 020c 0446     		mov	r4, r0
 944              	.LVL110:
 437:Src/mode.c    ****         //Maze_UpdatePosition(nextdir, &mypos);
 945              		.loc 1 437 0
 946 020e 0246     		mov	r2, r0
 947 0210 2AA9     		add	r1, sp, #168
 948 0212 07A8     		add	r0, sp, #28
 949              	.LVL111:
 950 0214 FFF7FEFF 		bl	Maze_UnknownStepAccel
 951              	.LVL112:
 439:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 952              		.loc 1 439 0
 953 0218 E0B2     		uxtb	r0, r4
 954 021a FFF7FEFF 		bl	Motion_Switch
 955              	.LVL113:
 440:Src/mode.c    ****         {
 956              		.loc 1 440 0
 957 021e 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 958 0222 204A     		ldr	r2, .L82+28
 959 0224 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 960 0226 9342     		cmp	r3, r2
 961 0228 3FF41EAF 		beq	.L81
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 27


 962              	.L73:
 472:Src/mode.c    ****         {
 963              		.loc 1 472 0
 964 022c 174B     		ldr	r3, .L82+4
 965 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 966 0230 962B     		cmp	r3, #150
 967 0232 89D9     		bls	.L75
 472:Src/mode.c    ****         {
 968              		.loc 1 472 0 is_stmt 0 discriminator 1
 969 0234 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 970 0238 012B     		cmp	r3, #1
 971 023a 85D1     		bne	.L75
 474:Src/mode.c    ****         }
 972              		.loc 1 474 0 is_stmt 1
 973 023c 0223     		movs	r3, #2
 974 023e 8DF81B30 		strb	r3, [sp, #27]
 975 0242 81E7     		b	.L75
 976              	.L79:
 477:Src/mode.c    ****         {
 478:Src/mode.c    ****             Motion_End();
 977              		.loc 1 478 0
 978 0244 FFF7FEFF 		bl	Motion_End
 979              	.LVL114:
 479:Src/mode.c    ****             motor_flag = FALSE;
 980              		.loc 1 479 0
 981 0248 0024     		movs	r4, #0
 982 024a 134B     		ldr	r3, .L82+16
 983 024c 1C70     		strb	r4, [r3]
 480:Src/mode.c    ****             HAL_Delay(1000);
 984              		.loc 1 480 0
 985 024e 4FF47A70 		mov	r0, #1000
 986 0252 FFF7FEFF 		bl	HAL_Delay
 987              	.LVL115:
 481:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 988              		.loc 1 481 0
 989 0256 8822     		movs	r2, #136
 990 0258 08A9     		add	r1, sp, #32
 991 025a 104B     		ldr	r3, .L82+20
 992 025c 1868     		ldr	r0, [r3]
 993 025e FFF7FEFF 		bl	Flash_Write
 994              	.LVL116:
 482:Src/mode.c    ****             HAL_Delay(2000);
 995              		.loc 1 482 0
 996 0262 4FF4FA60 		mov	r0, #2000
 997 0266 FFF7FEFF 		bl	HAL_Delay
 998              	.LVL117:
 483:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 999              		.loc 1 483 0
 1000 026a 4FF49671 		mov	r1, #300
 1001 026e 5B20     		movs	r0, #91
 1002 0270 FFF7FEFF 		bl	Tim_BuzzerPwm
 1003              	.LVL118:
 484:Src/mode.c    ****             HAL_Delay(200);
 1004              		.loc 1 484 0
 1005 0274 C820     		movs	r0, #200
 1006 0276 FFF7FEFF 		bl	HAL_Delay
 1007              	.LVL119:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 28


 485:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 1008              		.loc 1 485 0
 1009 027a 2146     		mov	r1, r4
 1010 027c 0A20     		movs	r0, #10
 1011 027e FFF7FEFF 		bl	Tim_BuzzerPwm
 1012              	.LVL120:
 1013              	.LBE2:
 486:Src/mode.c    ****             break;
 487:Src/mode.c    ****         }
 488:Src/mode.c    ****     }
 489:Src/mode.c    **** }
 1014              		.loc 1 489 0
 1015 0282 4DB0     		add	sp, sp, #308
 1016              	.LCFI10:
 1017              		.cfi_def_cfa_offset 20
 1018              		@ sp needed
 1019 0284 F0BD     		pop	{r4, r5, r6, r7, pc}
 1020              	.L83:
 1021 0286 00BF     		.align	2
 1022              	.L82:
 1023 0288 00000000 		.word	control_wall_flag
 1024 028c 00000000 		.word	counter_s
 1025 0290 00000000 		.word	.LANCHOR0
 1026 0294 00000000 		.word	.LANCHOR1
 1027 0298 00000000 		.word	motor_flag
 1028 029c 00000000 		.word	start_address
 1029 02a0 00000000 		.word	sen_front
 1030 02a4 00000000 		.word	.LANCHOR2
 1031              		.cfi_endproc
 1032              	.LFE131:
 1034              		.section	.text.Mode_FastRun,"ax",%progbits
 1035              		.align	1
 1036              		.global	Mode_FastRun
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1040              		.fpu fpv4-sp-d16
 1042              	Mode_FastRun:
 1043              	.LFB132:
 490:Src/mode.c    **** 
 491:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn)
 492:Src/mode.c    **** {
 1044              		.loc 1 492 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 1680
 1047              		@ frame_needed = 0, uses_anonymous_args = 0
 1048              	.LVL121:
 1049 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1050              	.LCFI11:
 1051              		.cfi_def_cfa_offset 20
 1052              		.cfi_offset 4, -20
 1053              		.cfi_offset 5, -16
 1054              		.cfi_offset 6, -12
 1055              		.cfi_offset 7, -8
 1056              		.cfi_offset 14, -4
 1057 0002 2DED028B 		vpush.64	{d8}
 1058              	.LCFI12:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 29


 1059              		.cfi_def_cfa_offset 28
 1060              		.cfi_offset 80, -28
 1061              		.cfi_offset 81, -24
 1062 0006 ADF29C6D 		subw	sp, sp, #1692
 1063              	.LCFI13:
 1064              		.cfi_def_cfa_offset 1720
 1065 000a 0446     		mov	r4, r0
 1066 000c B0EE408A 		vmov.f32	s16, s0
 1067 0010 0E46     		mov	r6, r1
 1068 0012 1746     		mov	r7, r2
 493:Src/mode.c    ****     wallData_t wallData;
 494:Src/mode.c    ****     pos_t pos;
 495:Src/mode.c    ****     uint16_t motion[255];
 496:Src/mode.c    ****     uint32_t velocity[255];
 497:Src/mode.c    ****     uint8_t tail = 0;
 1069              		.loc 1 497 0
 1070 0014 0025     		movs	r5, #0
 1071 0016 8DF80F50 		strb	r5, [sp, #15]
 1072              	.LVL122:
 498:Src/mode.c    ****     uint8_t head = 0;
 499:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 1073              		.loc 1 499 0
 1074 001a 8822     		movs	r2, #136
 1075              	.LVL123:
 1076 001c 0DF5C261 		add	r1, sp, #1552
 1077              	.LVL124:
 1078 0020 AA4B     		ldr	r3, .L113
 1079 0022 1868     		ldr	r0, [r3]
 1080              	.LVL125:
 1081 0024 FFF7FEFF 		bl	Flash_Load
 1082              	.LVL126:
 500:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 1083              		.loc 1 500 0
 1084 0028 A94B     		ldr	r3, .L113+4
 1085 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 002c A94A     		ldr	r2, .L113+8
 1087 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1088 0030 0092     		str	r2, [sp]
 1089 0032 3A46     		mov	r2, r7
 1090 0034 3146     		mov	r1, r6
 1091 0036 0DF5C260 		add	r0, sp, #1552
 1092 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1093              	.LVL127:
 501:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1094              		.loc 1 501 0
 1095 003e B0EE480A 		vmov.f32	s0, s16
 1096 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1097              	.LVL128:
 502:Src/mode.c    ****     Control_WallEdgeSet(walledge_800);
 1098              		.loc 1 502 0
 1099 0046 A44B     		ldr	r3, .L113+12
 1100 0048 03F11002 		add	r2, r3, #16
 1101 004c 92E80300 		ldm	r2, {r0, r1}
 1102 0050 8DE80300 		stm	sp, {r0, r1}
 1103 0054 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1104 0056 FFF7FEFF 		bl	Control_WallEdgeSet
 1105              	.LVL129:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 30


 503:Src/mode.c    ****     pos.dir = NORTH;
 1106              		.loc 1 503 0
 1107 005a 8DF80E56 		strb	r5, [sp, #1550]
 504:Src/mode.c    ****     pos.x = 0;
 1108              		.loc 1 504 0
 1109 005e 8DF80C56 		strb	r5, [sp, #1548]
 505:Src/mode.c    ****     pos.y = 1;
 1110              		.loc 1 505 0
 1111 0062 0123     		movs	r3, #1
 1112 0064 8DF80D36 		strb	r3, [sp, #1549]
 506:Src/mode.c    ****     motion[tail] = START;
 1113              		.loc 1 506 0
 1114 0068 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1115 006c 0DF20C42 		addw	r2, sp, #1036
 1116 0070 0521     		movs	r1, #5
 1117 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 507:Src/mode.c    ****     tail++;
 1118              		.loc 1 507 0
 1119 0076 0133     		adds	r3, r3, #1
 1120 0078 DBB2     		uxtb	r3, r3
 508:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1121              		.loc 1 508 0
 1122 007a 1021     		movs	r1, #16
 1123 007c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 509:Src/mode.c    ****     tail++;
 1124              		.loc 1 509 0
 1125 0080 0133     		adds	r3, r3, #1
 1126 0082 8DF80F30 		strb	r3, [sp, #15]
 1127              	.LVL130:
 1128 0086 1AE0     		b	.L91
 1129              	.L108:
 1130              	.LBB3:
 510:Src/mode.c    ****     head += 2;
 511:Src/mode.c    ****     while (1)
 512:Src/mode.c    ****     {
 513:Src/mode.c    ****         if (Maze_GetGoalSize() == 1)
 514:Src/mode.c    ****         {
 515:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 1131              		.loc 1 515 0
 1132 0088 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1133 008c 904B     		ldr	r3, .L113+4
 1134 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 0090 9A42     		cmp	r2, r3
 1136 0092 2DD0     		beq	.L107
 1137              	.L86:
 516:Src/mode.c    ****             {
 517:Src/mode.c    ****                 break;
 518:Src/mode.c    ****             }
 519:Src/mode.c    ****         }
 520:Src/mode.c    ****         else
 521:Src/mode.c    ****         {
 522:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 523:Src/mode.c    ****             {
 524:Src/mode.c    ****                 break;
 525:Src/mode.c    ****             }
 526:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == gy)
 527:Src/mode.c    ****             {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 31


 528:Src/mode.c    ****                 break;
 529:Src/mode.c    ****             }
 530:Src/mode.c    ****             if (pos.x == gx && pos.y == (gy + 1))
 531:Src/mode.c    ****             {
 532:Src/mode.c    ****                 break;
 533:Src/mode.c    ****             }
 534:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == (gy + 1))
 535:Src/mode.c    ****             {
 536:Src/mode.c    ****                 break;
 537:Src/mode.c    ****             }
 538:Src/mode.c    ****         }
 539:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1138              		.loc 1 539 0
 1139 0094 0DF5C261 		add	r1, sp, #1552
 1140 0098 0DF20C60 		addw	r0, sp, #1548
 1141 009c FFF7FEFF 		bl	Maze_GetNextMotionEx
 1142              	.LVL131:
 540:Src/mode.c    ****         motion[tail] = buff;
 1143              		.loc 1 540 0
 1144 00a0 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1145 00a4 0DF20C42 		addw	r2, sp, #1036
 1146 00a8 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 541:Src/mode.c    ****         tail++;
 1147              		.loc 1 541 0
 1148 00ac 0133     		adds	r3, r3, #1
 1149 00ae 8DF80F30 		strb	r3, [sp, #15]
 542:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1150              		.loc 1 542 0
 1151 00b2 0DF20C61 		addw	r1, sp, #1548
 1152 00b6 00F00F00 		and	r0, r0, #15
 1153              	.LVL132:
 1154 00ba FFF7FEFF 		bl	Maze_UpdatePosition
 1155              	.LVL133:
 1156              	.L91:
 513:Src/mode.c    ****         {
 1157              		.loc 1 513 0
 1158 00be FFF7FEFF 		bl	Maze_GetGoalSize
 1159              	.LVL134:
 1160 00c2 0128     		cmp	r0, #1
 1161 00c4 E0D0     		beq	.L108
 522:Src/mode.c    ****             {
 1162              		.loc 1 522 0
 1163 00c6 9DF80C36 		ldrb	r3, [sp, #1548]	@ zero_extendqisi2
 1164 00ca 814A     		ldr	r2, .L113+4
 1165 00cc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1166 00ce 9342     		cmp	r3, r2
 1167 00d0 15D0     		beq	.L109
 1168              	.L88:
 526:Src/mode.c    ****             {
 1169              		.loc 1 526 0
 1170 00d2 511C     		adds	r1, r2, #1
 1171 00d4 8B42     		cmp	r3, r1
 1172 00d6 34D0     		beq	.L110
 1173              	.L89:
 530:Src/mode.c    ****             {
 1174              		.loc 1 530 0
 1175 00d8 9342     		cmp	r3, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 32


 1176 00da 39D0     		beq	.L111
 1177              	.L90:
 534:Src/mode.c    ****             {
 1178              		.loc 1 534 0
 1179 00dc 8B42     		cmp	r3, r1
 1180 00de D9D1     		bne	.L86
 534:Src/mode.c    ****             {
 1181              		.loc 1 534 0 is_stmt 0 discriminator 1
 1182 00e0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1183 00e4 7B4B     		ldr	r3, .L113+8
 1184 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1185 00e8 0133     		adds	r3, r3, #1
 1186 00ea 9A42     		cmp	r2, r3
 1187 00ec D2D1     		bne	.L86
 1188              	.LBE3:
 1189 00ee 0CE0     		b	.L87
 1190              	.L107:
 1191              	.LBB4:
 515:Src/mode.c    ****             {
 1192              		.loc 1 515 0 is_stmt 1 discriminator 1
 1193 00f0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1194 00f4 774B     		ldr	r3, .L113+8
 1195 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 00f8 9A42     		cmp	r2, r3
 1197 00fa CBD1     		bne	.L86
 1198 00fc 05E0     		b	.L87
 1199              	.L109:
 522:Src/mode.c    ****             {
 1200              		.loc 1 522 0 discriminator 1
 1201 00fe 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1202 0102 7449     		ldr	r1, .L113+8
 1203 0104 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1204 0106 8842     		cmp	r0, r1
 1205 0108 E3D1     		bne	.L88
 1206              	.L87:
 1207              	.LBE4:
 543:Src/mode.c    ****     }
 544:Src/mode.c    ****     motion[tail] = GOAL;
 1208              		.loc 1 544 0
 1209 010a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1210 010e 0DF20C41 		addw	r1, sp, #1036
 1211 0112 0622     		movs	r2, #6
 1212 0114 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 545:Src/mode.c    ****     tail++;
 1213              		.loc 1 545 0
 1214 0118 0133     		adds	r3, r3, #1
 1215 011a 8DF80F30 		strb	r3, [sp, #15]
 1216              	.LVL135:
 546:Src/mode.c    ****     head = 0;
 547:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail, VELO_S, VELO_F);
 1217              		.loc 1 547 0
 1218 011e DFED6F0A 		vldr.32	s1, .L113+16
 1219 0122 9FED6F0A 		vldr.32	s0, .L113+20
 1220 0126 0DF10F03 		add	r3, sp, #15
 1221 012a 04AA     		add	r2, sp, #16
 1222 012c 2046     		mov	r0, r4
 1223 012e FFF7FEFF 		bl	Maze_Compress
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 33


 1224              	.LVL136:
 548:Src/mode.c    **** 
 549:Src/mode.c    ****     control_wall_flag = 2;
 1225              		.loc 1 549 0
 1226 0132 6C4B     		ldr	r3, .L113+24
 1227 0134 0222     		movs	r2, #2
 1228 0136 1A70     		strb	r2, [r3]
 550:Src/mode.c    ****     SetRunMode(0);
 1229              		.loc 1 550 0
 1230 0138 0020     		movs	r0, #0
 1231 013a FFF7FEFF 		bl	SetRunMode
 1232              	.LVL137:
 546:Src/mode.c    ****     head = 0;
 1233              		.loc 1 546 0
 1234 013e 0024     		movs	r4, #0
 551:Src/mode.c    ****     while (head != tail)
 1235              		.loc 1 551 0
 1236 0140 1BE0     		b	.L92
 1237              	.LVL138:
 1238              	.L110:
 1239              	.LBB5:
 526:Src/mode.c    ****             {
 1240              		.loc 1 526 0 discriminator 1
 1241 0142 9DF80D56 		ldrb	r5, [sp, #1549]	@ zero_extendqisi2
 1242 0146 6348     		ldr	r0, .L113+8
 1243 0148 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1244 014a 8542     		cmp	r5, r0
 1245 014c C4D1     		bne	.L89
 1246              	.LBE5:
 1247 014e DCE7     		b	.L87
 1248              	.L111:
 1249              	.LBB6:
 530:Src/mode.c    ****             {
 1250              		.loc 1 530 0 discriminator 1
 1251 0150 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1252 0154 5F4A     		ldr	r2, .L113+8
 1253 0156 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1254 0158 0132     		adds	r2, r2, #1
 1255 015a 9042     		cmp	r0, r2
 1256 015c BED1     		bne	.L90
 1257              	.LBE6:
 1258 015e D4E7     		b	.L87
 1259              	.LVL139:
 1260              	.L98:
 552:Src/mode.c    ****     {
 553:Src/mode.c    ****         switch (motion[head] & 0xf)
 554:Src/mode.c    ****         {
 555:Src/mode.c    ****         case START:
 556:Src/mode.c    ****             Motion_FastStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1261              		.loc 1 556 0
 1262 0160 04AB     		add	r3, sp, #16
 1263 0162 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1264 0166 00EE103A 		vmov	s0, r3	@ int
 1265 016a B8EE400A 		vcvt.f32.u32	s0, s0
 1266 016e C0F30710 		ubfx	r0, r0, #4, #8
 1267 0172 FFF7FEFF 		bl	Motion_FastStart
 1268              	.LVL140:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 34


 1269              	.L93:
 557:Src/mode.c    ****             break;
 558:Src/mode.c    ****         case LEFT:
 559:Src/mode.c    ****             Motion_FastLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 560:Src/mode.c    ****             break;
 561:Src/mode.c    ****         case FRONT:
 562:Src/mode.c    ****             Motion_FastStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(velocity[
 563:Src/mode.c    ****             break;
 564:Src/mode.c    ****         case DIAGONAL_L:
 565:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 566:Src/mode.c    ****             break;
 567:Src/mode.c    ****         case DIAGONAL_R:
 568:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
 569:Src/mode.c    ****             break;
 570:Src/mode.c    ****         case RIGHT:
 571:Src/mode.c    ****             Motion_FastRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 572:Src/mode.c    ****             break;
 573:Src/mode.c    ****         case GOAL:
 574:Src/mode.c    ****             Motion_FastGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 575:Src/mode.c    ****             break;
 576:Src/mode.c    ****         case ADJUST:
 577:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 578:Src/mode.c    ****             break;
 579:Src/mode.c    ****         case ADJUST_L:
 580:Src/mode.c    ****             Motion_Adjust_L(motion[head] >> 4, (float)(velocity[head] >> 16));
 581:Src/mode.c    ****             break;
 582:Src/mode.c    ****         case ADJUST_R:
 583:Src/mode.c    ****             Motion_Adjust_R(motion[head] >> 4, (float)(velocity[head] >> 16));
 584:Src/mode.c    ****             break;
 585:Src/mode.c    ****         default:
 586:Src/mode.c    ****             break;
 587:Src/mode.c    ****         }
 588:Src/mode.c    ****         head++;
 1270              		.loc 1 588 0
 1271 0176 0134     		adds	r4, r4, #1
 1272              	.LVL141:
 1273 0178 E4B2     		uxtb	r4, r4
 1274              	.LVL142:
 1275              	.L92:
 551:Src/mode.c    ****     {
 1276              		.loc 1 551 0
 1277 017a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1278 017e A342     		cmp	r3, r4
 1279 0180 00F08B80 		beq	.L112
 553:Src/mode.c    ****         {
 1280              		.loc 1 553 0
 1281 0184 0DF20C43 		addw	r3, sp, #1036
 1282 0188 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1283 018c 00F00F03 		and	r3, r0, #15
 1284 0190 0C2B     		cmp	r3, #12
 1285 0192 F0D8     		bhi	.L93
 1286 0194 01A2     		adr	r2, .L95
 1287 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1288 019a 00BF     		.p2align 2
 1289              	.L95:
 1290 019c E9010000 		.word	.L94+1
 1291 01a0 D1010000 		.word	.L96+1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 35


 1292 01a4 21020000 		.word	.L97+1
 1293 01a8 77010000 		.word	.L93+1
 1294 01ac 77010000 		.word	.L93+1
 1295 01b0 61010000 		.word	.L98+1
 1296 01b4 39020000 		.word	.L99+1
 1297 01b8 77010000 		.word	.L93+1
 1298 01bc 0D020000 		.word	.L100+1
 1299 01c0 17020000 		.word	.L101+1
 1300 01c4 53020000 		.word	.L102+1
 1301 01c8 6B020000 		.word	.L103+1
 1302 01cc 83020000 		.word	.L104+1
 1303              		.p2align 1
 1304              	.L96:
 559:Src/mode.c    ****             break;
 1305              		.loc 1 559 0
 1306 01d0 04AB     		add	r3, sp, #16
 1307 01d2 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1308 01d6 00EE103A 		vmov	s0, r3	@ int
 1309 01da B8EE400A 		vcvt.f32.u32	s0, s0
 1310 01de C0F30710 		ubfx	r0, r0, #4, #8
 1311 01e2 FFF7FEFF 		bl	Motion_FastLeftTurn
 1312              	.LVL143:
 560:Src/mode.c    ****         case FRONT:
 1313              		.loc 1 560 0
 1314 01e6 C6E7     		b	.L93
 1315              	.L94:
 562:Src/mode.c    ****             break;
 1316              		.loc 1 562 0
 1317 01e8 04AB     		add	r3, sp, #16
 1318 01ea 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1319 01ee 1A0C     		lsrs	r2, r3, #16
 1320 01f0 00EE102A 		vmov	s0, r2	@ int
 1321 01f4 9BB2     		uxth	r3, r3
 1322 01f6 00EE903A 		vmov	s1, r3	@ int
 1323 01fa F8EE600A 		vcvt.f32.u32	s1, s1
 1324 01fe B8EE400A 		vcvt.f32.u32	s0, s0
 1325 0202 C0F30710 		ubfx	r0, r0, #4, #8
 1326 0206 FFF7FEFF 		bl	Motion_FastStraight
 1327              	.LVL144:
 563:Src/mode.c    ****         case DIAGONAL_L:
 1328              		.loc 1 563 0
 1329 020a B4E7     		b	.L93
 1330              	.L100:
 565:Src/mode.c    ****             break;
 1331              		.loc 1 565 0
 1332 020c C0F30710 		ubfx	r0, r0, #4, #8
 1333 0210 FFF7FEFF 		bl	Motion_DiagonalLeft
 1334              	.LVL145:
 566:Src/mode.c    ****         case DIAGONAL_R:
 1335              		.loc 1 566 0
 1336 0214 AFE7     		b	.L93
 1337              	.L101:
 568:Src/mode.c    ****             break;
 1338              		.loc 1 568 0
 1339 0216 C0F30710 		ubfx	r0, r0, #4, #8
 1340 021a FFF7FEFF 		bl	Motion_DiagonalRight
 1341              	.LVL146:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 36


 569:Src/mode.c    ****         case RIGHT:
 1342              		.loc 1 569 0
 1343 021e AAE7     		b	.L93
 1344              	.L97:
 571:Src/mode.c    ****             break;
 1345              		.loc 1 571 0
 1346 0220 04AB     		add	r3, sp, #16
 1347 0222 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1348 0226 00EE103A 		vmov	s0, r3	@ int
 1349 022a B8EE400A 		vcvt.f32.u32	s0, s0
 1350 022e C0F30710 		ubfx	r0, r0, #4, #8
 1351 0232 FFF7FEFF 		bl	Motion_FastRightTurn
 1352              	.LVL147:
 572:Src/mode.c    ****         case GOAL:
 1353              		.loc 1 572 0
 1354 0236 9EE7     		b	.L93
 1355              	.L99:
 574:Src/mode.c    ****             break;
 1356              		.loc 1 574 0
 1357 0238 04AB     		add	r3, sp, #16
 1358 023a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1359 023e 1B0C     		lsrs	r3, r3, #16
 1360 0240 00EE103A 		vmov	s0, r3	@ int
 1361 0244 B8EE400A 		vcvt.f32.u32	s0, s0
 1362 0248 C0F30710 		ubfx	r0, r0, #4, #8
 1363 024c FFF7FEFF 		bl	Motion_FastGoal
 1364              	.LVL148:
 575:Src/mode.c    ****         case ADJUST:
 1365              		.loc 1 575 0
 1366 0250 91E7     		b	.L93
 1367              	.L102:
 577:Src/mode.c    ****             break;
 1368              		.loc 1 577 0
 1369 0252 04AB     		add	r3, sp, #16
 1370 0254 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1371 0258 1B0C     		lsrs	r3, r3, #16
 1372 025a 00EE103A 		vmov	s0, r3	@ int
 1373 025e B8EE400A 		vcvt.f32.u32	s0, s0
 1374 0262 0009     		lsrs	r0, r0, #4
 1375 0264 FFF7FEFF 		bl	Motion_Adjust
 1376              	.LVL149:
 578:Src/mode.c    ****         case ADJUST_L:
 1377              		.loc 1 578 0
 1378 0268 85E7     		b	.L93
 1379              	.L103:
 580:Src/mode.c    ****             break;
 1380              		.loc 1 580 0
 1381 026a 04AB     		add	r3, sp, #16
 1382 026c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1383 0270 1B0C     		lsrs	r3, r3, #16
 1384 0272 00EE103A 		vmov	s0, r3	@ int
 1385 0276 B8EE400A 		vcvt.f32.u32	s0, s0
 1386 027a 0009     		lsrs	r0, r0, #4
 1387 027c FFF7FEFF 		bl	Motion_Adjust_L
 1388              	.LVL150:
 581:Src/mode.c    ****         case ADJUST_R:
 1389              		.loc 1 581 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 37


 1390 0280 79E7     		b	.L93
 1391              	.L104:
 583:Src/mode.c    ****             break;
 1392              		.loc 1 583 0
 1393 0282 04AB     		add	r3, sp, #16
 1394 0284 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1395 0288 1B0C     		lsrs	r3, r3, #16
 1396 028a 00EE103A 		vmov	s0, r3	@ int
 1397 028e B8EE400A 		vcvt.f32.u32	s0, s0
 1398 0292 0009     		lsrs	r0, r0, #4
 1399 0294 FFF7FEFF 		bl	Motion_Adjust_R
 1400              	.LVL151:
 584:Src/mode.c    ****         default:
 1401              		.loc 1 584 0
 1402 0298 6DE7     		b	.L93
 1403              	.L112:
 589:Src/mode.c    ****     }
 590:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 591:Src/mode.c    ****     HAL_Delay(500);
 1404              		.loc 1 591 0
 1405 029a 4FF4FA70 		mov	r0, #500
 1406 029e FFF7FEFF 		bl	HAL_Delay
 1407              	.LVL152:
 592:Src/mode.c    ****     motor_flag = FALSE;
 1408              		.loc 1 592 0
 1409 02a2 0024     		movs	r4, #0
 1410              	.LVL153:
 1411 02a4 104B     		ldr	r3, .L113+28
 1412 02a6 1C70     		strb	r4, [r3]
 593:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1413              		.loc 1 593 0
 1414 02a8 4FF49671 		mov	r1, #300
 1415 02ac 4C20     		movs	r0, #76
 1416 02ae FFF7FEFF 		bl	Tim_BuzzerPwm
 1417              	.LVL154:
 594:Src/mode.c    ****     HAL_Delay(200);
 1418              		.loc 1 594 0
 1419 02b2 C820     		movs	r0, #200
 1420 02b4 FFF7FEFF 		bl	HAL_Delay
 1421              	.LVL155:
 595:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1422              		.loc 1 595 0
 1423 02b8 2146     		mov	r1, r4
 1424 02ba 0A20     		movs	r0, #10
 1425 02bc FFF7FEFF 		bl	Tim_BuzzerPwm
 1426              	.LVL156:
 596:Src/mode.c    **** }
 1427              		.loc 1 596 0
 1428 02c0 0DF29C6D 		addw	sp, sp, #1692
 1429              	.LCFI14:
 1430              		.cfi_def_cfa_offset 28
 1431              		@ sp needed
 1432 02c4 BDEC028B 		vldm	sp!, {d8}
 1433              	.LCFI15:
 1434              		.cfi_restore 80
 1435              		.cfi_restore 81
 1436              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 38


 1437              	.LVL157:
 1438 02c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1439              	.L114:
 1440 02ca 00BF     		.align	2
 1441              	.L113:
 1442 02cc 00000000 		.word	start_address
 1443 02d0 00000000 		.word	.LANCHOR2
 1444 02d4 00000000 		.word	.LANCHOR1
 1445 02d8 00000000 		.word	.LANCHOR3
 1446 02dc 00004844 		.word	1145569280
 1447 02e0 00001644 		.word	1142292480
 1448 02e4 00000000 		.word	control_wall_flag
 1449 02e8 00000000 		.word	motor_flag
 1450              		.cfi_endproc
 1451              	.LFE132:
 1453              		.section	.text.Mode_FastestRun,"ax",%progbits
 1454              		.align	1
 1455              		.global	Mode_FastestRun
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1459              		.fpu fpv4-sp-d16
 1461              	Mode_FastestRun:
 1462              	.LFB133:
 597:Src/mode.c    **** 
 598:Src/mode.c    **** void Mode_FastestRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn) //GainMax=19
 599:Src/mode.c    **** {
 1463              		.loc 1 599 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 1680
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 1467              	.LVL158:
 1468 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1469              	.LCFI16:
 1470              		.cfi_def_cfa_offset 20
 1471              		.cfi_offset 4, -20
 1472              		.cfi_offset 5, -16
 1473              		.cfi_offset 6, -12
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 2DED028B 		vpush.64	{d8}
 1477              	.LCFI17:
 1478              		.cfi_def_cfa_offset 28
 1479              		.cfi_offset 80, -28
 1480              		.cfi_offset 81, -24
 1481 0006 ADF29C6D 		subw	sp, sp, #1692
 1482              	.LCFI18:
 1483              		.cfi_def_cfa_offset 1720
 1484 000a 0446     		mov	r4, r0
 1485 000c B0EE408A 		vmov.f32	s16, s0
 1486 0010 0E46     		mov	r6, r1
 1487 0012 1746     		mov	r7, r2
 600:Src/mode.c    ****     wallData_t wallData;
 601:Src/mode.c    ****     pos_t pos;
 602:Src/mode.c    ****     uint16_t motion[255];
 603:Src/mode.c    ****     uint32_t velocity[255];
 604:Src/mode.c    ****     uint8_t tail = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 39


 1488              		.loc 1 604 0
 1489 0014 0025     		movs	r5, #0
 1490 0016 8DF80F50 		strb	r5, [sp, #15]
 1491              	.LVL159:
 605:Src/mode.c    ****     uint8_t head = 0;
 606:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 1492              		.loc 1 606 0
 1493 001a 8822     		movs	r2, #136
 1494              	.LVL160:
 1495 001c 0DF5C261 		add	r1, sp, #1552
 1496              	.LVL161:
 1497 0020 AB4B     		ldr	r3, .L144
 1498 0022 1868     		ldr	r0, [r3]
 1499              	.LVL162:
 1500 0024 FFF7FEFF 		bl	Flash_Load
 1501              	.LVL163:
 607:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 1502              		.loc 1 607 0
 1503 0028 AA4B     		ldr	r3, .L144+4
 1504 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 002c AA4A     		ldr	r2, .L144+8
 1506 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1507 0030 0092     		str	r2, [sp]
 1508 0032 3A46     		mov	r2, r7
 1509 0034 3146     		mov	r1, r6
 1510 0036 0DF5C260 		add	r0, sp, #1552
 1511 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1512              	.LVL164:
 608:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1513              		.loc 1 608 0
 1514 003e B0EE480A 		vmov.f32	s0, s16
 1515 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1516              	.LVL165:
 609:Src/mode.c    ****     Control_WallEdgeSet(walledge_1200);
 1517              		.loc 1 609 0
 1518 0046 A54B     		ldr	r3, .L144+12
 1519 0048 03F11002 		add	r2, r3, #16
 1520 004c 92E80300 		ldm	r2, {r0, r1}
 1521 0050 8DE80300 		stm	sp, {r0, r1}
 1522 0054 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1523 0056 FFF7FEFF 		bl	Control_WallEdgeSet
 1524              	.LVL166:
 610:Src/mode.c    ****     pos.dir = NORTH;
 1525              		.loc 1 610 0
 1526 005a 8DF80E56 		strb	r5, [sp, #1550]
 611:Src/mode.c    ****     pos.x = 0;
 1527              		.loc 1 611 0
 1528 005e 8DF80C56 		strb	r5, [sp, #1548]
 612:Src/mode.c    ****     pos.y = 1;
 1529              		.loc 1 612 0
 1530 0062 0123     		movs	r3, #1
 1531 0064 8DF80D36 		strb	r3, [sp, #1549]
 613:Src/mode.c    ****     motion[tail] = START;
 1532              		.loc 1 613 0
 1533 0068 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1534 006c 0DF20C42 		addw	r2, sp, #1036
 1535 0070 0521     		movs	r1, #5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 40


 1536 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 614:Src/mode.c    ****     tail++;
 1537              		.loc 1 614 0
 1538 0076 0133     		adds	r3, r3, #1
 1539 0078 DBB2     		uxtb	r3, r3
 615:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1540              		.loc 1 615 0
 1541 007a 1021     		movs	r1, #16
 1542 007c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 616:Src/mode.c    ****     tail++;
 1543              		.loc 1 616 0
 1544 0080 0133     		adds	r3, r3, #1
 1545 0082 8DF80F30 		strb	r3, [sp, #15]
 1546              	.LVL167:
 1547 0086 1AE0     		b	.L122
 1548              	.L139:
 1549              	.LBB7:
 617:Src/mode.c    ****     head += 2;
 618:Src/mode.c    ****     while (1)
 619:Src/mode.c    ****     {
 620:Src/mode.c    ****         if (Maze_GetGoalSize() == 1)
 621:Src/mode.c    ****         {
 622:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 1550              		.loc 1 622 0
 1551 0088 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1552 008c 914B     		ldr	r3, .L144+4
 1553 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 0090 9A42     		cmp	r2, r3
 1555 0092 2DD0     		beq	.L138
 1556              	.L117:
 623:Src/mode.c    ****             {
 624:Src/mode.c    ****                 break;
 625:Src/mode.c    ****             }
 626:Src/mode.c    ****         }
 627:Src/mode.c    ****         else
 628:Src/mode.c    ****         {
 629:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 630:Src/mode.c    ****             {
 631:Src/mode.c    ****                 break;
 632:Src/mode.c    ****             }
 633:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == gy)
 634:Src/mode.c    ****             {
 635:Src/mode.c    ****                 break;
 636:Src/mode.c    ****             }
 637:Src/mode.c    ****             if (pos.x == gx && pos.y == (gy + 1))
 638:Src/mode.c    ****             {
 639:Src/mode.c    ****                 break;
 640:Src/mode.c    ****             }
 641:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == (gy + 1))
 642:Src/mode.c    ****             {
 643:Src/mode.c    ****                 break;
 644:Src/mode.c    ****             }
 645:Src/mode.c    ****         }
 646:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1557              		.loc 1 646 0
 1558 0094 0DF5C261 		add	r1, sp, #1552
 1559 0098 0DF20C60 		addw	r0, sp, #1548
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 41


 1560 009c FFF7FEFF 		bl	Maze_GetNextMotionEx
 1561              	.LVL168:
 647:Src/mode.c    ****         motion[tail] = buff;
 1562              		.loc 1 647 0
 1563 00a0 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1564 00a4 0DF20C42 		addw	r2, sp, #1036
 1565 00a8 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 648:Src/mode.c    ****         tail++;
 1566              		.loc 1 648 0
 1567 00ac 0133     		adds	r3, r3, #1
 1568 00ae 8DF80F30 		strb	r3, [sp, #15]
 649:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1569              		.loc 1 649 0
 1570 00b2 0DF20C61 		addw	r1, sp, #1548
 1571 00b6 00F00F00 		and	r0, r0, #15
 1572              	.LVL169:
 1573 00ba FFF7FEFF 		bl	Maze_UpdatePosition
 1574              	.LVL170:
 1575              	.L122:
 620:Src/mode.c    ****         {
 1576              		.loc 1 620 0
 1577 00be FFF7FEFF 		bl	Maze_GetGoalSize
 1578              	.LVL171:
 1579 00c2 0128     		cmp	r0, #1
 1580 00c4 E0D0     		beq	.L139
 629:Src/mode.c    ****             {
 1581              		.loc 1 629 0
 1582 00c6 9DF80C36 		ldrb	r3, [sp, #1548]	@ zero_extendqisi2
 1583 00ca 824A     		ldr	r2, .L144+4
 1584 00cc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1585 00ce 9342     		cmp	r3, r2
 1586 00d0 15D0     		beq	.L140
 1587              	.L119:
 633:Src/mode.c    ****             {
 1588              		.loc 1 633 0
 1589 00d2 511C     		adds	r1, r2, #1
 1590 00d4 8B42     		cmp	r3, r1
 1591 00d6 34D0     		beq	.L141
 1592              	.L120:
 637:Src/mode.c    ****             {
 1593              		.loc 1 637 0
 1594 00d8 9342     		cmp	r3, r2
 1595 00da 39D0     		beq	.L142
 1596              	.L121:
 641:Src/mode.c    ****             {
 1597              		.loc 1 641 0
 1598 00dc 8B42     		cmp	r3, r1
 1599 00de D9D1     		bne	.L117
 641:Src/mode.c    ****             {
 1600              		.loc 1 641 0 is_stmt 0 discriminator 1
 1601 00e0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1602 00e4 7C4B     		ldr	r3, .L144+8
 1603 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 00e8 0133     		adds	r3, r3, #1
 1605 00ea 9A42     		cmp	r2, r3
 1606 00ec D2D1     		bne	.L117
 1607              	.LBE7:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 42


 1608 00ee 0CE0     		b	.L118
 1609              	.L138:
 1610              	.LBB8:
 622:Src/mode.c    ****             {
 1611              		.loc 1 622 0 is_stmt 1 discriminator 1
 1612 00f0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1613 00f4 784B     		ldr	r3, .L144+8
 1614 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 00f8 9A42     		cmp	r2, r3
 1616 00fa CBD1     		bne	.L117
 1617 00fc 05E0     		b	.L118
 1618              	.L140:
 629:Src/mode.c    ****             {
 1619              		.loc 1 629 0 discriminator 1
 1620 00fe 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1621 0102 7549     		ldr	r1, .L144+8
 1622 0104 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1623 0106 8842     		cmp	r0, r1
 1624 0108 E3D1     		bne	.L119
 1625              	.L118:
 1626              	.LBE8:
 650:Src/mode.c    ****     }
 651:Src/mode.c    ****     motion[tail] = GOAL;
 1627              		.loc 1 651 0
 1628 010a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1629 010e 0DF20C41 		addw	r1, sp, #1036
 1630 0112 0622     		movs	r2, #6
 1631 0114 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 652:Src/mode.c    ****     tail++;
 1632              		.loc 1 652 0
 1633 0118 0133     		adds	r3, r3, #1
 1634 011a 8DF80F30 		strb	r3, [sp, #15]
 1635              	.LVL172:
 653:Src/mode.c    ****     head = 0;
 654:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail, VELO_EST, VELO_EST);
 1636              		.loc 1 654 0
 1637 011e 9FED700A 		vldr.32	s0, .L144+16
 1638 0122 F0EE400A 		vmov.f32	s1, s0
 1639 0126 0DF10F03 		add	r3, sp, #15
 1640 012a 04AA     		add	r2, sp, #16
 1641 012c 2046     		mov	r0, r4
 1642 012e FFF7FEFF 		bl	Maze_Compress
 1643              	.LVL173:
 655:Src/mode.c    **** 
 656:Src/mode.c    ****     control_wall_flag = 4;
 1644              		.loc 1 656 0
 1645 0132 6C4B     		ldr	r3, .L144+20
 1646 0134 0422     		movs	r2, #4
 1647 0136 1A70     		strb	r2, [r3]
 657:Src/mode.c    ****     SetRunMode(1);
 1648              		.loc 1 657 0
 1649 0138 0120     		movs	r0, #1
 1650 013a FFF7FEFF 		bl	SetRunMode
 1651              	.LVL174:
 653:Src/mode.c    ****     head = 0;
 1652              		.loc 1 653 0
 1653 013e 0024     		movs	r4, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 43


 658:Src/mode.c    ****     while (head != tail)
 1654              		.loc 1 658 0
 1655 0140 1BE0     		b	.L123
 1656              	.LVL175:
 1657              	.L141:
 1658              	.LBB9:
 633:Src/mode.c    ****             {
 1659              		.loc 1 633 0 discriminator 1
 1660 0142 9DF80D56 		ldrb	r5, [sp, #1549]	@ zero_extendqisi2
 1661 0146 6448     		ldr	r0, .L144+8
 1662 0148 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1663 014a 8542     		cmp	r5, r0
 1664 014c C4D1     		bne	.L120
 1665              	.LBE9:
 1666 014e DCE7     		b	.L118
 1667              	.L142:
 1668              	.LBB10:
 637:Src/mode.c    ****             {
 1669              		.loc 1 637 0 discriminator 1
 1670 0150 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1671 0154 604A     		ldr	r2, .L144+8
 1672 0156 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1673 0158 0132     		adds	r2, r2, #1
 1674 015a 9042     		cmp	r0, r2
 1675 015c BED1     		bne	.L121
 1676              	.LBE10:
 1677 015e D4E7     		b	.L118
 1678              	.LVL176:
 1679              	.L129:
 659:Src/mode.c    ****     {
 660:Src/mode.c    ****         switch (motion[head] & 0xf)
 661:Src/mode.c    ****         {
 662:Src/mode.c    ****         case START:
 663:Src/mode.c    ****             Motion_FastestStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1680              		.loc 1 663 0
 1681 0160 04AB     		add	r3, sp, #16
 1682 0162 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1683 0166 00EE103A 		vmov	s0, r3	@ int
 1684 016a B8EE400A 		vcvt.f32.u32	s0, s0
 1685 016e C0F30710 		ubfx	r0, r0, #4, #8
 1686 0172 FFF7FEFF 		bl	Motion_FastestStart
 1687              	.LVL177:
 1688              	.L124:
 664:Src/mode.c    ****             break;
 665:Src/mode.c    ****         case LEFT:
 666:Src/mode.c    ****             Motion_FastestLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 667:Src/mode.c    ****             break;
 668:Src/mode.c    ****         case FRONT:
 669:Src/mode.c    ****             Motion_FastestStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(veloci
 670:Src/mode.c    ****             break;
 671:Src/mode.c    ****         case DIAGONAL_L:
 672:Src/mode.c    ****             Motion_FastestDiagonalLeft(motion[head] >> 4);
 673:Src/mode.c    ****             break;
 674:Src/mode.c    ****         case DIAGONAL_R:
 675:Src/mode.c    ****             Motion_FastestDiagonalRight(motion[head] >> 4);
 676:Src/mode.c    ****             break;
 677:Src/mode.c    ****         case RIGHT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 44


 678:Src/mode.c    ****             Motion_FastestRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 679:Src/mode.c    ****             break;
 680:Src/mode.c    ****         case GOAL:
 681:Src/mode.c    ****             Motion_FastestGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 682:Src/mode.c    ****             break;
 683:Src/mode.c    ****         case ADJUST:
 684:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 685:Src/mode.c    ****             break;
 686:Src/mode.c    ****         case ADJUST_L:
 687:Src/mode.c    ****             Motion_FastestAdjust_L(motion[head] >> 4, (float)(velocity[head] >> 16));
 688:Src/mode.c    ****             break;
 689:Src/mode.c    ****         case ADJUST_R:
 690:Src/mode.c    ****             Motion_FastestAdjust_R(motion[head] >> 4, (float)(velocity[head] >> 16));
 691:Src/mode.c    ****             break;
 692:Src/mode.c    ****         default:
 693:Src/mode.c    ****             break;
 694:Src/mode.c    ****         }
 695:Src/mode.c    ****         head++;
 1689              		.loc 1 695 0
 1690 0176 0134     		adds	r4, r4, #1
 1691              	.LVL178:
 1692 0178 E4B2     		uxtb	r4, r4
 1693              	.LVL179:
 1694              	.L123:
 658:Src/mode.c    ****     {
 1695              		.loc 1 658 0
 1696 017a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1697 017e A342     		cmp	r3, r4
 1698 0180 00F08B80 		beq	.L143
 660:Src/mode.c    ****         {
 1699              		.loc 1 660 0
 1700 0184 0DF20C43 		addw	r3, sp, #1036
 1701 0188 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1702 018c 00F00F03 		and	r3, r0, #15
 1703 0190 0C2B     		cmp	r3, #12
 1704 0192 F0D8     		bhi	.L124
 1705 0194 01A2     		adr	r2, .L126
 1706 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1707 019a 00BF     		.p2align 2
 1708              	.L126:
 1709 019c E9010000 		.word	.L125+1
 1710 01a0 D1010000 		.word	.L127+1
 1711 01a4 21020000 		.word	.L128+1
 1712 01a8 77010000 		.word	.L124+1
 1713 01ac 77010000 		.word	.L124+1
 1714 01b0 61010000 		.word	.L129+1
 1715 01b4 39020000 		.word	.L130+1
 1716 01b8 77010000 		.word	.L124+1
 1717 01bc 0D020000 		.word	.L131+1
 1718 01c0 17020000 		.word	.L132+1
 1719 01c4 53020000 		.word	.L133+1
 1720 01c8 6B020000 		.word	.L134+1
 1721 01cc 83020000 		.word	.L135+1
 1722              		.p2align 1
 1723              	.L127:
 666:Src/mode.c    ****             break;
 1724              		.loc 1 666 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 45


 1725 01d0 04AB     		add	r3, sp, #16
 1726 01d2 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1727 01d6 00EE103A 		vmov	s0, r3	@ int
 1728 01da B8EE400A 		vcvt.f32.u32	s0, s0
 1729 01de C0F30710 		ubfx	r0, r0, #4, #8
 1730 01e2 FFF7FEFF 		bl	Motion_FastestLeftTurn
 1731              	.LVL180:
 667:Src/mode.c    ****         case FRONT:
 1732              		.loc 1 667 0
 1733 01e6 C6E7     		b	.L124
 1734              	.L125:
 669:Src/mode.c    ****             break;
 1735              		.loc 1 669 0
 1736 01e8 04AB     		add	r3, sp, #16
 1737 01ea 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1738 01ee 1A0C     		lsrs	r2, r3, #16
 1739 01f0 00EE102A 		vmov	s0, r2	@ int
 1740 01f4 9BB2     		uxth	r3, r3
 1741 01f6 00EE903A 		vmov	s1, r3	@ int
 1742 01fa F8EE600A 		vcvt.f32.u32	s1, s1
 1743 01fe B8EE400A 		vcvt.f32.u32	s0, s0
 1744 0202 C0F30710 		ubfx	r0, r0, #4, #8
 1745 0206 FFF7FEFF 		bl	Motion_FastestStraight
 1746              	.LVL181:
 670:Src/mode.c    ****         case DIAGONAL_L:
 1747              		.loc 1 670 0
 1748 020a B4E7     		b	.L124
 1749              	.L131:
 672:Src/mode.c    ****             break;
 1750              		.loc 1 672 0
 1751 020c C0F30710 		ubfx	r0, r0, #4, #8
 1752 0210 FFF7FEFF 		bl	Motion_FastestDiagonalLeft
 1753              	.LVL182:
 673:Src/mode.c    ****         case DIAGONAL_R:
 1754              		.loc 1 673 0
 1755 0214 AFE7     		b	.L124
 1756              	.L132:
 675:Src/mode.c    ****             break;
 1757              		.loc 1 675 0
 1758 0216 C0F30710 		ubfx	r0, r0, #4, #8
 1759 021a FFF7FEFF 		bl	Motion_FastestDiagonalRight
 1760              	.LVL183:
 676:Src/mode.c    ****         case RIGHT:
 1761              		.loc 1 676 0
 1762 021e AAE7     		b	.L124
 1763              	.L128:
 678:Src/mode.c    ****             break;
 1764              		.loc 1 678 0
 1765 0220 04AB     		add	r3, sp, #16
 1766 0222 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1767 0226 00EE103A 		vmov	s0, r3	@ int
 1768 022a B8EE400A 		vcvt.f32.u32	s0, s0
 1769 022e C0F30710 		ubfx	r0, r0, #4, #8
 1770 0232 FFF7FEFF 		bl	Motion_FastestRightTurn
 1771              	.LVL184:
 679:Src/mode.c    ****         case GOAL:
 1772              		.loc 1 679 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 46


 1773 0236 9EE7     		b	.L124
 1774              	.L130:
 681:Src/mode.c    ****             break;
 1775              		.loc 1 681 0
 1776 0238 04AB     		add	r3, sp, #16
 1777 023a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1778 023e 1B0C     		lsrs	r3, r3, #16
 1779 0240 00EE103A 		vmov	s0, r3	@ int
 1780 0244 B8EE400A 		vcvt.f32.u32	s0, s0
 1781 0248 C0F30710 		ubfx	r0, r0, #4, #8
 1782 024c FFF7FEFF 		bl	Motion_FastestGoal
 1783              	.LVL185:
 682:Src/mode.c    ****         case ADJUST:
 1784              		.loc 1 682 0
 1785 0250 91E7     		b	.L124
 1786              	.L133:
 684:Src/mode.c    ****             break;
 1787              		.loc 1 684 0
 1788 0252 04AB     		add	r3, sp, #16
 1789 0254 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1790 0258 1B0C     		lsrs	r3, r3, #16
 1791 025a 00EE103A 		vmov	s0, r3	@ int
 1792 025e B8EE400A 		vcvt.f32.u32	s0, s0
 1793 0262 0009     		lsrs	r0, r0, #4
 1794 0264 FFF7FEFF 		bl	Motion_Adjust
 1795              	.LVL186:
 685:Src/mode.c    ****         case ADJUST_L:
 1796              		.loc 1 685 0
 1797 0268 85E7     		b	.L124
 1798              	.L134:
 687:Src/mode.c    ****             break;
 1799              		.loc 1 687 0
 1800 026a 04AB     		add	r3, sp, #16
 1801 026c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1802 0270 1B0C     		lsrs	r3, r3, #16
 1803 0272 00EE103A 		vmov	s0, r3	@ int
 1804 0276 B8EE400A 		vcvt.f32.u32	s0, s0
 1805 027a 0009     		lsrs	r0, r0, #4
 1806 027c FFF7FEFF 		bl	Motion_FastestAdjust_L
 1807              	.LVL187:
 688:Src/mode.c    ****         case ADJUST_R:
 1808              		.loc 1 688 0
 1809 0280 79E7     		b	.L124
 1810              	.L135:
 690:Src/mode.c    ****             break;
 1811              		.loc 1 690 0
 1812 0282 04AB     		add	r3, sp, #16
 1813 0284 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1814 0288 1B0C     		lsrs	r3, r3, #16
 1815 028a 00EE103A 		vmov	s0, r3	@ int
 1816 028e B8EE400A 		vcvt.f32.u32	s0, s0
 1817 0292 0009     		lsrs	r0, r0, #4
 1818 0294 FFF7FEFF 		bl	Motion_FastestAdjust_R
 1819              	.LVL188:
 691:Src/mode.c    ****         default:
 1820              		.loc 1 691 0
 1821 0298 6DE7     		b	.L124
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 47


 1822              	.L143:
 696:Src/mode.c    ****     }
 697:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 698:Src/mode.c    ****     Tim_MotorBrake();
 1823              		.loc 1 698 0
 1824 029a FFF7FEFF 		bl	Tim_MotorBrake
 1825              	.LVL189:
 699:Src/mode.c    ****     HAL_Delay(500);
 1826              		.loc 1 699 0
 1827 029e 4FF4FA70 		mov	r0, #500
 1828 02a2 FFF7FEFF 		bl	HAL_Delay
 1829              	.LVL190:
 700:Src/mode.c    ****     motor_flag = FALSE;
 1830              		.loc 1 700 0
 1831 02a6 0024     		movs	r4, #0
 1832              	.LVL191:
 1833 02a8 0F4B     		ldr	r3, .L144+24
 1834 02aa 1C70     		strb	r4, [r3]
 701:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1835              		.loc 1 701 0
 1836 02ac 4FF49671 		mov	r1, #300
 1837 02b0 4C20     		movs	r0, #76
 1838 02b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 1839              	.LVL192:
 702:Src/mode.c    ****     HAL_Delay(200);
 1840              		.loc 1 702 0
 1841 02b6 C820     		movs	r0, #200
 1842 02b8 FFF7FEFF 		bl	HAL_Delay
 1843              	.LVL193:
 703:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1844              		.loc 1 703 0
 1845 02bc 2146     		mov	r1, r4
 1846 02be 0A20     		movs	r0, #10
 1847 02c0 FFF7FEFF 		bl	Tim_BuzzerPwm
 1848              	.LVL194:
 704:Src/mode.c    **** }
 1849              		.loc 1 704 0
 1850 02c4 0DF29C6D 		addw	sp, sp, #1692
 1851              	.LCFI19:
 1852              		.cfi_def_cfa_offset 28
 1853              		@ sp needed
 1854 02c8 BDEC028B 		vldm	sp!, {d8}
 1855              	.LCFI20:
 1856              		.cfi_restore 80
 1857              		.cfi_restore 81
 1858              		.cfi_def_cfa_offset 20
 1859              	.LVL195:
 1860 02cc F0BD     		pop	{r4, r5, r6, r7, pc}
 1861              	.L145:
 1862 02ce 00BF     		.align	2
 1863              	.L144:
 1864 02d0 00000000 		.word	start_address
 1865 02d4 00000000 		.word	.LANCHOR2
 1866 02d8 00000000 		.word	.LANCHOR1
 1867 02dc 00000000 		.word	.LANCHOR4
 1868 02e0 00009644 		.word	1150681088
 1869 02e4 00000000 		.word	control_wall_flag
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 48


 1870 02e8 00000000 		.word	motor_flag
 1871              		.cfi_endproc
 1872              	.LFE133:
 1874              		.section	.text.CheckStraight,"ax",%progbits
 1875              		.align	1
 1876              		.global	CheckStraight
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv4-sp-d16
 1882              	CheckStraight:
 1883              	.LFB134:
 705:Src/mode.c    **** 
 706:Src/mode.c    **** void CheckStraight(uint8_t block)
 707:Src/mode.c    **** {
 1884              		.loc 1 707 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 0, uses_anonymous_args = 0
 1888              	.LVL196:
 1889 0000 38B5     		push	{r3, r4, r5, lr}
 1890              	.LCFI21:
 1891              		.cfi_def_cfa_offset 16
 1892              		.cfi_offset 3, -16
 1893              		.cfi_offset 4, -12
 1894              		.cfi_offset 5, -8
 1895              		.cfi_offset 14, -4
 1896 0002 0546     		mov	r5, r0
 708:Src/mode.c    ****     SetRunMode(0);
 1897              		.loc 1 708 0
 1898 0004 0020     		movs	r0, #0
 1899              	.LVL197:
 1900 0006 FFF7FEFF 		bl	SetRunMode
 1901              	.LVL198:
 709:Src/mode.c    ****     enc.distance = 0;
 1902              		.loc 1 709 0
 1903 000a 154B     		ldr	r3, .L150
 1904 000c 0022     		movs	r2, #0
 1905 000e 1A60     		str	r2, [r3]	@ float
 710:Src/mode.c    ****     Motion_Start();
 1906              		.loc 1 710 0
 1907 0010 FFF7FEFF 		bl	Motion_Start
 1908              	.LVL199:
 1909              	.LBB11:
 711:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1910              		.loc 1 711 0
 1911 0014 0024     		movs	r4, #0
 1912 0016 04E0     		b	.L147
 1913              	.LVL200:
 1914              	.L148:
 712:Src/mode.c    ****     {
 713:Src/mode.c    ****         Motion_Straight(0);
 1915              		.loc 1 713 0 discriminator 3
 1916 0018 0020     		movs	r0, #0
 1917 001a FFF7FEFF 		bl	Motion_Straight
 1918              	.LVL201:
 711:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 49


 1919              		.loc 1 711 0 discriminator 3
 1920 001e 0134     		adds	r4, r4, #1
 1921              	.LVL202:
 1922 0020 E4B2     		uxtb	r4, r4
 1923              	.LVL203:
 1924              	.L147:
 711:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1925              		.loc 1 711 0 is_stmt 0 discriminator 1
 1926 0022 AC42     		cmp	r4, r5
 1927 0024 F8D3     		bcc	.L148
 1928              	.LBE11:
 714:Src/mode.c    ****     }
 715:Src/mode.c    ****     Motion_End();
 1929              		.loc 1 715 0 is_stmt 1
 1930 0026 FFF7FEFF 		bl	Motion_End
 1931              	.LVL204:
 716:Src/mode.c    ****     motor_flag = FALSE;
 1932              		.loc 1 716 0
 1933 002a 0024     		movs	r4, #0
 1934              	.LVL205:
 1935 002c 0D4B     		ldr	r3, .L150+4
 1936 002e 1C70     		strb	r4, [r3]
 717:Src/mode.c    ****     HAL_Delay(500);
 1937              		.loc 1 717 0
 1938 0030 4FF4FA70 		mov	r0, #500
 1939 0034 FFF7FEFF 		bl	HAL_Delay
 1940              	.LVL206:
 718:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1941              		.loc 1 718 0
 1942 0038 49F64242 		movw	r2, #40002
 1943 003c 0A49     		ldr	r1, .L150+8
 1944 003e 0B4B     		ldr	r3, .L150+12
 1945 0040 1868     		ldr	r0, [r3]
 1946 0042 FFF7FEFF 		bl	Flash_Write
 1947              	.LVL207:
 719:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1948              		.loc 1 719 0
 1949 0046 4FF49671 		mov	r1, #300
 1950 004a 4C20     		movs	r0, #76
 1951 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 1952              	.LVL208:
 720:Src/mode.c    ****     HAL_Delay(200);
 1953              		.loc 1 720 0
 1954 0050 C820     		movs	r0, #200
 1955 0052 FFF7FEFF 		bl	HAL_Delay
 1956              	.LVL209:
 721:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1957              		.loc 1 721 0
 1958 0056 2146     		mov	r1, r4
 1959 0058 0A20     		movs	r0, #10
 1960 005a FFF7FEFF 		bl	Tim_BuzzerPwm
 1961              	.LVL210:
 722:Src/mode.c    **** }
 1962              		.loc 1 722 0
 1963 005e 38BD     		pop	{r3, r4, r5, pc}
 1964              	.L151:
 1965              		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 50


 1966              	.L150:
 1967 0060 00000000 		.word	enc
 1968 0064 00000000 		.word	motor_flag
 1969 0068 00000000 		.word	loger
 1970 006c 00000000 		.word	start_address
 1971              		.cfi_endproc
 1972              	.LFE134:
 1974              		.section	.text.CheckFastStraight,"ax",%progbits
 1975              		.align	1
 1976              		.global	CheckFastStraight
 1977              		.syntax unified
 1978              		.thumb
 1979              		.thumb_func
 1980              		.fpu fpv4-sp-d16
 1982              	CheckFastStraight:
 1983              	.LFB135:
 723:Src/mode.c    **** 
 724:Src/mode.c    **** void CheckFastStraight(uint8_t block)
 725:Src/mode.c    **** {
 1984              		.loc 1 725 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 0
 1987              		@ frame_needed = 0, uses_anonymous_args = 0
 1988              	.LVL211:
 1989 0000 38B5     		push	{r3, r4, r5, lr}
 1990              	.LCFI22:
 1991              		.cfi_def_cfa_offset 16
 1992              		.cfi_offset 3, -16
 1993              		.cfi_offset 4, -12
 1994              		.cfi_offset 5, -8
 1995              		.cfi_offset 14, -4
 1996 0002 2DED028B 		vpush.64	{d8}
 1997              	.LCFI23:
 1998              		.cfi_def_cfa_offset 24
 1999              		.cfi_offset 80, -24
 2000              		.cfi_offset 81, -20
 2001 0006 0546     		mov	r5, r0
 726:Src/mode.c    ****     SetRunMode(0);
 2002              		.loc 1 726 0
 2003 0008 0020     		movs	r0, #0
 2004              	.LVL212:
 2005 000a FFF7FEFF 		bl	SetRunMode
 2006              	.LVL213:
 727:Src/mode.c    ****     enc.distance = 0;
 2007              		.loc 1 727 0
 2008 000e 204B     		ldr	r3, .L156
 2009 0010 0022     		movs	r2, #0
 2010 0012 1A60     		str	r2, [r3]	@ float
 728:Src/mode.c    ****     Motion_FastStart(1, 800.0f);
 2011              		.loc 1 728 0
 2012 0014 9FED1F0A 		vldr.32	s0, .L156+4
 2013 0018 0120     		movs	r0, #1
 2014 001a FFF7FEFF 		bl	Motion_FastStart
 2015              	.LVL214:
 729:Src/mode.c    ****     block--;
 2016              		.loc 1 729 0
 2017 001e 013D     		subs	r5, r5, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 51


 2018 0020 EDB2     		uxtb	r5, r5
 2019              	.LVL215:
 2020              	.LBB12:
 730:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 2021              		.loc 1 730 0
 2022 0022 0024     		movs	r4, #0
 2023 0024 08E0     		b	.L153
 2024              	.LVL216:
 2025              	.L154:
 731:Src/mode.c    ****     {
 732:Src/mode.c    ****         Motion_FastStraight(2, 800.0f, 800.0f);
 2026              		.loc 1 732 0 discriminator 3
 2027 0026 9FED1B0A 		vldr.32	s0, .L156+4
 2028 002a F0EE400A 		vmov.f32	s1, s0
 2029 002e 0220     		movs	r0, #2
 2030 0030 FFF7FEFF 		bl	Motion_FastStraight
 2031              	.LVL217:
 730:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 2032              		.loc 1 730 0 discriminator 3
 2033 0034 0134     		adds	r4, r4, #1
 2034              	.LVL218:
 2035 0036 E4B2     		uxtb	r4, r4
 2036              	.LVL219:
 2037              	.L153:
 730:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 2038              		.loc 1 730 0 is_stmt 0 discriminator 1
 2039 0038 AC42     		cmp	r4, r5
 2040 003a F4D3     		bcc	.L154
 2041              	.LBE12:
 733:Src/mode.c    ****     }
 734:Src/mode.c    ****     Motion_Adjust(1, 800.0f);
 2042              		.loc 1 734 0 is_stmt 1
 2043 003c 9FED158A 		vldr.32	s16, .L156+4
 2044 0040 B0EE480A 		vmov.f32	s0, s16
 2045 0044 0120     		movs	r0, #1
 2046 0046 FFF7FEFF 		bl	Motion_Adjust
 2047              	.LVL220:
 735:Src/mode.c    ****     Motion_FastGoal(1, 800.0f);
 2048              		.loc 1 735 0
 2049 004a B0EE480A 		vmov.f32	s0, s16
 2050 004e 0120     		movs	r0, #1
 2051 0050 FFF7FEFF 		bl	Motion_FastGoal
 2052              	.LVL221:
 736:Src/mode.c    ****     motor_flag = FALSE;
 2053              		.loc 1 736 0
 2054 0054 0024     		movs	r4, #0
 2055              	.LVL222:
 2056 0056 104B     		ldr	r3, .L156+8
 2057 0058 1C70     		strb	r4, [r3]
 737:Src/mode.c    ****     HAL_Delay(500);
 2058              		.loc 1 737 0
 2059 005a 4FF4FA70 		mov	r0, #500
 2060 005e FFF7FEFF 		bl	HAL_Delay
 2061              	.LVL223:
 738:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2062              		.loc 1 738 0
 2063 0062 49F64242 		movw	r2, #40002
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 52


 2064 0066 0D49     		ldr	r1, .L156+12
 2065 0068 0D4B     		ldr	r3, .L156+16
 2066 006a 1868     		ldr	r0, [r3]
 2067 006c FFF7FEFF 		bl	Flash_Write
 2068              	.LVL224:
 739:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2069              		.loc 1 739 0
 2070 0070 4FF49671 		mov	r1, #300
 2071 0074 4C20     		movs	r0, #76
 2072 0076 FFF7FEFF 		bl	Tim_BuzzerPwm
 2073              	.LVL225:
 740:Src/mode.c    ****     HAL_Delay(200);
 2074              		.loc 1 740 0
 2075 007a C820     		movs	r0, #200
 2076 007c FFF7FEFF 		bl	HAL_Delay
 2077              	.LVL226:
 741:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2078              		.loc 1 741 0
 2079 0080 2146     		mov	r1, r4
 2080 0082 0A20     		movs	r0, #10
 2081 0084 FFF7FEFF 		bl	Tim_BuzzerPwm
 2082              	.LVL227:
 742:Src/mode.c    **** }
 2083              		.loc 1 742 0
 2084 0088 BDEC028B 		vldm	sp!, {d8}
 2085              	.LCFI24:
 2086              		.cfi_restore 80
 2087              		.cfi_restore 81
 2088              		.cfi_def_cfa_offset 16
 2089 008c 38BD     		pop	{r3, r4, r5, pc}
 2090              	.LVL228:
 2091              	.L157:
 2092 008e 00BF     		.align	2
 2093              	.L156:
 2094 0090 00000000 		.word	enc
 2095 0094 00004844 		.word	1145569280
 2096 0098 00000000 		.word	motor_flag
 2097 009c 00000000 		.word	loger
 2098 00a0 00000000 		.word	start_address
 2099              		.cfi_endproc
 2100              	.LFE135:
 2102              		.section	.text.CheckFastestStraight,"ax",%progbits
 2103              		.align	1
 2104              		.global	CheckFastestStraight
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu fpv4-sp-d16
 2110              	CheckFastestStraight:
 2111              	.LFB136:
 743:Src/mode.c    **** 
 744:Src/mode.c    **** void CheckFastestStraight(uint8_t block)
 745:Src/mode.c    **** {
 2112              		.loc 1 745 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 53


 2116              	.LVL229:
 2117 0000 10B5     		push	{r4, lr}
 2118              	.LCFI25:
 2119              		.cfi_def_cfa_offset 8
 2120              		.cfi_offset 4, -8
 2121              		.cfi_offset 14, -4
 2122 0002 2DED028B 		vpush.64	{d8}
 2123              	.LCFI26:
 2124              		.cfi_def_cfa_offset 16
 2125              		.cfi_offset 80, -16
 2126              		.cfi_offset 81, -12
 2127 0006 0446     		mov	r4, r0
 746:Src/mode.c    ****     SetRunMode(1);
 2128              		.loc 1 746 0
 2129 0008 0120     		movs	r0, #1
 2130              	.LVL230:
 2131 000a FFF7FEFF 		bl	SetRunMode
 2132              	.LVL231:
 747:Src/mode.c    ****     enc.distance = 0;
 2133              		.loc 1 747 0
 2134 000e 194B     		ldr	r3, .L160
 2135 0010 0022     		movs	r2, #0
 2136 0012 1A60     		str	r2, [r3]	@ float
 748:Src/mode.c    ****     Motion_FastestStart(2 * (block - 1) + 1, VELO_EST);
 2137              		.loc 1 748 0
 2138 0014 9FED188A 		vldr.32	s16, .L160+4
 2139 0018 04F17F00 		add	r0, r4, #127
 2140 001c 4000     		lsls	r0, r0, #1
 2141 001e 0130     		adds	r0, r0, #1
 2142 0020 B0EE480A 		vmov.f32	s0, s16
 2143 0024 C0B2     		uxtb	r0, r0
 2144 0026 FFF7FEFF 		bl	Motion_FastestStart
 2145              	.LVL232:
 749:Src/mode.c    ****     //Motion_FastestAdjust(1, VELO_EST);
 750:Src/mode.c    ****     Motion_FastestGoal(1, VELO_EST);
 2146              		.loc 1 750 0
 2147 002a B0EE480A 		vmov.f32	s0, s16
 2148 002e 0120     		movs	r0, #1
 2149 0030 FFF7FEFF 		bl	Motion_FastestGoal
 2150              	.LVL233:
 751:Src/mode.c    ****     motor_flag = FALSE;
 2151              		.loc 1 751 0
 2152 0034 0024     		movs	r4, #0
 2153 0036 114B     		ldr	r3, .L160+8
 2154 0038 1C70     		strb	r4, [r3]
 752:Src/mode.c    ****     Tim_FanPwm(0);
 2155              		.loc 1 752 0
 2156 003a 2046     		mov	r0, r4
 2157 003c FFF7FEFF 		bl	Tim_FanPwm
 2158              	.LVL234:
 753:Src/mode.c    ****     HAL_Delay(500);
 2159              		.loc 1 753 0
 2160 0040 4FF4FA70 		mov	r0, #500
 2161 0044 FFF7FEFF 		bl	HAL_Delay
 2162              	.LVL235:
 754:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2163              		.loc 1 754 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 54


 2164 0048 49F64242 		movw	r2, #40002
 2165 004c 0C49     		ldr	r1, .L160+12
 2166 004e 0D4B     		ldr	r3, .L160+16
 2167 0050 1868     		ldr	r0, [r3]
 2168 0052 FFF7FEFF 		bl	Flash_Write
 2169              	.LVL236:
 755:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2170              		.loc 1 755 0
 2171 0056 4FF49671 		mov	r1, #300
 2172 005a 4C20     		movs	r0, #76
 2173 005c FFF7FEFF 		bl	Tim_BuzzerPwm
 2174              	.LVL237:
 756:Src/mode.c    ****     HAL_Delay(200);
 2175              		.loc 1 756 0
 2176 0060 C820     		movs	r0, #200
 2177 0062 FFF7FEFF 		bl	HAL_Delay
 2178              	.LVL238:
 757:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2179              		.loc 1 757 0
 2180 0066 2146     		mov	r1, r4
 2181 0068 0A20     		movs	r0, #10
 2182 006a FFF7FEFF 		bl	Tim_BuzzerPwm
 2183              	.LVL239:
 758:Src/mode.c    **** }
 2184              		.loc 1 758 0
 2185 006e BDEC028B 		vldm	sp!, {d8}
 2186              	.LCFI27:
 2187              		.cfi_restore 80
 2188              		.cfi_restore 81
 2189              		.cfi_def_cfa_offset 8
 2190 0072 10BD     		pop	{r4, pc}
 2191              	.L161:
 2192              		.align	2
 2193              	.L160:
 2194 0074 00000000 		.word	enc
 2195 0078 00009644 		.word	1150681088
 2196 007c 00000000 		.word	motor_flag
 2197 0080 00000000 		.word	loger
 2198 0084 00000000 		.word	start_address
 2199              		.cfi_endproc
 2200              	.LFE136:
 2202              		.section	.text.CheckDiagonal,"ax",%progbits
 2203              		.align	1
 2204              		.global	CheckDiagonal
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv4-sp-d16
 2210              	CheckDiagonal:
 2211              	.LFB137:
 759:Src/mode.c    **** 
 760:Src/mode.c    **** void CheckDiagonal(uint8_t block, int8_t dir)
 761:Src/mode.c    **** {
 2212              		.loc 1 761 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 55


 2216              	.LVL240:
 2217 0000 38B5     		push	{r3, r4, r5, lr}
 2218              	.LCFI28:
 2219              		.cfi_def_cfa_offset 16
 2220              		.cfi_offset 3, -16
 2221              		.cfi_offset 4, -12
 2222              		.cfi_offset 5, -8
 2223              		.cfi_offset 14, -4
 2224 0002 0446     		mov	r4, r0
 2225 0004 0D46     		mov	r5, r1
 762:Src/mode.c    ****     SetRunMode(0);
 2226              		.loc 1 762 0
 2227 0006 0020     		movs	r0, #0
 2228              	.LVL241:
 2229 0008 FFF7FEFF 		bl	SetRunMode
 2230              	.LVL242:
 763:Src/mode.c    ****     enc.distance = 0;
 2231              		.loc 1 763 0
 2232 000c 154B     		ldr	r3, .L167
 2233 000e 0022     		movs	r2, #0
 2234 0010 1A60     		str	r2, [r3]	@ float
 764:Src/mode.c    ****     Motion_DiagonalStart();
 2235              		.loc 1 764 0
 2236 0012 FFF7FEFF 		bl	Motion_DiagonalStart
 2237              	.LVL243:
 765:Src/mode.c    ****     if (dir == 1)
 2238              		.loc 1 765 0
 2239 0016 012D     		cmp	r5, #1
 2240 0018 1FD0     		beq	.L166
 766:Src/mode.c    ****     {
 767:Src/mode.c    ****         //Motion_DiagonalLeft(block);
 768:Src/mode.c    ****         Motion_Diagonal(block);
 769:Src/mode.c    ****     }
 770:Src/mode.c    ****     else
 771:Src/mode.c    ****     {
 772:Src/mode.c    ****         Motion_DiagonalRight(block);
 2241              		.loc 1 772 0
 2242 001a 2046     		mov	r0, r4
 2243 001c FFF7FEFF 		bl	Motion_DiagonalRight
 2244              	.LVL244:
 2245              	.L164:
 773:Src/mode.c    ****     }
 774:Src/mode.c    ****     Motion_DiagonalStop();
 2246              		.loc 1 774 0
 2247 0020 FFF7FEFF 		bl	Motion_DiagonalStop
 2248              	.LVL245:
 775:Src/mode.c    ****     motor_flag = FALSE;
 2249              		.loc 1 775 0
 2250 0024 0024     		movs	r4, #0
 2251 0026 104B     		ldr	r3, .L167+4
 2252 0028 1C70     		strb	r4, [r3]
 776:Src/mode.c    ****     HAL_Delay(500);
 2253              		.loc 1 776 0
 2254 002a 4FF4FA70 		mov	r0, #500
 2255 002e FFF7FEFF 		bl	HAL_Delay
 2256              	.LVL246:
 777:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 56


 2257              		.loc 1 777 0
 2258 0032 49F64242 		movw	r2, #40002
 2259 0036 0D49     		ldr	r1, .L167+8
 2260 0038 0D4B     		ldr	r3, .L167+12
 2261 003a 1868     		ldr	r0, [r3]
 2262 003c FFF7FEFF 		bl	Flash_Write
 2263              	.LVL247:
 778:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2264              		.loc 1 778 0
 2265 0040 4FF49671 		mov	r1, #300
 2266 0044 4C20     		movs	r0, #76
 2267 0046 FFF7FEFF 		bl	Tim_BuzzerPwm
 2268              	.LVL248:
 779:Src/mode.c    ****     HAL_Delay(200);
 2269              		.loc 1 779 0
 2270 004a C820     		movs	r0, #200
 2271 004c FFF7FEFF 		bl	HAL_Delay
 2272              	.LVL249:
 780:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2273              		.loc 1 780 0
 2274 0050 2146     		mov	r1, r4
 2275 0052 0A20     		movs	r0, #10
 2276 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 2277              	.LVL250:
 781:Src/mode.c    **** }
 2278              		.loc 1 781 0
 2279 0058 38BD     		pop	{r3, r4, r5, pc}
 2280              	.L166:
 768:Src/mode.c    ****     }
 2281              		.loc 1 768 0
 2282 005a 2046     		mov	r0, r4
 2283 005c FFF7FEFF 		bl	Motion_Diagonal
 2284              	.LVL251:
 2285 0060 DEE7     		b	.L164
 2286              	.L168:
 2287 0062 00BF     		.align	2
 2288              	.L167:
 2289 0064 00000000 		.word	enc
 2290 0068 00000000 		.word	motor_flag
 2291 006c 00000000 		.word	loger
 2292 0070 00000000 		.word	start_address
 2293              		.cfi_endproc
 2294              	.LFE137:
 2296              		.section	.text.CheckTurn,"ax",%progbits
 2297              		.align	1
 2298              		.global	CheckTurn
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2302              		.fpu fpv4-sp-d16
 2304              	CheckTurn:
 2305              	.LFB138:
 782:Src/mode.c    **** 
 783:Src/mode.c    **** void CheckTurn(uint8_t num)
 784:Src/mode.c    **** {
 2306              		.loc 1 784 0
 2307              		.cfi_startproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 57


 2308              		@ args = 0, pretend = 0, frame = 0
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 2310              	.LVL252:
 2311 0000 38B5     		push	{r3, r4, r5, lr}
 2312              	.LCFI29:
 2313              		.cfi_def_cfa_offset 16
 2314              		.cfi_offset 3, -16
 2315              		.cfi_offset 4, -12
 2316              		.cfi_offset 5, -8
 2317              		.cfi_offset 14, -4
 2318 0002 0546     		mov	r5, r0
 785:Src/mode.c    ****     SetRunMode(0);
 2319              		.loc 1 785 0
 2320 0004 0020     		movs	r0, #0
 2321              	.LVL253:
 2322 0006 FFF7FEFF 		bl	SetRunMode
 2323              	.LVL254:
 786:Src/mode.c    ****     gyro_z.degree = 0;
 2324              		.loc 1 786 0
 2325 000a 114B     		ldr	r3, .L173
 2326 000c 0022     		movs	r2, #0
 2327 000e 5A60     		str	r2, [r3, #4]	@ float
 2328              	.LVL255:
 2329              	.LBB13:
 787:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2330              		.loc 1 787 0
 2331 0010 0024     		movs	r4, #0
 2332 0012 03E0     		b	.L170
 2333              	.LVL256:
 2334              	.L171:
 788:Src/mode.c    ****     {
 789:Src/mode.c    ****         Motion_TestTurn();
 2335              		.loc 1 789 0 discriminator 3
 2336 0014 FFF7FEFF 		bl	Motion_TestTurn
 2337              	.LVL257:
 787:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2338              		.loc 1 787 0 discriminator 3
 2339 0018 0134     		adds	r4, r4, #1
 2340              	.LVL258:
 2341 001a E4B2     		uxtb	r4, r4
 2342              	.LVL259:
 2343              	.L170:
 787:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2344              		.loc 1 787 0 is_stmt 0 discriminator 1
 2345 001c AC42     		cmp	r4, r5
 2346 001e F9D3     		bcc	.L171
 2347              	.LBE13:
 790:Src/mode.c    ****     }
 791:Src/mode.c    ****     motor_flag = FALSE;
 2348              		.loc 1 791 0 is_stmt 1
 2349 0020 0024     		movs	r4, #0
 2350              	.LVL260:
 2351 0022 0C4B     		ldr	r3, .L173+4
 2352 0024 1C70     		strb	r4, [r3]
 792:Src/mode.c    ****     //loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 793:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2353              		.loc 1 793 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 58


 2354 0026 49F64242 		movw	r2, #40002
 2355 002a 0B49     		ldr	r1, .L173+8
 2356 002c 0B4B     		ldr	r3, .L173+12
 2357 002e 1868     		ldr	r0, [r3]
 2358 0030 FFF7FEFF 		bl	Flash_Write
 2359              	.LVL261:
 794:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2360              		.loc 1 794 0
 2361 0034 4FF49671 		mov	r1, #300
 2362 0038 4C20     		movs	r0, #76
 2363 003a FFF7FEFF 		bl	Tim_BuzzerPwm
 2364              	.LVL262:
 795:Src/mode.c    ****     HAL_Delay(200);
 2365              		.loc 1 795 0
 2366 003e C820     		movs	r0, #200
 2367 0040 FFF7FEFF 		bl	HAL_Delay
 2368              	.LVL263:
 796:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2369              		.loc 1 796 0
 2370 0044 2146     		mov	r1, r4
 2371 0046 0A20     		movs	r0, #10
 2372 0048 FFF7FEFF 		bl	Tim_BuzzerPwm
 2373              	.LVL264:
 797:Src/mode.c    **** }
 2374              		.loc 1 797 0
 2375 004c 38BD     		pop	{r3, r4, r5, pc}
 2376              	.L174:
 2377 004e 00BF     		.align	2
 2378              	.L173:
 2379 0050 00000000 		.word	gyro_z
 2380 0054 00000000 		.word	motor_flag
 2381 0058 00000000 		.word	loger
 2382 005c 00000000 		.word	start_address
 2383              		.cfi_endproc
 2384              	.LFE138:
 2386              		.section	.text.PrintOutPut,"ax",%progbits
 2387              		.align	1
 2388              		.global	PrintOutPut
 2389              		.syntax unified
 2390              		.thumb
 2391              		.thumb_func
 2392              		.fpu fpv4-sp-d16
 2394              	PrintOutPut:
 2395              	.LFB139:
 798:Src/mode.c    **** 
 799:Src/mode.c    **** void PrintOutPut(void)
 800:Src/mode.c    **** {
 2396              		.loc 1 800 0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 0, uses_anonymous_args = 0
 2400 0000 30B5     		push	{r4, r5, lr}
 2401              	.LCFI30:
 2402              		.cfi_def_cfa_offset 12
 2403              		.cfi_offset 4, -12
 2404              		.cfi_offset 5, -8
 2405              		.cfi_offset 14, -4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 59


 2406 0002 83B0     		sub	sp, sp, #12
 2407              	.LCFI31:
 2408              		.cfi_def_cfa_offset 24
 801:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2409              		.loc 1 801 0
 2410 0004 49F64242 		movw	r2, #40002
 2411 0008 1649     		ldr	r1, .L179
 2412 000a 174B     		ldr	r3, .L179+4
 2413 000c 1868     		ldr	r0, [r3]
 2414 000e FFF7FEFF 		bl	Flash_Load
 2415              	.LVL265:
 2416              	.LBB14:
 802:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2417              		.loc 1 802 0
 2418 0012 0024     		movs	r4, #0
 2419 0014 1FE0     		b	.L176
 2420              	.LVL266:
 2421              	.L177:
 803:Src/mode.c    ****     {
 804:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 805:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 806:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
 2422              		.loc 1 806 0 discriminator 3
 2423 0016 1348     		ldr	r0, .L179
 2424 0018 00EB4403 		add	r3, r0, r4, lsl #1
 2425 001c B3F90210 		ldrsh	r1, [r3, #2]
 2426 0020 04F51C53 		add	r3, r4, #9984
 2427 0024 1033     		adds	r3, r3, #16
 2428 0026 00EB4303 		add	r3, r0, r3, lsl #1
 2429 002a B3F90220 		ldrsh	r2, [r3, #2]
 2430 002e 04F59C53 		add	r3, r4, #4992
 2431 0032 0833     		adds	r3, r3, #8
 2432 0034 00EB4303 		add	r3, r0, r3, lsl #1
 2433 0038 B3F90230 		ldrsh	r3, [r3, #2]
 2434 003c 04F56A55 		add	r5, r4, #14976
 2435 0040 1835     		adds	r5, r5, #24
 2436 0042 00EB4500 		add	r0, r0, r5, lsl #1
 2437 0046 B0F90200 		ldrsh	r0, [r0, #2]
 2438 004a 0090     		str	r0, [sp]
 2439 004c 0748     		ldr	r0, .L179+8
 2440 004e FFF7FEFF 		bl	printf
 2441              	.LVL267:
 802:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2442              		.loc 1 802 0 discriminator 3
 2443 0052 0134     		adds	r4, r4, #1
 2444              	.LVL268:
 2445 0054 A4B2     		uxth	r4, r4
 2446              	.LVL269:
 2447              	.L176:
 802:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2448              		.loc 1 802 0 is_stmt 0 discriminator 1
 2449 0056 034B     		ldr	r3, .L179
 2450 0058 1B88     		ldrh	r3, [r3]
 2451 005a A342     		cmp	r3, r4
 2452 005c DBD2     		bcs	.L177
 2453              	.LBE14:
 807:Src/mode.c    ****     }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 60


 808:Src/mode.c    **** }
 2454              		.loc 1 808 0 is_stmt 1
 2455 005e 03B0     		add	sp, sp, #12
 2456              	.LCFI32:
 2457              		.cfi_def_cfa_offset 12
 2458              		@ sp needed
 2459 0060 30BD     		pop	{r4, r5, pc}
 2460              	.LVL270:
 2461              	.L180:
 2462 0062 00BF     		.align	2
 2463              	.L179:
 2464 0064 00000000 		.word	loger
 2465 0068 00000000 		.word	start_address
 2466 006c 00000000 		.word	.LC2
 2467              		.cfi_endproc
 2468              	.LFE139:
 2470              		.section	.text.PrintWallData,"ax",%progbits
 2471              		.align	1
 2472              		.global	PrintWallData
 2473              		.syntax unified
 2474              		.thumb
 2475              		.thumb_func
 2476              		.fpu fpv4-sp-d16
 2478              	PrintWallData:
 2479              	.LFB140:
 809:Src/mode.c    **** 
 810:Src/mode.c    **** void PrintWallData(void)
 811:Src/mode.c    **** {
 2480              		.loc 1 811 0
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 136
 2483              		@ frame_needed = 0, uses_anonymous_args = 0
 2484 0000 30B5     		push	{r4, r5, lr}
 2485              	.LCFI33:
 2486              		.cfi_def_cfa_offset 12
 2487              		.cfi_offset 4, -12
 2488              		.cfi_offset 5, -8
 2489              		.cfi_offset 14, -4
 2490 0002 A3B0     		sub	sp, sp, #140
 2491              	.LCFI34:
 2492              		.cfi_def_cfa_offset 152
 812:Src/mode.c    ****     wallData_t walldata;
 813:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&walldata, sizeof(wallData_t));
 2493              		.loc 1 813 0
 2494 0004 8822     		movs	r2, #136
 2495 0006 6946     		mov	r1, sp
 2496 0008 2C4B     		ldr	r3, .L198
 2497 000a 1868     		ldr	r0, [r3]
 2498 000c FFF7FEFF 		bl	Flash_Load
 2499              	.LVL271:
 814:Src/mode.c    ****     printf("\r\n");
 2500              		.loc 1 814 0
 2501 0010 2B48     		ldr	r0, .L198+4
 2502 0012 FFF7FEFF 		bl	puts
 2503              	.LVL272:
 2504              	.LBB15:
 815:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 61


 2505              		.loc 1 815 0
 2506 0016 0024     		movs	r4, #0
 2507 0018 07E0     		b	.L182
 2508              	.LVL273:
 2509              	.L183:
 816:Src/mode.c    ****     {
 817:Src/mode.c    ****         printf("+");
 2510              		.loc 1 817 0 discriminator 3
 2511 001a 2B20     		movs	r0, #43
 2512 001c FFF7FEFF 		bl	putchar
 2513              	.LVL274:
 818:Src/mode.c    ****         printf("---");
 2514              		.loc 1 818 0 discriminator 3
 2515 0020 2848     		ldr	r0, .L198+8
 2516 0022 FFF7FEFF 		bl	printf
 2517              	.LVL275:
 815:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2518              		.loc 1 815 0 discriminator 3
 2519 0026 0134     		adds	r4, r4, #1
 2520              	.LVL276:
 2521 0028 E4B2     		uxtb	r4, r4
 2522              	.LVL277:
 2523              	.L182:
 815:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2524              		.loc 1 815 0 is_stmt 0 discriminator 1
 2525 002a 0F2C     		cmp	r4, #15
 2526 002c F5D9     		bls	.L183
 2527              	.LBE15:
 819:Src/mode.c    ****     }
 820:Src/mode.c    ****     printf("+\r\n");
 2528              		.loc 1 820 0 is_stmt 1
 2529 002e 2648     		ldr	r0, .L198+12
 2530 0030 FFF7FEFF 		bl	puts
 2531              	.LVL278:
 2532              	.LBB16:
 821:Src/mode.c    ****     for (unsigned char j = MAZE_SIZE; j > 0; j--)
 2533              		.loc 1 821 0
 2534 0034 1025     		movs	r5, #16
 2535 0036 3CE0     		b	.L184
 2536              	.LVL279:
 2537              	.L185:
 2538              	.LBB17:
 822:Src/mode.c    ****     {
 823:Src/mode.c    ****         for (unsigned char i = 0; i < MAZE_SIZE; i++)
 824:Src/mode.c    ****         {
 825:Src/mode.c    ****             if (walldata.vertical[i] & 0b1 << (j - 1))
 826:Src/mode.c    ****             {
 827:Src/mode.c    ****                 printf("|");
 828:Src/mode.c    ****             }
 829:Src/mode.c    ****             else
 830:Src/mode.c    ****             {
 831:Src/mode.c    ****                 printf(" ");
 2539              		.loc 1 831 0
 2540 0038 2020     		movs	r0, #32
 2541 003a FFF7FEFF 		bl	putchar
 2542              	.LVL280:
 2543              	.L186:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 62


 832:Src/mode.c    ****             }
 833:Src/mode.c    ****             printf("   ");
 2544              		.loc 1 833 0 discriminator 2
 2545 003e 2348     		ldr	r0, .L198+16
 2546 0040 FFF7FEFF 		bl	printf
 2547              	.LVL281:
 823:Src/mode.c    ****         {
 2548              		.loc 1 823 0 discriminator 2
 2549 0044 0134     		adds	r4, r4, #1
 2550              	.LVL282:
 2551 0046 E4B2     		uxtb	r4, r4
 2552              	.LVL283:
 2553              	.L192:
 823:Src/mode.c    ****         {
 2554              		.loc 1 823 0 is_stmt 0 discriminator 1
 2555 0048 0F2C     		cmp	r4, #15
 2556 004a 0DD8     		bhi	.L195
 825:Src/mode.c    ****             {
 2557              		.loc 1 825 0 is_stmt 1
 2558 004c 22AB     		add	r3, sp, #136
 2559 004e 03EB4403 		add	r3, r3, r4, lsl #1
 2560 0052 33F8883C 		ldrh	r3, [r3, #-136]
 2561 0056 6A1E     		subs	r2, r5, #1
 2562 0058 1341     		asrs	r3, r3, r2
 2563 005a 13F0010F 		tst	r3, #1
 2564 005e EBD0     		beq	.L185
 827:Src/mode.c    ****             }
 2565              		.loc 1 827 0
 2566 0060 7C20     		movs	r0, #124
 2567 0062 FFF7FEFF 		bl	putchar
 2568              	.LVL284:
 2569 0066 EAE7     		b	.L186
 2570              	.L195:
 2571              	.LBE17:
 834:Src/mode.c    ****         }
 835:Src/mode.c    ****         printf("|");
 2572              		.loc 1 835 0
 2573 0068 7C20     		movs	r0, #124
 2574 006a FFF7FEFF 		bl	putchar
 2575              	.LVL285:
 836:Src/mode.c    ****         printf("\r\n");
 2576              		.loc 1 836 0
 2577 006e 1448     		ldr	r0, .L198+4
 2578 0070 FFF7FEFF 		bl	puts
 2579              	.LVL286:
 2580              	.LBB18:
 837:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2581              		.loc 1 837 0
 2582 0074 0024     		movs	r4, #0
 2583              	.LVL287:
 2584 0076 03E0     		b	.L188
 2585              	.LVL288:
 2586              	.L189:
 838:Src/mode.c    ****         {
 839:Src/mode.c    ****             printf("+");
 840:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 841:Src/mode.c    ****             {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 63


 842:Src/mode.c    ****                 printf("---");
 843:Src/mode.c    ****             }
 844:Src/mode.c    ****             else
 845:Src/mode.c    ****             {
 846:Src/mode.c    ****                 printf("   ");
 2587              		.loc 1 846 0
 2588 0078 1448     		ldr	r0, .L198+16
 2589 007a FFF7FEFF 		bl	printf
 2590              	.LVL289:
 2591              	.L190:
 837:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2592              		.loc 1 837 0 discriminator 2
 2593 007e 0134     		adds	r4, r4, #1
 2594              	.LVL290:
 2595              	.L188:
 837:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2596              		.loc 1 837 0 is_stmt 0 discriminator 1
 2597 0080 0F2C     		cmp	r4, #15
 2598 0082 11D8     		bhi	.L196
 839:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 2599              		.loc 1 839 0 is_stmt 1
 2600 0084 2B20     		movs	r0, #43
 2601 0086 FFF7FEFF 		bl	putchar
 2602              	.LVL291:
 840:Src/mode.c    ****             {
 2603              		.loc 1 840 0
 2604 008a 05F10F03 		add	r3, r5, #15
 2605 008e 22AA     		add	r2, sp, #136
 2606 0090 02EB4303 		add	r3, r2, r3, lsl #1
 2607 0094 33F8863C 		ldrh	r3, [r3, #-134]
 2608 0098 2341     		asrs	r3, r3, r4
 2609 009a 13F0010F 		tst	r3, #1
 2610 009e EBD0     		beq	.L189
 842:Src/mode.c    ****             }
 2611              		.loc 1 842 0
 2612 00a0 0848     		ldr	r0, .L198+8
 2613 00a2 FFF7FEFF 		bl	printf
 2614              	.LVL292:
 2615 00a6 EAE7     		b	.L190
 2616              	.L196:
 2617              	.LBE18:
 847:Src/mode.c    ****             }
 848:Src/mode.c    ****         }
 849:Src/mode.c    ****         printf("+\r\n");
 2618              		.loc 1 849 0 discriminator 2
 2619 00a8 0748     		ldr	r0, .L198+12
 2620 00aa FFF7FEFF 		bl	puts
 2621              	.LVL293:
 821:Src/mode.c    ****     {
 2622              		.loc 1 821 0 discriminator 2
 2623 00ae 013D     		subs	r5, r5, #1
 2624              	.LVL294:
 2625 00b0 EDB2     		uxtb	r5, r5
 2626              	.LVL295:
 2627              	.L184:
 821:Src/mode.c    ****     {
 2628              		.loc 1 821 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 64


 2629 00b2 0DB1     		cbz	r5, .L197
 2630              	.LBB19:
 823:Src/mode.c    ****         {
 2631              		.loc 1 823 0 is_stmt 1
 2632 00b4 0024     		movs	r4, #0
 2633 00b6 C7E7     		b	.L192
 2634              	.L197:
 2635              	.LBE19:
 2636              	.LBE16:
 850:Src/mode.c    ****     }
 851:Src/mode.c    **** }
 2637              		.loc 1 851 0
 2638 00b8 23B0     		add	sp, sp, #140
 2639              	.LCFI35:
 2640              		.cfi_def_cfa_offset 12
 2641              		@ sp needed
 2642 00ba 30BD     		pop	{r4, r5, pc}
 2643              	.LVL296:
 2644              	.L199:
 2645              		.align	2
 2646              	.L198:
 2647 00bc 00000000 		.word	start_address
 2648 00c0 00000000 		.word	.LC3
 2649 00c4 04000000 		.word	.LC4
 2650 00c8 08000000 		.word	.LC5
 2651 00cc 0C000000 		.word	.LC6
 2652              		.cfi_endproc
 2653              	.LFE140:
 2655              		.section	.text.PrintMotion,"ax",%progbits
 2656              		.align	1
 2657              		.global	PrintMotion
 2658              		.syntax unified
 2659              		.thumb
 2660              		.thumb_func
 2661              		.fpu fpv4-sp-d16
 2663              	PrintMotion:
 2664              	.LFB141:
 852:Src/mode.c    **** 
 853:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail)
 854:Src/mode.c    **** {
 2665              		.loc 1 854 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL297:
 2670 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2671              	.LCFI36:
 2672              		.cfi_def_cfa_offset 24
 2673              		.cfi_offset 3, -24
 2674              		.cfi_offset 4, -20
 2675              		.cfi_offset 5, -16
 2676              		.cfi_offset 6, -12
 2677              		.cfi_offset 7, -8
 2678              		.cfi_offset 14, -4
 2679 0002 0646     		mov	r6, r0
 2680 0004 0F46     		mov	r7, r1
 2681 0006 1546     		mov	r5, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 65


 2682              	.LVL298:
 855:Src/mode.c    ****     uint8_t head = 0;
 2683              		.loc 1 855 0
 2684 0008 0024     		movs	r4, #0
 856:Src/mode.c    ****     while (head < tail)
 2685              		.loc 1 856 0
 2686 000a 09E0     		b	.L201
 2687              	.LVL299:
 2688              	.L207:
 857:Src/mode.c    ****     {
 858:Src/mode.c    ****         switch (motion[head] & 0xf)
 859:Src/mode.c    ****         {
 860:Src/mode.c    ****         case START:
 861:Src/mode.c    ****             printf("\r\nSTART:%d\tv_start:%ld\tv_end:%ld\r\n", motion[head] >> 4, velocity[head] >>
 2689              		.loc 1 861 0
 2690 000c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2691 0010 93B2     		uxth	r3, r2
 2692 0012 120C     		lsrs	r2, r2, #16
 2693 0014 0909     		lsrs	r1, r1, #4
 2694 0016 7648     		ldr	r0, .L235
 2695 0018 FFF7FEFF 		bl	printf
 2696              	.LVL300:
 2697              	.L211:
 862:Src/mode.c    ****             break;
 863:Src/mode.c    ****         case LEFT:
 864:Src/mode.c    ****             switch (motion[head] >> 4)
 865:Src/mode.c    ****             {
 866:Src/mode.c    ****             case SEARCH:
 867:Src/mode.c    ****                 printf("LEFT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 868:Src/mode.c    ****                 break;
 869:Src/mode.c    ****             case T_90:
 870:Src/mode.c    ****                 printf("LEFT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[head
 871:Src/mode.c    ****                 break;
 872:Src/mode.c    ****             case T_180:
 873:Src/mode.c    ****                 printf("LEFT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 874:Src/mode.c    ****                 break;
 875:Src/mode.c    ****             case T_45IN:
 876:Src/mode.c    ****                 printf("LEFT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 877:Src/mode.c    ****                 break;
 878:Src/mode.c    ****             case T_45OUT:
 879:Src/mode.c    ****                 printf("LEFT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 880:Src/mode.c    ****                 break;
 881:Src/mode.c    ****             case T_135IN:
 882:Src/mode.c    ****                 printf("LEFT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 883:Src/mode.c    ****                 break;
 884:Src/mode.c    ****             case T_135OUT:
 885:Src/mode.c    ****                 printf("LEFT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 886:Src/mode.c    ****                 break;
 887:Src/mode.c    ****             case T_V90:
 888:Src/mode.c    ****                 printf("LEFT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 889:Src/mode.c    ****                 break;
 890:Src/mode.c    ****             default:
 891:Src/mode.c    ****                 printf("\r\n");
 892:Src/mode.c    ****                 break;
 893:Src/mode.c    ****             }
 894:Src/mode.c    ****             break;
 895:Src/mode.c    ****         case RIGHT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 66


 896:Src/mode.c    ****             switch (motion[head] >> 4)
 897:Src/mode.c    ****             {
 898:Src/mode.c    ****             case SEARCH:
 899:Src/mode.c    ****                 printf("RIGHT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 900:Src/mode.c    ****                 break;
 901:Src/mode.c    ****             case T_90:
 902:Src/mode.c    ****                 printf("RIGHT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 903:Src/mode.c    ****                 break;
 904:Src/mode.c    ****             case T_180:
 905:Src/mode.c    ****                 printf("RIGHT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 906:Src/mode.c    ****                 break;
 907:Src/mode.c    ****             case T_45IN:
 908:Src/mode.c    ****                 printf("RIGHT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 909:Src/mode.c    ****                 break;
 910:Src/mode.c    ****             case T_45OUT:
 911:Src/mode.c    ****                 printf("RIGHT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 912:Src/mode.c    ****                 break;
 913:Src/mode.c    ****             case T_135IN:
 914:Src/mode.c    ****                 printf("RIGHT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 915:Src/mode.c    ****                 break;
 916:Src/mode.c    ****             case T_135OUT:
 917:Src/mode.c    ****                 printf("RIGHT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity
 918:Src/mode.c    ****                 break;
 919:Src/mode.c    ****             case T_V90:
 920:Src/mode.c    ****                 printf("RIGHT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 921:Src/mode.c    ****                 break;
 922:Src/mode.c    ****             default:
 923:Src/mode.c    ****                 printf("\r\n");
 924:Src/mode.c    ****                 break;
 925:Src/mode.c    ****             }
 926:Src/mode.c    ****             break;
 927:Src/mode.c    ****         case FRONT:
 928:Src/mode.c    ****             printf("FRONT:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16,
 929:Src/mode.c    ****             break;
 930:Src/mode.c    ****         case DIAGONAL:
 931:Src/mode.c    ****             printf("DIAGONAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 
 932:Src/mode.c    ****             break;
 933:Src/mode.c    ****         case GOAL:
 934:Src/mode.c    ****             printf("GOAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16, 
 935:Src/mode.c    ****             break;
 936:Src/mode.c    ****         case ADJUST:
 937:Src/mode.c    ****             printf("ADJUST:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16
 938:Src/mode.c    ****             break;
 939:Src/mode.c    ****         default:
 940:Src/mode.c    ****             printf("\r\n");
 941:Src/mode.c    ****             break;
 942:Src/mode.c    ****         }
 943:Src/mode.c    ****         head++;
 2698              		.loc 1 943 0
 2699 001c 0134     		adds	r4, r4, #1
 2700              	.LVL301:
 2701 001e E4B2     		uxtb	r4, r4
 2702              	.LVL302:
 2703              	.L201:
 856:Src/mode.c    ****     {
 2704              		.loc 1 856 0
 2705 0020 AC42     		cmp	r4, r5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 67


 2706 0022 80F0E380 		bcs	.L234
 858:Src/mode.c    ****         {
 2707              		.loc 1 858 0
 2708 0026 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2709 002a 01F00F03 		and	r3, r1, #15
 2710 002e 0A2B     		cmp	r3, #10
 2711 0030 00F2D880 		bhi	.L202
 2712 0034 01A0     		adr	r0, .L204
 2713 0036 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 2714 003a 00BF     		.p2align 2
 2715              	.L204:
 2716 003c 9D010000 		.word	.L203+1
 2717 0040 69000000 		.word	.L205+1
 2718 0044 03010000 		.word	.L206+1
 2719 0048 E5010000 		.word	.L202+1
 2720 004c E5010000 		.word	.L202+1
 2721 0050 0D000000 		.word	.L207+1
 2722 0054 C1010000 		.word	.L208+1
 2723 0058 AF010000 		.word	.L209+1
 2724 005c E5010000 		.word	.L202+1
 2725 0060 E5010000 		.word	.L202+1
 2726 0064 D3010000 		.word	.L210+1
 2727              		.p2align 1
 2728              	.L205:
 864:Src/mode.c    ****             {
 2729              		.loc 1 864 0
 2730 0068 0909     		lsrs	r1, r1, #4
 2731 006a 0729     		cmp	r1, #7
 2732 006c 45D8     		bhi	.L212
 2733 006e DFE801F0 		tbb	[pc, r1]
 2734              	.L214:
 2735 0072 04       		.byte	(.L213-.L214)/2
 2736 0073 1C       		.byte	(.L215-.L214)/2
 2737 0074 2C       		.byte	(.L216-.L214)/2
 2738 0075 0C       		.byte	(.L217-.L214)/2
 2739 0076 14       		.byte	(.L218-.L214)/2
 2740 0077 24       		.byte	(.L219-.L214)/2
 2741 0078 34       		.byte	(.L220-.L214)/2
 2742 0079 3C       		.byte	(.L221-.L214)/2
 2743              		.p2align 1
 2744              	.L213:
 867:Src/mode.c    ****                 break;
 2745              		.loc 1 867 0
 2746 007a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2747 007e 8AB2     		uxth	r2, r1
 2748 0080 090C     		lsrs	r1, r1, #16
 2749 0082 5C48     		ldr	r0, .L235+4
 2750 0084 FFF7FEFF 		bl	printf
 2751              	.LVL303:
 868:Src/mode.c    ****             case T_90:
 2752              		.loc 1 868 0
 2753 0088 C8E7     		b	.L211
 2754              	.L217:
 870:Src/mode.c    ****                 break;
 2755              		.loc 1 870 0
 2756 008a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2757 008e 8AB2     		uxth	r2, r1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 68


 2758 0090 090C     		lsrs	r1, r1, #16
 2759 0092 5948     		ldr	r0, .L235+8
 2760 0094 FFF7FEFF 		bl	printf
 2761              	.LVL304:
 871:Src/mode.c    ****             case T_180:
 2762              		.loc 1 871 0
 2763 0098 C0E7     		b	.L211
 2764              	.L218:
 873:Src/mode.c    ****                 break;
 2765              		.loc 1 873 0
 2766 009a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2767 009e 8AB2     		uxth	r2, r1
 2768 00a0 090C     		lsrs	r1, r1, #16
 2769 00a2 5648     		ldr	r0, .L235+12
 2770 00a4 FFF7FEFF 		bl	printf
 2771              	.LVL305:
 874:Src/mode.c    ****             case T_45IN:
 2772              		.loc 1 874 0
 2773 00a8 B8E7     		b	.L211
 2774              	.L215:
 876:Src/mode.c    ****                 break;
 2775              		.loc 1 876 0
 2776 00aa 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2777 00ae 8AB2     		uxth	r2, r1
 2778 00b0 090C     		lsrs	r1, r1, #16
 2779 00b2 5348     		ldr	r0, .L235+16
 2780 00b4 FFF7FEFF 		bl	printf
 2781              	.LVL306:
 877:Src/mode.c    ****             case T_45OUT:
 2782              		.loc 1 877 0
 2783 00b8 B0E7     		b	.L211
 2784              	.L219:
 879:Src/mode.c    ****                 break;
 2785              		.loc 1 879 0
 2786 00ba 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2787 00be 8AB2     		uxth	r2, r1
 2788 00c0 090C     		lsrs	r1, r1, #16
 2789 00c2 5048     		ldr	r0, .L235+20
 2790 00c4 FFF7FEFF 		bl	printf
 2791              	.LVL307:
 880:Src/mode.c    ****             case T_135IN:
 2792              		.loc 1 880 0
 2793 00c8 A8E7     		b	.L211
 2794              	.L216:
 882:Src/mode.c    ****                 break;
 2795              		.loc 1 882 0
 2796 00ca 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2797 00ce 8AB2     		uxth	r2, r1
 2798 00d0 090C     		lsrs	r1, r1, #16
 2799 00d2 4D48     		ldr	r0, .L235+24
 2800 00d4 FFF7FEFF 		bl	printf
 2801              	.LVL308:
 883:Src/mode.c    ****             case T_135OUT:
 2802              		.loc 1 883 0
 2803 00d8 A0E7     		b	.L211
 2804              	.L220:
 885:Src/mode.c    ****                 break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 69


 2805              		.loc 1 885 0
 2806 00da 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2807 00de 8AB2     		uxth	r2, r1
 2808 00e0 090C     		lsrs	r1, r1, #16
 2809 00e2 4A48     		ldr	r0, .L235+28
 2810 00e4 FFF7FEFF 		bl	printf
 2811              	.LVL309:
 886:Src/mode.c    ****             case T_V90:
 2812              		.loc 1 886 0
 2813 00e8 98E7     		b	.L211
 2814              	.L221:
 888:Src/mode.c    ****                 break;
 2815              		.loc 1 888 0
 2816 00ea 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2817 00ee 8AB2     		uxth	r2, r1
 2818 00f0 090C     		lsrs	r1, r1, #16
 2819 00f2 4748     		ldr	r0, .L235+32
 2820 00f4 FFF7FEFF 		bl	printf
 2821              	.LVL310:
 889:Src/mode.c    ****             default:
 2822              		.loc 1 889 0
 2823 00f8 90E7     		b	.L211
 2824              	.L212:
 891:Src/mode.c    ****                 break;
 2825              		.loc 1 891 0
 2826 00fa 4648     		ldr	r0, .L235+36
 2827 00fc FFF7FEFF 		bl	puts
 2828              	.LVL311:
 892:Src/mode.c    ****             }
 2829              		.loc 1 892 0
 2830 0100 8CE7     		b	.L211
 2831              	.L206:
 896:Src/mode.c    ****             {
 2832              		.loc 1 896 0
 2833 0102 0909     		lsrs	r1, r1, #4
 2834 0104 0729     		cmp	r1, #7
 2835 0106 45D8     		bhi	.L222
 2836 0108 DFE801F0 		tbb	[pc, r1]
 2837              	.L224:
 2838 010c 04       		.byte	(.L223-.L224)/2
 2839 010d 1C       		.byte	(.L225-.L224)/2
 2840 010e 2C       		.byte	(.L226-.L224)/2
 2841 010f 0C       		.byte	(.L227-.L224)/2
 2842 0110 14       		.byte	(.L228-.L224)/2
 2843 0111 24       		.byte	(.L229-.L224)/2
 2844 0112 34       		.byte	(.L230-.L224)/2
 2845 0113 3C       		.byte	(.L231-.L224)/2
 2846              		.p2align 1
 2847              	.L223:
 899:Src/mode.c    ****                 break;
 2848              		.loc 1 899 0
 2849 0114 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2850 0118 8AB2     		uxth	r2, r1
 2851 011a 090C     		lsrs	r1, r1, #16
 2852 011c 3E48     		ldr	r0, .L235+40
 2853 011e FFF7FEFF 		bl	printf
 2854              	.LVL312:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 70


 900:Src/mode.c    ****             case T_90:
 2855              		.loc 1 900 0
 2856 0122 7BE7     		b	.L211
 2857              	.L227:
 902:Src/mode.c    ****                 break;
 2858              		.loc 1 902 0
 2859 0124 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2860 0128 8AB2     		uxth	r2, r1
 2861 012a 090C     		lsrs	r1, r1, #16
 2862 012c 3B48     		ldr	r0, .L235+44
 2863 012e FFF7FEFF 		bl	printf
 2864              	.LVL313:
 903:Src/mode.c    ****             case T_180:
 2865              		.loc 1 903 0
 2866 0132 73E7     		b	.L211
 2867              	.L228:
 905:Src/mode.c    ****                 break;
 2868              		.loc 1 905 0
 2869 0134 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2870 0138 8AB2     		uxth	r2, r1
 2871 013a 090C     		lsrs	r1, r1, #16
 2872 013c 3848     		ldr	r0, .L235+48
 2873 013e FFF7FEFF 		bl	printf
 2874              	.LVL314:
 906:Src/mode.c    ****             case T_45IN:
 2875              		.loc 1 906 0
 2876 0142 6BE7     		b	.L211
 2877              	.L225:
 908:Src/mode.c    ****                 break;
 2878              		.loc 1 908 0
 2879 0144 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2880 0148 8AB2     		uxth	r2, r1
 2881 014a 090C     		lsrs	r1, r1, #16
 2882 014c 3548     		ldr	r0, .L235+52
 2883 014e FFF7FEFF 		bl	printf
 2884              	.LVL315:
 909:Src/mode.c    ****             case T_45OUT:
 2885              		.loc 1 909 0
 2886 0152 63E7     		b	.L211
 2887              	.L229:
 911:Src/mode.c    ****                 break;
 2888              		.loc 1 911 0
 2889 0154 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2890 0158 8AB2     		uxth	r2, r1
 2891 015a 090C     		lsrs	r1, r1, #16
 2892 015c 3248     		ldr	r0, .L235+56
 2893 015e FFF7FEFF 		bl	printf
 2894              	.LVL316:
 912:Src/mode.c    ****             case T_135IN:
 2895              		.loc 1 912 0
 2896 0162 5BE7     		b	.L211
 2897              	.L226:
 914:Src/mode.c    ****                 break;
 2898              		.loc 1 914 0
 2899 0164 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2900 0168 8AB2     		uxth	r2, r1
 2901 016a 090C     		lsrs	r1, r1, #16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 71


 2902 016c 2F48     		ldr	r0, .L235+60
 2903 016e FFF7FEFF 		bl	printf
 2904              	.LVL317:
 915:Src/mode.c    ****             case T_135OUT:
 2905              		.loc 1 915 0
 2906 0172 53E7     		b	.L211
 2907              	.L230:
 917:Src/mode.c    ****                 break;
 2908              		.loc 1 917 0
 2909 0174 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2910 0178 8AB2     		uxth	r2, r1
 2911 017a 090C     		lsrs	r1, r1, #16
 2912 017c 2C48     		ldr	r0, .L235+64
 2913 017e FFF7FEFF 		bl	printf
 2914              	.LVL318:
 918:Src/mode.c    ****             case T_V90:
 2915              		.loc 1 918 0
 2916 0182 4BE7     		b	.L211
 2917              	.L231:
 920:Src/mode.c    ****                 break;
 2918              		.loc 1 920 0
 2919 0184 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2920 0188 8AB2     		uxth	r2, r1
 2921 018a 090C     		lsrs	r1, r1, #16
 2922 018c 2948     		ldr	r0, .L235+68
 2923 018e FFF7FEFF 		bl	printf
 2924              	.LVL319:
 921:Src/mode.c    ****             default:
 2925              		.loc 1 921 0
 2926 0192 43E7     		b	.L211
 2927              	.L222:
 923:Src/mode.c    ****                 break;
 2928              		.loc 1 923 0
 2929 0194 1F48     		ldr	r0, .L235+36
 2930 0196 FFF7FEFF 		bl	puts
 2931              	.LVL320:
 924:Src/mode.c    ****             }
 2932              		.loc 1 924 0
 2933 019a 3FE7     		b	.L211
 2934              	.L203:
 928:Src/mode.c    ****             break;
 2935              		.loc 1 928 0
 2936 019c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2937 01a0 93B2     		uxth	r3, r2
 2938 01a2 120C     		lsrs	r2, r2, #16
 2939 01a4 0909     		lsrs	r1, r1, #4
 2940 01a6 2448     		ldr	r0, .L235+72
 2941 01a8 FFF7FEFF 		bl	printf
 2942              	.LVL321:
 929:Src/mode.c    ****         case DIAGONAL:
 2943              		.loc 1 929 0
 2944 01ac 36E7     		b	.L211
 2945              	.L209:
 931:Src/mode.c    ****             break;
 2946              		.loc 1 931 0
 2947 01ae 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2948 01b2 93B2     		uxth	r3, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 72


 2949 01b4 120C     		lsrs	r2, r2, #16
 2950 01b6 0909     		lsrs	r1, r1, #4
 2951 01b8 2048     		ldr	r0, .L235+76
 2952 01ba FFF7FEFF 		bl	printf
 2953              	.LVL322:
 932:Src/mode.c    ****         case GOAL:
 2954              		.loc 1 932 0
 2955 01be 2DE7     		b	.L211
 2956              	.L208:
 934:Src/mode.c    ****             break;
 2957              		.loc 1 934 0
 2958 01c0 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2959 01c4 93B2     		uxth	r3, r2
 2960 01c6 120C     		lsrs	r2, r2, #16
 2961 01c8 0909     		lsrs	r1, r1, #4
 2962 01ca 1D48     		ldr	r0, .L235+80
 2963 01cc FFF7FEFF 		bl	printf
 2964              	.LVL323:
 935:Src/mode.c    ****         case ADJUST:
 2965              		.loc 1 935 0
 2966 01d0 24E7     		b	.L211
 2967              	.L210:
 937:Src/mode.c    ****             break;
 2968              		.loc 1 937 0
 2969 01d2 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2970 01d6 93B2     		uxth	r3, r2
 2971 01d8 120C     		lsrs	r2, r2, #16
 2972 01da 0909     		lsrs	r1, r1, #4
 2973 01dc 1948     		ldr	r0, .L235+84
 2974 01de FFF7FEFF 		bl	printf
 2975              	.LVL324:
 938:Src/mode.c    ****         default:
 2976              		.loc 1 938 0
 2977 01e2 1BE7     		b	.L211
 2978              	.L202:
 940:Src/mode.c    ****             break;
 2979              		.loc 1 940 0
 2980 01e4 0B48     		ldr	r0, .L235+36
 2981 01e6 FFF7FEFF 		bl	puts
 2982              	.LVL325:
 941:Src/mode.c    ****         }
 2983              		.loc 1 941 0
 2984 01ea 17E7     		b	.L211
 2985              	.L234:
 944:Src/mode.c    ****     }
 945:Src/mode.c    **** }
 2986              		.loc 1 945 0
 2987 01ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2988              	.LVL326:
 2989              	.L236:
 2990 01ee 00BF     		.align	2
 2991              	.L235:
 2992 01f0 00000000 		.word	.LC7
 2993 01f4 24000000 		.word	.LC8
 2994 01f8 48000000 		.word	.LC9
 2995 01fc 6C000000 		.word	.LC10
 2996 0200 90000000 		.word	.LC11
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 73


 2997 0204 B4000000 		.word	.LC12
 2998 0208 DC000000 		.word	.LC13
 2999 020c 04010000 		.word	.LC14
 3000 0210 2C010000 		.word	.LC15
 3001 0214 00000000 		.word	.LC3
 3002 0218 50010000 		.word	.LC16
 3003 021c 78010000 		.word	.LC17
 3004 0220 9C010000 		.word	.LC18
 3005 0224 C0010000 		.word	.LC19
 3006 0228 E8010000 		.word	.LC20
 3007 022c 10020000 		.word	.LC21
 3008 0230 38020000 		.word	.LC22
 3009 0234 60020000 		.word	.LC23
 3010 0238 84020000 		.word	.LC24
 3011 023c A8020000 		.word	.LC25
 3012 0240 CC020000 		.word	.LC26
 3013 0244 EC020000 		.word	.LC27
 3014              		.cfi_endproc
 3015              	.LFE141:
 3017              		.section	.text.AdjustStraight,"ax",%progbits
 3018              		.align	1
 3019              		.global	AdjustStraight
 3020              		.syntax unified
 3021              		.thumb
 3022              		.thumb_func
 3023              		.fpu fpv4-sp-d16
 3025              	AdjustStraight:
 3026              	.LFB142:
 946:Src/mode.c    **** 
 947:Src/mode.c    **** void AdjustStraight(void)
 948:Src/mode.c    **** {
 3027              		.loc 1 948 0
 3028              		.cfi_startproc
 3029              		@ args = 0, pretend = 0, frame = 0
 3030              		@ frame_needed = 0, uses_anonymous_args = 0
 3031 0000 08B5     		push	{r3, lr}
 3032              	.LCFI37:
 3033              		.cfi_def_cfa_offset 8
 3034              		.cfi_offset 3, -8
 3035              		.cfi_offset 14, -4
 949:Src/mode.c    ****     SetRunMode(0);
 3036              		.loc 1 949 0
 3037 0002 0020     		movs	r0, #0
 3038 0004 FFF7FEFF 		bl	SetRunMode
 3039              	.LVL327:
 950:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 3040              		.loc 1 950 0
 3041 0008 6021     		movs	r1, #96
 3042 000a 0846     		mov	r0, r1
 3043 000c FFF7FEFF 		bl	Tim_MotorPwm
 3044              	.LVL328:
 3045              	.L238:
 951:Src/mode.c    ****     while (motor_flag == TRUE)
 3046              		.loc 1 951 0 discriminator 1
 3047 0010 0E4B     		ldr	r3, .L240
 3048 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3049 0014 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 74


 3050 0016 012B     		cmp	r3, #1
 3051 0018 FAD0     		beq	.L238
 952:Src/mode.c    ****     {
 953:Src/mode.c    ****     }
 954:Src/mode.c    ****     HAL_Delay(500);
 3052              		.loc 1 954 0
 3053 001a 4FF4FA70 		mov	r0, #500
 3054 001e FFF7FEFF 		bl	HAL_Delay
 3055              	.LVL329:
 955:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3056              		.loc 1 955 0
 3057 0022 49F64242 		movw	r2, #40002
 3058 0026 0A49     		ldr	r1, .L240+4
 3059 0028 0A4B     		ldr	r3, .L240+8
 3060 002a 1868     		ldr	r0, [r3]
 3061 002c FFF7FEFF 		bl	Flash_Write
 3062              	.LVL330:
 956:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3063              		.loc 1 956 0
 3064 0030 4FF49671 		mov	r1, #300
 3065 0034 4C20     		movs	r0, #76
 3066 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 3067              	.LVL331:
 957:Src/mode.c    ****     HAL_Delay(200);
 3068              		.loc 1 957 0
 3069 003a C820     		movs	r0, #200
 3070 003c FFF7FEFF 		bl	HAL_Delay
 3071              	.LVL332:
 958:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3072              		.loc 1 958 0
 3073 0040 0021     		movs	r1, #0
 3074 0042 0A20     		movs	r0, #10
 3075 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 3076              	.LVL333:
 959:Src/mode.c    **** }
 3077              		.loc 1 959 0
 3078 0048 08BD     		pop	{r3, pc}
 3079              	.L241:
 3080 004a 00BF     		.align	2
 3081              	.L240:
 3082 004c 00000000 		.word	motor_flag
 3083 0050 00000000 		.word	loger
 3084 0054 00000000 		.word	start_address
 3085              		.cfi_endproc
 3086              	.LFE142:
 3088              		.section	.text.AdjustTurn,"ax",%progbits
 3089              		.align	1
 3090              		.global	AdjustTurn
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv4-sp-d16
 3096              	AdjustTurn:
 3097              	.LFB143:
 960:Src/mode.c    **** 
 961:Src/mode.c    **** void AdjustTurn(void)
 962:Src/mode.c    **** {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 75


 3098              		.loc 1 962 0
 3099              		.cfi_startproc
 3100              		@ args = 0, pretend = 0, frame = 0
 3101              		@ frame_needed = 0, uses_anonymous_args = 0
 3102 0000 08B5     		push	{r3, lr}
 3103              	.LCFI38:
 3104              		.cfi_def_cfa_offset 8
 3105              		.cfi_offset 3, -8
 3106              		.cfi_offset 14, -4
 963:Src/mode.c    ****     SetRunMode(0);
 3107              		.loc 1 963 0
 3108 0002 0020     		movs	r0, #0
 3109 0004 FFF7FEFF 		bl	SetRunMode
 3110              	.LVL334:
 964:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 3111              		.loc 1 964 0
 3112 0008 B421     		movs	r1, #180
 3113 000a 6FF0B300 		mvn	r0, #179
 3114 000e FFF7FEFF 		bl	Tim_MotorPwm
 3115              	.LVL335:
 3116              	.L243:
 965:Src/mode.c    ****     while (motor_flag == TRUE)
 3117              		.loc 1 965 0 discriminator 1
 3118 0012 0E4B     		ldr	r3, .L245
 3119 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3120 0016 DBB2     		uxtb	r3, r3
 3121 0018 012B     		cmp	r3, #1
 3122 001a FAD0     		beq	.L243
 966:Src/mode.c    ****     {
 967:Src/mode.c    ****     }
 968:Src/mode.c    ****     HAL_Delay(500);
 3123              		.loc 1 968 0
 3124 001c 4FF4FA70 		mov	r0, #500
 3125 0020 FFF7FEFF 		bl	HAL_Delay
 3126              	.LVL336:
 969:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3127              		.loc 1 969 0
 3128 0024 49F64242 		movw	r2, #40002
 3129 0028 0949     		ldr	r1, .L245+4
 3130 002a 0A4B     		ldr	r3, .L245+8
 3131 002c 1868     		ldr	r0, [r3]
 3132 002e FFF7FEFF 		bl	Flash_Write
 3133              	.LVL337:
 970:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3134              		.loc 1 970 0
 3135 0032 4FF49671 		mov	r1, #300
 3136 0036 4C20     		movs	r0, #76
 3137 0038 FFF7FEFF 		bl	Tim_BuzzerPwm
 3138              	.LVL338:
 971:Src/mode.c    ****     HAL_Delay(200);
 3139              		.loc 1 971 0
 3140 003c C820     		movs	r0, #200
 3141 003e FFF7FEFF 		bl	HAL_Delay
 3142              	.LVL339:
 972:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3143              		.loc 1 972 0
 3144 0042 0021     		movs	r1, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 76


 3145 0044 0A20     		movs	r0, #10
 3146 0046 FFF7FEFF 		bl	Tim_BuzzerPwm
 3147              	.LVL340:
 973:Src/mode.c    **** }
 3148              		.loc 1 973 0
 3149 004a 08BD     		pop	{r3, pc}
 3150              	.L246:
 3151              		.align	2
 3152              	.L245:
 3153 004c 00000000 		.word	motor_flag
 3154 0050 00000000 		.word	loger
 3155 0054 00000000 		.word	start_address
 3156              		.cfi_endproc
 3157              	.LFE143:
 3159              		.section	.text.Circuit,"ax",%progbits
 3160              		.align	1
 3161              		.global	Circuit
 3162              		.syntax unified
 3163              		.thumb
 3164              		.thumb_func
 3165              		.fpu fpv4-sp-d16
 3167              	Circuit:
 3168              	.LFB144:
 974:Src/mode.c    **** 
 975:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 976:Src/mode.c    **** {
 3169              		.loc 1 976 0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
 3173              	.LVL341:
 3174 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3175              	.LCFI39:
 3176              		.cfi_def_cfa_offset 24
 3177              		.cfi_offset 4, -24
 3178              		.cfi_offset 5, -20
 3179              		.cfi_offset 6, -16
 3180              		.cfi_offset 7, -12
 3181              		.cfi_offset 8, -8
 3182              		.cfi_offset 14, -4
 3183 0004 0746     		mov	r7, r0
 3184 0006 0E46     		mov	r6, r1
 3185 0008 9046     		mov	r8, r2
 3186 000a 1D46     		mov	r5, r3
 977:Src/mode.c    ****     Motion_Start();
 3187              		.loc 1 977 0
 3188 000c FFF7FEFF 		bl	Motion_Start
 3189              	.LVL342:
 3190              	.LBB20:
 978:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3191              		.loc 1 978 0
 3192 0010 0024     		movs	r4, #0
 3193 0012 1AE0     		b	.L248
 3194              	.LVL343:
 3195              	.L265:
 979:Src/mode.c    ****     {
 980:Src/mode.c    ****         if (row > 1)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 77


 981:Src/mode.c    ****         {
 982:Src/mode.c    ****             Motion_Straight(1);
 3196              		.loc 1 982 0
 3197 0014 0120     		movs	r0, #1
 3198 0016 FFF7FEFF 		bl	Motion_Straight
 3199              	.LVL344:
 3200 001a 1AE0     		b	.L249
 3201              	.L266:
 983:Src/mode.c    ****         }
 984:Src/mode.c    **** 
 985:Src/mode.c    ****         if (dir == 1)
 986:Src/mode.c    ****         {
 987:Src/mode.c    ****             Motion_LeftTurn();
 3202              		.loc 1 987 0
 3203 001c FFF7FEFF 		bl	Motion_LeftTurn
 3204              	.LVL345:
 3205 0020 1BE0     		b	.L251
 3206              	.L267:
 988:Src/mode.c    ****         }
 989:Src/mode.c    ****         else
 990:Src/mode.c    ****         {
 991:Src/mode.c    ****             Motion_RightTurn();
 992:Src/mode.c    ****         }
 993:Src/mode.c    **** 
 994:Src/mode.c    ****         if (colum > 1)
 995:Src/mode.c    ****         {
 996:Src/mode.c    ****             Motion_Straight(1);
 3207              		.loc 1 996 0
 3208 0022 0120     		movs	r0, #1
 3209 0024 FFF7FEFF 		bl	Motion_Straight
 3210              	.LVL346:
 3211 0028 19E0     		b	.L252
 3212              	.L268:
 997:Src/mode.c    ****         }
 998:Src/mode.c    **** 
 999:Src/mode.c    ****         if (dir == 1)
1000:Src/mode.c    ****         {
1001:Src/mode.c    ****             Motion_LeftTurn();
 3213              		.loc 1 1001 0
 3214 002a FFF7FEFF 		bl	Motion_LeftTurn
 3215              	.LVL347:
 3216 002e 1AE0     		b	.L254
 3217              	.L269:
1002:Src/mode.c    ****         }
1003:Src/mode.c    ****         else
1004:Src/mode.c    ****         {
1005:Src/mode.c    ****             Motion_RightTurn();
1006:Src/mode.c    ****         }
1007:Src/mode.c    **** 
1008:Src/mode.c    ****         if (row > 1)
1009:Src/mode.c    ****         {
1010:Src/mode.c    ****             Motion_Straight(1);
 3218              		.loc 1 1010 0
 3219 0030 0120     		movs	r0, #1
 3220 0032 FFF7FEFF 		bl	Motion_Straight
 3221              	.LVL348:
 3222 0036 18E0     		b	.L255
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 78


 3223              	.L270:
1011:Src/mode.c    ****         }
1012:Src/mode.c    **** 
1013:Src/mode.c    ****         if (dir == 1)
1014:Src/mode.c    ****         {
1015:Src/mode.c    ****             Motion_LeftTurn();
 3224              		.loc 1 1015 0
 3225 0038 FFF7FEFF 		bl	Motion_LeftTurn
 3226              	.LVL349:
 3227 003c 19E0     		b	.L257
 3228              	.L258:
1016:Src/mode.c    ****         }
1017:Src/mode.c    ****         else
1018:Src/mode.c    ****         {
1019:Src/mode.c    ****             Motion_RightTurn();
1020:Src/mode.c    ****         }
1021:Src/mode.c    **** 
1022:Src/mode.c    ****         if (colum > 1)
1023:Src/mode.c    ****         {
1024:Src/mode.c    ****             Motion_Straight(1);
1025:Src/mode.c    ****         }
1026:Src/mode.c    ****         if (dir == 1)
 3229              		.loc 1 1026 0
 3230 003e 012D     		cmp	r5, #1
 3231 0040 1DD0     		beq	.L263
1027:Src/mode.c    ****         {
1028:Src/mode.c    ****             Motion_LeftTurn();
1029:Src/mode.c    ****         }
1030:Src/mode.c    ****         else
1031:Src/mode.c    ****         {
1032:Src/mode.c    ****             Motion_RightTurn();
 3232              		.loc 1 1032 0
 3233 0042 FFF7FEFF 		bl	Motion_RightTurn
 3234              	.LVL350:
 3235              	.L260:
 978:Src/mode.c    ****     {
 3236              		.loc 1 978 0 discriminator 2
 3237 0046 0134     		adds	r4, r4, #1
 3238              	.LVL351:
 3239 0048 E4B2     		uxtb	r4, r4
 3240              	.LVL352:
 3241              	.L248:
 978:Src/mode.c    ****     {
 3242              		.loc 1 978 0 is_stmt 0 discriminator 1
 3243 004a 4445     		cmp	r4, r8
 3244 004c 1AD2     		bcs	.L264
 980:Src/mode.c    ****         {
 3245              		.loc 1 980 0 is_stmt 1
 3246 004e 012F     		cmp	r7, #1
 3247 0050 E0D8     		bhi	.L265
 3248              	.L249:
 985:Src/mode.c    ****         {
 3249              		.loc 1 985 0
 3250 0052 012D     		cmp	r5, #1
 3251 0054 E2D0     		beq	.L266
 991:Src/mode.c    ****         }
 3252              		.loc 1 991 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 79


 3253 0056 FFF7FEFF 		bl	Motion_RightTurn
 3254              	.LVL353:
 3255              	.L251:
 994:Src/mode.c    ****         {
 3256              		.loc 1 994 0
 3257 005a 012E     		cmp	r6, #1
 3258 005c E1D8     		bhi	.L267
 3259              	.L252:
 999:Src/mode.c    ****         {
 3260              		.loc 1 999 0
 3261 005e 012D     		cmp	r5, #1
 3262 0060 E3D0     		beq	.L268
1005:Src/mode.c    ****         }
 3263              		.loc 1 1005 0
 3264 0062 FFF7FEFF 		bl	Motion_RightTurn
 3265              	.LVL354:
 3266              	.L254:
1008:Src/mode.c    ****         {
 3267              		.loc 1 1008 0
 3268 0066 012F     		cmp	r7, #1
 3269 0068 E2D8     		bhi	.L269
 3270              	.L255:
1013:Src/mode.c    ****         {
 3271              		.loc 1 1013 0
 3272 006a 012D     		cmp	r5, #1
 3273 006c E4D0     		beq	.L270
1019:Src/mode.c    ****         }
 3274              		.loc 1 1019 0
 3275 006e FFF7FEFF 		bl	Motion_RightTurn
 3276              	.LVL355:
 3277              	.L257:
1022:Src/mode.c    ****         {
 3278              		.loc 1 1022 0
 3279 0072 012E     		cmp	r6, #1
 3280 0074 E3D9     		bls	.L258
1024:Src/mode.c    ****         }
 3281              		.loc 1 1024 0
 3282 0076 0120     		movs	r0, #1
 3283 0078 FFF7FEFF 		bl	Motion_Straight
 3284              	.LVL356:
 3285 007c DFE7     		b	.L258
 3286              	.L263:
1028:Src/mode.c    ****         }
 3287              		.loc 1 1028 0
 3288 007e FFF7FEFF 		bl	Motion_LeftTurn
 3289              	.LVL357:
 3290 0082 E0E7     		b	.L260
 3291              	.L264:
 3292              	.LBE20:
1033:Src/mode.c    ****         }
1034:Src/mode.c    ****     }
1035:Src/mode.c    ****     Motion_End();
 3293              		.loc 1 1035 0
 3294 0084 FFF7FEFF 		bl	Motion_End
 3295              	.LVL358:
1036:Src/mode.c    ****     motor_flag = FALSE;
 3296              		.loc 1 1036 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 80


 3297 0088 024B     		ldr	r3, .L271
 3298 008a 0022     		movs	r2, #0
 3299 008c 1A70     		strb	r2, [r3]
1037:Src/mode.c    **** }
 3300              		.loc 1 1037 0
 3301 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3302              	.LVL359:
 3303              	.L272:
 3304 0092 00BF     		.align	2
 3305              	.L271:
 3306 0094 00000000 		.word	motor_flag
 3307              		.cfi_endproc
 3308              	.LFE144:
 3310              		.section	.text.TestComb,"ax",%progbits
 3311              		.align	1
 3312              		.global	TestComb
 3313              		.syntax unified
 3314              		.thumb
 3315              		.thumb_func
 3316              		.fpu fpv4-sp-d16
 3318              	TestComb:
 3319              	.LFB145:
1038:Src/mode.c    **** 
1039:Src/mode.c    **** void TestComb(uint8_t num, uint8_t dir)
1040:Src/mode.c    **** {
 3320              		.loc 1 1040 0
 3321              		.cfi_startproc
 3322              		@ args = 0, pretend = 0, frame = 0
 3323              		@ frame_needed = 0, uses_anonymous_args = 0
 3324              	.LVL360:
 3325 0000 38B5     		push	{r3, r4, r5, lr}
 3326              	.LCFI40:
 3327              		.cfi_def_cfa_offset 16
 3328              		.cfi_offset 3, -16
 3329              		.cfi_offset 4, -12
 3330              		.cfi_offset 5, -8
 3331              		.cfi_offset 14, -4
 3332 0002 0546     		mov	r5, r0
1041:Src/mode.c    ****     if (dir == LEFT)
 3333              		.loc 1 1041 0
 3334 0004 0129     		cmp	r1, #1
 3335 0006 05D0     		beq	.L281
1042:Src/mode.c    ****     {
1043:Src/mode.c    ****         Motion_Start();
1044:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
1045:Src/mode.c    ****         {
1046:Src/mode.c    ****             Motion_LeftTurn();
1047:Src/mode.c    ****             Motion_WallSpinTurn();
1048:Src/mode.c    ****             Motion_LeftTurn();
1049:Src/mode.c    ****         }
1050:Src/mode.c    ****         Motion_End();
1051:Src/mode.c    ****     }
1052:Src/mode.c    ****     else if (dir == RIGHT)
 3336              		.loc 1 1052 0
 3337 0008 0229     		cmp	r1, #2
 3338 000a 14D0     		beq	.L282
 3339              	.LVL361:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 81


 3340              	.L277:
1053:Src/mode.c    ****     {
1054:Src/mode.c    ****         Motion_Start();
1055:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
1056:Src/mode.c    ****         {
1057:Src/mode.c    ****             Motion_RightTurn();
1058:Src/mode.c    ****             Motion_WallSpinTurn();
1059:Src/mode.c    ****             Motion_RightTurn();
1060:Src/mode.c    ****         }
1061:Src/mode.c    ****         Motion_End();
1062:Src/mode.c    ****     }
1063:Src/mode.c    ****     motor_flag = FALSE;
 3341              		.loc 1 1063 0
 3342 000c 124B     		ldr	r3, .L283
 3343 000e 0022     		movs	r2, #0
 3344 0010 1A70     		strb	r2, [r3]
1064:Src/mode.c    **** }
 3345              		.loc 1 1064 0
 3346 0012 38BD     		pop	{r3, r4, r5, pc}
 3347              	.LVL362:
 3348              	.L281:
1043:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
 3349              		.loc 1 1043 0
 3350 0014 FFF7FEFF 		bl	Motion_Start
 3351              	.LVL363:
 3352              	.LBB21:
1044:Src/mode.c    ****         {
 3353              		.loc 1 1044 0
 3354 0018 0024     		movs	r4, #0
 3355 001a 07E0     		b	.L275
 3356              	.LVL364:
 3357              	.L276:
1046:Src/mode.c    ****             Motion_WallSpinTurn();
 3358              		.loc 1 1046 0 discriminator 3
 3359 001c FFF7FEFF 		bl	Motion_LeftTurn
 3360              	.LVL365:
1047:Src/mode.c    ****             Motion_LeftTurn();
 3361              		.loc 1 1047 0 discriminator 3
 3362 0020 FFF7FEFF 		bl	Motion_WallSpinTurn
 3363              	.LVL366:
1048:Src/mode.c    ****         }
 3364              		.loc 1 1048 0 discriminator 3
 3365 0024 FFF7FEFF 		bl	Motion_LeftTurn
 3366              	.LVL367:
1044:Src/mode.c    ****         {
 3367              		.loc 1 1044 0 discriminator 3
 3368 0028 0134     		adds	r4, r4, #1
 3369              	.LVL368:
 3370 002a E4B2     		uxtb	r4, r4
 3371              	.LVL369:
 3372              	.L275:
1044:Src/mode.c    ****         {
 3373              		.loc 1 1044 0 is_stmt 0 discriminator 1
 3374 002c AC42     		cmp	r4, r5
 3375 002e F5D3     		bcc	.L276
 3376              	.LBE21:
1050:Src/mode.c    ****     }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 82


 3377              		.loc 1 1050 0 is_stmt 1
 3378 0030 FFF7FEFF 		bl	Motion_End
 3379              	.LVL370:
 3380 0034 EAE7     		b	.L277
 3381              	.LVL371:
 3382              	.L282:
1054:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
 3383              		.loc 1 1054 0
 3384 0036 FFF7FEFF 		bl	Motion_Start
 3385              	.LVL372:
 3386              	.LBB22:
1055:Src/mode.c    ****         {
 3387              		.loc 1 1055 0
 3388 003a 0024     		movs	r4, #0
 3389 003c 07E0     		b	.L278
 3390              	.LVL373:
 3391              	.L279:
1057:Src/mode.c    ****             Motion_WallSpinTurn();
 3392              		.loc 1 1057 0 discriminator 3
 3393 003e FFF7FEFF 		bl	Motion_RightTurn
 3394              	.LVL374:
1058:Src/mode.c    ****             Motion_RightTurn();
 3395              		.loc 1 1058 0 discriminator 3
 3396 0042 FFF7FEFF 		bl	Motion_WallSpinTurn
 3397              	.LVL375:
1059:Src/mode.c    ****         }
 3398              		.loc 1 1059 0 discriminator 3
 3399 0046 FFF7FEFF 		bl	Motion_RightTurn
 3400              	.LVL376:
1055:Src/mode.c    ****         {
 3401              		.loc 1 1055 0 discriminator 3
 3402 004a 0134     		adds	r4, r4, #1
 3403              	.LVL377:
 3404 004c E4B2     		uxtb	r4, r4
 3405              	.LVL378:
 3406              	.L278:
1055:Src/mode.c    ****         {
 3407              		.loc 1 1055 0 is_stmt 0 discriminator 1
 3408 004e AC42     		cmp	r4, r5
 3409 0050 F5D3     		bcc	.L279
 3410              	.LBE22:
1061:Src/mode.c    ****     }
 3411              		.loc 1 1061 0 is_stmt 1
 3412 0052 FFF7FEFF 		bl	Motion_End
 3413              	.LVL379:
 3414 0056 D9E7     		b	.L277
 3415              	.L284:
 3416              		.align	2
 3417              	.L283:
 3418 0058 00000000 		.word	motor_flag
 3419              		.cfi_endproc
 3420              	.LFE145:
 3422              		.section	.text.TestSteps,"ax",%progbits
 3423              		.align	1
 3424              		.global	TestSteps
 3425              		.syntax unified
 3426              		.thumb
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 83


 3427              		.thumb_func
 3428              		.fpu fpv4-sp-d16
 3430              	TestSteps:
 3431              	.LFB146:
1065:Src/mode.c    **** 
1066:Src/mode.c    **** void TestSteps(uint8_t num)
1067:Src/mode.c    **** {
 3432              		.loc 1 1067 0
 3433              		.cfi_startproc
 3434              		@ args = 0, pretend = 0, frame = 0
 3435              		@ frame_needed = 0, uses_anonymous_args = 0
 3436              	.LVL380:
 3437 0000 38B5     		push	{r3, r4, r5, lr}
 3438              	.LCFI41:
 3439              		.cfi_def_cfa_offset 16
 3440              		.cfi_offset 3, -16
 3441              		.cfi_offset 4, -12
 3442              		.cfi_offset 5, -8
 3443              		.cfi_offset 14, -4
 3444 0002 0546     		mov	r5, r0
1068:Src/mode.c    ****     Motion_Start();
 3445              		.loc 1 1068 0
 3446 0004 FFF7FEFF 		bl	Motion_Start
 3447              	.LVL381:
 3448              	.LBB23:
1069:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3449              		.loc 1 1069 0
 3450 0008 0024     		movs	r4, #0
 3451 000a 05E0     		b	.L286
 3452              	.LVL382:
 3453              	.L287:
1070:Src/mode.c    ****     {
1071:Src/mode.c    ****         Motion_RightTurn();
 3454              		.loc 1 1071 0 discriminator 3
 3455 000c FFF7FEFF 		bl	Motion_RightTurn
 3456              	.LVL383:
1072:Src/mode.c    ****         Motion_LeftTurn();
 3457              		.loc 1 1072 0 discriminator 3
 3458 0010 FFF7FEFF 		bl	Motion_LeftTurn
 3459              	.LVL384:
1069:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3460              		.loc 1 1069 0 discriminator 3
 3461 0014 0134     		adds	r4, r4, #1
 3462              	.LVL385:
 3463 0016 E4B2     		uxtb	r4, r4
 3464              	.LVL386:
 3465              	.L286:
1069:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3466              		.loc 1 1069 0 is_stmt 0 discriminator 1
 3467 0018 AC42     		cmp	r4, r5
 3468 001a F7D3     		bcc	.L287
 3469              	.LBE23:
1073:Src/mode.c    ****     }
1074:Src/mode.c    ****     Motion_End();
 3470              		.loc 1 1074 0 is_stmt 1
 3471 001c FFF7FEFF 		bl	Motion_End
 3472              	.LVL387:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 84


1075:Src/mode.c    ****     motor_flag = FALSE;
 3473              		.loc 1 1075 0
 3474 0020 014B     		ldr	r3, .L289
 3475 0022 0022     		movs	r2, #0
 3476 0024 1A70     		strb	r2, [r3]
1076:Src/mode.c    **** }
 3477              		.loc 1 1076 0
 3478 0026 38BD     		pop	{r3, r4, r5, pc}
 3479              	.LVL388:
 3480              	.L290:
 3481              		.align	2
 3482              	.L289:
 3483 0028 00000000 		.word	motor_flag
 3484              		.cfi_endproc
 3485              	.LFE146:
 3487              		.section	.text.Turn45_Test,"ax",%progbits
 3488              		.align	1
 3489              		.global	Turn45_Test
 3490              		.syntax unified
 3491              		.thumb
 3492              		.thumb_func
 3493              		.fpu fpv4-sp-d16
 3495              	Turn45_Test:
 3496              	.LFB147:
1077:Src/mode.c    **** 
1078:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
1079:Src/mode.c    **** {
 3497              		.loc 1 1079 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501              	.LVL389:
 3502 0000 70B5     		push	{r4, r5, r6, lr}
 3503              	.LCFI42:
 3504              		.cfi_def_cfa_offset 16
 3505              		.cfi_offset 4, -16
 3506              		.cfi_offset 5, -12
 3507              		.cfi_offset 6, -8
 3508              		.cfi_offset 14, -4
 3509 0002 2DED028B 		vpush.64	{d8}
 3510              	.LCFI43:
 3511              		.cfi_def_cfa_offset 24
 3512              		.cfi_offset 80, -24
 3513              		.cfi_offset 81, -20
 3514 0006 0546     		mov	r5, r0
 3515 0008 0C46     		mov	r4, r1
 3516 000a 1646     		mov	r6, r2
1080:Src/mode.c    ****     SetRunMode(0);
 3517              		.loc 1 1080 0
 3518 000c 0020     		movs	r0, #0
 3519              	.LVL390:
 3520 000e FFF7FEFF 		bl	SetRunMode
 3521              	.LVL391:
1081:Src/mode.c    **** 
1082:Src/mode.c    ****     switch (in_dir)
 3522              		.loc 1 1082 0
 3523 0012 012D     		cmp	r5, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 85


 3524 0014 2CD0     		beq	.L293
 3525 0016 45B3     		cbz	r5, .L294
 3526 0018 022D     		cmp	r5, #2
 3527 001a 38D0     		beq	.L295
 3528              	.L292:
1083:Src/mode.c    ****     {
1084:Src/mode.c    ****     case FRONT:
1085:Src/mode.c    ****         Motion_DiagonalStart();
1086:Src/mode.c    ****         break;
1087:Src/mode.c    ****     case LEFT:
1088:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1089:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1090:Src/mode.c    ****         Motion_InLeft45Turn();
1091:Src/mode.c    ****         break;
1092:Src/mode.c    ****     case RIGHT:
1093:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1094:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1095:Src/mode.c    ****         Motion_InRight45Turn();
1096:Src/mode.c    ****         break;
1097:Src/mode.c    ****     default:
1098:Src/mode.c    ****         break;
1099:Src/mode.c    ****     }
1100:Src/mode.c    **** 
1101:Src/mode.c    ****     switch (out_dir)
 3529              		.loc 1 1101 0
 3530 001c 012C     		cmp	r4, #1
 3531 001e 48D0     		beq	.L297
 3532 0020 002C     		cmp	r4, #0
 3533 0022 43D0     		beq	.L298
 3534 0024 022C     		cmp	r4, #2
 3535 0026 55D0     		beq	.L299
 3536              	.L296:
1102:Src/mode.c    ****     {
1103:Src/mode.c    ****     case FRONT:
1104:Src/mode.c    ****         Motion_DiagonalStop();
1105:Src/mode.c    ****         break;
1106:Src/mode.c    ****     case LEFT:
1107:Src/mode.c    ****         if (step > 0)
1108:Src/mode.c    ****         {
1109:Src/mode.c    ****             Motion_DiagonalLeft(step);
1110:Src/mode.c    ****         }
1111:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
1112:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1113:Src/mode.c    ****         break;
1114:Src/mode.c    ****     case RIGHT:
1115:Src/mode.c    ****         if (step > 0)
1116:Src/mode.c    ****         {
1117:Src/mode.c    ****             Motion_DiagonalRight(step);
1118:Src/mode.c    ****         }
1119:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
1120:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1121:Src/mode.c    ****         break;
1122:Src/mode.c    ****     default:
1123:Src/mode.c    ****         break;
1124:Src/mode.c    ****     }
1125:Src/mode.c    **** 
1126:Src/mode.c    ****     motor_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 86


 3537              		.loc 1 1126 0
 3538 0028 0024     		movs	r4, #0
 3539 002a 334B     		ldr	r3, .L305
 3540 002c 1C70     		strb	r4, [r3]
1127:Src/mode.c    ****     HAL_Delay(500);
 3541              		.loc 1 1127 0
 3542 002e 4FF4FA70 		mov	r0, #500
 3543 0032 FFF7FEFF 		bl	HAL_Delay
 3544              	.LVL392:
1128:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3545              		.loc 1 1128 0
 3546 0036 49F64242 		movw	r2, #40002
 3547 003a 3049     		ldr	r1, .L305+4
 3548 003c 304B     		ldr	r3, .L305+8
 3549 003e 1868     		ldr	r0, [r3]
 3550 0040 FFF7FEFF 		bl	Flash_Write
 3551              	.LVL393:
1129:Src/mode.c    ****     HAL_Delay(300);
 3552              		.loc 1 1129 0
 3553 0044 4FF49670 		mov	r0, #300
 3554 0048 FFF7FEFF 		bl	HAL_Delay
 3555              	.LVL394:
1130:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3556              		.loc 1 1130 0
 3557 004c 4FF49671 		mov	r1, #300
 3558 0050 4C20     		movs	r0, #76
 3559 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3560              	.LVL395:
1131:Src/mode.c    ****     HAL_Delay(200);
 3561              		.loc 1 1131 0
 3562 0056 C820     		movs	r0, #200
 3563 0058 FFF7FEFF 		bl	HAL_Delay
 3564              	.LVL396:
1132:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3565              		.loc 1 1132 0
 3566 005c 2146     		mov	r1, r4
 3567 005e 0A20     		movs	r0, #10
 3568 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 3569              	.LVL397:
1133:Src/mode.c    **** }
 3570              		.loc 1 1133 0
 3571 0064 BDEC028B 		vldm	sp!, {d8}
 3572              	.LCFI44:
 3573              		.cfi_remember_state
 3574              		.cfi_restore 80
 3575              		.cfi_restore 81
 3576              		.cfi_def_cfa_offset 16
 3577 0068 70BD     		pop	{r4, r5, r6, pc}
 3578              	.L294:
 3579              	.LCFI45:
 3580              		.cfi_restore_state
1085:Src/mode.c    ****         break;
 3581              		.loc 1 1085 0
 3582 006a FFF7FEFF 		bl	Motion_DiagonalStart
 3583              	.LVL398:
1086:Src/mode.c    ****     case LEFT:
 3584              		.loc 1 1086 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 87


 3585 006e D5E7     		b	.L292
 3586              	.L293:
1088:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
 3587              		.loc 1 1088 0
 3588 0070 9FED248A 		vldr.32	s16, .L305+12
 3589 0074 B0EE480A 		vmov.f32	s0, s16
 3590 0078 0120     		movs	r0, #1
 3591 007a FFF7FEFF 		bl	Motion_FastStart
 3592              	.LVL399:
1089:Src/mode.c    ****         Motion_InLeft45Turn();
 3593              		.loc 1 1089 0
 3594 007e B0EE480A 		vmov.f32	s0, s16
 3595 0082 0120     		movs	r0, #1
 3596 0084 FFF7FEFF 		bl	Motion_Adjust_L
 3597              	.LVL400:
1090:Src/mode.c    ****         break;
 3598              		.loc 1 1090 0
 3599 0088 FFF7FEFF 		bl	Motion_InLeft45Turn
 3600              	.LVL401:
1091:Src/mode.c    ****     case RIGHT:
 3601              		.loc 1 1091 0
 3602 008c C6E7     		b	.L292
 3603              	.L295:
1093:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 3604              		.loc 1 1093 0
 3605 008e 9FED1D8A 		vldr.32	s16, .L305+12
 3606 0092 B0EE480A 		vmov.f32	s0, s16
 3607 0096 0120     		movs	r0, #1
 3608 0098 FFF7FEFF 		bl	Motion_FastStart
 3609              	.LVL402:
1094:Src/mode.c    ****         Motion_InRight45Turn();
 3610              		.loc 1 1094 0
 3611 009c B0EE480A 		vmov.f32	s0, s16
 3612 00a0 0120     		movs	r0, #1
 3613 00a2 FFF7FEFF 		bl	Motion_Adjust_R
 3614              	.LVL403:
1095:Src/mode.c    ****         break;
 3615              		.loc 1 1095 0
 3616 00a6 FFF7FEFF 		bl	Motion_InRight45Turn
 3617              	.LVL404:
1096:Src/mode.c    ****     default:
 3618              		.loc 1 1096 0
 3619 00aa B7E7     		b	.L292
 3620              	.L298:
1104:Src/mode.c    ****         break;
 3621              		.loc 1 1104 0
 3622 00ac FFF7FEFF 		bl	Motion_DiagonalStop
 3623              	.LVL405:
1105:Src/mode.c    ****     case LEFT:
 3624              		.loc 1 1105 0
 3625 00b0 BAE7     		b	.L296
 3626              	.L297:
1107:Src/mode.c    ****         {
 3627              		.loc 1 1107 0
 3628 00b2 5EB9     		cbnz	r6, .L303
 3629              	.L300:
1111:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 88


 3630              		.loc 1 1111 0
 3631 00b4 9FED138A 		vldr.32	s16, .L305+12
 3632 00b8 B0EE480A 		vmov.f32	s0, s16
 3633 00bc FFF7FEFF 		bl	Motion_OutLeft45Turn
 3634              	.LVL406:
1112:Src/mode.c    ****         break;
 3635              		.loc 1 1112 0
 3636 00c0 B0EE480A 		vmov.f32	s0, s16
 3637 00c4 0120     		movs	r0, #1
 3638 00c6 FFF7FEFF 		bl	Motion_FastGoal
 3639              	.LVL407:
1113:Src/mode.c    ****     case RIGHT:
 3640              		.loc 1 1113 0
 3641 00ca ADE7     		b	.L296
 3642              	.L303:
1109:Src/mode.c    ****         }
 3643              		.loc 1 1109 0
 3644 00cc 3046     		mov	r0, r6
 3645 00ce FFF7FEFF 		bl	Motion_DiagonalLeft
 3646              	.LVL408:
 3647 00d2 EFE7     		b	.L300
 3648              	.L299:
1115:Src/mode.c    ****         {
 3649              		.loc 1 1115 0
 3650 00d4 5EB9     		cbnz	r6, .L304
 3651              	.L301:
1119:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3652              		.loc 1 1119 0
 3653 00d6 9FED0B8A 		vldr.32	s16, .L305+12
 3654 00da B0EE480A 		vmov.f32	s0, s16
 3655 00de FFF7FEFF 		bl	Motion_OutRight45Turn
 3656              	.LVL409:
1120:Src/mode.c    ****         break;
 3657              		.loc 1 1120 0
 3658 00e2 B0EE480A 		vmov.f32	s0, s16
 3659 00e6 0120     		movs	r0, #1
 3660 00e8 FFF7FEFF 		bl	Motion_FastGoal
 3661              	.LVL410:
1121:Src/mode.c    ****     default:
 3662              		.loc 1 1121 0
 3663 00ec 9CE7     		b	.L296
 3664              	.L304:
1117:Src/mode.c    ****         }
 3665              		.loc 1 1117 0
 3666 00ee 3046     		mov	r0, r6
 3667 00f0 FFF7FEFF 		bl	Motion_DiagonalRight
 3668              	.LVL411:
 3669 00f4 EFE7     		b	.L301
 3670              	.L306:
 3671 00f6 00BF     		.align	2
 3672              	.L305:
 3673 00f8 00000000 		.word	motor_flag
 3674 00fc 00000000 		.word	loger
 3675 0100 00000000 		.word	start_address
 3676 0104 00004844 		.word	1145569280
 3677              		.cfi_endproc
 3678              	.LFE147:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 89


 3680              		.section	.text.Turn135_Test,"ax",%progbits
 3681              		.align	1
 3682              		.global	Turn135_Test
 3683              		.syntax unified
 3684              		.thumb
 3685              		.thumb_func
 3686              		.fpu fpv4-sp-d16
 3688              	Turn135_Test:
 3689              	.LFB148:
1134:Src/mode.c    **** 
1135:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
1136:Src/mode.c    **** {
 3690              		.loc 1 1136 0
 3691              		.cfi_startproc
 3692              		@ args = 0, pretend = 0, frame = 0
 3693              		@ frame_needed = 0, uses_anonymous_args = 0
 3694              	.LVL412:
 3695 0000 70B5     		push	{r4, r5, r6, lr}
 3696              	.LCFI46:
 3697              		.cfi_def_cfa_offset 16
 3698              		.cfi_offset 4, -16
 3699              		.cfi_offset 5, -12
 3700              		.cfi_offset 6, -8
 3701              		.cfi_offset 14, -4
 3702 0002 2DED028B 		vpush.64	{d8}
 3703              	.LCFI47:
 3704              		.cfi_def_cfa_offset 24
 3705              		.cfi_offset 80, -24
 3706              		.cfi_offset 81, -20
 3707 0006 0546     		mov	r5, r0
 3708 0008 0C46     		mov	r4, r1
 3709 000a 1646     		mov	r6, r2
1137:Src/mode.c    ****     SetRunMode(0);
 3710              		.loc 1 1137 0
 3711 000c 0020     		movs	r0, #0
 3712              	.LVL413:
 3713 000e FFF7FEFF 		bl	SetRunMode
 3714              	.LVL414:
1138:Src/mode.c    **** 
1139:Src/mode.c    ****     switch (in_dir)
 3715              		.loc 1 1139 0
 3716 0012 012D     		cmp	r5, #1
 3717 0014 2CD0     		beq	.L309
 3718 0016 45B3     		cbz	r5, .L310
 3719 0018 022D     		cmp	r5, #2
 3720 001a 3BD0     		beq	.L311
 3721              	.L308:
1140:Src/mode.c    ****     {
1141:Src/mode.c    ****     case FRONT:
1142:Src/mode.c    ****         Motion_DiagonalStart();
1143:Src/mode.c    ****         break;
1144:Src/mode.c    ****     case LEFT:
1145:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1146:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1147:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
1148:Src/mode.c    ****         break;
1149:Src/mode.c    ****     case RIGHT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 90


1150:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1151:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1152:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
1153:Src/mode.c    ****         break;
1154:Src/mode.c    ****     default:
1155:Src/mode.c    ****         break;
1156:Src/mode.c    ****     }
1157:Src/mode.c    **** 
1158:Src/mode.c    ****     switch (out_dir)
 3722              		.loc 1 1158 0
 3723 001c 012C     		cmp	r4, #1
 3724 001e 4ED0     		beq	.L313
 3725 0020 002C     		cmp	r4, #0
 3726 0022 49D0     		beq	.L314
 3727 0024 022C     		cmp	r4, #2
 3728 0026 5AD0     		beq	.L315
 3729              	.L312:
1159:Src/mode.c    ****     {
1160:Src/mode.c    ****     case FRONT:
1161:Src/mode.c    ****         Motion_DiagonalStop();
1162:Src/mode.c    ****         break;
1163:Src/mode.c    ****     case LEFT:
1164:Src/mode.c    ****         Motion_DiagonalLeft(step);
1165:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
1166:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1167:Src/mode.c    ****         break;
1168:Src/mode.c    ****     case RIGHT:
1169:Src/mode.c    ****         Motion_DiagonalRight(step);
1170:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
1171:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1172:Src/mode.c    ****         break;
1173:Src/mode.c    ****     default:
1174:Src/mode.c    ****         break;
1175:Src/mode.c    ****     }
1176:Src/mode.c    **** 
1177:Src/mode.c    ****     motor_flag = FALSE;
 3730              		.loc 1 1177 0
 3731 0028 0024     		movs	r4, #0
 3732 002a 354B     		ldr	r3, .L317
 3733 002c 1C70     		strb	r4, [r3]
1178:Src/mode.c    ****     HAL_Delay(500);
 3734              		.loc 1 1178 0
 3735 002e 4FF4FA70 		mov	r0, #500
 3736 0032 FFF7FEFF 		bl	HAL_Delay
 3737              	.LVL415:
1179:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3738              		.loc 1 1179 0
 3739 0036 49F64242 		movw	r2, #40002
 3740 003a 3249     		ldr	r1, .L317+4
 3741 003c 324B     		ldr	r3, .L317+8
 3742 003e 1868     		ldr	r0, [r3]
 3743 0040 FFF7FEFF 		bl	Flash_Write
 3744              	.LVL416:
1180:Src/mode.c    ****     HAL_Delay(300);
 3745              		.loc 1 1180 0
 3746 0044 4FF49670 		mov	r0, #300
 3747 0048 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 91


 3748              	.LVL417:
1181:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3749              		.loc 1 1181 0
 3750 004c 4FF49671 		mov	r1, #300
 3751 0050 4C20     		movs	r0, #76
 3752 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3753              	.LVL418:
1182:Src/mode.c    ****     HAL_Delay(200);
 3754              		.loc 1 1182 0
 3755 0056 C820     		movs	r0, #200
 3756 0058 FFF7FEFF 		bl	HAL_Delay
 3757              	.LVL419:
1183:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3758              		.loc 1 1183 0
 3759 005c 2146     		mov	r1, r4
 3760 005e 0A20     		movs	r0, #10
 3761 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 3762              	.LVL420:
1184:Src/mode.c    **** }
 3763              		.loc 1 1184 0
 3764 0064 BDEC028B 		vldm	sp!, {d8}
 3765              	.LCFI48:
 3766              		.cfi_remember_state
 3767              		.cfi_restore 80
 3768              		.cfi_restore 81
 3769              		.cfi_def_cfa_offset 16
 3770 0068 70BD     		pop	{r4, r5, r6, pc}
 3771              	.L310:
 3772              	.LCFI49:
 3773              		.cfi_restore_state
1142:Src/mode.c    ****         break;
 3774              		.loc 1 1142 0
 3775 006a FFF7FEFF 		bl	Motion_DiagonalStart
 3776              	.LVL421:
1143:Src/mode.c    ****     case LEFT:
 3777              		.loc 1 1143 0
 3778 006e D5E7     		b	.L308
 3779              	.L309:
1145:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
 3780              		.loc 1 1145 0
 3781 0070 9FED268A 		vldr.32	s16, .L317+12
 3782 0074 B0EE480A 		vmov.f32	s0, s16
 3783 0078 0120     		movs	r0, #1
 3784 007a FFF7FEFF 		bl	Motion_FastStart
 3785              	.LVL422:
1146:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 3786              		.loc 1 1146 0
 3787 007e B0EE480A 		vmov.f32	s0, s16
 3788 0082 0120     		movs	r0, #1
 3789 0084 FFF7FEFF 		bl	Motion_Adjust_L
 3790              	.LVL423:
1147:Src/mode.c    ****         break;
 3791              		.loc 1 1147 0
 3792 0088 B0EE480A 		vmov.f32	s0, s16
 3793 008c 0220     		movs	r0, #2
 3794 008e FFF7FEFF 		bl	Motion_FastLeftTurn
 3795              	.LVL424:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 92


1148:Src/mode.c    ****     case RIGHT:
 3796              		.loc 1 1148 0
 3797 0092 C3E7     		b	.L308
 3798              	.L311:
1150:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 3799              		.loc 1 1150 0
 3800 0094 9FED1D8A 		vldr.32	s16, .L317+12
 3801 0098 B0EE480A 		vmov.f32	s0, s16
 3802 009c 0120     		movs	r0, #1
 3803 009e FFF7FEFF 		bl	Motion_FastStart
 3804              	.LVL425:
1151:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 3805              		.loc 1 1151 0
 3806 00a2 B0EE480A 		vmov.f32	s0, s16
 3807 00a6 0120     		movs	r0, #1
 3808 00a8 FFF7FEFF 		bl	Motion_Adjust_R
 3809              	.LVL426:
1152:Src/mode.c    ****         break;
 3810              		.loc 1 1152 0
 3811 00ac B0EE480A 		vmov.f32	s0, s16
 3812 00b0 0220     		movs	r0, #2
 3813 00b2 FFF7FEFF 		bl	Motion_FastRightTurn
 3814              	.LVL427:
1153:Src/mode.c    ****     default:
 3815              		.loc 1 1153 0
 3816 00b6 B1E7     		b	.L308
 3817              	.L314:
1161:Src/mode.c    ****         break;
 3818              		.loc 1 1161 0
 3819 00b8 FFF7FEFF 		bl	Motion_DiagonalStop
 3820              	.LVL428:
1162:Src/mode.c    ****     case LEFT:
 3821              		.loc 1 1162 0
 3822 00bc B4E7     		b	.L312
 3823              	.L313:
1164:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
 3824              		.loc 1 1164 0
 3825 00be 3046     		mov	r0, r6
 3826 00c0 FFF7FEFF 		bl	Motion_DiagonalLeft
 3827              	.LVL429:
1165:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3828              		.loc 1 1165 0
 3829 00c4 9FED118A 		vldr.32	s16, .L317+12
 3830 00c8 B0EE480A 		vmov.f32	s0, s16
 3831 00cc 0620     		movs	r0, #6
 3832 00ce FFF7FEFF 		bl	Motion_FastLeftTurn
 3833              	.LVL430:
1166:Src/mode.c    ****         break;
 3834              		.loc 1 1166 0
 3835 00d2 B0EE480A 		vmov.f32	s0, s16
 3836 00d6 0120     		movs	r0, #1
 3837 00d8 FFF7FEFF 		bl	Motion_FastGoal
 3838              	.LVL431:
1167:Src/mode.c    ****     case RIGHT:
 3839              		.loc 1 1167 0
 3840 00dc A4E7     		b	.L312
 3841              	.L315:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 93


1169:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
 3842              		.loc 1 1169 0
 3843 00de 3046     		mov	r0, r6
 3844 00e0 FFF7FEFF 		bl	Motion_DiagonalRight
 3845              	.LVL432:
1170:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3846              		.loc 1 1170 0
 3847 00e4 9FED098A 		vldr.32	s16, .L317+12
 3848 00e8 B0EE480A 		vmov.f32	s0, s16
 3849 00ec 0620     		movs	r0, #6
 3850 00ee FFF7FEFF 		bl	Motion_FastRightTurn
 3851              	.LVL433:
1171:Src/mode.c    ****         break;
 3852              		.loc 1 1171 0
 3853 00f2 B0EE480A 		vmov.f32	s0, s16
 3854 00f6 0120     		movs	r0, #1
 3855 00f8 FFF7FEFF 		bl	Motion_FastGoal
 3856              	.LVL434:
1172:Src/mode.c    ****     default:
 3857              		.loc 1 1172 0
 3858 00fc 94E7     		b	.L312
 3859              	.L318:
 3860 00fe 00BF     		.align	2
 3861              	.L317:
 3862 0100 00000000 		.word	motor_flag
 3863 0104 00000000 		.word	loger
 3864 0108 00000000 		.word	start_address
 3865 010c 00004844 		.word	1145569280
 3866              		.cfi_endproc
 3867              	.LFE148:
 3869              		.section	.text.TurnBig90_Test,"ax",%progbits
 3870              		.align	1
 3871              		.global	TurnBig90_Test
 3872              		.syntax unified
 3873              		.thumb
 3874              		.thumb_func
 3875              		.fpu fpv4-sp-d16
 3877              	TurnBig90_Test:
 3878              	.LFB149:
1185:Src/mode.c    **** 
1186:Src/mode.c    **** void TurnBig90_Test(int8_t dir)
1187:Src/mode.c    **** {
 3879              		.loc 1 1187 0
 3880              		.cfi_startproc
 3881              		@ args = 0, pretend = 0, frame = 0
 3882              		@ frame_needed = 0, uses_anonymous_args = 0
 3883              	.LVL435:
 3884 0000 10B5     		push	{r4, lr}
 3885              	.LCFI50:
 3886              		.cfi_def_cfa_offset 8
 3887              		.cfi_offset 4, -8
 3888              		.cfi_offset 14, -4
 3889 0002 2DED028B 		vpush.64	{d8}
 3890              	.LCFI51:
 3891              		.cfi_def_cfa_offset 16
 3892              		.cfi_offset 80, -16
 3893              		.cfi_offset 81, -12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 94


 3894 0006 0446     		mov	r4, r0
1188:Src/mode.c    ****     SetRunMode(0);
 3895              		.loc 1 1188 0
 3896 0008 0020     		movs	r0, #0
 3897              	.LVL436:
 3898 000a FFF7FEFF 		bl	SetRunMode
 3899              	.LVL437:
1189:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3900              		.loc 1 1189 0
 3901 000e 9FED1C0A 		vldr.32	s0, .L325
 3902 0012 0120     		movs	r0, #1
 3903 0014 FFF7FEFF 		bl	Motion_FastStart
 3904              	.LVL438:
1190:Src/mode.c    ****     if (dir == LEFT)
 3905              		.loc 1 1190 0
 3906 0018 012C     		cmp	r4, #1
 3907 001a 18D0     		beq	.L323
1191:Src/mode.c    ****     {
1192:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1193:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
1194:Src/mode.c    ****     }
1195:Src/mode.c    ****     else if (dir == RIGHT)
 3908              		.loc 1 1195 0
 3909 001c 022C     		cmp	r4, #2
 3910 001e 22D0     		beq	.L324
 3911              	.L321:
1196:Src/mode.c    ****     {
1197:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1198:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
1199:Src/mode.c    ****     }
1200:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3912              		.loc 1 1200 0
 3913 0020 9FED170A 		vldr.32	s0, .L325
 3914 0024 0120     		movs	r0, #1
 3915 0026 FFF7FEFF 		bl	Motion_FastGoal
 3916              	.LVL439:
1201:Src/mode.c    ****     motor_flag = FALSE;
 3917              		.loc 1 1201 0
 3918 002a 0024     		movs	r4, #0
 3919 002c 154B     		ldr	r3, .L325+4
 3920 002e 1C70     		strb	r4, [r3]
1202:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3921              		.loc 1 1202 0
 3922 0030 4FF49671 		mov	r1, #300
 3923 0034 4C20     		movs	r0, #76
 3924 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 3925              	.LVL440:
1203:Src/mode.c    ****     HAL_Delay(200);
 3926              		.loc 1 1203 0
 3927 003a C820     		movs	r0, #200
 3928 003c FFF7FEFF 		bl	HAL_Delay
 3929              	.LVL441:
1204:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3930              		.loc 1 1204 0
 3931 0040 2146     		mov	r1, r4
 3932 0042 0A20     		movs	r0, #10
 3933 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 95


 3934              	.LVL442:
1205:Src/mode.c    **** }
 3935              		.loc 1 1205 0
 3936 0048 BDEC028B 		vldm	sp!, {d8}
 3937              	.LCFI52:
 3938              		.cfi_remember_state
 3939              		.cfi_restore 80
 3940              		.cfi_restore 81
 3941              		.cfi_def_cfa_offset 8
 3942 004c 10BD     		pop	{r4, pc}
 3943              	.L323:
 3944              	.LCFI53:
 3945              		.cfi_restore_state
1192:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
 3946              		.loc 1 1192 0
 3947 004e 9FED0C8A 		vldr.32	s16, .L325
 3948 0052 B0EE480A 		vmov.f32	s0, s16
 3949 0056 0120     		movs	r0, #1
 3950 0058 FFF7FEFF 		bl	Motion_Adjust_L
 3951              	.LVL443:
1193:Src/mode.c    ****     }
 3952              		.loc 1 1193 0
 3953 005c B0EE480A 		vmov.f32	s0, s16
 3954 0060 FFF7FEFF 		bl	Motion_Left90Turn
 3955              	.LVL444:
 3956 0064 DCE7     		b	.L321
 3957              	.L324:
1197:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
 3958              		.loc 1 1197 0
 3959 0066 9FED068A 		vldr.32	s16, .L325
 3960 006a B0EE480A 		vmov.f32	s0, s16
 3961 006e 0120     		movs	r0, #1
 3962 0070 FFF7FEFF 		bl	Motion_Adjust_R
 3963              	.LVL445:
1198:Src/mode.c    ****     }
 3964              		.loc 1 1198 0
 3965 0074 B0EE480A 		vmov.f32	s0, s16
 3966 0078 FFF7FEFF 		bl	Motion_Right90Turn
 3967              	.LVL446:
 3968 007c D0E7     		b	.L321
 3969              	.L326:
 3970 007e 00BF     		.align	2
 3971              	.L325:
 3972 0080 00004844 		.word	1145569280
 3973 0084 00000000 		.word	motor_flag
 3974              		.cfi_endproc
 3975              	.LFE149:
 3977              		.section	.text.TurnBig180_Test,"ax",%progbits
 3978              		.align	1
 3979              		.global	TurnBig180_Test
 3980              		.syntax unified
 3981              		.thumb
 3982              		.thumb_func
 3983              		.fpu fpv4-sp-d16
 3985              	TurnBig180_Test:
 3986              	.LFB150:
1206:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 96


1207:Src/mode.c    **** void TurnBig180_Test(int8_t dir)
1208:Src/mode.c    **** {
 3987              		.loc 1 1208 0
 3988              		.cfi_startproc
 3989              		@ args = 0, pretend = 0, frame = 0
 3990              		@ frame_needed = 0, uses_anonymous_args = 0
 3991              	.LVL447:
 3992 0000 10B5     		push	{r4, lr}
 3993              	.LCFI54:
 3994              		.cfi_def_cfa_offset 8
 3995              		.cfi_offset 4, -8
 3996              		.cfi_offset 14, -4
 3997 0002 2DED028B 		vpush.64	{d8}
 3998              	.LCFI55:
 3999              		.cfi_def_cfa_offset 16
 4000              		.cfi_offset 80, -16
 4001              		.cfi_offset 81, -12
 4002 0006 0446     		mov	r4, r0
1209:Src/mode.c    ****     SetRunMode(0);
 4003              		.loc 1 1209 0
 4004 0008 0020     		movs	r0, #0
 4005              	.LVL448:
 4006 000a FFF7FEFF 		bl	SetRunMode
 4007              	.LVL449:
1210:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 4008              		.loc 1 1210 0
 4009 000e 9FED1F8A 		vldr.32	s16, .L333
 4010 0012 B0EE480A 		vmov.f32	s0, s16
 4011 0016 0120     		movs	r0, #1
 4012 0018 FFF7FEFF 		bl	Motion_FastStart
 4013              	.LVL450:
1211:Src/mode.c    ****     Motion_Adjust(1, VELO_F);
 4014              		.loc 1 1211 0
 4015 001c B0EE480A 		vmov.f32	s0, s16
 4016 0020 0120     		movs	r0, #1
 4017 0022 FFF7FEFF 		bl	Motion_Adjust
 4018              	.LVL451:
1212:Src/mode.c    ****     if (dir == LEFT)
 4019              		.loc 1 1212 0
 4020 0026 012C     		cmp	r4, #1
 4021 0028 18D0     		beq	.L331
1213:Src/mode.c    ****     {
1214:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1215:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
1216:Src/mode.c    ****     }
1217:Src/mode.c    ****     else if (dir == RIGHT)
 4022              		.loc 1 1217 0
 4023 002a 022C     		cmp	r4, #2
 4024 002c 21D0     		beq	.L332
 4025              	.L329:
1218:Src/mode.c    ****     {
1219:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1220:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
1221:Src/mode.c    ****     }
1222:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 4026              		.loc 1 1222 0
 4027 002e 9FED170A 		vldr.32	s0, .L333
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 97


 4028 0032 0120     		movs	r0, #1
 4029 0034 FFF7FEFF 		bl	Motion_FastGoal
 4030              	.LVL452:
1223:Src/mode.c    ****     motor_flag = FALSE;
 4031              		.loc 1 1223 0
 4032 0038 0024     		movs	r4, #0
 4033 003a 154B     		ldr	r3, .L333+4
 4034 003c 1C70     		strb	r4, [r3]
1224:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4035              		.loc 1 1224 0
 4036 003e 4FF49671 		mov	r1, #300
 4037 0042 4C20     		movs	r0, #76
 4038 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 4039              	.LVL453:
1225:Src/mode.c    ****     HAL_Delay(200);
 4040              		.loc 1 1225 0
 4041 0048 C820     		movs	r0, #200
 4042 004a FFF7FEFF 		bl	HAL_Delay
 4043              	.LVL454:
1226:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4044              		.loc 1 1226 0
 4045 004e 2146     		mov	r1, r4
 4046 0050 0A20     		movs	r0, #10
 4047 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 4048              	.LVL455:
1227:Src/mode.c    **** }
 4049              		.loc 1 1227 0
 4050 0056 BDEC028B 		vldm	sp!, {d8}
 4051              	.LCFI56:
 4052              		.cfi_remember_state
 4053              		.cfi_restore 80
 4054              		.cfi_restore 81
 4055              		.cfi_def_cfa_offset 8
 4056 005a 10BD     		pop	{r4, pc}
 4057              	.L331:
 4058              	.LCFI57:
 4059              		.cfi_restore_state
1214:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
 4060              		.loc 1 1214 0
 4061 005c B0EE480A 		vmov.f32	s0, s16
 4062 0060 0120     		movs	r0, #1
 4063 0062 FFF7FEFF 		bl	Motion_Adjust_L
 4064              	.LVL456:
1215:Src/mode.c    ****     }
 4065              		.loc 1 1215 0
 4066 0066 B0EE480A 		vmov.f32	s0, s16
 4067 006a 0420     		movs	r0, #4
 4068 006c FFF7FEFF 		bl	Motion_FastLeftTurn
 4069              	.LVL457:
 4070 0070 DDE7     		b	.L329
 4071              	.L332:
1219:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
 4072              		.loc 1 1219 0
 4073 0072 9FED068A 		vldr.32	s16, .L333
 4074 0076 B0EE480A 		vmov.f32	s0, s16
 4075 007a 0120     		movs	r0, #1
 4076 007c FFF7FEFF 		bl	Motion_Adjust_R
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 98


 4077              	.LVL458:
1220:Src/mode.c    ****     }
 4078              		.loc 1 1220 0
 4079 0080 B0EE480A 		vmov.f32	s0, s16
 4080 0084 0420     		movs	r0, #4
 4081 0086 FFF7FEFF 		bl	Motion_FastRightTurn
 4082              	.LVL459:
 4083 008a D0E7     		b	.L329
 4084              	.L334:
 4085              		.align	2
 4086              	.L333:
 4087 008c 00004844 		.word	1145569280
 4088 0090 00000000 		.word	motor_flag
 4089              		.cfi_endproc
 4090              	.LFE150:
 4092              		.section	.text.TurnV90_Test,"ax",%progbits
 4093              		.align	1
 4094              		.global	TurnV90_Test
 4095              		.syntax unified
 4096              		.thumb
 4097              		.thumb_func
 4098              		.fpu fpv4-sp-d16
 4100              	TurnV90_Test:
 4101              	.LFB151:
1228:Src/mode.c    **** 
1229:Src/mode.c    **** void TurnV90_Test(int8_t dir)
1230:Src/mode.c    **** {
 4102              		.loc 1 1230 0
 4103              		.cfi_startproc
 4104              		@ args = 0, pretend = 0, frame = 0
 4105              		@ frame_needed = 0, uses_anonymous_args = 0
 4106              	.LVL460:
 4107 0000 10B5     		push	{r4, lr}
 4108              	.LCFI58:
 4109              		.cfi_def_cfa_offset 8
 4110              		.cfi_offset 4, -8
 4111              		.cfi_offset 14, -4
 4112 0002 2DED028B 		vpush.64	{d8}
 4113              	.LCFI59:
 4114              		.cfi_def_cfa_offset 16
 4115              		.cfi_offset 80, -16
 4116              		.cfi_offset 81, -12
 4117 0006 0446     		mov	r4, r0
1231:Src/mode.c    ****     SetRunMode(0);
 4118              		.loc 1 1231 0
 4119 0008 0020     		movs	r0, #0
 4120              	.LVL461:
 4121 000a FFF7FEFF 		bl	SetRunMode
 4122              	.LVL462:
1232:Src/mode.c    ****     Motion_DiagonalStart();
 4123              		.loc 1 1232 0
 4124 000e FFF7FEFF 		bl	Motion_DiagonalStart
 4125              	.LVL463:
1233:Src/mode.c    **** 
1234:Src/mode.c    ****     if (dir == LEFT)
 4126              		.loc 1 1234 0
 4127 0012 012C     		cmp	r4, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 99


 4128 0014 1FD0     		beq	.L339
1235:Src/mode.c    ****     {
1236:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1237:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
1238:Src/mode.c    ****     }
1239:Src/mode.c    ****     else
1240:Src/mode.c    ****     {
1241:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 4129              		.loc 1 1241 0
 4130 0016 9FED168A 		vldr.32	s16, .L340
 4131 001a B0EE480A 		vmov.f32	s0, s16
 4132 001e 0120     		movs	r0, #1
 4133 0020 FFF7FEFF 		bl	Motion_Adjust_R
 4134              	.LVL464:
1242:Src/mode.c    ****         Motion_FastRightTurn(T_V90, 800.0f);
 4135              		.loc 1 1242 0
 4136 0024 B0EE480A 		vmov.f32	s0, s16
 4137 0028 0720     		movs	r0, #7
 4138 002a FFF7FEFF 		bl	Motion_FastRightTurn
 4139              	.LVL465:
 4140              	.L337:
1243:Src/mode.c    ****     }
1244:Src/mode.c    ****     Motion_DiagonalStop();
 4141              		.loc 1 1244 0
 4142 002e FFF7FEFF 		bl	Motion_DiagonalStop
 4143              	.LVL466:
1245:Src/mode.c    ****     motor_flag = FALSE;
 4144              		.loc 1 1245 0
 4145 0032 0024     		movs	r4, #0
 4146 0034 0F4B     		ldr	r3, .L340+4
 4147 0036 1C70     		strb	r4, [r3]
1246:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4148              		.loc 1 1246 0
 4149 0038 4FF49671 		mov	r1, #300
 4150 003c 4C20     		movs	r0, #76
 4151 003e FFF7FEFF 		bl	Tim_BuzzerPwm
 4152              	.LVL467:
1247:Src/mode.c    ****     HAL_Delay(200);
 4153              		.loc 1 1247 0
 4154 0042 C820     		movs	r0, #200
 4155 0044 FFF7FEFF 		bl	HAL_Delay
 4156              	.LVL468:
1248:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4157              		.loc 1 1248 0
 4158 0048 2146     		mov	r1, r4
 4159 004a 0A20     		movs	r0, #10
 4160 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 4161              	.LVL469:
1249:Src/mode.c    **** }
 4162              		.loc 1 1249 0
 4163 0050 BDEC028B 		vldm	sp!, {d8}
 4164              	.LCFI60:
 4165              		.cfi_remember_state
 4166              		.cfi_restore 80
 4167              		.cfi_restore 81
 4168              		.cfi_def_cfa_offset 8
 4169 0054 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 100


 4170              	.L339:
 4171              	.LCFI61:
 4172              		.cfi_restore_state
1236:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 4173              		.loc 1 1236 0
 4174 0056 9FED068A 		vldr.32	s16, .L340
 4175 005a B0EE480A 		vmov.f32	s0, s16
 4176 005e 0120     		movs	r0, #1
 4177 0060 FFF7FEFF 		bl	Motion_Adjust_L
 4178              	.LVL470:
1237:Src/mode.c    ****     }
 4179              		.loc 1 1237 0
 4180 0064 B0EE480A 		vmov.f32	s0, s16
 4181 0068 0720     		movs	r0, #7
 4182 006a FFF7FEFF 		bl	Motion_FastLeftTurn
 4183              	.LVL471:
 4184 006e DEE7     		b	.L337
 4185              	.L341:
 4186              		.align	2
 4187              	.L340:
 4188 0070 00004844 		.word	1145569280
 4189 0074 00000000 		.word	motor_flag
 4190              		.cfi_endproc
 4191              	.LFE151:
 4193              		.section	.text.FastestTurnTest,"ax",%progbits
 4194              		.align	1
 4195              		.global	FastestTurnTest
 4196              		.syntax unified
 4197              		.thumb
 4198              		.thumb_func
 4199              		.fpu fpv4-sp-d16
 4201              	FastestTurnTest:
 4202              	.LFB152:
1250:Src/mode.c    **** 
1251:Src/mode.c    **** void FastestTurnTest(uint8_t dir, uint8_t deg)
1252:Src/mode.c    **** {
 4203              		.loc 1 1252 0
 4204              		.cfi_startproc
 4205              		@ args = 0, pretend = 0, frame = 0
 4206              		@ frame_needed = 0, uses_anonymous_args = 0
 4207              	.LVL472:
 4208 0000 38B5     		push	{r3, r4, r5, lr}
 4209              	.LCFI62:
 4210              		.cfi_def_cfa_offset 16
 4211              		.cfi_offset 3, -16
 4212              		.cfi_offset 4, -12
 4213              		.cfi_offset 5, -8
 4214              		.cfi_offset 14, -4
 4215 0002 2DED028B 		vpush.64	{d8}
 4216              	.LCFI63:
 4217              		.cfi_def_cfa_offset 24
 4218              		.cfi_offset 80, -24
 4219              		.cfi_offset 81, -20
 4220 0006 0546     		mov	r5, r0
 4221 0008 0C46     		mov	r4, r1
1253:Src/mode.c    ****     SetRunMode(1);
 4222              		.loc 1 1253 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 101


 4223 000a 0120     		movs	r0, #1
 4224              	.LVL473:
 4225 000c FFF7FEFF 		bl	SetRunMode
 4226              	.LVL474:
1254:Src/mode.c    ****     enc.distance = 0;
 4227              		.loc 1 1254 0
 4228 0010 714B     		ldr	r3, .L358
 4229 0012 0022     		movs	r2, #0
 4230 0014 1A60     		str	r2, [r3]	@ float
1255:Src/mode.c    ****     switch (deg)
 4231              		.loc 1 1255 0
 4232 0016 042C     		cmp	r4, #4
 4233 0018 00F2AD80 		bhi	.L343
 4234 001c DFE804F0 		tbb	[pc, r4]
 4235              	.L345:
 4236 0020 03       		.byte	(.L344-.L345)/2
 4237 0021 93       		.byte	(.L346-.L345)/2
 4238 0022 AB       		.byte	(.L343-.L345)/2
 4239 0023 33       		.byte	(.L347-.L345)/2
 4240 0024 63       		.byte	(.L348-.L345)/2
 4241 0025 00       		.p2align 1
 4242              	.L344:
1256:Src/mode.c    ****     {
1257:Src/mode.c    ****     case SEARCH:
1258:Src/mode.c    ****         if (dir == 1)
 4243              		.loc 1 1258 0
 4244 0026 012D     		cmp	r5, #1
 4245 0028 16D0     		beq	.L354
1259:Src/mode.c    ****         {
1260:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
1261:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1262:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1263:Src/mode.c    ****             motor_flag = FALSE;
1264:Src/mode.c    ****             Tim_FanPwm(0);
1265:Src/mode.c    ****         }
1266:Src/mode.c    ****         else
1267:Src/mode.c    ****         {
1268:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
 4246              		.loc 1 1268 0
 4247 002a 9FED6C8A 		vldr.32	s16, .L358+4
 4248 002e B0EE480A 		vmov.f32	s0, s16
 4249 0032 0320     		movs	r0, #3
 4250 0034 FFF7FEFF 		bl	Motion_FastestStart
 4251              	.LVL475:
1269:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4252              		.loc 1 1269 0
 4253 0038 B0EE480A 		vmov.f32	s0, s16
 4254 003c 2046     		mov	r0, r4
 4255 003e FFF7FEFF 		bl	Motion_FastestRightTurn
 4256              	.LVL476:
1270:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4257              		.loc 1 1270 0
 4258 0042 B0EE480A 		vmov.f32	s0, s16
 4259 0046 0220     		movs	r0, #2
 4260 0048 FFF7FEFF 		bl	Motion_FastestGoal
 4261              	.LVL477:
1271:Src/mode.c    ****             motor_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 102


 4262              		.loc 1 1271 0
 4263 004c 0020     		movs	r0, #0
 4264 004e 644B     		ldr	r3, .L358+8
 4265 0050 1870     		strb	r0, [r3]
1272:Src/mode.c    ****             Tim_FanPwm(0);
 4266              		.loc 1 1272 0
 4267 0052 FFF7FEFF 		bl	Tim_FanPwm
 4268              	.LVL478:
 4269 0056 8EE0     		b	.L343
 4270              	.L354:
1260:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4271              		.loc 1 1260 0
 4272 0058 9FED608A 		vldr.32	s16, .L358+4
 4273 005c B0EE480A 		vmov.f32	s0, s16
 4274 0060 0320     		movs	r0, #3
 4275 0062 FFF7FEFF 		bl	Motion_FastestStart
 4276              	.LVL479:
1261:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4277              		.loc 1 1261 0
 4278 0066 B0EE480A 		vmov.f32	s0, s16
 4279 006a 2046     		mov	r0, r4
 4280 006c FFF7FEFF 		bl	Motion_FastestLeftTurn
 4281              	.LVL480:
1262:Src/mode.c    ****             motor_flag = FALSE;
 4282              		.loc 1 1262 0
 4283 0070 B0EE480A 		vmov.f32	s0, s16
 4284 0074 0220     		movs	r0, #2
 4285 0076 FFF7FEFF 		bl	Motion_FastestGoal
 4286              	.LVL481:
1263:Src/mode.c    ****             Tim_FanPwm(0);
 4287              		.loc 1 1263 0
 4288 007a 0020     		movs	r0, #0
 4289 007c 584B     		ldr	r3, .L358+8
 4290 007e 1870     		strb	r0, [r3]
1264:Src/mode.c    ****         }
 4291              		.loc 1 1264 0
 4292 0080 FFF7FEFF 		bl	Tim_FanPwm
 4293              	.LVL482:
 4294 0084 77E0     		b	.L343
 4295              	.L347:
1273:Src/mode.c    ****         }
1274:Src/mode.c    ****         break;
1275:Src/mode.c    ****     case T_90:
1276:Src/mode.c    ****         if (dir == 1)
 4296              		.loc 1 1276 0
 4297 0086 012D     		cmp	r5, #1
 4298 0088 16D0     		beq	.L355
1277:Src/mode.c    ****         {
1278:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1279:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1280:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1281:Src/mode.c    ****             motor_flag = FALSE;
1282:Src/mode.c    ****             Tim_FanPwm(0);
1283:Src/mode.c    ****         }
1284:Src/mode.c    ****         else
1285:Src/mode.c    ****         {
1286:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 103


 4299              		.loc 1 1286 0
 4300 008a 9FED548A 		vldr.32	s16, .L358+4
 4301 008e B0EE480A 		vmov.f32	s0, s16
 4302 0092 0420     		movs	r0, #4
 4303 0094 FFF7FEFF 		bl	Motion_FastestStart
 4304              	.LVL483:
1287:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4305              		.loc 1 1287 0
 4306 0098 B0EE480A 		vmov.f32	s0, s16
 4307 009c 2046     		mov	r0, r4
 4308 009e FFF7FEFF 		bl	Motion_FastestRightTurn
 4309              	.LVL484:
1288:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4310              		.loc 1 1288 0
 4311 00a2 B0EE480A 		vmov.f32	s0, s16
 4312 00a6 0220     		movs	r0, #2
 4313 00a8 FFF7FEFF 		bl	Motion_FastestGoal
 4314              	.LVL485:
1289:Src/mode.c    ****             motor_flag = FALSE;
 4315              		.loc 1 1289 0
 4316 00ac 0020     		movs	r0, #0
 4317 00ae 4C4B     		ldr	r3, .L358+8
 4318 00b0 1870     		strb	r0, [r3]
1290:Src/mode.c    ****             Tim_FanPwm(0);
 4319              		.loc 1 1290 0
 4320 00b2 FFF7FEFF 		bl	Tim_FanPwm
 4321              	.LVL486:
 4322 00b6 5EE0     		b	.L343
 4323              	.L355:
1278:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4324              		.loc 1 1278 0
 4325 00b8 9FED488A 		vldr.32	s16, .L358+4
 4326 00bc B0EE480A 		vmov.f32	s0, s16
 4327 00c0 0420     		movs	r0, #4
 4328 00c2 FFF7FEFF 		bl	Motion_FastestStart
 4329              	.LVL487:
1279:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4330              		.loc 1 1279 0
 4331 00c6 B0EE480A 		vmov.f32	s0, s16
 4332 00ca 2046     		mov	r0, r4
 4333 00cc FFF7FEFF 		bl	Motion_FastestLeftTurn
 4334              	.LVL488:
1280:Src/mode.c    ****             motor_flag = FALSE;
 4335              		.loc 1 1280 0
 4336 00d0 B0EE480A 		vmov.f32	s0, s16
 4337 00d4 0220     		movs	r0, #2
 4338 00d6 FFF7FEFF 		bl	Motion_FastestGoal
 4339              	.LVL489:
1281:Src/mode.c    ****             Tim_FanPwm(0);
 4340              		.loc 1 1281 0
 4341 00da 0020     		movs	r0, #0
 4342 00dc 404B     		ldr	r3, .L358+8
 4343 00de 1870     		strb	r0, [r3]
1282:Src/mode.c    ****         }
 4344              		.loc 1 1282 0
 4345 00e0 FFF7FEFF 		bl	Tim_FanPwm
 4346              	.LVL490:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 104


 4347 00e4 47E0     		b	.L343
 4348              	.L348:
1291:Src/mode.c    ****         }
1292:Src/mode.c    ****         break;
1293:Src/mode.c    ****     case T_180:
1294:Src/mode.c    ****         if (dir == 1)
 4349              		.loc 1 1294 0
 4350 00e6 012D     		cmp	r5, #1
 4351 00e8 16D0     		beq	.L356
1295:Src/mode.c    ****         {
1296:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1297:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1298:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1299:Src/mode.c    ****             motor_flag = FALSE;
1300:Src/mode.c    ****             Tim_FanPwm(0);
1301:Src/mode.c    ****         }
1302:Src/mode.c    ****         else
1303:Src/mode.c    ****         {
1304:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4352              		.loc 1 1304 0
 4353 00ea 9FED3C8A 		vldr.32	s16, .L358+4
 4354 00ee B0EE480A 		vmov.f32	s0, s16
 4355 00f2 0420     		movs	r0, #4
 4356 00f4 FFF7FEFF 		bl	Motion_FastestStart
 4357              	.LVL491:
1305:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4358              		.loc 1 1305 0
 4359 00f8 B0EE480A 		vmov.f32	s0, s16
 4360 00fc 2046     		mov	r0, r4
 4361 00fe FFF7FEFF 		bl	Motion_FastestRightTurn
 4362              	.LVL492:
1306:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4363              		.loc 1 1306 0
 4364 0102 B0EE480A 		vmov.f32	s0, s16
 4365 0106 0220     		movs	r0, #2
 4366 0108 FFF7FEFF 		bl	Motion_FastestGoal
 4367              	.LVL493:
1307:Src/mode.c    ****             motor_flag = FALSE;
 4368              		.loc 1 1307 0
 4369 010c 0020     		movs	r0, #0
 4370 010e 344B     		ldr	r3, .L358+8
 4371 0110 1870     		strb	r0, [r3]
1308:Src/mode.c    ****             Tim_FanPwm(0);
 4372              		.loc 1 1308 0
 4373 0112 FFF7FEFF 		bl	Tim_FanPwm
 4374              	.LVL494:
 4375 0116 2EE0     		b	.L343
 4376              	.L356:
1296:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4377              		.loc 1 1296 0
 4378 0118 9FED308A 		vldr.32	s16, .L358+4
 4379 011c B0EE480A 		vmov.f32	s0, s16
 4380 0120 0420     		movs	r0, #4
 4381 0122 FFF7FEFF 		bl	Motion_FastestStart
 4382              	.LVL495:
1297:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4383              		.loc 1 1297 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 105


 4384 0126 B0EE480A 		vmov.f32	s0, s16
 4385 012a 2046     		mov	r0, r4
 4386 012c FFF7FEFF 		bl	Motion_FastestLeftTurn
 4387              	.LVL496:
1298:Src/mode.c    ****             motor_flag = FALSE;
 4388              		.loc 1 1298 0
 4389 0130 B0EE480A 		vmov.f32	s0, s16
 4390 0134 0220     		movs	r0, #2
 4391 0136 FFF7FEFF 		bl	Motion_FastestGoal
 4392              	.LVL497:
1299:Src/mode.c    ****             Tim_FanPwm(0);
 4393              		.loc 1 1299 0
 4394 013a 0020     		movs	r0, #0
 4395 013c 284B     		ldr	r3, .L358+8
 4396 013e 1870     		strb	r0, [r3]
1300:Src/mode.c    ****         }
 4397              		.loc 1 1300 0
 4398 0140 FFF7FEFF 		bl	Tim_FanPwm
 4399              	.LVL498:
 4400 0144 17E0     		b	.L343
 4401              	.L346:
1309:Src/mode.c    ****         }
1310:Src/mode.c    ****         break;
1311:Src/mode.c    ****     case T_45IN:
1312:Src/mode.c    ****         if (dir == 1)
 4402              		.loc 1 1312 0
 4403 0146 012D     		cmp	r5, #1
 4404 0148 2FD0     		beq	.L357
1313:Src/mode.c    ****         {
1314:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1315:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1316:Src/mode.c    ****             Motion_FastestGoal(1, VELO_EST);
1317:Src/mode.c    ****             motor_flag = FALSE;
1318:Src/mode.c    ****             Tim_FanPwm(0);
1319:Src/mode.c    ****         }
1320:Src/mode.c    ****         else
1321:Src/mode.c    ****         {
1322:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4405              		.loc 1 1322 0
 4406 014a 9FED248A 		vldr.32	s16, .L358+4
 4407 014e B0EE480A 		vmov.f32	s0, s16
 4408 0152 0420     		movs	r0, #4
 4409 0154 FFF7FEFF 		bl	Motion_FastestStart
 4410              	.LVL499:
1323:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4411              		.loc 1 1323 0
 4412 0158 B0EE480A 		vmov.f32	s0, s16
 4413 015c 2046     		mov	r0, r4
 4414 015e FFF7FEFF 		bl	Motion_FastestRightTurn
 4415              	.LVL500:
1324:Src/mode.c    ****             Motion_FastestGoal(1, VELO_EST);
 4416              		.loc 1 1324 0
 4417 0162 B0EE480A 		vmov.f32	s0, s16
 4418 0166 0120     		movs	r0, #1
 4419 0168 FFF7FEFF 		bl	Motion_FastestGoal
 4420              	.LVL501:
1325:Src/mode.c    ****             motor_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 106


 4421              		.loc 1 1325 0
 4422 016c 0020     		movs	r0, #0
 4423 016e 1C4B     		ldr	r3, .L358+8
 4424 0170 1870     		strb	r0, [r3]
1326:Src/mode.c    ****             Tim_FanPwm(0);
 4425              		.loc 1 1326 0
 4426 0172 FFF7FEFF 		bl	Tim_FanPwm
 4427              	.LVL502:
 4428              	.L343:
1327:Src/mode.c    ****         }
1328:Src/mode.c    ****         break;
1329:Src/mode.c    ****     default:
1330:Src/mode.c    ****     break;
1331:Src/mode.c    ****     }
1332:Src/mode.c    **** 
1333:Src/mode.c    ****     HAL_Delay(500);
 4429              		.loc 1 1333 0
 4430 0176 4FF4FA70 		mov	r0, #500
 4431 017a FFF7FEFF 		bl	HAL_Delay
 4432              	.LVL503:
1334:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4433              		.loc 1 1334 0
 4434 017e 49F64242 		movw	r2, #40002
 4435 0182 1849     		ldr	r1, .L358+12
 4436 0184 184B     		ldr	r3, .L358+16
 4437 0186 1868     		ldr	r0, [r3]
 4438 0188 FFF7FEFF 		bl	Flash_Write
 4439              	.LVL504:
1335:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4440              		.loc 1 1335 0
 4441 018c 4FF49671 		mov	r1, #300
 4442 0190 4C20     		movs	r0, #76
 4443 0192 FFF7FEFF 		bl	Tim_BuzzerPwm
 4444              	.LVL505:
1336:Src/mode.c    ****     HAL_Delay(200);
 4445              		.loc 1 1336 0
 4446 0196 C820     		movs	r0, #200
 4447 0198 FFF7FEFF 		bl	HAL_Delay
 4448              	.LVL506:
1337:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4449              		.loc 1 1337 0
 4450 019c 0021     		movs	r1, #0
 4451 019e 0A20     		movs	r0, #10
 4452 01a0 FFF7FEFF 		bl	Tim_BuzzerPwm
 4453              	.LVL507:
1338:Src/mode.c    **** }...
 4454              		.loc 1 1338 0
 4455 01a4 BDEC028B 		vldm	sp!, {d8}
 4456              	.LCFI64:
 4457              		.cfi_remember_state
 4458              		.cfi_restore 80
 4459              		.cfi_restore 81
 4460              		.cfi_def_cfa_offset 16
 4461 01a8 38BD     		pop	{r3, r4, r5, pc}
 4462              	.L357:
 4463              	.LCFI65:
 4464              		.cfi_restore_state
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 107


1314:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4465              		.loc 1 1314 0
 4466 01aa 9FED0C8A 		vldr.32	s16, .L358+4
 4467 01ae B0EE480A 		vmov.f32	s0, s16
 4468 01b2 0420     		movs	r0, #4
 4469 01b4 FFF7FEFF 		bl	Motion_FastestStart
 4470              	.LVL508:
1315:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4471              		.loc 1 1315 0
 4472 01b8 B0EE480A 		vmov.f32	s0, s16
 4473 01bc 2046     		mov	r0, r4
 4474 01be FFF7FEFF 		bl	Motion_FastestLeftTurn
 4475              	.LVL509:
1316:Src/mode.c    ****             Motion_FastestGoal(1, VELO_EST);
 4476              		.loc 1 1316 0
 4477 01c2 B0EE480A 		vmov.f32	s0, s16
 4478 01c6 0120     		movs	r0, #1
 4479 01c8 FFF7FEFF 		bl	Motion_FastestGoal
 4480              	.LVL510:
1317:Src/mode.c    ****             motor_flag = FALSE;
 4481              		.loc 1 1317 0
 4482 01cc 0020     		movs	r0, #0
 4483 01ce 044B     		ldr	r3, .L358+8
 4484 01d0 1870     		strb	r0, [r3]
1318:Src/mode.c    ****             Tim_FanPwm(0);
 4485              		.loc 1 1318 0
 4486 01d2 FFF7FEFF 		bl	Tim_FanPwm
 4487              	.LVL511:
 4488 01d6 CEE7     		b	.L343
 4489              	.L359:
 4490              		.align	2
 4491              	.L358:
 4492 01d8 00000000 		.word	enc
 4493 01dc 00009644 		.word	1150681088
 4494 01e0 00000000 		.word	motor_flag
 4495 01e4 00000000 		.word	loger
 4496 01e8 00000000 		.word	start_address
 4497              		.cfi_endproc
 4498              	.LFE152:
 4500              		.section	.text.Mode_Mouse,"ax",%progbits
 4501              		.align	1
 4502              		.global	Mode_Mouse
 4503              		.syntax unified
 4504              		.thumb
 4505              		.thumb_func
 4506              		.fpu fpv4-sp-d16
 4508              	Mode_Mouse:
 4509              	.LFB126:
  68:Src/mode.c    **** {
 4510              		.loc 1 68 0
 4511              		.cfi_startproc
 4512              		@ args = 0, pretend = 0, frame = 0
 4513              		@ frame_needed = 0, uses_anonymous_args = 0
 4514              	.LVL512:
 4515 0000 10B5     		push	{r4, lr}
 4516              	.LCFI66:
 4517              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 108


 4518              		.cfi_offset 4, -8
 4519              		.cfi_offset 14, -4
  69:Src/mode.c    ****     switch (mode)
 4520              		.loc 1 69 0
 4521 0002 1328     		cmp	r0, #19
 4522 0004 0DD8     		bhi	.L360
 4523 0006 DFE800F0 		tbb	[pc, r0]
 4524              	.L363:
 4525 000a 0A       		.byte	(.L362-.L363)/2
 4526 000b 0D       		.byte	(.L364-.L363)/2
 4527 000c 15       		.byte	(.L365-.L363)/2
 4528 000d 1D       		.byte	(.L366-.L363)/2
 4529 000e 25       		.byte	(.L367-.L363)/2
 4530 000f 28       		.byte	(.L368-.L363)/2
 4531 0010 2B       		.byte	(.L369-.L363)/2
 4532 0011 2E       		.byte	(.L370-.L363)/2
 4533 0012 35       		.byte	(.L371-.L363)/2
 4534 0013 5B       		.byte	(.L372-.L363)/2
 4535 0014 81       		.byte	(.L373-.L363)/2
 4536 0015 8B       		.byte	(.L374-.L363)/2
 4537 0016 95       		.byte	(.L375-.L363)/2
 4538 0017 9E       		.byte	(.L376-.L363)/2
 4539 0018 A7       		.byte	(.L377-.L363)/2
 4540 0019 B0       		.byte	(.L378-.L363)/2
 4541 001a B8       		.byte	(.L379-.L363)/2
 4542 001b C0       		.byte	(.L380-.L363)/2
 4543 001c C8       		.byte	(.L381-.L363)/2
 4544 001d D0       		.byte	(.L382-.L363)/2
 4545              		.p2align 1
 4546              	.L362:
  73:Src/mode.c    ****         SearchRun();
 4547              		.loc 1 73 0
 4548 001e FFF7FEFF 		bl	SearchRun
 4549              	.LVL513:
 4550              	.L360:
 209:Src/mode.c    **** }
 4551              		.loc 1 209 0
 4552 0022 10BD     		pop	{r4, pc}
 4553              	.LVL514:
 4554              	.L364:
  78:Src/mode.c    ****         Mode_FastRun(TRUE, 0.0f, 7, 5);
 4555              		.loc 1 78 0
 4556 0024 0522     		movs	r2, #5
 4557 0026 0721     		movs	r1, #7
 4558 0028 9FED640A 		vldr.32	s0, .L384
 4559 002c 0120     		movs	r0, #1
 4560              	.LVL515:
 4561 002e FFF7FEFF 		bl	Mode_FastRun
 4562              	.LVL516:
  79:Src/mode.c    ****         break;
 4563              		.loc 1 79 0
 4564 0032 F6E7     		b	.L360
 4565              	.LVL517:
 4566              	.L365:
  86:Src/mode.c    ****         Mode_FastRun(TRUE, 120.0f, 7, 5);
 4567              		.loc 1 86 0
 4568 0034 0522     		movs	r2, #5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 109


 4569 0036 0721     		movs	r1, #7
 4570 0038 9FED610A 		vldr.32	s0, .L384+4
 4571 003c 0120     		movs	r0, #1
 4572              	.LVL518:
 4573 003e FFF7FEFF 		bl	Mode_FastRun
 4574              	.LVL519:
  88:Src/mode.c    ****         break;
 4575              		.loc 1 88 0
 4576 0042 EEE7     		b	.L360
 4577              	.LVL520:
 4578              	.L366:
  90:Src/mode.c    ****         Mode_FastRun(FALSE, 120.0f, 1, 3);
 4579              		.loc 1 90 0
 4580 0044 0322     		movs	r2, #3
 4581 0046 0121     		movs	r1, #1
 4582 0048 9FED5D0A 		vldr.32	s0, .L384+4
 4583 004c 0020     		movs	r0, #0
 4584              	.LVL521:
 4585 004e FFF7FEFF 		bl	Mode_FastRun
 4586              	.LVL522:
  93:Src/mode.c    ****         break;
 4587              		.loc 1 93 0
 4588 0052 E6E7     		b	.L360
 4589              	.LVL523:
 4590              	.L367:
  96:Src/mode.c    ****         PrintOutPut();
 4591              		.loc 1 96 0
 4592 0054 FFF7FEFF 		bl	PrintOutPut
 4593              	.LVL524:
  97:Src/mode.c    ****         break;
 4594              		.loc 1 97 0
 4595 0058 E3E7     		b	.L360
 4596              	.LVL525:
 4597              	.L368:
  99:Src/mode.c    ****         PrintWallData();
 4598              		.loc 1 99 0
 4599 005a FFF7FEFF 		bl	PrintWallData
 4600              	.LVL526:
 100:Src/mode.c    ****         break;
 4601              		.loc 1 100 0
 4602 005e E0E7     		b	.L360
 4603              	.LVL527:
 4604              	.L369:
 102:Src/mode.c    ****         SensorCheck();
 4605              		.loc 1 102 0
 4606 0060 FFF7FEFF 		bl	SensorCheck
 4607              	.LVL528:
 119:Src/mode.c    ****         break;
 4608              		.loc 1 119 0
 4609 0064 DDE7     		b	.L360
 4610              	.LVL529:
 4611              	.L370:
 123:Src/mode.c    ****         control_wall_flag = 0;
 4612              		.loc 1 123 0
 4613 0066 574B     		ldr	r3, .L384+8
 4614 0068 0022     		movs	r2, #0
 4615 006a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 110


 124:Src/mode.c    ****         CheckTurn(1);
 4616              		.loc 1 124 0
 4617 006c 0120     		movs	r0, #1
 4618              	.LVL530:
 4619 006e FFF7FEFF 		bl	CheckTurn
 4620              	.LVL531:
 125:Src/mode.c    ****         break;
 4621              		.loc 1 125 0
 4622 0072 D6E7     		b	.L360
 4623              	.LVL532:
 4624              	.L371:
 128:Src/mode.c    ****         control_wall_flag = FALSE;
 4625              		.loc 1 128 0
 4626 0074 0024     		movs	r4, #0
 4627 0076 534B     		ldr	r3, .L384+8
 4628 0078 1C70     		strb	r4, [r3]
 129:Src/mode.c    ****         SetRunMode(0);
 4629              		.loc 1 129 0
 4630 007a 2046     		mov	r0, r4
 4631              	.LVL533:
 4632 007c FFF7FEFF 		bl	SetRunMode
 4633              	.LVL534:
 130:Src/mode.c    ****         Motion_Start();
 4634              		.loc 1 130 0
 4635 0080 FFF7FEFF 		bl	Motion_Start
 4636              	.LVL535:
 131:Src/mode.c    ****         Motion_LeftTurn();
 4637              		.loc 1 131 0
 4638 0084 FFF7FEFF 		bl	Motion_LeftTurn
 4639              	.LVL536:
 132:Src/mode.c    ****         Motion_End();
 4640              		.loc 1 132 0
 4641 0088 FFF7FEFF 		bl	Motion_End
 4642              	.LVL537:
 133:Src/mode.c    ****         motor_flag = FALSE;
 4643              		.loc 1 133 0
 4644 008c 4E4B     		ldr	r3, .L384+12
 4645 008e 1C70     		strb	r4, [r3]
 134:Src/mode.c    ****         HAL_Delay(500);
 4646              		.loc 1 134 0
 4647 0090 4FF4FA70 		mov	r0, #500
 4648 0094 FFF7FEFF 		bl	HAL_Delay
 4649              	.LVL538:
 135:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4650              		.loc 1 135 0
 4651 0098 49F64242 		movw	r2, #40002
 4652 009c 4B49     		ldr	r1, .L384+16
 4653 009e 4C4B     		ldr	r3, .L384+20
 4654 00a0 1868     		ldr	r0, [r3]
 4655 00a2 FFF7FEFF 		bl	Flash_Write
 4656              	.LVL539:
 136:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 4657              		.loc 1 136 0
 4658 00a6 4FF49671 		mov	r1, #300
 4659 00aa 4C20     		movs	r0, #76
 4660 00ac FFF7FEFF 		bl	Tim_BuzzerPwm
 4661              	.LVL540:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 111


 137:Src/mode.c    ****         HAL_Delay(200);
 4662              		.loc 1 137 0
 4663 00b0 C820     		movs	r0, #200
 4664 00b2 FFF7FEFF 		bl	HAL_Delay
 4665              	.LVL541:
 138:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 4666              		.loc 1 138 0
 4667 00b6 2146     		mov	r1, r4
 4668 00b8 0A20     		movs	r0, #10
 4669 00ba FFF7FEFF 		bl	Tim_BuzzerPwm
 4670              	.LVL542:
 141:Src/mode.c    ****         break;
 4671              		.loc 1 141 0
 4672 00be B0E7     		b	.L360
 4673              	.LVL543:
 4674              	.L372:
 143:Src/mode.c    ****         control_wall_flag = FALSE;
 4675              		.loc 1 143 0
 4676 00c0 0024     		movs	r4, #0
 4677 00c2 404B     		ldr	r3, .L384+8
 4678 00c4 1C70     		strb	r4, [r3]
 144:Src/mode.c    ****         SetRunMode(0);
 4679              		.loc 1 144 0
 4680 00c6 2046     		mov	r0, r4
 4681              	.LVL544:
 4682 00c8 FFF7FEFF 		bl	SetRunMode
 4683              	.LVL545:
 145:Src/mode.c    ****         Motion_Start();
 4684              		.loc 1 145 0
 4685 00cc FFF7FEFF 		bl	Motion_Start
 4686              	.LVL546:
 146:Src/mode.c    ****         Motion_RightTurn();
 4687              		.loc 1 146 0
 4688 00d0 FFF7FEFF 		bl	Motion_RightTurn
 4689              	.LVL547:
 147:Src/mode.c    ****         Motion_End();
 4690              		.loc 1 147 0
 4691 00d4 FFF7FEFF 		bl	Motion_End
 4692              	.LVL548:
 148:Src/mode.c    ****         motor_flag = FALSE;
 4693              		.loc 1 148 0
 4694 00d8 3B4B     		ldr	r3, .L384+12
 4695 00da 1C70     		strb	r4, [r3]
 149:Src/mode.c    ****         HAL_Delay(500);
 4696              		.loc 1 149 0
 4697 00dc 4FF4FA70 		mov	r0, #500
 4698 00e0 FFF7FEFF 		bl	HAL_Delay
 4699              	.LVL549:
 150:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4700              		.loc 1 150 0
 4701 00e4 49F64242 		movw	r2, #40002
 4702 00e8 3849     		ldr	r1, .L384+16
 4703 00ea 394B     		ldr	r3, .L384+20
 4704 00ec 1868     		ldr	r0, [r3]
 4705 00ee FFF7FEFF 		bl	Flash_Write
 4706              	.LVL550:
 151:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 112


 4707              		.loc 1 151 0
 4708 00f2 4FF49671 		mov	r1, #300
 4709 00f6 4C20     		movs	r0, #76
 4710 00f8 FFF7FEFF 		bl	Tim_BuzzerPwm
 4711              	.LVL551:
 152:Src/mode.c    ****         HAL_Delay(200);
 4712              		.loc 1 152 0
 4713 00fc C820     		movs	r0, #200
 4714 00fe FFF7FEFF 		bl	HAL_Delay
 4715              	.LVL552:
 153:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 4716              		.loc 1 153 0
 4717 0102 2146     		mov	r1, r4
 4718 0104 0A20     		movs	r0, #10
 4719 0106 FFF7FEFF 		bl	Tim_BuzzerPwm
 4720              	.LVL553:
 156:Src/mode.c    ****         break;
 4721              		.loc 1 156 0
 4722 010a 8AE7     		b	.L360
 4723              	.LVL554:
 4724              	.L373:
 158:Src/mode.c    ****         control_wall_flag = FALSE;
 4725              		.loc 1 158 0
 4726 010c 0020     		movs	r0, #0
 4727              	.LVL555:
 4728 010e 2D4B     		ldr	r3, .L384+8
 4729 0110 1870     		strb	r0, [r3]
 159:Src/mode.c    ****         SetRunMode(0);
 4730              		.loc 1 159 0
 4731 0112 FFF7FEFF 		bl	SetRunMode
 4732              	.LVL556:
 161:Src/mode.c    ****         TestComb(6, LEFT);
 4733              		.loc 1 161 0
 4734 0116 0121     		movs	r1, #1
 4735 0118 0620     		movs	r0, #6
 4736 011a FFF7FEFF 		bl	TestComb
 4737              	.LVL557:
 162:Src/mode.c    ****         break;
 4738              		.loc 1 162 0
 4739 011e 80E7     		b	.L360
 4740              	.LVL558:
 4741              	.L374:
 164:Src/mode.c    ****         control_wall_flag = FALSE;
 4742              		.loc 1 164 0
 4743 0120 0020     		movs	r0, #0
 4744              	.LVL559:
 4745 0122 284B     		ldr	r3, .L384+8
 4746 0124 1870     		strb	r0, [r3]
 165:Src/mode.c    ****         SetRunMode(0);
 4747              		.loc 1 165 0
 4748 0126 FFF7FEFF 		bl	SetRunMode
 4749              	.LVL560:
 167:Src/mode.c    ****         TestComb(6, RIGHT);
 4750              		.loc 1 167 0
 4751 012a 0221     		movs	r1, #2
 4752 012c 0620     		movs	r0, #6
 4753 012e FFF7FEFF 		bl	TestComb
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 113


 4754              	.LVL561:
 168:Src/mode.c    ****         break;
 4755              		.loc 1 168 0
 4756 0132 76E7     		b	.L360
 4757              	.LVL562:
 4758              	.L375:
 171:Src/mode.c    ****         control_wall_flag = 3;
 4759              		.loc 1 171 0
 4760 0134 234B     		ldr	r3, .L384+8
 4761 0136 0322     		movs	r2, #3
 4762 0138 1A70     		strb	r2, [r3]
 173:Src/mode.c    ****         Turn135_Test(FRONT, LEFT, 0);
 4763              		.loc 1 173 0
 4764 013a 0022     		movs	r2, #0
 4765 013c 0121     		movs	r1, #1
 4766 013e 1046     		mov	r0, r2
 4767              	.LVL563:
 4768 0140 FFF7FEFF 		bl	Turn135_Test
 4769              	.LVL564:
 174:Src/mode.c    ****         break;
 4770              		.loc 1 174 0
 4771 0144 6DE7     		b	.L360
 4772              	.LVL565:
 4773              	.L376:
 176:Src/mode.c    ****         control_wall_flag = 3;
 4774              		.loc 1 176 0
 4775 0146 1F4B     		ldr	r3, .L384+8
 4776 0148 0322     		movs	r2, #3
 4777 014a 1A70     		strb	r2, [r3]
 178:Src/mode.c    ****         Turn135_Test(FRONT, RIGHT, 0);
 4778              		.loc 1 178 0
 4779 014c 0022     		movs	r2, #0
 4780 014e 0221     		movs	r1, #2
 4781 0150 1046     		mov	r0, r2
 4782              	.LVL566:
 4783 0152 FFF7FEFF 		bl	Turn135_Test
 4784              	.LVL567:
 179:Src/mode.c    ****         break;
 4785              		.loc 1 179 0
 4786 0156 64E7     		b	.L360
 4787              	.LVL568:
 4788              	.L377:
 181:Src/mode.c    ****         control_wall_flag = 2;
 4789              		.loc 1 181 0
 4790 0158 1A4B     		ldr	r3, .L384+8
 4791 015a 0222     		movs	r2, #2
 4792 015c 1A70     		strb	r2, [r3]
 183:Src/mode.c    ****         Turn135_Test(LEFT, FRONT, 1);
 4793              		.loc 1 183 0
 4794 015e 0122     		movs	r2, #1
 4795 0160 0021     		movs	r1, #0
 4796 0162 1046     		mov	r0, r2
 4797              	.LVL569:
 4798 0164 FFF7FEFF 		bl	Turn135_Test
 4799              	.LVL570:
 184:Src/mode.c    ****         break;
 4800              		.loc 1 184 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 114


 4801 0168 5BE7     		b	.L360
 4802              	.LVL571:
 4803              	.L378:
 186:Src/mode.c    ****         control_wall_flag = 2;
 4804              		.loc 1 186 0
 4805 016a 0220     		movs	r0, #2
 4806              	.LVL572:
 4807 016c 154B     		ldr	r3, .L384+8
 4808 016e 1870     		strb	r0, [r3]
 188:Src/mode.c    ****         Turn135_Test(RIGHT, FRONT, 1);
 4809              		.loc 1 188 0
 4810 0170 0122     		movs	r2, #1
 4811 0172 0021     		movs	r1, #0
 4812 0174 FFF7FEFF 		bl	Turn135_Test
 4813              	.LVL573:
 189:Src/mode.c    ****         break;
 4814              		.loc 1 189 0
 4815 0178 53E7     		b	.L360
 4816              	.LVL574:
 4817              	.L379:
 192:Src/mode.c    ****         Mode_FastestRun(TRUE, 0.0f, 7, 5);
 4818              		.loc 1 192 0
 4819 017a 0522     		movs	r2, #5
 4820 017c 0721     		movs	r1, #7
 4821 017e 9FED0F0A 		vldr.32	s0, .L384
 4822 0182 0120     		movs	r0, #1
 4823              	.LVL575:
 4824 0184 FFF7FEFF 		bl	Mode_FastestRun
 4825              	.LVL576:
 193:Src/mode.c    ****         break;
 4826              		.loc 1 193 0
 4827 0188 4BE7     		b	.L360
 4828              	.LVL577:
 4829              	.L380:
 195:Src/mode.c    ****         Mode_FastestRun(TRUE, 100.0f, 7, 5);
 4830              		.loc 1 195 0
 4831 018a 0522     		movs	r2, #5
 4832 018c 0721     		movs	r1, #7
 4833 018e 9FED110A 		vldr.32	s0, .L384+24
 4834 0192 0120     		movs	r0, #1
 4835              	.LVL578:
 4836 0194 FFF7FEFF 		bl	Mode_FastestRun
 4837              	.LVL579:
 196:Src/mode.c    ****         break;
 4838              		.loc 1 196 0
 4839 0198 43E7     		b	.L360
 4840              	.LVL580:
 4841              	.L381:
 198:Src/mode.c    ****         Mode_FastestRun(TRUE, 180.0f, 7, 5);
 4842              		.loc 1 198 0
 4843 019a 0522     		movs	r2, #5
 4844 019c 0721     		movs	r1, #7
 4845 019e 9FED0E0A 		vldr.32	s0, .L384+28
 4846 01a2 0120     		movs	r0, #1
 4847              	.LVL581:
 4848 01a4 FFF7FEFF 		bl	Mode_FastestRun
 4849              	.LVL582:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 115


 199:Src/mode.c    ****         break;
 4850              		.loc 1 199 0
 4851 01a8 3BE7     		b	.L360
 4852              	.LVL583:
 4853              	.L382:
 201:Src/mode.c    ****         control_wall_flag = 0;
 4854              		.loc 1 201 0
 4855 01aa 064B     		ldr	r3, .L384+8
 4856 01ac 0022     		movs	r2, #0
 4857 01ae 1A70     		strb	r2, [r3]
 204:Src/mode.c    ****         FastestTurnTest(-1, T_180);
 4858              		.loc 1 204 0
 4859 01b0 0421     		movs	r1, #4
 4860 01b2 FF20     		movs	r0, #255
 4861              	.LVL584:
 4862 01b4 FFF7FEFF 		bl	FastestTurnTest
 4863              	.LVL585:
 209:Src/mode.c    **** }
 4864              		.loc 1 209 0
 4865 01b8 33E7     		b	.L360
 4866              	.L385:
 4867 01ba 00BF     		.align	2
 4868              	.L384:
 4869 01bc 00000000 		.word	0
 4870 01c0 0000F042 		.word	1123024896
 4871 01c4 00000000 		.word	control_wall_flag
 4872 01c8 00000000 		.word	motor_flag
 4873 01cc 00000000 		.word	loger
 4874 01d0 00000000 		.word	start_address
 4875 01d4 0000C842 		.word	1120403456
 4876 01d8 00003443 		.word	1127481344
 4877              		.cfi_endproc
 4878              	.LFE126:
 4880              		.global	walledge_1200
 4881              		.global	walledge_800
 4882              		.global	walledge_search
 4883              		.global	gy
 4884              		.global	gx
 4885              		.section	.bss.gy,"aw",%nobits
 4886              		.set	.LANCHOR1,. + 0
 4889              	gy:
 4890 0000 00       		.space	1
 4891              		.section	.data.gx,"aw",%progbits
 4892              		.set	.LANCHOR2,. + 0
 4895              	gx:
 4896 0000 01       		.byte	1
 4897              		.section	.data.walledge_1200,"aw",%progbits
 4898              		.align	2
 4899              		.set	.LANCHOR4,. + 0
 4902              	walledge_1200:
 4903 0000 F5FF     		.short	-11
 4904 0002 EDFF     		.short	-19
 4905 0004 F6FF     		.short	-10
 4906 0006 F6FF     		.short	-10
 4907 0008 00003041 		.word	1093664768
 4908 000c 00009841 		.word	1100480512
 4909 0010 0000A041 		.word	1101004800
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 116


 4910 0014 0000A041 		.word	1101004800
 4911              		.section	.data.walledge_800,"aw",%progbits
 4912              		.align	2
 4913              		.set	.LANCHOR3,. + 0
 4916              	walledge_800:
 4917 0000 F6FF     		.short	-10
 4918 0002 F6FF     		.short	-10
 4919 0004 F6FF     		.short	-10
 4920 0006 F6FF     		.short	-10
 4921 0008 00005041 		.word	1095761920
 4922 000c 00005041 		.word	1095761920
 4923 0010 0000A041 		.word	1101004800
 4924 0014 0000A841 		.word	1101529088
 4925              		.section	.data.walledge_search,"aw",%progbits
 4926              		.align	2
 4927              		.set	.LANCHOR0,. + 0
 4930              	walledge_search:
 4931 0000 F8FF     		.short	-8
 4932 0002 F8FF     		.short	-8
 4933 0004 0000     		.short	0
 4934 0006 0000     		.short	0
 4935 0008 00008841 		.word	1099431936
 4936 000c 00009841 		.word	1100480512
 4937 0010 00000000 		.word	0
 4938 0014 00000000 		.word	0
 4939              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 4940              		.align	2
 4941              	.LC0:
 4942 0000 25640D00 		.ascii	"%d\015\000"
 4943              		.section	.rodata.PrintMotion.str1.4,"aMS",%progbits,1
 4944              		.align	2
 4945              	.LC7:
 4946 0000 0D0A5354 		.ascii	"\015\012START:%d\011v_start:%ld\011v_end:%ld\015\012"
 4946      4152543A 
 4946      25640976 
 4946      5F737461 
 4946      72743A25 
 4947 0022 00       		.ascii	"\000"
 4948 0023 00       		.space	1
 4949              	.LC8:
 4950 0024 4C454654 		.ascii	"LEFT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 4950      3A534541 
 4950      52434809 
 4950      765F7374 
 4950      6172743A 
 4951              	.LC9:
 4952 0048 4C454654 		.ascii	"LEFT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 4952      3A545F39 
 4952      3009765F 
 4952      73746172 
 4952      743A256C 
 4953 006a 0000     		.space	2
 4954              	.LC10:
 4955 006c 4C454654 		.ascii	"LEFT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 4955      3A545F31 
 4955      38300976 
 4955      5F737461 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 117


 4955      72743A25 
 4956 008f 00       		.space	1
 4957              	.LC11:
 4958 0090 4C454654 		.ascii	"LEFT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4958      3A545F34 
 4958      35494E09 
 4958      765F7374 
 4958      6172743A 
 4959              	.LC12:
 4960 00b4 4C454654 		.ascii	"LEFT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4960      3A545F34 
 4960      354F5554 
 4960      09765F73 
 4960      74617274 
 4961 00d9 000000   		.space	3
 4962              	.LC13:
 4963 00dc 4C454654 		.ascii	"LEFT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4963      3A545F31 
 4963      3335494E 
 4963      09765F73 
 4963      74617274 
 4964 0101 000000   		.space	3
 4965              	.LC14:
 4966 0104 4C454654 		.ascii	"LEFT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4966      3A545F31 
 4966      33354F55 
 4966      5409765F 
 4966      73746172 
 4967 012a 0000     		.space	2
 4968              	.LC15:
 4969 012c 4C454654 		.ascii	"LEFT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 4969      3A545F56 
 4969      39300976 
 4969      5F737461 
 4969      72743A25 
 4970 014f 00       		.space	1
 4971              	.LC16:
 4972 0150 52494748 		.ascii	"RIGHT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 4972      543A5345 
 4972      41524348 
 4972      09765F73 
 4972      74617274 
 4973 0175 000000   		.space	3
 4974              	.LC17:
 4975 0178 52494748 		.ascii	"RIGHT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 4975      543A545F 
 4975      39300976 
 4975      5F737461 
 4975      72743A25 
 4976 019b 00       		.space	1
 4977              	.LC18:
 4978 019c 52494748 		.ascii	"RIGHT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 4978      543A545F 
 4978      31383009 
 4978      765F7374 
 4978      6172743A 
 4979              	.LC19:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 118


 4980 01c0 52494748 		.ascii	"RIGHT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4980      543A545F 
 4980      3435494E 
 4980      09765F73 
 4980      74617274 
 4981 01e5 000000   		.space	3
 4982              	.LC20:
 4983 01e8 52494748 		.ascii	"RIGHT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4983      543A545F 
 4983      34354F55 
 4983      5409765F 
 4983      73746172 
 4984 020e 0000     		.space	2
 4985              	.LC21:
 4986 0210 52494748 		.ascii	"RIGHT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4986      543A545F 
 4986      31333549 
 4986      4E09765F 
 4986      73746172 
 4987 0236 0000     		.space	2
 4988              	.LC22:
 4989 0238 52494748 		.ascii	"RIGHT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4989      543A545F 
 4989      3133354F 
 4989      55540976 
 4989      5F737461 
 4990 025f 00       		.space	1
 4991              	.LC23:
 4992 0260 52494748 		.ascii	"RIGHT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 4992      543A545F 
 4992      56393009 
 4992      765F7374 
 4992      6172743A 
 4993              	.LC24:
 4994 0284 46524F4E 		.ascii	"FRONT:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4994      543A2564 
 4994      09765F73 
 4994      74617274 
 4994      3A256C64 
 4995 02a5 000000   		.space	3
 4996              	.LC25:
 4997 02a8 44494147 		.ascii	"DIAGONAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4997      4F4E414C 
 4997      3A256409 
 4997      765F7374 
 4997      6172743A 
 4998              	.LC26:
 4999 02cc 474F414C 		.ascii	"GOAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4999      3A256409 
 4999      765F7374 
 4999      6172743A 
 4999      256C6409 
 5000              	.LC27:
 5001 02ec 41444A55 		.ascii	"ADJUST:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 5001      53543A25 
 5001      6409765F 
 5001      73746172 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 119


 5001      743A256C 
 5002              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 5003              		.align	2
 5004              	.LC2:
 5005 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 5005      64092564 
 5005      0925640D 
 5005      0A00
 5006              		.section	.rodata.PrintWallData.str1.4,"aMS",%progbits,1
 5007              		.align	2
 5008              	.LC3:
 5009 0000 0D00     		.ascii	"\015\000"
 5010 0002 0000     		.space	2
 5011              	.LC4:
 5012 0004 2D2D2D00 		.ascii	"---\000"
 5013              	.LC5:
 5014 0008 2B0D00   		.ascii	"+\015\000"
 5015 000b 00       		.space	1
 5016              	.LC6:
 5017 000c 20202000 		.ascii	"   \000"
 5018              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 5019              		.align	2
 5020              	.LC1:
 5021 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\012\000"
 5021      20666C3A 
 5021      25642066 
 5021      3A256420 
 5021      66723A25 
 5022              		.text
 5023              	.Letext0:
 5024              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5025              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5026              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5027              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 5028              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 5029              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5030              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5031              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 5032              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 5033              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 5034              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 5035              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 5036              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 5037              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 5038              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 5039              		.file 17 "Inc/spi.h"
 5040              		.file 18 "Inc/tim.h"
 5041              		.file 19 "Inc/adc.h"
 5042              		.file 20 "Inc/control.h"
 5043              		.file 21 "Inc/MazeCon.h"
 5044              		.file 22 "Inc/flash.h"
 5045              		.file 23 "Inc/motion.h"
 5046              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 5047              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 5048              		.file 26 "<built-in>"
 5049              		.file 27 "Inc/Maze.h"
 5050              		.file 28 "Inc/Map.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 120


 5051              		.file 29 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 121


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:242    .text.Mode_Select:00000150 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:253    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:260    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:389    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:403    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:410    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:516    .text.SetRunMode:000000a0 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:524    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:531    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:549    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:553    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:650    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:657    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:664    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1023   .text.SearchRun:00000288 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1035   .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1042   .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1290   .text.Mode_FastRun:0000019c $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1303   .text.Mode_FastRun:000001d0 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1442   .text.Mode_FastRun:000002cc $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1454   .text.Mode_FastestRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1461   .text.Mode_FastestRun:00000000 Mode_FastestRun
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1709   .text.Mode_FastestRun:0000019c $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1722   .text.Mode_FastestRun:000001d0 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1864   .text.Mode_FastestRun:000002d0 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1875   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1882   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1967   .text.CheckStraight:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1975   .text.CheckFastStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:1982   .text.CheckFastStraight:00000000 CheckFastStraight
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2094   .text.CheckFastStraight:00000090 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2103   .text.CheckFastestStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2110   .text.CheckFastestStraight:00000000 CheckFastestStraight
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2194   .text.CheckFastestStraight:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2203   .text.CheckDiagonal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2210   .text.CheckDiagonal:00000000 CheckDiagonal
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2289   .text.CheckDiagonal:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2297   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2304   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2379   .text.CheckTurn:00000050 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2387   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2394   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2464   .text.PrintOutPut:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2471   .text.PrintWallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2478   .text.PrintWallData:00000000 PrintWallData
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2647   .text.PrintWallData:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2656   .text.PrintMotion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2663   .text.PrintMotion:00000000 PrintMotion
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2716   .text.PrintMotion:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2727   .text.PrintMotion:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2735   .text.PrintMotion:00000072 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2743   .text.PrintMotion:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2838   .text.PrintMotion:0000010c $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 122


C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2846   .text.PrintMotion:00000114 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:2992   .text.PrintMotion:000001f0 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3018   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3025   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3082   .text.AdjustStraight:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3089   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3096   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3153   .text.AdjustTurn:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3160   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3167   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3306   .text.Circuit:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3311   .text.TestComb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3318   .text.TestComb:00000000 TestComb
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3418   .text.TestComb:00000058 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3423   .text.TestSteps:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3430   .text.TestSteps:00000000 TestSteps
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3483   .text.TestSteps:00000028 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3488   .text.Turn45_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3495   .text.Turn45_Test:00000000 Turn45_Test
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3673   .text.Turn45_Test:000000f8 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3681   .text.Turn135_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3688   .text.Turn135_Test:00000000 Turn135_Test
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3862   .text.Turn135_Test:00000100 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3870   .text.TurnBig90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3877   .text.TurnBig90_Test:00000000 TurnBig90_Test
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3972   .text.TurnBig90_Test:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3978   .text.TurnBig180_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:3985   .text.TurnBig180_Test:00000000 TurnBig180_Test
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4087   .text.TurnBig180_Test:0000008c $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4093   .text.TurnV90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4100   .text.TurnV90_Test:00000000 TurnV90_Test
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4188   .text.TurnV90_Test:00000070 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4194   .text.FastestTurnTest:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4201   .text.FastestTurnTest:00000000 FastestTurnTest
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4236   .text.FastestTurnTest:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4492   .text.FastestTurnTest:000001d8 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4501   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4508   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4525   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4545   .text.Mode_Mouse:0000001e $t
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4869   .text.Mode_Mouse:000001bc $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4902   .data.walledge_1200:00000000 walledge_1200
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4916   .data.walledge_800:00000000 walledge_800
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4930   .data.walledge_search:00000000 walledge_search
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4889   .bss.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4895   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4890   .bss.gy:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4898   .data.walledge_1200:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4912   .data.walledge_800:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4926   .data.walledge_search:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4940   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4944   .rodata.PrintMotion.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:5003   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:5007   .rodata.PrintWallData.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:5019   .rodata.SensorCheck.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4241   .text.FastestTurnTest:00000025 $d
C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s:4241   .text.FastestTurnTest:00000026 $t
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 123



UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
accel
gyro_y
enc
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
Control_SetupStraightPID
Control_SetupTurnPID
Tim_FanPwm
motor_flag
Map_Init
Map_InitFast
Control_WallEdgeSet
Motion_Start
Maze_GetStep
Maze_ResetWall
Map_addWall
Map_DelWall
Motion_End
Flash_Write
Maze_UpdatePosition
Motion_Restart
Maze_GetGoalSize
Map_AddUnknownWall
Maze_UpdateStepMap
Maze_GetNextMotion
Maze_KnownStepAccel
Maze_UnknownStepAccel
Motion_Switch
control_wall_flag
counter_s
start_address
Flash_Load
Maze_UpdateStepMapEx
Motion_MaxVeloSet
Maze_GetNextMotionEx
Maze_Compress
Motion_FastStart
Motion_FastLeftTurn
Motion_FastStraight
Motion_DiagonalLeft
Motion_DiagonalRight
Motion_FastRightTurn
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccwfFK4F.s 			page 124


Motion_FastGoal
Motion_Adjust
Motion_Adjust_L
Motion_Adjust_R
Motion_FastestStart
Motion_FastestLeftTurn
Motion_FastestStraight
Motion_FastestDiagonalLeft
Motion_FastestDiagonalRight
Motion_FastestRightTurn
Motion_FastestGoal
Motion_FastestAdjust_L
Motion_FastestAdjust_R
Tim_MotorBrake
Motion_Straight
loger
Motion_DiagonalStart
Motion_DiagonalStop
Motion_Diagonal
Motion_TestTurn
gyro_z
puts
putchar
Tim_MotorPwm
Motion_LeftTurn
Motion_RightTurn
Motion_WallSpinTurn
Motion_InLeft45Turn
Motion_InRight45Turn
Motion_OutLeft45Turn
Motion_OutRight45Turn
Motion_Left90Turn
Motion_Right90Turn
