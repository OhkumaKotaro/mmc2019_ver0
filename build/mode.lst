ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** extern uint8_t counter_s;
  30:Src/mode.c    **** 
  31:Src/mode.c    **** unsigned char gx = 1, gy = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 2


  32:Src/mode.c    **** 
  33:Src/mode.c    **** //Prototype Function
  34:Src/mode.c    **** void SensorCheck(void);
  35:Src/mode.c    **** void SetRunMode(uint8_t fan_flag);
  36:Src/mode.c    **** void CheckStraight(uint8_t block);
  37:Src/mode.c    **** void CheckFastStraight(uint8_t block);
  38:Src/mode.c    **** void CheckFastestStraight(uint8_t block);
  39:Src/mode.c    **** void CheckDiagonal(uint8_t block, int8_t dir);
  40:Src/mode.c    **** void CheckTurn(uint8_t num);
  41:Src/mode.c    **** void PrintOutPut(void);
  42:Src/mode.c    **** void PrintWallData(void);
  43:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail);
  44:Src/mode.c    **** void AdjustStraight(void);
  45:Src/mode.c    **** void AdjustTurn(void);
  46:Src/mode.c    **** void SearchRun(void);
  47:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn);
  48:Src/mode.c    **** void Mode_FastestRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn);
  49:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  50:Src/mode.c    **** void TestComb(uint8_t num, uint8_t dir);
  51:Src/mode.c    **** void TestSteps(uint8_t num);
  52:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  53:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  54:Src/mode.c    **** void TurnBig90_Test(int8_t dir);
  55:Src/mode.c    **** void TurnBig180_Test(int8_t dir);
  56:Src/mode.c    **** void TurnV90_Test(int8_t dir);
  57:Src/mode.c    **** void FastestTurnTest(uint8_t dir, uint8_t deg);
  58:Src/mode.c    **** 
  59:Src/mode.c    **** /****************************************************************************************
  60:Src/mode.c    ****  * outline  : wright mode 
  61:Src/mode.c    ****  * argument : mode nomber
  62:Src/mode.c    ****  * return   : void
  63:Src/mode.c    **** ********************************************************************************************/
  64:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  65:Src/mode.c    **** {
  66:Src/mode.c    ****     switch (mode)
  67:Src/mode.c    ****     {
  68:Src/mode.c    ****     //WHITE
  69:Src/mode.c    ****     case 0:
  70:Src/mode.c    ****         SearchRun();
  71:Src/mode.c    ****         break;
  72:Src/mode.c    ****     case 1:
  73:Src/mode.c    ****         Tim_FanPwm(400);
  74:Src/mode.c    ****         //Mode_FastRun(FALSE, 160.0f, 1, 3);
  75:Src/mode.c    ****         break;
  76:Src/mode.c    ****     case 2:
  77:Src/mode.c    ****         /*
  78:Src/mode.c    ****         SetRunMode();
  79:Src/mode.c    ****         control_wall_flag = FALSE;
  80:Src/mode.c    ****         Motion_enkai();
  81:Src/mode.c    ****         */
  82:Src/mode.c    ****         //Mode_FastRun(TRUE, 0.0f, 7, 5);
  83:Src/mode.c    ****         Mode_FastestRun(FALSE, 100.0f, 1, 3);
  84:Src/mode.c    ****         break;
  85:Src/mode.c    ****     case 3:
  86:Src/mode.c    ****         //Mode_FastRun(TRUE, 160.0f, 7, 5);
  87:Src/mode.c    ****         SensorCheck();
  88:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 3


  89:Src/mode.c    ****     //CYAN
  90:Src/mode.c    ****     case 4:
  91:Src/mode.c    ****         PrintOutPut();
  92:Src/mode.c    ****         break;
  93:Src/mode.c    ****     case 5:
  94:Src/mode.c    ****         PrintWallData();
  95:Src/mode.c    ****         break;
  96:Src/mode.c    ****     case 6: //straight
  97:Src/mode.c    ****         /*
  98:Src/mode.c    ****         control_wall_flag = 0;
  99:Src/mode.c    ****         CheckDiagonal(4, 1);
 100:Src/mode.c    ****         */
 101:Src/mode.c    ****         /*
 102:Src/mode.c    ****         control_wall_flag = 1;
 103:Src/mode.c    ****         CheckStraight(6);
 104:Src/mode.c    ****         */
 105:Src/mode.c    ****         /*
 106:Src/mode.c    ****        control_wall_flag = 2;
 107:Src/mode.c    ****        CheckFastStraight(6);
 108:Src/mode.c    ****        */
 109:Src/mode.c    **** 
 110:Src/mode.c    ****         control_wall_flag = 0;
 111:Src/mode.c    ****         CheckFastestStraight(4);
 112:Src/mode.c    ****         break;
 113:Src/mode.c    ****     case 7: //turn
 114:Src/mode.c    ****         control_wall_flag = 3;
 115:Src/mode.c    ****         CheckDiagonal(4, 1);
 116:Src/mode.c    ****         /*
 117:Src/mode.c    ****        control_wall_flag = 0;
 118:Src/mode.c    ****        CheckTurn(4);
 119:Src/mode.c    ****        */
 120:Src/mode.c    ****         break;
 121:Src/mode.c    ****     //YELLOW
 122:Src/mode.c    ****     case 8: //left turn
 123:Src/mode.c    ****         /*
 124:Src/mode.c    ****         control_wall_flag = FALSE;
 125:Src/mode.c    ****         SetRunMode(0);
 126:Src/mode.c    ****         Motion_Start();
 127:Src/mode.c    ****         Motion_LeftTurn();
 128:Src/mode.c    ****         Motion_End();
 129:Src/mode.c    ****         motor_flag = FALSE;
 130:Src/mode.c    ****         HAL_Delay(500);
 131:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 132:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 133:Src/mode.c    ****         HAL_Delay(200);
 134:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 135:Src/mode.c    ****         */
 136:Src/mode.c    ****         control_wall_flag = FALSE;
 137:Src/mode.c    ****         FastestTurnTest(1, SEARCH);
 138:Src/mode.c    ****         break;
 139:Src/mode.c    ****     case 9: //right turn
 140:Src/mode.c    ****         /*
 141:Src/mode.c    ****         control_wall_flag = FALSE;
 142:Src/mode.c    ****         SetRunMode(0);
 143:Src/mode.c    ****         Motion_Start();
 144:Src/mode.c    ****         Motion_RightTurn();
 145:Src/mode.c    ****         Motion_End();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 4


 146:Src/mode.c    ****         motor_flag = FALSE;
 147:Src/mode.c    ****         HAL_Delay(500);
 148:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 149:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 150:Src/mode.c    ****         HAL_Delay(200);
 151:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 152:Src/mode.c    ****         */
 153:Src/mode.c    ****         control_wall_flag = FALSE;
 154:Src/mode.c    ****         FastestTurnTest(-1, SEARCH);
 155:Src/mode.c    ****         break;
 156:Src/mode.c    ****     case 10: //circuit left
 157:Src/mode.c    ****         control_wall_flag = FALSE;
 158:Src/mode.c    ****         SetRunMode(0);
 159:Src/mode.c    ****         //Circuit(2, 2, 3, 1);
 160:Src/mode.c    ****         TestComb(6, LEFT);
 161:Src/mode.c    ****         break;
 162:Src/mode.c    ****     case 11: //circuit right
 163:Src/mode.c    ****         control_wall_flag = FALSE;
 164:Src/mode.c    ****         SetRunMode(0);
 165:Src/mode.c    ****         //Circuit(2, 2, 3, -1);
 166:Src/mode.c    ****         TestComb(6, RIGHT);
 167:Src/mode.c    ****         break;
 168:Src/mode.c    ****     //GREEN
 169:Src/mode.c    ****     case 12: //left quarter turn
 170:Src/mode.c    ****         control_wall_flag = 3;
 171:Src/mode.c    ****         //Turn45_Test(FRONT, LEFT, 1);
 172:Src/mode.c    ****         Turn135_Test(FRONT, LEFT, 0);
 173:Src/mode.c    ****         break;
 174:Src/mode.c    ****     case 13: //right quarter turn
 175:Src/mode.c    ****         control_wall_flag = 3;
 176:Src/mode.c    ****         //Turn45_Test(FRONT, RIGHT, 1);
 177:Src/mode.c    ****         Turn135_Test(FRONT, RIGHT, 0);
 178:Src/mode.c    ****         break;
 179:Src/mode.c    ****     case 14:
 180:Src/mode.c    ****         control_wall_flag = 2;
 181:Src/mode.c    ****         //Turn45_Test(LEFT, FRONT, 1);
 182:Src/mode.c    ****         Turn135_Test(LEFT, FRONT, 1);
 183:Src/mode.c    ****         break;
 184:Src/mode.c    ****     case 15:
 185:Src/mode.c    ****         control_wall_flag = 2;
 186:Src/mode.c    ****         //Turn45_Test(RIGHT, FRONT, 1);
 187:Src/mode.c    ****         Turn135_Test(RIGHT, FRONT, 1);
 188:Src/mode.c    ****         break;
 189:Src/mode.c    ****     //MAGENTA
 190:Src/mode.c    ****     case 16:
 191:Src/mode.c    ****         control_wall_flag = 0;
 192:Src/mode.c    ****         //TurnBig90_Test(LEFT);
 193:Src/mode.c    ****         FastestTurnTest(1, T_90);
 194:Src/mode.c    ****         break;
 195:Src/mode.c    ****     case 17:
 196:Src/mode.c    ****         control_wall_flag = 0;
 197:Src/mode.c    ****         //TurnBig90_Test(RIGHT);
 198:Src/mode.c    ****         FastestTurnTest(-1, T_90);
 199:Src/mode.c    ****         break;
 200:Src/mode.c    ****     case 18:
 201:Src/mode.c    ****         control_wall_flag = 0;
 202:Src/mode.c    ****         //TurnBig180_Test(LEFT);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 5


 203:Src/mode.c    ****         //TurnV90_Test(LEFT);
 204:Src/mode.c    ****         FastestTurnTest(1, T_180);
 205:Src/mode.c    ****         break;
 206:Src/mode.c    ****     case 19:
 207:Src/mode.c    ****         control_wall_flag = 0;
 208:Src/mode.c    ****         //TurnBig180_Test(RIGHT);
 209:Src/mode.c    ****         //TurnV90_Test(RIGHT);
 210:Src/mode.c    ****         FastestTurnTest(-1, T_180);
 211:Src/mode.c    ****         break;
 212:Src/mode.c    ****     default:
 213:Src/mode.c    ****         break;
 214:Src/mode.c    ****     }
 215:Src/mode.c    **** }
 216:Src/mode.c    **** 
 217:Src/mode.c    **** char Mode_Select(void)
 218:Src/mode.c    **** {
  28              		.loc 1 218 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 219:Src/mode.c    ****     int8_t mode = 0;
 220:Src/mode.c    ****     uint8_t state = 0;
 221:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 221 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
  42              	.LVL1:
 222:Src/mode.c    ****     accel.z = 0;
  43              		.loc 1 222 0
  44 0006 524B     		ldr	r3, .L34
  45 0008 0022     		movs	r2, #0
  46 000a 9A60     		str	r2, [r3, #8]	@ float
 220:Src/mode.c    ****     Control_ResetVelo();
  47              		.loc 1 220 0
  48 000c 0024     		movs	r4, #0
 219:Src/mode.c    ****     int8_t mode = 0;
  49              		.loc 1 219 0
  50 000e 2546     		mov	r5, r4
  51 0010 50E0     		b	.L18
  52              	.LVL2:
  53              	.L28:
 223:Src/mode.c    **** 
 224:Src/mode.c    ****     while (1)
 225:Src/mode.c    ****     {
 226:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 227:Src/mode.c    ****         {
 228:Src/mode.c    ****             if (gyro_y < -300.0f)
 229:Src/mode.c    ****             {
 230:Src/mode.c    ****                 mode++;
 231:Src/mode.c    ****             }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 6


 232:Src/mode.c    ****             else if (gyro_y > 300.0f)
  54              		.loc 1 232 0
  55 0012 504B     		ldr	r3, .L34+4
  56 0014 93ED007A 		vldr.32	s14, [r3]
  57 0018 DFED4F7A 		vldr.32	s15, .L34+8
  58 001c B4EEE77A 		vcmpe.f32	s14, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 65DD     		ble	.L7
 233:Src/mode.c    ****             {
 234:Src/mode.c    ****                 mode--;
  61              		.loc 1 234 0
  62 0026 013D     		subs	r5, r5, #1
  63              	.LVL3:
  64 0028 6DB2     		sxtb	r5, r5
  65              	.LVL4:
  66 002a 62E0     		b	.L7
  67              	.L19:
 235:Src/mode.c    ****             }
 236:Src/mode.c    ****             if (mode > 3)
 237:Src/mode.c    ****             {
 238:Src/mode.c    ****                 mode = 0;
  68              		.loc 1 238 0
  69 002c 0025     		movs	r5, #0
  70              	.LVL5:
  71              	.L9:
 239:Src/mode.c    ****             }
 240:Src/mode.c    ****             else if (mode < 0)
 241:Src/mode.c    ****             {
 242:Src/mode.c    ****                 mode = 3;
 243:Src/mode.c    ****             }
 244:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  72              		.loc 1 244 0
  73 002e 6FF00900 		mvn	r0, #9
  74 0032 00FB05F0 		mul	r0, r0, r5
  75 0036 4FF49671 		mov	r1, #300
  76 003a AA30     		adds	r0, r0, #170
  77 003c FFF7FEFF 		bl	Tim_BuzzerPwm
  78              	.LVL6:
 245:Src/mode.c    ****             HAL_Delay(100);
  79              		.loc 1 245 0
  80 0040 6420     		movs	r0, #100
  81 0042 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL7:
 246:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  83              		.loc 1 246 0
  84 0046 0021     		movs	r1, #0
  85 0048 0A20     		movs	r0, #10
  86 004a FFF7FEFF 		bl	Tim_BuzzerPwm
  87              	.LVL8:
 247:Src/mode.c    ****             HAL_Delay(500);
  88              		.loc 1 247 0
  89 004e 4FF4FA70 		mov	r0, #500
  90 0052 FFF7FEFF 		bl	HAL_Delay
  91              	.LVL9:
  92              	.L3:
 248:Src/mode.c    ****         }
 249:Src/mode.c    ****         if (enc.offset > 20)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 7


  93              		.loc 1 249 0
  94 0056 414B     		ldr	r3, .L34+12
  95 0058 93ED027A 		vldr.32	s14, [r3, #8]
  96 005c F3EE047A 		vmov.f32	s15, #2.0e+1
  97 0060 B4EEE77A 		vcmpe.f32	s14, s15
  98 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  99 0068 4BDD     		ble	.L29
 250:Src/mode.c    ****         {
 251:Src/mode.c    ****             if (state == 16)
 100              		.loc 1 251 0
 101 006a 102C     		cmp	r4, #16
 102 006c 47D0     		beq	.L21
 252:Src/mode.c    ****             {
 253:Src/mode.c    ****                 state = 0;
 254:Src/mode.c    ****             }
 255:Src/mode.c    ****             else
 256:Src/mode.c    ****             {
 257:Src/mode.c    ****                 state += 4;
 103              		.loc 1 257 0
 104 006e 0434     		adds	r4, r4, #4
 105              	.LVL10:
 106 0070 E4B2     		uxtb	r4, r4
 107              	.LVL11:
 108              	.L12:
 258:Src/mode.c    ****             }
 259:Src/mode.c    ****             enc.offset = 0;
 109              		.loc 1 259 0
 110 0072 3A4B     		ldr	r3, .L34+12
 111 0074 0022     		movs	r2, #0
 112 0076 9A60     		str	r2, [r3, #8]	@ float
 113              	.L13:
 260:Src/mode.c    ****         }
 261:Src/mode.c    ****         else if (enc.offset < -20)
 262:Src/mode.c    ****         {
 263:Src/mode.c    ****             if (state == 0)
 264:Src/mode.c    ****             {
 265:Src/mode.c    ****                 state = 16;
 266:Src/mode.c    ****             }
 267:Src/mode.c    ****             else
 268:Src/mode.c    ****             {
 269:Src/mode.c    ****                 state -= 4;
 270:Src/mode.c    ****             }
 271:Src/mode.c    ****             enc.offset = 0;
 272:Src/mode.c    ****         }
 273:Src/mode.c    ****         if (accel.z > 30.0f)
 114              		.loc 1 273 0
 115 0078 354B     		ldr	r3, .L34
 116 007a 93ED027A 		vldr.32	s14, [r3, #8]
 117 007e F3EE0E7A 		vmov.f32	s15, #3.0e+1
 118 0082 B4EEE77A 		vcmpe.f32	s14, s15
 119 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 120 008a 4DDC     		bgt	.L32
 274:Src/mode.c    ****         {
 275:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 276:Src/mode.c    ****             HAL_Delay(100);
 277:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 278:Src/mode.c    ****             HAL_Delay(500);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 8


 279:Src/mode.c    ****             break;
 280:Src/mode.c    ****         }
 281:Src/mode.c    ****         Gpio_FullColor(state % 7);
 121              		.loc 1 281 0
 122 008c 3448     		ldr	r0, .L34+16
 123 008e A0FB0430 		umull	r3, r0, r0, r4
 124 0092 231A     		subs	r3, r4, r0
 125 0094 00EB5300 		add	r0, r0, r3, lsr #1
 126 0098 8008     		lsrs	r0, r0, #2
 127 009a C0EBC000 		rsb	r0, r0, r0, lsl #3
 128 009e 201A     		subs	r0, r4, r0
 129 00a0 C0B2     		uxtb	r0, r0
 130 00a2 FFF7FEFF 		bl	Gpio_FullColor
 131              	.LVL12:
 282:Src/mode.c    ****         Gpio_SideLed(mode);
 132              		.loc 1 282 0
 133 00a6 E8B2     		uxtb	r0, r5
 134 00a8 FFF7FEFF 		bl	Gpio_SideLed
 135              	.LVL13:
 283:Src/mode.c    ****         printf("%d\r", mode + state);
 136              		.loc 1 283 0
 137 00ac 2919     		adds	r1, r5, r4
 138 00ae 2D48     		ldr	r0, .L34+20
 139 00b0 FFF7FEFF 		bl	printf
 140              	.LVL14:
 141              	.L18:
 226:Src/mode.c    ****         {
 142              		.loc 1 226 0
 143 00b4 274B     		ldr	r3, .L34+4
 144 00b6 93ED007A 		vldr.32	s14, [r3]
 145 00ba DFED277A 		vldr.32	s15, .L34+8
 146 00be B4EEE77A 		vcmpe.f32	s14, s15
 147 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 148 00c6 08DC     		bgt	.L2
 226:Src/mode.c    ****         {
 149              		.loc 1 226 0 is_stmt 0 discriminator 1
 150 00c8 93ED007A 		vldr.32	s14, [r3]
 151 00cc DFED267A 		vldr.32	s15, .L34+24
 152 00d0 B4EEE77A 		vcmpe.f32	s14, s15
 153 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 00d8 BDD5     		bpl	.L3
 155              	.L2:
 228:Src/mode.c    ****             {
 156              		.loc 1 228 0 is_stmt 1
 157 00da 1E4B     		ldr	r3, .L34+4
 158 00dc 93ED007A 		vldr.32	s14, [r3]
 159 00e0 DFED217A 		vldr.32	s15, .L34+24
 160 00e4 B4EEE77A 		vcmpe.f32	s14, s15
 161 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 00ec 91D5     		bpl	.L28
 230:Src/mode.c    ****             }
 163              		.loc 1 230 0
 164 00ee 0135     		adds	r5, r5, #1
 165              	.LVL15:
 166 00f0 6DB2     		sxtb	r5, r5
 167              	.LVL16:
 168              	.L7:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 9


 236:Src/mode.c    ****             {
 169              		.loc 1 236 0
 170 00f2 032D     		cmp	r5, #3
 171 00f4 9ADC     		bgt	.L19
 240:Src/mode.c    ****             {
 172              		.loc 1 240 0
 173 00f6 002D     		cmp	r5, #0
 174 00f8 99DA     		bge	.L9
 242:Src/mode.c    ****             }
 175              		.loc 1 242 0
 176 00fa 0325     		movs	r5, #3
 177              	.LVL17:
 178 00fc 97E7     		b	.L9
 179              	.LVL18:
 180              	.L21:
 253:Src/mode.c    ****             }
 181              		.loc 1 253 0
 182 00fe 0024     		movs	r4, #0
 183              	.LVL19:
 184 0100 B7E7     		b	.L12
 185              	.LVL20:
 186              	.L29:
 261:Src/mode.c    ****         {
 187              		.loc 1 261 0
 188 0102 164B     		ldr	r3, .L34+12
 189 0104 93ED027A 		vldr.32	s14, [r3, #8]
 190 0108 FBEE047A 		vmov.f32	s15, #-2.0e+1
 191 010c B4EEE77A 		vcmpe.f32	s14, s15
 192 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193 0114 B0D5     		bpl	.L13
 263:Src/mode.c    ****             {
 194              		.loc 1 263 0
 195 0116 2CB1     		cbz	r4, .L22
 269:Src/mode.c    ****             }
 196              		.loc 1 269 0
 197 0118 043C     		subs	r4, r4, #4
 198              	.LVL21:
 199 011a E4B2     		uxtb	r4, r4
 200              	.LVL22:
 201              	.L15:
 271:Src/mode.c    ****         }
 202              		.loc 1 271 0
 203 011c 0F4B     		ldr	r3, .L34+12
 204 011e 0022     		movs	r2, #0
 205 0120 9A60     		str	r2, [r3, #8]	@ float
 206 0122 A9E7     		b	.L13
 207              	.L22:
 265:Src/mode.c    ****             }
 208              		.loc 1 265 0
 209 0124 1024     		movs	r4, #16
 210              	.LVL23:
 211 0126 F9E7     		b	.L15
 212              	.LVL24:
 213              	.L32:
 275:Src/mode.c    ****             HAL_Delay(100);
 214              		.loc 1 275 0
 215 0128 4FF49671 		mov	r1, #300
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 10


 216 012c 4C20     		movs	r0, #76
 217 012e FFF7FEFF 		bl	Tim_BuzzerPwm
 218              	.LVL25:
 276:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 219              		.loc 1 276 0
 220 0132 6420     		movs	r0, #100
 221 0134 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL26:
 277:Src/mode.c    ****             HAL_Delay(500);
 223              		.loc 1 277 0
 224 0138 0021     		movs	r1, #0
 225 013a 0A20     		movs	r0, #10
 226 013c FFF7FEFF 		bl	Tim_BuzzerPwm
 227              	.LVL27:
 278:Src/mode.c    ****             break;
 228              		.loc 1 278 0
 229 0140 4FF4FA70 		mov	r0, #500
 230 0144 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL28:
 284:Src/mode.c    ****     }
 285:Src/mode.c    ****     return mode + state;
 232              		.loc 1 285 0
 233 0148 2C44     		add	r4, r4, r5
 234              	.LVL29:
 235 014a E0B2     		uxtb	r0, r4
 286:Src/mode.c    **** }
 236              		.loc 1 286 0
 237 014c 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL30:
 239              	.L35:
 240 014e 00BF     		.align	2
 241              	.L34:
 242 0150 00000000 		.word	accel
 243 0154 00000000 		.word	gyro_y
 244 0158 00009643 		.word	1133903872
 245 015c 00000000 		.word	enc
 246 0160 25499224 		.word	613566757
 247 0164 00000000 		.word	.LC0
 248 0168 000096C3 		.word	-1013579776
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.SensorCheck,"ax",%progbits
 253              		.align	1
 254              		.global	SensorCheck
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	SensorCheck:
 261              	.LFB128:
 287:Src/mode.c    **** 
 288:Src/mode.c    **** void SensorCheck(void)
 289:Src/mode.c    **** {
 262              		.loc 1 289 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 11


 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 290:Src/mode.c    ****     Adc_IrSensorStart();
 274              		.loc 1 290 0
 275 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 276              	.LVL31:
 277 0008 2CE0     		b	.L43
 278              	.L48:
 291:Src/mode.c    **** 
 292:Src/mode.c    ****     while (1)
 293:Src/mode.c    ****     {
 294:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 295:Src/mode.c    ****         {
 296:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 279              		.loc 1 296 0
 280 000a 0022     		movs	r2, #0
 281 000c 8021     		movs	r1, #128
 282 000e 2D48     		ldr	r0, .L51
 283 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL32:
 285 0014 2FE0     		b	.L38
 286              	.L49:
 297:Src/mode.c    ****         }
 298:Src/mode.c    ****         else
 299:Src/mode.c    ****         {
 300:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 301:Src/mode.c    ****         }
 302:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 303:Src/mode.c    ****         {
 304:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 287              		.loc 1 304 0
 288 0016 0022     		movs	r2, #0
 289 0018 1021     		movs	r1, #16
 290 001a 2B48     		ldr	r0, .L51+4
 291 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL33:
 293 0020 32E0     		b	.L40
 294              	.L50:
 305:Src/mode.c    ****         }
 306:Src/mode.c    ****         else
 307:Src/mode.c    ****         {
 308:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 309:Src/mode.c    ****         }
 310:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 311:Src/mode.c    ****         {
 312:Src/mode.c    ****             Gpio_FullColor(WHITE);
 295              		.loc 1 312 0
 296 0022 0020     		movs	r0, #0
 297 0024 FFF7FEFF 		bl	Gpio_FullColor
 298              	.LVL34:
 299              	.L42:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 12


 313:Src/mode.c    ****         }
 314:Src/mode.c    ****         else
 315:Src/mode.c    ****         {
 316:Src/mode.c    ****             Gpio_FullColor(DARK);
 317:Src/mode.c    ****         }
 318:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r\n", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now,
 300              		.loc 1 318 0
 301 0028 284B     		ldr	r3, .L51+8
 302 002a B3F90010 		ldrsh	r1, [r3]
 303 002e 284B     		ldr	r3, .L51+12
 304 0030 B3F90020 		ldrsh	r2, [r3]
 305 0034 274B     		ldr	r3, .L51+16
 306 0036 B3F90030 		ldrsh	r3, [r3]
 307 003a 2748     		ldr	r0, .L51+20
 308 003c B0F90000 		ldrsh	r0, [r0]
 309 0040 264C     		ldr	r4, .L51+24
 310 0042 B4F90040 		ldrsh	r4, [r4]
 311 0046 0194     		str	r4, [sp, #4]
 312 0048 0090     		str	r0, [sp]
 313 004a 2548     		ldr	r0, .L51+28
 314 004c FFF7FEFF 		bl	printf
 315              	.LVL35:
 319:Src/mode.c    **** 
 320:Src/mode.c    ****         if (accel.x > 60)
 316              		.loc 1 320 0
 317 0050 244B     		ldr	r3, .L51+32
 318 0052 93ED007A 		vldr.32	s14, [r3]
 319 0056 DFED247A 		vldr.32	s15, .L51+36
 320 005a B4EEE77A 		vcmpe.f32	s14, s15
 321 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 322 0062 19DC     		bgt	.L47
 323              	.L43:
 294:Src/mode.c    ****         {
 324              		.loc 1 294 0
 325 0064 1D4B     		ldr	r3, .L51+24
 326 0066 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 327 0068 012B     		cmp	r3, #1
 328 006a CED0     		beq	.L48
 300:Src/mode.c    ****         }
 329              		.loc 1 300 0
 330 006c 0122     		movs	r2, #1
 331 006e 8021     		movs	r1, #128
 332 0070 1448     		ldr	r0, .L51
 333 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL36:
 335              	.L38:
 302:Src/mode.c    ****         {
 336              		.loc 1 302 0
 337 0076 154B     		ldr	r3, .L51+8
 338 0078 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 339 007a 012B     		cmp	r3, #1
 340 007c CBD0     		beq	.L49
 308:Src/mode.c    ****         }
 341              		.loc 1 308 0
 342 007e 0122     		movs	r2, #1
 343 0080 1021     		movs	r1, #16
 344 0082 1148     		ldr	r0, .L51+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 13


 345 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL37:
 347              	.L40:
 310:Src/mode.c    ****         {
 348              		.loc 1 310 0
 349 0088 124B     		ldr	r3, .L51+16
 350 008a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 351 008c 012B     		cmp	r3, #1
 352 008e C8D0     		beq	.L50
 316:Src/mode.c    ****         }
 353              		.loc 1 316 0
 354 0090 0720     		movs	r0, #7
 355 0092 FFF7FEFF 		bl	Gpio_FullColor
 356              	.LVL38:
 357 0096 C7E7     		b	.L42
 358              	.L47:
 321:Src/mode.c    ****         {
 322:Src/mode.c    ****             Adc_IrSensorFinish();
 359              		.loc 1 322 0
 360 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 361              	.LVL39:
 323:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 362              		.loc 1 323 0
 363 009c 4FF49671 		mov	r1, #300
 364 00a0 4C20     		movs	r0, #76
 365 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 366              	.LVL40:
 324:Src/mode.c    ****             HAL_Delay(300);
 367              		.loc 1 324 0
 368 00a6 4FF49670 		mov	r0, #300
 369 00aa FFF7FEFF 		bl	HAL_Delay
 370              	.LVL41:
 325:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 371              		.loc 1 325 0
 372 00ae 0021     		movs	r1, #0
 373 00b0 0A20     		movs	r0, #10
 374 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 375              	.LVL42:
 326:Src/mode.c    ****             HAL_Delay(500);
 376              		.loc 1 326 0
 377 00b6 4FF4FA70 		mov	r0, #500
 378 00ba FFF7FEFF 		bl	HAL_Delay
 379              	.LVL43:
 327:Src/mode.c    ****             break;
 328:Src/mode.c    ****         }
 329:Src/mode.c    ****     }
 330:Src/mode.c    **** }
 380              		.loc 1 330 0
 381 00be 02B0     		add	sp, sp, #8
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 00c0 10BD     		pop	{r4, pc}
 386              	.L52:
 387 00c2 00BF     		.align	2
 388              	.L51:
 389 00c4 00040240 		.word	1073873920
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 14


 390 00c8 00000240 		.word	1073872896
 391 00cc 00000000 		.word	sen_l
 392 00d0 00000000 		.word	sen_fl
 393 00d4 00000000 		.word	sen_front
 394 00d8 00000000 		.word	sen_fr
 395 00dc 00000000 		.word	sen_r
 396 00e0 00000000 		.word	.LC1
 397 00e4 00000000 		.word	accel
 398 00e8 00007042 		.word	1114636288
 399              		.cfi_endproc
 400              	.LFE128:
 402              		.section	.text.SetRunMode,"ax",%progbits
 403              		.align	1
 404              		.global	SetRunMode
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SetRunMode:
 411              	.LFB129:
 331:Src/mode.c    **** 
 332:Src/mode.c    **** void SetRunMode(uint8_t fan_flag)
 333:Src/mode.c    **** {
 412              		.loc 1 333 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL44:
 417 0000 10B5     		push	{r4, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422 0002 0446     		mov	r4, r0
 334:Src/mode.c    ****     Adc_IrSensorStart();
 423              		.loc 1 334 0
 424 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 425              	.LVL45:
 426              	.L54:
 335:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 427              		.loc 1 335 0 discriminator 1
 428 0008 224B     		ldr	r3, .L59
 429 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 430 000c 012B     		cmp	r3, #1
 431 000e FBD1     		bne	.L54
 336:Src/mode.c    ****     {
 337:Src/mode.c    ****     }
 338:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 432              		.loc 1 338 0
 433 0010 4FF49671 		mov	r1, #300
 434 0014 4C20     		movs	r0, #76
 435 0016 FFF7FEFF 		bl	Tim_BuzzerPwm
 436              	.LVL46:
 339:Src/mode.c    ****     HAL_Delay(100);
 437              		.loc 1 339 0
 438 001a 6420     		movs	r0, #100
 439 001c FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 15


 440              	.LVL47:
 340:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 441              		.loc 1 340 0
 442 0020 0021     		movs	r1, #0
 443 0022 0A20     		movs	r0, #10
 444 0024 FFF7FEFF 		bl	Tim_BuzzerPwm
 445              	.LVL48:
 341:Src/mode.c    ****     HAL_Delay(5000);
 446              		.loc 1 341 0
 447 0028 41F28830 		movw	r0, #5000
 448 002c FFF7FEFF 		bl	HAL_Delay
 449              	.LVL49:
 342:Src/mode.c    ****     Spi_GyroReset();
 450              		.loc 1 342 0
 451 0030 FFF7FEFF 		bl	Spi_GyroReset
 452              	.LVL50:
 343:Src/mode.c    ****     HAL_Delay(1200);
 453              		.loc 1 343 0
 454 0034 4FF49660 		mov	r0, #1200
 455 0038 FFF7FEFF 		bl	HAL_Delay
 456              	.LVL51:
 344:Src/mode.c    ****     if (fan_flag == 0)
 457              		.loc 1 344 0
 458 003c E4B1     		cbz	r4, .L58
 345:Src/mode.c    ****     {
 346:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 347:Src/mode.c    ****         HAL_Delay(100);
 348:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 349:Src/mode.c    ****     }
 350:Src/mode.c    ****     else
 351:Src/mode.c    ****     {
 352:Src/mode.c    ****         Control_SetupStraightPID(4.0f, 11.5f, 0);
 459              		.loc 1 352 0
 460 003e 9FED161A 		vldr.32	s2, .L59+4
 461 0042 F2EE070A 		vmov.f32	s1, #1.15e+1
 462 0046 B1EE000A 		vmov.f32	s0, #4.0e+0
 463 004a FFF7FEFF 		bl	Control_SetupStraightPID
 464              	.LVL52:
 353:Src/mode.c    ****         Control_SetupTurnPID(1.2f, 21.0f, 1.0f);
 465              		.loc 1 353 0
 466 004e B7EE001A 		vmov.f32	s2, #1.0e+0
 467 0052 F3EE050A 		vmov.f32	s1, #2.1e+1
 468 0056 9FED110A 		vldr.32	s0, .L59+8
 469 005a FFF7FEFF 		bl	Control_SetupTurnPID
 470              	.LVL53:
 354:Src/mode.c    ****         //Tim_SetTireRadius(12.37f);
 355:Src/mode.c    ****         Tim_FanPwm(3);
 471              		.loc 1 355 0
 472 005e 0320     		movs	r0, #3
 473 0060 FFF7FEFF 		bl	Tim_FanPwm
 474              	.LVL54:
 356:Src/mode.c    ****         HAL_Delay(3000);
 475              		.loc 1 356 0
 476 0064 40F6B830 		movw	r0, #3000
 477 0068 FFF7FEFF 		bl	HAL_Delay
 478              	.LVL55:
 479              	.L56:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 16


 357:Src/mode.c    ****     }
 358:Src/mode.c    ****     Control_ResetVelo();
 480              		.loc 1 358 0
 481 006c FFF7FEFF 		bl	Control_ResetVelo
 482              	.LVL56:
 359:Src/mode.c    ****     motor_flag = TRUE;
 483              		.loc 1 359 0
 484 0070 0B4B     		ldr	r3, .L59+12
 485 0072 0122     		movs	r2, #1
 486 0074 1A70     		strb	r2, [r3]
 360:Src/mode.c    **** }
 487              		.loc 1 360 0
 488 0076 10BD     		pop	{r4, pc}
 489              	.L58:
 346:Src/mode.c    ****         HAL_Delay(100);
 490              		.loc 1 346 0
 491 0078 4FF49671 		mov	r1, #300
 492 007c 4C20     		movs	r0, #76
 493 007e FFF7FEFF 		bl	Tim_BuzzerPwm
 494              	.LVL57:
 347:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 495              		.loc 1 347 0
 496 0082 6420     		movs	r0, #100
 497 0084 FFF7FEFF 		bl	HAL_Delay
 498              	.LVL58:
 348:Src/mode.c    ****     }
 499              		.loc 1 348 0
 500 0088 0021     		movs	r1, #0
 501 008a 0A20     		movs	r0, #10
 502 008c FFF7FEFF 		bl	Tim_BuzzerPwm
 503              	.LVL59:
 504 0090 ECE7     		b	.L56
 505              	.L60:
 506 0092 00BF     		.align	2
 507              	.L59:
 508 0094 00000000 		.word	sen_front
 509 0098 00000000 		.word	0
 510 009c 9A99993F 		.word	1067030938
 511 00a0 00000000 		.word	motor_flag
 512              		.cfi_endproc
 513              	.LFE129:
 515              		.section	.text.Get_WallData,"ax",%progbits
 516              		.align	1
 517              		.global	Get_WallData
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	Get_WallData:
 524              	.LFB130:
 361:Src/mode.c    **** 
 362:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 363:Src/mode.c    **** {
 525              		.loc 1 363 0
 526              		.cfi_startproc
 527              		@ args = 12, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 17


 529              		@ link register save eliminated.
 530              	.LVL60:
 531 0000 10B4     		push	{r4}
 532              	.LCFI5:
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 4, -4
 535 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 364:Src/mode.c    ****     // 方向別に壁の状態を取得
 365:Src/mode.c    ****     switch (direction)
 536              		.loc 1 365 0
 537 0006 032C     		cmp	r4, #3
 538 0008 0ED8     		bhi	.L61
 539 000a DFE804F0 		tbb	[pc, r4]
 540              	.L64:
 541 000e 02       		.byte	(.L63-.L64)/2
 542 000f 28       		.byte	(.L65-.L64)/2
 543 0010 1C       		.byte	(.L66-.L64)/2
 544 0011 10       		.byte	(.L67-.L64)/2
 545              		.p2align 1
 546              	.L63:
 366:Src/mode.c    ****     {
 367:Src/mode.c    ****     case NORTH:
 368:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 547              		.loc 1 368 0
 548 0012 194C     		ldr	r4, .L69
 549 0014 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 550 0016 0470     		strb	r4, [r0]
 369:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 551              		.loc 1 369 0
 552 0018 1848     		ldr	r0, .L69+4
 553              	.LVL61:
 554 001a 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 555 001c 0870     		strb	r0, [r1]
 370:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 556              		.loc 1 370 0
 557 001e 1849     		ldr	r1, .L69+8
 558              	.LVL62:
 559 0020 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 560 0022 1170     		strb	r1, [r2]
 371:Src/mode.c    ****         *s_wall = 0;
 561              		.loc 1 371 0
 562 0024 0022     		movs	r2, #0
 563              	.LVL63:
 564 0026 1A70     		strb	r2, [r3]
 565              	.LVL64:
 566              	.L61:
 372:Src/mode.c    ****         break;
 373:Src/mode.c    ****     case EAST:
 374:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 375:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 376:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 377:Src/mode.c    ****         *w_wall = 0;
 378:Src/mode.c    ****         break;
 379:Src/mode.c    ****     case SOUTH:
 380:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 381:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 382:Src/mode.c    ****         *e_wall = sen_l.is_wall;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 18


 383:Src/mode.c    ****         *n_wall = 0;
 384:Src/mode.c    ****         break;
 385:Src/mode.c    ****     case WEST:
 386:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 387:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 388:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 389:Src/mode.c    ****         *e_wall = 0;
 390:Src/mode.c    ****         break;
 391:Src/mode.c    ****     default:
 392:Src/mode.c    ****         break;
 393:Src/mode.c    ****     }
 394:Src/mode.c    **** }
 567              		.loc 1 394 0
 568 0028 5DF8044B 		ldr	r4, [sp], #4
 569              	.LCFI6:
 570              		.cfi_remember_state
 571              		.cfi_restore 4
 572              		.cfi_def_cfa_offset 0
 573              	.LVL65:
 574 002c 7047     		bx	lr
 575              	.LVL66:
 576              	.L67:
 577              	.LCFI7:
 578              		.cfi_restore_state
 374:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 579              		.loc 1 374 0
 580 002e 124C     		ldr	r4, .L69
 581 0030 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 582 0032 0C70     		strb	r4, [r1]
 375:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 583              		.loc 1 375 0
 584 0034 1149     		ldr	r1, .L69+4
 585              	.LVL67:
 586 0036 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 587 0038 1970     		strb	r1, [r3]
 376:Src/mode.c    ****         *w_wall = 0;
 588              		.loc 1 376 0
 589 003a 114B     		ldr	r3, .L69+8
 590              	.LVL68:
 591 003c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 592 003e 0370     		strb	r3, [r0]
 377:Src/mode.c    ****         break;
 593              		.loc 1 377 0
 594 0040 0023     		movs	r3, #0
 595 0042 1370     		strb	r3, [r2]
 378:Src/mode.c    ****     case SOUTH:
 596              		.loc 1 378 0
 597 0044 F0E7     		b	.L61
 598              	.LVL69:
 599              	.L66:
 380:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 600              		.loc 1 380 0
 601 0046 0C4C     		ldr	r4, .L69
 602 0048 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 603 004a 1C70     		strb	r4, [r3]
 381:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 604              		.loc 1 381 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 19


 605 004c 0B4B     		ldr	r3, .L69+4
 606              	.LVL70:
 607 004e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 608 0050 1370     		strb	r3, [r2]
 382:Src/mode.c    ****         *n_wall = 0;
 609              		.loc 1 382 0
 610 0052 0B4B     		ldr	r3, .L69+8
 611 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 612 0056 0B70     		strb	r3, [r1]
 383:Src/mode.c    ****         break;
 613              		.loc 1 383 0
 614 0058 0023     		movs	r3, #0
 615 005a 0370     		strb	r3, [r0]
 384:Src/mode.c    ****     case WEST:
 616              		.loc 1 384 0
 617 005c E4E7     		b	.L61
 618              	.LVL71:
 619              	.L65:
 386:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 620              		.loc 1 386 0
 621 005e 064C     		ldr	r4, .L69
 622 0060 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 623 0062 1470     		strb	r4, [r2]
 387:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 624              		.loc 1 387 0
 625 0064 054A     		ldr	r2, .L69+4
 626              	.LVL72:
 627 0066 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 628 0068 0270     		strb	r2, [r0]
 388:Src/mode.c    ****         *e_wall = 0;
 629              		.loc 1 388 0
 630 006a 054A     		ldr	r2, .L69+8
 631 006c 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 632 006e 1A70     		strb	r2, [r3]
 389:Src/mode.c    ****         break;
 633              		.loc 1 389 0
 634 0070 0023     		movs	r3, #0
 635              	.LVL73:
 636 0072 0B70     		strb	r3, [r1]
 637              		.loc 1 394 0
 638 0074 D8E7     		b	.L61
 639              	.L70:
 640 0076 00BF     		.align	2
 641              	.L69:
 642 0078 00000000 		.word	sen_front
 643 007c 00000000 		.word	sen_r
 644 0080 00000000 		.word	sen_l
 645              		.cfi_endproc
 646              	.LFE130:
 648              		.section	.text.SearchRun,"ax",%progbits
 649              		.align	1
 650              		.global	SearchRun
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	SearchRun:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 20


 657              	.LFB131:
 395:Src/mode.c    **** 
 396:Src/mode.c    **** void SearchRun(void)
 397:Src/mode.c    **** {
 658              		.loc 1 397 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 288
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662 0000 30B5     		push	{r4, r5, lr}
 663              	.LCFI8:
 664              		.cfi_def_cfa_offset 12
 665              		.cfi_offset 4, -12
 666              		.cfi_offset 5, -8
 667              		.cfi_offset 14, -4
 668 0002 CDB0     		sub	sp, sp, #308
 669              	.LCFI9:
 670              		.cfi_def_cfa_offset 320
 398:Src/mode.c    ****     //壁情報を持った構造体を定義
 399:Src/mode.c    ****     wallData_t wall_data;
 400:Src/mode.c    ****     wallData_t wall_data_fast;
 401:Src/mode.c    **** 
 402:Src/mode.c    ****     //ポジションを定義、初期化
 403:Src/mode.c    ****     pos_t mypos;
 404:Src/mode.c    ****     mypos.dir = 0;
 671              		.loc 1 404 0
 672 0004 0024     		movs	r4, #0
 673 0006 8DF81E40 		strb	r4, [sp, #30]
 405:Src/mode.c    ****     mypos.x = 0;
 674              		.loc 1 405 0
 675 000a 8DF81C40 		strb	r4, [sp, #28]
 406:Src/mode.c    ****     mypos.y = 1;
 676              		.loc 1 406 0
 677 000e 0125     		movs	r5, #1
 678 0010 8DF81D50 		strb	r5, [sp, #29]
 407:Src/mode.c    **** 
 408:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 409:Src/mode.c    ****     Map_Init(&wall_data);
 679              		.loc 1 409 0
 680 0014 2AA8     		add	r0, sp, #168
 681 0016 FFF7FEFF 		bl	Map_Init
 682              	.LVL74:
 410:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 683              		.loc 1 410 0
 684 001a 08A8     		add	r0, sp, #32
 685 001c FFF7FEFF 		bl	Map_InitFast
 686              	.LVL75:
 411:Src/mode.c    **** 
 412:Src/mode.c    ****     //歩数マップの作製
 413:Src/mode.c    ****     uint16_t nextdir = FRONT;
 414:Src/mode.c    ****     //最初の区画は進んでいるものとする
 415:Src/mode.c    ****     unsigned char flag_goal = 0;
 687              		.loc 1 415 0
 688 0020 8DF81B40 		strb	r4, [sp, #27]
 416:Src/mode.c    ****     //enable control side wall
 417:Src/mode.c    ****     control_wall_flag = 1;
 689              		.loc 1 417 0
 690 0024 7E4B     		ldr	r3, .L80
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 21


 691 0026 1D70     		strb	r5, [r3]
 418:Src/mode.c    ****     //counter set
 419:Src/mode.c    ****     counter_s = 0;
 692              		.loc 1 419 0
 693 0028 7E4B     		ldr	r3, .L80+4
 694 002a 1C70     		strb	r4, [r3]
 420:Src/mode.c    ****     SetRunMode(0);
 695              		.loc 1 420 0
 696 002c 2046     		mov	r0, r4
 697 002e FFF7FEFF 		bl	SetRunMode
 698              	.LVL76:
 421:Src/mode.c    ****     Motion_Start();
 699              		.loc 1 421 0
 700 0032 FFF7FEFF 		bl	Motion_Start
 701              	.LVL77:
 702 0036 73E0     		b	.L76
 703              	.LVL78:
 704              	.L79:
 705              	.LBB2:
 422:Src/mode.c    ****     while (1)
 423:Src/mode.c    ****     {
 424:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 425:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 426:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 427:Src/mode.c    **** 
 428:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 429:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 430:Src/mode.c    **** 
 431:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 432:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 433:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 434:Src/mode.c    ****         //Maze_UpdatePosition(nextdir, &mypos);
 435:Src/mode.c    ****         Motion_Switch(nextdir);
 436:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 706              		.loc 1 436 0 discriminator 1
 707 0038 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 708 003c 7A49     		ldr	r1, .L80+8
 709 003e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 710 0040 8A42     		cmp	r2, r1
 711 0042 40F0BF80 		bne	.L72
 437:Src/mode.c    ****         {
 438:Src/mode.c    ****             if (flag_goal == 0)
 712              		.loc 1 438 0
 713 0046 9DF81B10 		ldrb	r1, [sp, #27]	@ zero_extendqisi2
 714 004a 0029     		cmp	r1, #0
 715 004c 40F0BA80 		bne	.L72
 439:Src/mode.c    ****             {
 440:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 716              		.loc 1 440 0
 717 0050 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 718 0054 0291     		str	r1, [sp, #8]
 719 0056 0192     		str	r2, [sp, #4]
 720 0058 0093     		str	r3, [sp]
 721 005a 0DF11A03 		add	r3, sp, #26
 722 005e 0DF11902 		add	r2, sp, #25
 723 0062 06A9     		add	r1, sp, #24
 724 0064 0DF11700 		add	r0, sp, #23
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 22


 725 0068 FFF7FEFF 		bl	Get_WallData
 726              	.LVL79:
 441:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 727              		.loc 1 441 0
 728 006c 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 729 0070 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 730 0074 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 731 0078 0191     		str	r1, [sp, #4]
 732 007a 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 733 007e 0091     		str	r1, [sp]
 734 0080 07A9     		add	r1, sp, #28
 735 0082 2AA8     		add	r0, sp, #168
 736 0084 FFF7FEFF 		bl	Map_addWall
 737              	.LVL80:
 442:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 738              		.loc 1 442 0
 739 0088 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 740 008c 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 741 0090 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 742 0094 0191     		str	r1, [sp, #4]
 743 0096 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 744 009a 0091     		str	r1, [sp]
 745 009c 07A9     		add	r1, sp, #28
 746 009e 08A8     		add	r0, sp, #32
 747 00a0 FFF7FEFF 		bl	Map_DelWall
 748              	.LVL81:
 443:Src/mode.c    ****                 Motion_End();
 749              		.loc 1 443 0
 750 00a4 FFF7FEFF 		bl	Motion_End
 751              	.LVL82:
 444:Src/mode.c    ****                 motor_flag = FALSE;
 752              		.loc 1 444 0
 753 00a8 0024     		movs	r4, #0
 754 00aa 604B     		ldr	r3, .L80+12
 755 00ac 1C70     		strb	r4, [r3]
 445:Src/mode.c    ****                 flag_goal = 1;
 756              		.loc 1 445 0
 757 00ae 0123     		movs	r3, #1
 758 00b0 8DF81B30 		strb	r3, [sp, #27]
 446:Src/mode.c    ****                 HAL_Delay(1000);
 759              		.loc 1 446 0
 760 00b4 4FF47A70 		mov	r0, #1000
 761 00b8 FFF7FEFF 		bl	HAL_Delay
 762              	.LVL83:
 447:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 763              		.loc 1 447 0
 764 00bc 8822     		movs	r2, #136
 765 00be 08A9     		add	r1, sp, #32
 766 00c0 5B4B     		ldr	r3, .L80+16
 767 00c2 1868     		ldr	r0, [r3]
 768 00c4 FFF7FEFF 		bl	Flash_Write
 769              	.LVL84:
 448:Src/mode.c    ****                 HAL_Delay(2000);
 770              		.loc 1 448 0
 771 00c8 4FF4FA60 		mov	r0, #2000
 772 00cc FFF7FEFF 		bl	HAL_Delay
 773              	.LVL85:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 23


 449:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 774              		.loc 1 449 0
 775 00d0 4FF49671 		mov	r1, #300
 776 00d4 5B20     		movs	r0, #91
 777 00d6 FFF7FEFF 		bl	Tim_BuzzerPwm
 778              	.LVL86:
 450:Src/mode.c    ****                 HAL_Delay(200);
 779              		.loc 1 450 0
 780 00da C820     		movs	r0, #200
 781 00dc FFF7FEFF 		bl	HAL_Delay
 782              	.LVL87:
 451:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 783              		.loc 1 451 0
 784 00e0 2146     		mov	r1, r4
 785 00e2 0A20     		movs	r0, #10
 786 00e4 FFF7FEFF 		bl	Tim_BuzzerPwm
 787              	.LVL88:
 452:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 788              		.loc 1 452 0
 789 00e8 524B     		ldr	r3, .L80+20
 790 00ea 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 791 00ec 53B9     		cbnz	r3, .L73
 792              	.LVL89:
 453:Src/mode.c    ****                 {
 454:Src/mode.c    ****                     nextdir = FRONT;
 455:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 793              		.loc 1 455 0
 794 00ee 07A9     		add	r1, sp, #28
 795 00f0 2046     		mov	r0, r4
 796 00f2 FFF7FEFF 		bl	Maze_UpdatePosition
 797              	.LVL90:
 456:Src/mode.c    ****                     motor_flag = TRUE;
 798              		.loc 1 456 0
 799 00f6 4D4B     		ldr	r3, .L80+12
 800 00f8 0122     		movs	r2, #1
 801 00fa 1A70     		strb	r2, [r3]
 457:Src/mode.c    ****                     Motion_Restart(FALSE);
 802              		.loc 1 457 0
 803 00fc 2046     		mov	r0, r4
 804 00fe FFF7FEFF 		bl	Motion_Restart
 805              	.LVL91:
 806 0102 5FE0     		b	.L72
 807              	.LVL92:
 808              	.L73:
 458:Src/mode.c    ****                 }
 459:Src/mode.c    ****                 else
 460:Src/mode.c    ****                 {
 461:Src/mode.c    ****                     nextdir = PIVO_REAR;
 462:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 809              		.loc 1 462 0
 810 0104 07A9     		add	r1, sp, #28
 811 0106 0420     		movs	r0, #4
 812 0108 FFF7FEFF 		bl	Maze_UpdatePosition
 813              	.LVL93:
 463:Src/mode.c    ****                     motor_flag = TRUE;
 814              		.loc 1 463 0
 815 010c 0120     		movs	r0, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 24


 816 010e 474B     		ldr	r3, .L80+12
 817 0110 1870     		strb	r0, [r3]
 464:Src/mode.c    ****                     Motion_Restart(TRUE);
 818              		.loc 1 464 0
 819 0112 FFF7FEFF 		bl	Motion_Restart
 820              	.LVL94:
 821 0116 55E0     		b	.L72
 822              	.LVL95:
 823              	.L74:
 465:Src/mode.c    ****                 }
 466:Src/mode.c    ****             }
 467:Src/mode.c    ****         }
 468:Src/mode.c    ****         if (counter_s > 150 && flag_goal == 1)
 469:Src/mode.c    ****         {
 470:Src/mode.c    ****             flag_goal = 2;
 471:Src/mode.c    ****         }
 472:Src/mode.c    ****         if (flag_goal == 2)
 824              		.loc 1 472 0
 825 0118 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 826 011c 022B     		cmp	r3, #2
 827 011e 5DD0     		beq	.L78
 828              	.L76:
 424:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 829              		.loc 1 424 0
 830 0120 0023     		movs	r3, #0
 831 0122 8DF81730 		strb	r3, [sp, #23]
 832 0126 8DF81830 		strb	r3, [sp, #24]
 833 012a 8DF81930 		strb	r3, [sp, #25]
 834 012e 8DF81A30 		strb	r3, [sp, #26]
 426:Src/mode.c    **** 
 835              		.loc 1 426 0
 836 0132 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 837 0136 0293     		str	r3, [sp, #8]
 838 0138 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 839 013c 0193     		str	r3, [sp, #4]
 840 013e 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 841 0142 0093     		str	r3, [sp]
 842 0144 0DF11A03 		add	r3, sp, #26
 843 0148 0DF11902 		add	r2, sp, #25
 844 014c 06A9     		add	r1, sp, #24
 845 014e 0DF11700 		add	r0, sp, #23
 846 0152 FFF7FEFF 		bl	Get_WallData
 847              	.LVL96:
 428:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 848              		.loc 1 428 0
 849 0156 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 850 015a 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 851 015e 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 852 0162 0191     		str	r1, [sp, #4]
 853 0164 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 854 0168 0091     		str	r1, [sp]
 855 016a 07A9     		add	r1, sp, #28
 856 016c 2AA8     		add	r0, sp, #168
 857 016e FFF7FEFF 		bl	Map_addWall
 858              	.LVL97:
 429:Src/mode.c    **** 
 859              		.loc 1 429 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 25


 860 0172 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 861 0176 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 862 017a 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 863 017e 0191     		str	r1, [sp, #4]
 864 0180 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 865 0184 0091     		str	r1, [sp]
 866 0186 07A9     		add	r1, sp, #28
 867 0188 08A8     		add	r0, sp, #32
 868 018a FFF7FEFF 		bl	Map_DelWall
 869              	.LVL98:
 431:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 870              		.loc 1 431 0
 871 018e 2A4C     		ldr	r4, .L80+24
 872 0190 2AAB     		add	r3, sp, #168
 873 0192 254A     		ldr	r2, .L80+8
 874 0194 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 875 0196 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 876 0198 0DF11B00 		add	r0, sp, #27
 877 019c FFF7FEFF 		bl	Maze_UpdateStepMap
 878              	.LVL99:
 432:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 879              		.loc 1 432 0
 880 01a0 2AA9     		add	r1, sp, #168
 881 01a2 07A8     		add	r0, sp, #28
 882 01a4 FFF7FEFF 		bl	Maze_GetNextMotion
 883              	.LVL100:
 433:Src/mode.c    ****         //Maze_UpdatePosition(nextdir, &mypos);
 884              		.loc 1 433 0
 885 01a8 82B2     		uxth	r2, r0
 886 01aa 2AA9     		add	r1, sp, #168
 887 01ac 07A8     		add	r0, sp, #28
 888              	.LVL101:
 889 01ae FFF7FEFF 		bl	Maze_KnownStepAccel
 890              	.LVL102:
 435:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 891              		.loc 1 435 0
 892 01b2 C0B2     		uxtb	r0, r0
 893              	.LVL103:
 894 01b4 FFF7FEFF 		bl	Motion_Switch
 895              	.LVL104:
 436:Src/mode.c    ****         {
 896              		.loc 1 436 0
 897 01b8 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 898 01bc 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 899 01be 9342     		cmp	r3, r2
 900 01c0 3FF43AAF 		beq	.L79
 901              	.L72:
 468:Src/mode.c    ****         {
 902              		.loc 1 468 0
 903 01c4 174B     		ldr	r3, .L80+4
 904 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 01c8 962B     		cmp	r3, #150
 906 01ca A5D9     		bls	.L74
 468:Src/mode.c    ****         {
 907              		.loc 1 468 0 is_stmt 0 discriminator 1
 908 01cc 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 909 01d0 012B     		cmp	r3, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 26


 910 01d2 A1D1     		bne	.L74
 470:Src/mode.c    ****         }
 911              		.loc 1 470 0 is_stmt 1
 912 01d4 0223     		movs	r3, #2
 913 01d6 8DF81B30 		strb	r3, [sp, #27]
 914 01da 9DE7     		b	.L74
 915              	.L78:
 473:Src/mode.c    ****         {
 474:Src/mode.c    ****             Motion_End();
 916              		.loc 1 474 0
 917 01dc FFF7FEFF 		bl	Motion_End
 918              	.LVL105:
 475:Src/mode.c    ****             motor_flag = FALSE;
 919              		.loc 1 475 0
 920 01e0 0024     		movs	r4, #0
 921 01e2 124B     		ldr	r3, .L80+12
 922 01e4 1C70     		strb	r4, [r3]
 476:Src/mode.c    ****             HAL_Delay(1000);
 923              		.loc 1 476 0
 924 01e6 4FF47A70 		mov	r0, #1000
 925 01ea FFF7FEFF 		bl	HAL_Delay
 926              	.LVL106:
 477:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 927              		.loc 1 477 0
 928 01ee 8822     		movs	r2, #136
 929 01f0 08A9     		add	r1, sp, #32
 930 01f2 0F4B     		ldr	r3, .L80+16
 931 01f4 1868     		ldr	r0, [r3]
 932 01f6 FFF7FEFF 		bl	Flash_Write
 933              	.LVL107:
 478:Src/mode.c    ****             HAL_Delay(2000);
 934              		.loc 1 478 0
 935 01fa 4FF4FA60 		mov	r0, #2000
 936 01fe FFF7FEFF 		bl	HAL_Delay
 937              	.LVL108:
 479:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 938              		.loc 1 479 0
 939 0202 4FF49671 		mov	r1, #300
 940 0206 5B20     		movs	r0, #91
 941 0208 FFF7FEFF 		bl	Tim_BuzzerPwm
 942              	.LVL109:
 480:Src/mode.c    ****             HAL_Delay(200);
 943              		.loc 1 480 0
 944 020c C820     		movs	r0, #200
 945 020e FFF7FEFF 		bl	HAL_Delay
 946              	.LVL110:
 481:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 947              		.loc 1 481 0
 948 0212 2146     		mov	r1, r4
 949 0214 0A20     		movs	r0, #10
 950 0216 FFF7FEFF 		bl	Tim_BuzzerPwm
 951              	.LVL111:
 952              	.LBE2:
 482:Src/mode.c    ****             break;
 483:Src/mode.c    ****         }
 484:Src/mode.c    ****     }
 485:Src/mode.c    **** }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 27


 953              		.loc 1 485 0
 954 021a 4DB0     		add	sp, sp, #308
 955              	.LCFI10:
 956              		.cfi_def_cfa_offset 12
 957              		@ sp needed
 958 021c 30BD     		pop	{r4, r5, pc}
 959              	.L81:
 960 021e 00BF     		.align	2
 961              	.L80:
 962 0220 00000000 		.word	control_wall_flag
 963 0224 00000000 		.word	counter_s
 964 0228 00000000 		.word	.LANCHOR0
 965 022c 00000000 		.word	motor_flag
 966 0230 00000000 		.word	start_address
 967 0234 00000000 		.word	sen_front
 968 0238 00000000 		.word	.LANCHOR1
 969              		.cfi_endproc
 970              	.LFE131:
 972              		.section	.text.Mode_FastRun,"ax",%progbits
 973              		.align	1
 974              		.global	Mode_FastRun
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	Mode_FastRun:
 981              	.LFB132:
 486:Src/mode.c    **** 
 487:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn)
 488:Src/mode.c    **** {
 982              		.loc 1 488 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 1680
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL112:
 987 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 988              	.LCFI11:
 989              		.cfi_def_cfa_offset 20
 990              		.cfi_offset 4, -20
 991              		.cfi_offset 5, -16
 992              		.cfi_offset 6, -12
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 2DED028B 		vpush.64	{d8}
 996              	.LCFI12:
 997              		.cfi_def_cfa_offset 28
 998              		.cfi_offset 80, -28
 999              		.cfi_offset 81, -24
 1000 0006 ADF29C6D 		subw	sp, sp, #1692
 1001              	.LCFI13:
 1002              		.cfi_def_cfa_offset 1720
 1003 000a 0446     		mov	r4, r0
 1004 000c B0EE408A 		vmov.f32	s16, s0
 1005 0010 0E46     		mov	r6, r1
 1006 0012 1746     		mov	r7, r2
 489:Src/mode.c    ****     wallData_t wallData;
 490:Src/mode.c    ****     pos_t pos;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 28


 491:Src/mode.c    ****     uint16_t motion[255];
 492:Src/mode.c    ****     uint32_t velocity[255];
 493:Src/mode.c    ****     uint8_t tail = 0;
 1007              		.loc 1 493 0
 1008 0014 0025     		movs	r5, #0
 1009 0016 8DF80F50 		strb	r5, [sp, #15]
 1010              	.LVL113:
 494:Src/mode.c    ****     uint8_t head = 0;
 495:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 1011              		.loc 1 495 0
 1012 001a 8822     		movs	r2, #136
 1013              	.LVL114:
 1014 001c 0DF5C261 		add	r1, sp, #1552
 1015              	.LVL115:
 1016 0020 A54B     		ldr	r3, .L111
 1017 0022 1868     		ldr	r0, [r3]
 1018              	.LVL116:
 1019 0024 FFF7FEFF 		bl	Flash_Load
 1020              	.LVL117:
 496:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 1021              		.loc 1 496 0
 1022 0028 A44B     		ldr	r3, .L111+4
 1023 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 002c A44A     		ldr	r2, .L111+8
 1025 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1026 0030 0092     		str	r2, [sp]
 1027 0032 3A46     		mov	r2, r7
 1028 0034 3146     		mov	r1, r6
 1029 0036 0DF5C260 		add	r0, sp, #1552
 1030 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1031              	.LVL118:
 497:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1032              		.loc 1 497 0
 1033 003e B0EE480A 		vmov.f32	s0, s16
 1034 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1035              	.LVL119:
 498:Src/mode.c    ****     pos.dir = NORTH;
 1036              		.loc 1 498 0
 1037 0046 8DF80E56 		strb	r5, [sp, #1550]
 499:Src/mode.c    ****     pos.x = 0;
 1038              		.loc 1 499 0
 1039 004a 8DF80C56 		strb	r5, [sp, #1548]
 500:Src/mode.c    ****     pos.y = 1;
 1040              		.loc 1 500 0
 1041 004e 0123     		movs	r3, #1
 1042 0050 8DF80D36 		strb	r3, [sp, #1549]
 501:Src/mode.c    ****     motion[tail] = START;
 1043              		.loc 1 501 0
 1044 0054 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1045 0058 0DF20C42 		addw	r2, sp, #1036
 1046 005c 0521     		movs	r1, #5
 1047 005e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 502:Src/mode.c    ****     tail++;
 1048              		.loc 1 502 0
 1049 0062 0133     		adds	r3, r3, #1
 1050 0064 DBB2     		uxtb	r3, r3
 503:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 29


 1051              		.loc 1 503 0
 1052 0066 1021     		movs	r1, #16
 1053 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 504:Src/mode.c    ****     tail++;
 1054              		.loc 1 504 0
 1055 006c 0133     		adds	r3, r3, #1
 1056 006e 8DF80F30 		strb	r3, [sp, #15]
 1057              	.LVL120:
 1058 0072 1AE0     		b	.L89
 1059              	.L106:
 1060              	.LBB3:
 505:Src/mode.c    ****     head += 2;
 506:Src/mode.c    ****     while (1)
 507:Src/mode.c    ****     {
 508:Src/mode.c    ****         if (Maze_GetGoalSize() == 1)
 509:Src/mode.c    ****         {
 510:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 1061              		.loc 1 510 0
 1062 0074 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1063 0078 904B     		ldr	r3, .L111+4
 1064 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1065 007c 9A42     		cmp	r2, r3
 1066 007e 2DD0     		beq	.L105
 1067              	.L84:
 511:Src/mode.c    ****             {
 512:Src/mode.c    ****                 break;
 513:Src/mode.c    ****             }
 514:Src/mode.c    ****         }
 515:Src/mode.c    ****         else
 516:Src/mode.c    ****         {
 517:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 518:Src/mode.c    ****             {
 519:Src/mode.c    ****                 break;
 520:Src/mode.c    ****             }
 521:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == gy)
 522:Src/mode.c    ****             {
 523:Src/mode.c    ****                 break;
 524:Src/mode.c    ****             }
 525:Src/mode.c    ****             if (pos.x == gx && pos.y == (gy + 1))
 526:Src/mode.c    ****             {
 527:Src/mode.c    ****                 break;
 528:Src/mode.c    ****             }
 529:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == (gy + 1))
 530:Src/mode.c    ****             {
 531:Src/mode.c    ****                 break;
 532:Src/mode.c    ****             }
 533:Src/mode.c    ****         }
 534:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1068              		.loc 1 534 0
 1069 0080 0DF5C261 		add	r1, sp, #1552
 1070 0084 0DF20C60 		addw	r0, sp, #1548
 1071 0088 FFF7FEFF 		bl	Maze_GetNextMotionEx
 1072              	.LVL121:
 535:Src/mode.c    ****         motion[tail] = buff;
 1073              		.loc 1 535 0
 1074 008c 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1075 0090 0DF20C42 		addw	r2, sp, #1036
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 30


 1076 0094 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 536:Src/mode.c    ****         tail++;
 1077              		.loc 1 536 0
 1078 0098 0133     		adds	r3, r3, #1
 1079 009a 8DF80F30 		strb	r3, [sp, #15]
 537:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1080              		.loc 1 537 0
 1081 009e 0DF20C61 		addw	r1, sp, #1548
 1082 00a2 00F00F00 		and	r0, r0, #15
 1083              	.LVL122:
 1084 00a6 FFF7FEFF 		bl	Maze_UpdatePosition
 1085              	.LVL123:
 1086              	.L89:
 508:Src/mode.c    ****         {
 1087              		.loc 1 508 0
 1088 00aa FFF7FEFF 		bl	Maze_GetGoalSize
 1089              	.LVL124:
 1090 00ae 0128     		cmp	r0, #1
 1091 00b0 E0D0     		beq	.L106
 517:Src/mode.c    ****             {
 1092              		.loc 1 517 0
 1093 00b2 9DF80C36 		ldrb	r3, [sp, #1548]	@ zero_extendqisi2
 1094 00b6 814A     		ldr	r2, .L111+4
 1095 00b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1096 00ba 9342     		cmp	r3, r2
 1097 00bc 15D0     		beq	.L107
 1098              	.L86:
 521:Src/mode.c    ****             {
 1099              		.loc 1 521 0
 1100 00be 511C     		adds	r1, r2, #1
 1101 00c0 8B42     		cmp	r3, r1
 1102 00c2 34D0     		beq	.L108
 1103              	.L87:
 525:Src/mode.c    ****             {
 1104              		.loc 1 525 0
 1105 00c4 9342     		cmp	r3, r2
 1106 00c6 39D0     		beq	.L109
 1107              	.L88:
 529:Src/mode.c    ****             {
 1108              		.loc 1 529 0
 1109 00c8 8B42     		cmp	r3, r1
 1110 00ca D9D1     		bne	.L84
 529:Src/mode.c    ****             {
 1111              		.loc 1 529 0 is_stmt 0 discriminator 1
 1112 00cc 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1113 00d0 7B4B     		ldr	r3, .L111+8
 1114 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 00d4 0133     		adds	r3, r3, #1
 1116 00d6 9A42     		cmp	r2, r3
 1117 00d8 D2D1     		bne	.L84
 1118              	.LBE3:
 1119 00da 0CE0     		b	.L85
 1120              	.L105:
 1121              	.LBB4:
 510:Src/mode.c    ****             {
 1122              		.loc 1 510 0 is_stmt 1 discriminator 1
 1123 00dc 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 31


 1124 00e0 774B     		ldr	r3, .L111+8
 1125 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1126 00e4 9A42     		cmp	r2, r3
 1127 00e6 CBD1     		bne	.L84
 1128 00e8 05E0     		b	.L85
 1129              	.L107:
 517:Src/mode.c    ****             {
 1130              		.loc 1 517 0 discriminator 1
 1131 00ea 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1132 00ee 7449     		ldr	r1, .L111+8
 1133 00f0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1134 00f2 8842     		cmp	r0, r1
 1135 00f4 E3D1     		bne	.L86
 1136              	.L85:
 1137              	.LBE4:
 538:Src/mode.c    ****     }
 539:Src/mode.c    ****     motion[tail] = GOAL;
 1138              		.loc 1 539 0
 1139 00f6 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1140 00fa 0DF20C41 		addw	r1, sp, #1036
 1141 00fe 0622     		movs	r2, #6
 1142 0100 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 540:Src/mode.c    ****     tail++;
 1143              		.loc 1 540 0
 1144 0104 0133     		adds	r3, r3, #1
 1145 0106 8DF80F30 		strb	r3, [sp, #15]
 1146              	.LVL125:
 541:Src/mode.c    ****     head = 0;
 542:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail, VELO_S, VELO_F);
 1147              		.loc 1 542 0
 1148 010a DFED6E0A 		vldr.32	s1, .L111+12
 1149 010e 9FED6E0A 		vldr.32	s0, .L111+16
 1150 0112 0DF10F03 		add	r3, sp, #15
 1151 0116 04AA     		add	r2, sp, #16
 1152 0118 2046     		mov	r0, r4
 1153 011a FFF7FEFF 		bl	Maze_Compress
 1154              	.LVL126:
 543:Src/mode.c    **** 
 544:Src/mode.c    ****     control_wall_flag = 2;
 1155              		.loc 1 544 0
 1156 011e 6B4B     		ldr	r3, .L111+20
 1157 0120 0222     		movs	r2, #2
 1158 0122 1A70     		strb	r2, [r3]
 545:Src/mode.c    ****     SetRunMode(0);
 1159              		.loc 1 545 0
 1160 0124 0020     		movs	r0, #0
 1161 0126 FFF7FEFF 		bl	SetRunMode
 1162              	.LVL127:
 541:Src/mode.c    ****     head = 0;
 1163              		.loc 1 541 0
 1164 012a 0024     		movs	r4, #0
 546:Src/mode.c    ****     while (head != tail)
 1165              		.loc 1 546 0
 1166 012c 1BE0     		b	.L90
 1167              	.LVL128:
 1168              	.L108:
 1169              	.LBB5:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 32


 521:Src/mode.c    ****             {
 1170              		.loc 1 521 0 discriminator 1
 1171 012e 9DF80D56 		ldrb	r5, [sp, #1549]	@ zero_extendqisi2
 1172 0132 6348     		ldr	r0, .L111+8
 1173 0134 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1174 0136 8542     		cmp	r5, r0
 1175 0138 C4D1     		bne	.L87
 1176              	.LBE5:
 1177 013a DCE7     		b	.L85
 1178              	.L109:
 1179              	.LBB6:
 525:Src/mode.c    ****             {
 1180              		.loc 1 525 0 discriminator 1
 1181 013c 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1182 0140 5F4A     		ldr	r2, .L111+8
 1183 0142 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1184 0144 0132     		adds	r2, r2, #1
 1185 0146 9042     		cmp	r0, r2
 1186 0148 BED1     		bne	.L88
 1187              	.LBE6:
 1188 014a D4E7     		b	.L85
 1189              	.LVL129:
 1190              	.L96:
 547:Src/mode.c    ****     {
 548:Src/mode.c    ****         switch (motion[head] & 0xf)
 549:Src/mode.c    ****         {
 550:Src/mode.c    ****         case START:
 551:Src/mode.c    ****             Motion_FastStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1191              		.loc 1 551 0
 1192 014c 04AB     		add	r3, sp, #16
 1193 014e 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1194 0152 00EE103A 		vmov	s0, r3	@ int
 1195 0156 B8EE400A 		vcvt.f32.u32	s0, s0
 1196 015a C0F30710 		ubfx	r0, r0, #4, #8
 1197 015e FFF7FEFF 		bl	Motion_FastStart
 1198              	.LVL130:
 1199              	.L91:
 552:Src/mode.c    ****             break;
 553:Src/mode.c    ****         case LEFT:
 554:Src/mode.c    ****             Motion_FastLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 555:Src/mode.c    ****             break;
 556:Src/mode.c    ****         case FRONT:
 557:Src/mode.c    ****             Motion_FastStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(velocity[
 558:Src/mode.c    ****             break;
 559:Src/mode.c    ****         case DIAGONAL_L:
 560:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 561:Src/mode.c    ****             break;
 562:Src/mode.c    ****         case DIAGONAL_R:
 563:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
 564:Src/mode.c    ****             break;
 565:Src/mode.c    ****         case RIGHT:
 566:Src/mode.c    ****             Motion_FastRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 567:Src/mode.c    ****             break;
 568:Src/mode.c    ****         case GOAL:
 569:Src/mode.c    ****             Motion_FastGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 570:Src/mode.c    ****             break;
 571:Src/mode.c    ****         case ADJUST:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 33


 572:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 573:Src/mode.c    ****             break;
 574:Src/mode.c    ****         case ADJUST_L:
 575:Src/mode.c    ****             Motion_Adjust_L(motion[head] >> 4, (float)(velocity[head] >> 16));
 576:Src/mode.c    ****             break;
 577:Src/mode.c    ****         case ADJUST_R:
 578:Src/mode.c    ****             Motion_Adjust_R(motion[head] >> 4, (float)(velocity[head] >> 16));
 579:Src/mode.c    ****             break;
 580:Src/mode.c    ****         default:
 581:Src/mode.c    ****             break;
 582:Src/mode.c    ****         }
 583:Src/mode.c    ****         head++;
 1200              		.loc 1 583 0
 1201 0162 0134     		adds	r4, r4, #1
 1202              	.LVL131:
 1203 0164 E4B2     		uxtb	r4, r4
 1204              	.LVL132:
 1205              	.L90:
 546:Src/mode.c    ****     {
 1206              		.loc 1 546 0
 1207 0166 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1208 016a A342     		cmp	r3, r4
 1209 016c 00F08B80 		beq	.L110
 548:Src/mode.c    ****         {
 1210              		.loc 1 548 0
 1211 0170 0DF20C43 		addw	r3, sp, #1036
 1212 0174 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1213 0178 00F00F03 		and	r3, r0, #15
 1214 017c 0C2B     		cmp	r3, #12
 1215 017e F0D8     		bhi	.L91
 1216 0180 01A2     		adr	r2, .L93
 1217 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1218 0186 00BF     		.p2align 2
 1219              	.L93:
 1220 0188 D5010000 		.word	.L92+1
 1221 018c BD010000 		.word	.L94+1
 1222 0190 0D020000 		.word	.L95+1
 1223 0194 63010000 		.word	.L91+1
 1224 0198 63010000 		.word	.L91+1
 1225 019c 4D010000 		.word	.L96+1
 1226 01a0 25020000 		.word	.L97+1
 1227 01a4 63010000 		.word	.L91+1
 1228 01a8 F9010000 		.word	.L98+1
 1229 01ac 03020000 		.word	.L99+1
 1230 01b0 3F020000 		.word	.L100+1
 1231 01b4 57020000 		.word	.L101+1
 1232 01b8 6F020000 		.word	.L102+1
 1233              		.p2align 1
 1234              	.L94:
 554:Src/mode.c    ****             break;
 1235              		.loc 1 554 0
 1236 01bc 04AB     		add	r3, sp, #16
 1237 01be 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1238 01c2 00EE103A 		vmov	s0, r3	@ int
 1239 01c6 B8EE400A 		vcvt.f32.u32	s0, s0
 1240 01ca C0F30710 		ubfx	r0, r0, #4, #8
 1241 01ce FFF7FEFF 		bl	Motion_FastLeftTurn
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 34


 1242              	.LVL133:
 555:Src/mode.c    ****         case FRONT:
 1243              		.loc 1 555 0
 1244 01d2 C6E7     		b	.L91
 1245              	.L92:
 557:Src/mode.c    ****             break;
 1246              		.loc 1 557 0
 1247 01d4 04AB     		add	r3, sp, #16
 1248 01d6 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1249 01da 1A0C     		lsrs	r2, r3, #16
 1250 01dc 00EE102A 		vmov	s0, r2	@ int
 1251 01e0 9BB2     		uxth	r3, r3
 1252 01e2 00EE903A 		vmov	s1, r3	@ int
 1253 01e6 F8EE600A 		vcvt.f32.u32	s1, s1
 1254 01ea B8EE400A 		vcvt.f32.u32	s0, s0
 1255 01ee C0F30710 		ubfx	r0, r0, #4, #8
 1256 01f2 FFF7FEFF 		bl	Motion_FastStraight
 1257              	.LVL134:
 558:Src/mode.c    ****         case DIAGONAL_L:
 1258              		.loc 1 558 0
 1259 01f6 B4E7     		b	.L91
 1260              	.L98:
 560:Src/mode.c    ****             break;
 1261              		.loc 1 560 0
 1262 01f8 C0F30710 		ubfx	r0, r0, #4, #8
 1263 01fc FFF7FEFF 		bl	Motion_DiagonalLeft
 1264              	.LVL135:
 561:Src/mode.c    ****         case DIAGONAL_R:
 1265              		.loc 1 561 0
 1266 0200 AFE7     		b	.L91
 1267              	.L99:
 563:Src/mode.c    ****             break;
 1268              		.loc 1 563 0
 1269 0202 C0F30710 		ubfx	r0, r0, #4, #8
 1270 0206 FFF7FEFF 		bl	Motion_DiagonalRight
 1271              	.LVL136:
 564:Src/mode.c    ****         case RIGHT:
 1272              		.loc 1 564 0
 1273 020a AAE7     		b	.L91
 1274              	.L95:
 566:Src/mode.c    ****             break;
 1275              		.loc 1 566 0
 1276 020c 04AB     		add	r3, sp, #16
 1277 020e 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1278 0212 00EE103A 		vmov	s0, r3	@ int
 1279 0216 B8EE400A 		vcvt.f32.u32	s0, s0
 1280 021a C0F30710 		ubfx	r0, r0, #4, #8
 1281 021e FFF7FEFF 		bl	Motion_FastRightTurn
 1282              	.LVL137:
 567:Src/mode.c    ****         case GOAL:
 1283              		.loc 1 567 0
 1284 0222 9EE7     		b	.L91
 1285              	.L97:
 569:Src/mode.c    ****             break;
 1286              		.loc 1 569 0
 1287 0224 04AB     		add	r3, sp, #16
 1288 0226 53F82430 		ldr	r3, [r3, r4, lsl #2]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 35


 1289 022a 1B0C     		lsrs	r3, r3, #16
 1290 022c 00EE103A 		vmov	s0, r3	@ int
 1291 0230 B8EE400A 		vcvt.f32.u32	s0, s0
 1292 0234 C0F30710 		ubfx	r0, r0, #4, #8
 1293 0238 FFF7FEFF 		bl	Motion_FastGoal
 1294              	.LVL138:
 570:Src/mode.c    ****         case ADJUST:
 1295              		.loc 1 570 0
 1296 023c 91E7     		b	.L91
 1297              	.L100:
 572:Src/mode.c    ****             break;
 1298              		.loc 1 572 0
 1299 023e 04AB     		add	r3, sp, #16
 1300 0240 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1301 0244 1B0C     		lsrs	r3, r3, #16
 1302 0246 00EE103A 		vmov	s0, r3	@ int
 1303 024a B8EE400A 		vcvt.f32.u32	s0, s0
 1304 024e 0009     		lsrs	r0, r0, #4
 1305 0250 FFF7FEFF 		bl	Motion_Adjust
 1306              	.LVL139:
 573:Src/mode.c    ****         case ADJUST_L:
 1307              		.loc 1 573 0
 1308 0254 85E7     		b	.L91
 1309              	.L101:
 575:Src/mode.c    ****             break;
 1310              		.loc 1 575 0
 1311 0256 04AB     		add	r3, sp, #16
 1312 0258 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1313 025c 1B0C     		lsrs	r3, r3, #16
 1314 025e 00EE103A 		vmov	s0, r3	@ int
 1315 0262 B8EE400A 		vcvt.f32.u32	s0, s0
 1316 0266 0009     		lsrs	r0, r0, #4
 1317 0268 FFF7FEFF 		bl	Motion_Adjust_L
 1318              	.LVL140:
 576:Src/mode.c    ****         case ADJUST_R:
 1319              		.loc 1 576 0
 1320 026c 79E7     		b	.L91
 1321              	.L102:
 578:Src/mode.c    ****             break;
 1322              		.loc 1 578 0
 1323 026e 04AB     		add	r3, sp, #16
 1324 0270 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1325 0274 1B0C     		lsrs	r3, r3, #16
 1326 0276 00EE103A 		vmov	s0, r3	@ int
 1327 027a B8EE400A 		vcvt.f32.u32	s0, s0
 1328 027e 0009     		lsrs	r0, r0, #4
 1329 0280 FFF7FEFF 		bl	Motion_Adjust_R
 1330              	.LVL141:
 579:Src/mode.c    ****         default:
 1331              		.loc 1 579 0
 1332 0284 6DE7     		b	.L91
 1333              	.L110:
 584:Src/mode.c    ****     }
 585:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 586:Src/mode.c    ****     HAL_Delay(500);
 1334              		.loc 1 586 0
 1335 0286 4FF4FA70 		mov	r0, #500
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 36


 1336 028a FFF7FEFF 		bl	HAL_Delay
 1337              	.LVL142:
 587:Src/mode.c    ****     motor_flag = FALSE;
 1338              		.loc 1 587 0
 1339 028e 0024     		movs	r4, #0
 1340              	.LVL143:
 1341 0290 0F4B     		ldr	r3, .L111+24
 1342 0292 1C70     		strb	r4, [r3]
 588:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1343              		.loc 1 588 0
 1344 0294 4FF49671 		mov	r1, #300
 1345 0298 4C20     		movs	r0, #76
 1346 029a FFF7FEFF 		bl	Tim_BuzzerPwm
 1347              	.LVL144:
 589:Src/mode.c    ****     HAL_Delay(200);
 1348              		.loc 1 589 0
 1349 029e C820     		movs	r0, #200
 1350 02a0 FFF7FEFF 		bl	HAL_Delay
 1351              	.LVL145:
 590:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1352              		.loc 1 590 0
 1353 02a4 2146     		mov	r1, r4
 1354 02a6 0A20     		movs	r0, #10
 1355 02a8 FFF7FEFF 		bl	Tim_BuzzerPwm
 1356              	.LVL146:
 591:Src/mode.c    **** }
 1357              		.loc 1 591 0
 1358 02ac 0DF29C6D 		addw	sp, sp, #1692
 1359              	.LCFI14:
 1360              		.cfi_def_cfa_offset 28
 1361              		@ sp needed
 1362 02b0 BDEC028B 		vldm	sp!, {d8}
 1363              	.LCFI15:
 1364              		.cfi_restore 80
 1365              		.cfi_restore 81
 1366              		.cfi_def_cfa_offset 20
 1367              	.LVL147:
 1368 02b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1369              	.L112:
 1370 02b6 00BF     		.align	2
 1371              	.L111:
 1372 02b8 00000000 		.word	start_address
 1373 02bc 00000000 		.word	.LANCHOR1
 1374 02c0 00000000 		.word	.LANCHOR0
 1375 02c4 00004844 		.word	1145569280
 1376 02c8 00001644 		.word	1142292480
 1377 02cc 00000000 		.word	control_wall_flag
 1378 02d0 00000000 		.word	motor_flag
 1379              		.cfi_endproc
 1380              	.LFE132:
 1382              		.section	.text.Mode_FastestRun,"ax",%progbits
 1383              		.align	1
 1384              		.global	Mode_FastestRun
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1388              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 37


 1390              	Mode_FastestRun:
 1391              	.LFB133:
 592:Src/mode.c    **** 
 593:Src/mode.c    **** void Mode_FastestRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn)//GainMax=193
 594:Src/mode.c    **** {
 1392              		.loc 1 594 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 1680
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              	.LVL148:
 1397 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1398              	.LCFI16:
 1399              		.cfi_def_cfa_offset 20
 1400              		.cfi_offset 4, -20
 1401              		.cfi_offset 5, -16
 1402              		.cfi_offset 6, -12
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 2DED028B 		vpush.64	{d8}
 1406              	.LCFI17:
 1407              		.cfi_def_cfa_offset 28
 1408              		.cfi_offset 80, -28
 1409              		.cfi_offset 81, -24
 1410 0006 ADF29C6D 		subw	sp, sp, #1692
 1411              	.LCFI18:
 1412              		.cfi_def_cfa_offset 1720
 1413 000a 0446     		mov	r4, r0
 1414 000c B0EE408A 		vmov.f32	s16, s0
 1415 0010 0E46     		mov	r6, r1
 1416 0012 1746     		mov	r7, r2
 595:Src/mode.c    ****     wallData_t wallData;
 596:Src/mode.c    ****     pos_t pos;
 597:Src/mode.c    ****     uint16_t motion[255];
 598:Src/mode.c    ****     uint32_t velocity[255];
 599:Src/mode.c    ****     uint8_t tail = 0;
 1417              		.loc 1 599 0
 1418 0014 0025     		movs	r5, #0
 1419 0016 8DF80F50 		strb	r5, [sp, #15]
 1420              	.LVL149:
 600:Src/mode.c    ****     uint8_t head = 0;
 601:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 1421              		.loc 1 601 0
 1422 001a 8822     		movs	r2, #136
 1423              	.LVL150:
 1424 001c 0DF5C261 		add	r1, sp, #1552
 1425              	.LVL151:
 1426 0020 A64B     		ldr	r3, .L142
 1427 0022 1868     		ldr	r0, [r3]
 1428              	.LVL152:
 1429 0024 FFF7FEFF 		bl	Flash_Load
 1430              	.LVL153:
 602:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 1431              		.loc 1 602 0
 1432 0028 A54B     		ldr	r3, .L142+4
 1433 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 002c A54A     		ldr	r2, .L142+8
 1435 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 38


 1436 0030 0092     		str	r2, [sp]
 1437 0032 3A46     		mov	r2, r7
 1438 0034 3146     		mov	r1, r6
 1439 0036 0DF5C260 		add	r0, sp, #1552
 1440 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1441              	.LVL154:
 603:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1442              		.loc 1 603 0
 1443 003e B0EE480A 		vmov.f32	s0, s16
 1444 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1445              	.LVL155:
 604:Src/mode.c    ****     pos.dir = NORTH;
 1446              		.loc 1 604 0
 1447 0046 8DF80E56 		strb	r5, [sp, #1550]
 605:Src/mode.c    ****     pos.x = 0;
 1448              		.loc 1 605 0
 1449 004a 8DF80C56 		strb	r5, [sp, #1548]
 606:Src/mode.c    ****     pos.y = 1;
 1450              		.loc 1 606 0
 1451 004e 0123     		movs	r3, #1
 1452 0050 8DF80D36 		strb	r3, [sp, #1549]
 607:Src/mode.c    ****     motion[tail] = START;
 1453              		.loc 1 607 0
 1454 0054 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1455 0058 0DF20C42 		addw	r2, sp, #1036
 1456 005c 0521     		movs	r1, #5
 1457 005e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 608:Src/mode.c    ****     tail++;
 1458              		.loc 1 608 0
 1459 0062 0133     		adds	r3, r3, #1
 1460 0064 DBB2     		uxtb	r3, r3
 609:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1461              		.loc 1 609 0
 1462 0066 1021     		movs	r1, #16
 1463 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 610:Src/mode.c    ****     tail++;
 1464              		.loc 1 610 0
 1465 006c 0133     		adds	r3, r3, #1
 1466 006e 8DF80F30 		strb	r3, [sp, #15]
 1467              	.LVL156:
 1468 0072 1AE0     		b	.L120
 1469              	.L137:
 1470              	.LBB7:
 611:Src/mode.c    ****     head += 2;
 612:Src/mode.c    ****     while (1)
 613:Src/mode.c    ****     {
 614:Src/mode.c    ****         if (Maze_GetGoalSize() == 1)
 615:Src/mode.c    ****         {
 616:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 1471              		.loc 1 616 0
 1472 0074 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1473 0078 914B     		ldr	r3, .L142+4
 1474 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1475 007c 9A42     		cmp	r2, r3
 1476 007e 2DD0     		beq	.L136
 1477              	.L115:
 617:Src/mode.c    ****             {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 39


 618:Src/mode.c    ****                 break;
 619:Src/mode.c    ****             }
 620:Src/mode.c    ****         }
 621:Src/mode.c    ****         else
 622:Src/mode.c    ****         {
 623:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 624:Src/mode.c    ****             {
 625:Src/mode.c    ****                 break;
 626:Src/mode.c    ****             }
 627:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == gy)
 628:Src/mode.c    ****             {
 629:Src/mode.c    ****                 break;
 630:Src/mode.c    ****             }
 631:Src/mode.c    ****             if (pos.x == gx && pos.y == (gy + 1))
 632:Src/mode.c    ****             {
 633:Src/mode.c    ****                 break;
 634:Src/mode.c    ****             }
 635:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == (gy + 1))
 636:Src/mode.c    ****             {
 637:Src/mode.c    ****                 break;
 638:Src/mode.c    ****             }
 639:Src/mode.c    ****         }
 640:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1478              		.loc 1 640 0
 1479 0080 0DF5C261 		add	r1, sp, #1552
 1480 0084 0DF20C60 		addw	r0, sp, #1548
 1481 0088 FFF7FEFF 		bl	Maze_GetNextMotionEx
 1482              	.LVL157:
 641:Src/mode.c    ****         motion[tail] = buff;
 1483              		.loc 1 641 0
 1484 008c 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1485 0090 0DF20C42 		addw	r2, sp, #1036
 1486 0094 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 642:Src/mode.c    ****         tail++;
 1487              		.loc 1 642 0
 1488 0098 0133     		adds	r3, r3, #1
 1489 009a 8DF80F30 		strb	r3, [sp, #15]
 643:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1490              		.loc 1 643 0
 1491 009e 0DF20C61 		addw	r1, sp, #1548
 1492 00a2 00F00F00 		and	r0, r0, #15
 1493              	.LVL158:
 1494 00a6 FFF7FEFF 		bl	Maze_UpdatePosition
 1495              	.LVL159:
 1496              	.L120:
 614:Src/mode.c    ****         {
 1497              		.loc 1 614 0
 1498 00aa FFF7FEFF 		bl	Maze_GetGoalSize
 1499              	.LVL160:
 1500 00ae 0128     		cmp	r0, #1
 1501 00b0 E0D0     		beq	.L137
 623:Src/mode.c    ****             {
 1502              		.loc 1 623 0
 1503 00b2 9DF80C36 		ldrb	r3, [sp, #1548]	@ zero_extendqisi2
 1504 00b6 824A     		ldr	r2, .L142+4
 1505 00b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1506 00ba 9342     		cmp	r3, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 40


 1507 00bc 15D0     		beq	.L138
 1508              	.L117:
 627:Src/mode.c    ****             {
 1509              		.loc 1 627 0
 1510 00be 511C     		adds	r1, r2, #1
 1511 00c0 8B42     		cmp	r3, r1
 1512 00c2 34D0     		beq	.L139
 1513              	.L118:
 631:Src/mode.c    ****             {
 1514              		.loc 1 631 0
 1515 00c4 9342     		cmp	r3, r2
 1516 00c6 39D0     		beq	.L140
 1517              	.L119:
 635:Src/mode.c    ****             {
 1518              		.loc 1 635 0
 1519 00c8 8B42     		cmp	r3, r1
 1520 00ca D9D1     		bne	.L115
 635:Src/mode.c    ****             {
 1521              		.loc 1 635 0 is_stmt 0 discriminator 1
 1522 00cc 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1523 00d0 7C4B     		ldr	r3, .L142+8
 1524 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1525 00d4 0133     		adds	r3, r3, #1
 1526 00d6 9A42     		cmp	r2, r3
 1527 00d8 D2D1     		bne	.L115
 1528              	.LBE7:
 1529 00da 0CE0     		b	.L116
 1530              	.L136:
 1531              	.LBB8:
 616:Src/mode.c    ****             {
 1532              		.loc 1 616 0 is_stmt 1 discriminator 1
 1533 00dc 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1534 00e0 784B     		ldr	r3, .L142+8
 1535 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 00e4 9A42     		cmp	r2, r3
 1537 00e6 CBD1     		bne	.L115
 1538 00e8 05E0     		b	.L116
 1539              	.L138:
 623:Src/mode.c    ****             {
 1540              		.loc 1 623 0 discriminator 1
 1541 00ea 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1542 00ee 7549     		ldr	r1, .L142+8
 1543 00f0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1544 00f2 8842     		cmp	r0, r1
 1545 00f4 E3D1     		bne	.L117
 1546              	.L116:
 1547              	.LBE8:
 644:Src/mode.c    ****     }
 645:Src/mode.c    ****     motion[tail] = GOAL;
 1548              		.loc 1 645 0
 1549 00f6 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1550 00fa 0DF20C41 		addw	r1, sp, #1036
 1551 00fe 0622     		movs	r2, #6
 1552 0100 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 646:Src/mode.c    ****     tail++;
 1553              		.loc 1 646 0
 1554 0104 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 41


 1555 0106 8DF80F30 		strb	r3, [sp, #15]
 1556              	.LVL161:
 647:Src/mode.c    ****     head = 0;
 648:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail, VELO_EST, VELO_EST);
 1557              		.loc 1 648 0
 1558 010a 9FED6F0A 		vldr.32	s0, .L142+12
 1559 010e F0EE400A 		vmov.f32	s1, s0
 1560 0112 0DF10F03 		add	r3, sp, #15
 1561 0116 04AA     		add	r2, sp, #16
 1562 0118 2046     		mov	r0, r4
 1563 011a FFF7FEFF 		bl	Maze_Compress
 1564              	.LVL162:
 649:Src/mode.c    **** 
 650:Src/mode.c    ****     control_wall_flag = 4;
 1565              		.loc 1 650 0
 1566 011e 6B4B     		ldr	r3, .L142+16
 1567 0120 0422     		movs	r2, #4
 1568 0122 1A70     		strb	r2, [r3]
 651:Src/mode.c    ****     SetRunMode(1);
 1569              		.loc 1 651 0
 1570 0124 0120     		movs	r0, #1
 1571 0126 FFF7FEFF 		bl	SetRunMode
 1572              	.LVL163:
 647:Src/mode.c    ****     head = 0;
 1573              		.loc 1 647 0
 1574 012a 0024     		movs	r4, #0
 652:Src/mode.c    ****     while (head != tail)
 1575              		.loc 1 652 0
 1576 012c 1BE0     		b	.L121
 1577              	.LVL164:
 1578              	.L139:
 1579              	.LBB9:
 627:Src/mode.c    ****             {
 1580              		.loc 1 627 0 discriminator 1
 1581 012e 9DF80D56 		ldrb	r5, [sp, #1549]	@ zero_extendqisi2
 1582 0132 6448     		ldr	r0, .L142+8
 1583 0134 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1584 0136 8542     		cmp	r5, r0
 1585 0138 C4D1     		bne	.L118
 1586              	.LBE9:
 1587 013a DCE7     		b	.L116
 1588              	.L140:
 1589              	.LBB10:
 631:Src/mode.c    ****             {
 1590              		.loc 1 631 0 discriminator 1
 1591 013c 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1592 0140 604A     		ldr	r2, .L142+8
 1593 0142 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1594 0144 0132     		adds	r2, r2, #1
 1595 0146 9042     		cmp	r0, r2
 1596 0148 BED1     		bne	.L119
 1597              	.LBE10:
 1598 014a D4E7     		b	.L116
 1599              	.LVL165:
 1600              	.L127:
 653:Src/mode.c    ****     {
 654:Src/mode.c    ****         switch (motion[head] & 0xf)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 42


 655:Src/mode.c    ****         {
 656:Src/mode.c    ****         case START:
 657:Src/mode.c    ****             Motion_FastestStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1601              		.loc 1 657 0
 1602 014c 04AB     		add	r3, sp, #16
 1603 014e 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1604 0152 00EE103A 		vmov	s0, r3	@ int
 1605 0156 B8EE400A 		vcvt.f32.u32	s0, s0
 1606 015a C0F30710 		ubfx	r0, r0, #4, #8
 1607 015e FFF7FEFF 		bl	Motion_FastestStart
 1608              	.LVL166:
 1609              	.L122:
 658:Src/mode.c    ****             break;
 659:Src/mode.c    ****         case LEFT:
 660:Src/mode.c    ****             Motion_FastestLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 661:Src/mode.c    ****             break;
 662:Src/mode.c    ****         case FRONT:
 663:Src/mode.c    ****             Motion_FastestStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(veloci
 664:Src/mode.c    ****             break;
 665:Src/mode.c    ****         case DIAGONAL_L:
 666:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 667:Src/mode.c    ****             break;
 668:Src/mode.c    ****         case DIAGONAL_R:
 669:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
 670:Src/mode.c    ****             break;
 671:Src/mode.c    ****         case RIGHT:
 672:Src/mode.c    ****             Motion_FastestRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 673:Src/mode.c    ****             break;
 674:Src/mode.c    ****         case GOAL:
 675:Src/mode.c    ****             Motion_FastestGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 676:Src/mode.c    ****             break;
 677:Src/mode.c    ****         case ADJUST:
 678:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 679:Src/mode.c    ****             break;
 680:Src/mode.c    ****         case ADJUST_L:
 681:Src/mode.c    ****             Motion_FastestAdjust_L(motion[head] >> 4, (float)(velocity[head] >> 16));
 682:Src/mode.c    ****             break;
 683:Src/mode.c    ****         case ADJUST_R:
 684:Src/mode.c    ****             Motion_FastestAdjust_R(motion[head] >> 4, (float)(velocity[head] >> 16));
 685:Src/mode.c    ****             break;
 686:Src/mode.c    ****         default:
 687:Src/mode.c    ****             break;
 688:Src/mode.c    ****         }
 689:Src/mode.c    ****         head++;
 1610              		.loc 1 689 0
 1611 0162 0134     		adds	r4, r4, #1
 1612              	.LVL167:
 1613 0164 E4B2     		uxtb	r4, r4
 1614              	.LVL168:
 1615              	.L121:
 652:Src/mode.c    ****     {
 1616              		.loc 1 652 0
 1617 0166 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1618 016a A342     		cmp	r3, r4
 1619 016c 00F08B80 		beq	.L141
 654:Src/mode.c    ****         {
 1620              		.loc 1 654 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 43


 1621 0170 0DF20C43 		addw	r3, sp, #1036
 1622 0174 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1623 0178 00F00F03 		and	r3, r0, #15
 1624 017c 0C2B     		cmp	r3, #12
 1625 017e F0D8     		bhi	.L122
 1626 0180 01A2     		adr	r2, .L124
 1627 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1628 0186 00BF     		.p2align 2
 1629              	.L124:
 1630 0188 D5010000 		.word	.L123+1
 1631 018c BD010000 		.word	.L125+1
 1632 0190 0D020000 		.word	.L126+1
 1633 0194 63010000 		.word	.L122+1
 1634 0198 63010000 		.word	.L122+1
 1635 019c 4D010000 		.word	.L127+1
 1636 01a0 25020000 		.word	.L128+1
 1637 01a4 63010000 		.word	.L122+1
 1638 01a8 F9010000 		.word	.L129+1
 1639 01ac 03020000 		.word	.L130+1
 1640 01b0 3F020000 		.word	.L131+1
 1641 01b4 57020000 		.word	.L132+1
 1642 01b8 6F020000 		.word	.L133+1
 1643              		.p2align 1
 1644              	.L125:
 660:Src/mode.c    ****             break;
 1645              		.loc 1 660 0
 1646 01bc 04AB     		add	r3, sp, #16
 1647 01be 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1648 01c2 00EE103A 		vmov	s0, r3	@ int
 1649 01c6 B8EE400A 		vcvt.f32.u32	s0, s0
 1650 01ca C0F30710 		ubfx	r0, r0, #4, #8
 1651 01ce FFF7FEFF 		bl	Motion_FastestLeftTurn
 1652              	.LVL169:
 661:Src/mode.c    ****         case FRONT:
 1653              		.loc 1 661 0
 1654 01d2 C6E7     		b	.L122
 1655              	.L123:
 663:Src/mode.c    ****             break;
 1656              		.loc 1 663 0
 1657 01d4 04AB     		add	r3, sp, #16
 1658 01d6 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1659 01da 1A0C     		lsrs	r2, r3, #16
 1660 01dc 00EE102A 		vmov	s0, r2	@ int
 1661 01e0 9BB2     		uxth	r3, r3
 1662 01e2 00EE903A 		vmov	s1, r3	@ int
 1663 01e6 F8EE600A 		vcvt.f32.u32	s1, s1
 1664 01ea B8EE400A 		vcvt.f32.u32	s0, s0
 1665 01ee C0F30710 		ubfx	r0, r0, #4, #8
 1666 01f2 FFF7FEFF 		bl	Motion_FastestStraight
 1667              	.LVL170:
 664:Src/mode.c    ****         case DIAGONAL_L:
 1668              		.loc 1 664 0
 1669 01f6 B4E7     		b	.L122
 1670              	.L129:
 666:Src/mode.c    ****             break;
 1671              		.loc 1 666 0
 1672 01f8 C0F30710 		ubfx	r0, r0, #4, #8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 44


 1673 01fc FFF7FEFF 		bl	Motion_DiagonalLeft
 1674              	.LVL171:
 667:Src/mode.c    ****         case DIAGONAL_R:
 1675              		.loc 1 667 0
 1676 0200 AFE7     		b	.L122
 1677              	.L130:
 669:Src/mode.c    ****             break;
 1678              		.loc 1 669 0
 1679 0202 C0F30710 		ubfx	r0, r0, #4, #8
 1680 0206 FFF7FEFF 		bl	Motion_DiagonalRight
 1681              	.LVL172:
 670:Src/mode.c    ****         case RIGHT:
 1682              		.loc 1 670 0
 1683 020a AAE7     		b	.L122
 1684              	.L126:
 672:Src/mode.c    ****             break;
 1685              		.loc 1 672 0
 1686 020c 04AB     		add	r3, sp, #16
 1687 020e 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1688 0212 00EE103A 		vmov	s0, r3	@ int
 1689 0216 B8EE400A 		vcvt.f32.u32	s0, s0
 1690 021a C0F30710 		ubfx	r0, r0, #4, #8
 1691 021e FFF7FEFF 		bl	Motion_FastestRightTurn
 1692              	.LVL173:
 673:Src/mode.c    ****         case GOAL:
 1693              		.loc 1 673 0
 1694 0222 9EE7     		b	.L122
 1695              	.L128:
 675:Src/mode.c    ****             break;
 1696              		.loc 1 675 0
 1697 0224 04AB     		add	r3, sp, #16
 1698 0226 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1699 022a 1B0C     		lsrs	r3, r3, #16
 1700 022c 00EE103A 		vmov	s0, r3	@ int
 1701 0230 B8EE400A 		vcvt.f32.u32	s0, s0
 1702 0234 C0F30710 		ubfx	r0, r0, #4, #8
 1703 0238 FFF7FEFF 		bl	Motion_FastestGoal
 1704              	.LVL174:
 676:Src/mode.c    ****         case ADJUST:
 1705              		.loc 1 676 0
 1706 023c 91E7     		b	.L122
 1707              	.L131:
 678:Src/mode.c    ****             break;
 1708              		.loc 1 678 0
 1709 023e 04AB     		add	r3, sp, #16
 1710 0240 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1711 0244 1B0C     		lsrs	r3, r3, #16
 1712 0246 00EE103A 		vmov	s0, r3	@ int
 1713 024a B8EE400A 		vcvt.f32.u32	s0, s0
 1714 024e 0009     		lsrs	r0, r0, #4
 1715 0250 FFF7FEFF 		bl	Motion_Adjust
 1716              	.LVL175:
 679:Src/mode.c    ****         case ADJUST_L:
 1717              		.loc 1 679 0
 1718 0254 85E7     		b	.L122
 1719              	.L132:
 681:Src/mode.c    ****             break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 45


 1720              		.loc 1 681 0
 1721 0256 04AB     		add	r3, sp, #16
 1722 0258 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1723 025c 1B0C     		lsrs	r3, r3, #16
 1724 025e 00EE103A 		vmov	s0, r3	@ int
 1725 0262 B8EE400A 		vcvt.f32.u32	s0, s0
 1726 0266 0009     		lsrs	r0, r0, #4
 1727 0268 FFF7FEFF 		bl	Motion_FastestAdjust_L
 1728              	.LVL176:
 682:Src/mode.c    ****         case ADJUST_R:
 1729              		.loc 1 682 0
 1730 026c 79E7     		b	.L122
 1731              	.L133:
 684:Src/mode.c    ****             break;
 1732              		.loc 1 684 0
 1733 026e 04AB     		add	r3, sp, #16
 1734 0270 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1735 0274 1B0C     		lsrs	r3, r3, #16
 1736 0276 00EE103A 		vmov	s0, r3	@ int
 1737 027a B8EE400A 		vcvt.f32.u32	s0, s0
 1738 027e 0009     		lsrs	r0, r0, #4
 1739 0280 FFF7FEFF 		bl	Motion_FastestAdjust_R
 1740              	.LVL177:
 685:Src/mode.c    ****         default:
 1741              		.loc 1 685 0
 1742 0284 6DE7     		b	.L122
 1743              	.L141:
 690:Src/mode.c    ****     }
 691:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 692:Src/mode.c    ****     Tim_MotorBrake();
 1744              		.loc 1 692 0
 1745 0286 FFF7FEFF 		bl	Tim_MotorBrake
 1746              	.LVL178:
 693:Src/mode.c    ****     HAL_Delay(500);
 1747              		.loc 1 693 0
 1748 028a 4FF4FA70 		mov	r0, #500
 1749 028e FFF7FEFF 		bl	HAL_Delay
 1750              	.LVL179:
 694:Src/mode.c    ****     motor_flag = FALSE;
 1751              		.loc 1 694 0
 1752 0292 0024     		movs	r4, #0
 1753              	.LVL180:
 1754 0294 0E4B     		ldr	r3, .L142+20
 1755 0296 1C70     		strb	r4, [r3]
 695:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1756              		.loc 1 695 0
 1757 0298 4FF49671 		mov	r1, #300
 1758 029c 4C20     		movs	r0, #76
 1759 029e FFF7FEFF 		bl	Tim_BuzzerPwm
 1760              	.LVL181:
 696:Src/mode.c    ****     HAL_Delay(200);
 1761              		.loc 1 696 0
 1762 02a2 C820     		movs	r0, #200
 1763 02a4 FFF7FEFF 		bl	HAL_Delay
 1764              	.LVL182:
 697:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1765              		.loc 1 697 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 46


 1766 02a8 2146     		mov	r1, r4
 1767 02aa 0A20     		movs	r0, #10
 1768 02ac FFF7FEFF 		bl	Tim_BuzzerPwm
 1769              	.LVL183:
 698:Src/mode.c    **** }
 1770              		.loc 1 698 0
 1771 02b0 0DF29C6D 		addw	sp, sp, #1692
 1772              	.LCFI19:
 1773              		.cfi_def_cfa_offset 28
 1774              		@ sp needed
 1775 02b4 BDEC028B 		vldm	sp!, {d8}
 1776              	.LCFI20:
 1777              		.cfi_restore 80
 1778              		.cfi_restore 81
 1779              		.cfi_def_cfa_offset 20
 1780              	.LVL184:
 1781 02b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1782              	.L143:
 1783 02ba 00BF     		.align	2
 1784              	.L142:
 1785 02bc 00000000 		.word	start_address
 1786 02c0 00000000 		.word	.LANCHOR1
 1787 02c4 00000000 		.word	.LANCHOR0
 1788 02c8 00009644 		.word	1150681088
 1789 02cc 00000000 		.word	control_wall_flag
 1790 02d0 00000000 		.word	motor_flag
 1791              		.cfi_endproc
 1792              	.LFE133:
 1794              		.section	.text.CheckStraight,"ax",%progbits
 1795              		.align	1
 1796              		.global	CheckStraight
 1797              		.syntax unified
 1798              		.thumb
 1799              		.thumb_func
 1800              		.fpu fpv4-sp-d16
 1802              	CheckStraight:
 1803              	.LFB134:
 699:Src/mode.c    **** 
 700:Src/mode.c    **** void CheckStraight(uint8_t block)
 701:Src/mode.c    **** {
 1804              		.loc 1 701 0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
 1808              	.LVL185:
 1809 0000 38B5     		push	{r3, r4, r5, lr}
 1810              	.LCFI21:
 1811              		.cfi_def_cfa_offset 16
 1812              		.cfi_offset 3, -16
 1813              		.cfi_offset 4, -12
 1814              		.cfi_offset 5, -8
 1815              		.cfi_offset 14, -4
 1816 0002 0546     		mov	r5, r0
 702:Src/mode.c    ****     SetRunMode(0);
 1817              		.loc 1 702 0
 1818 0004 0020     		movs	r0, #0
 1819              	.LVL186:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 47


 1820 0006 FFF7FEFF 		bl	SetRunMode
 1821              	.LVL187:
 703:Src/mode.c    ****     enc.distance = 0;
 1822              		.loc 1 703 0
 1823 000a 154B     		ldr	r3, .L148
 1824 000c 0022     		movs	r2, #0
 1825 000e 1A60     		str	r2, [r3]	@ float
 704:Src/mode.c    ****     Motion_Start();
 1826              		.loc 1 704 0
 1827 0010 FFF7FEFF 		bl	Motion_Start
 1828              	.LVL188:
 1829              	.LBB11:
 705:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1830              		.loc 1 705 0
 1831 0014 0024     		movs	r4, #0
 1832 0016 04E0     		b	.L145
 1833              	.LVL189:
 1834              	.L146:
 706:Src/mode.c    ****     {
 707:Src/mode.c    ****         Motion_Straight(0);
 1835              		.loc 1 707 0 discriminator 3
 1836 0018 0020     		movs	r0, #0
 1837 001a FFF7FEFF 		bl	Motion_Straight
 1838              	.LVL190:
 705:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1839              		.loc 1 705 0 discriminator 3
 1840 001e 0134     		adds	r4, r4, #1
 1841              	.LVL191:
 1842 0020 E4B2     		uxtb	r4, r4
 1843              	.LVL192:
 1844              	.L145:
 705:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1845              		.loc 1 705 0 is_stmt 0 discriminator 1
 1846 0022 AC42     		cmp	r4, r5
 1847 0024 F8D3     		bcc	.L146
 1848              	.LBE11:
 708:Src/mode.c    ****     }
 709:Src/mode.c    ****     Motion_End();
 1849              		.loc 1 709 0 is_stmt 1
 1850 0026 FFF7FEFF 		bl	Motion_End
 1851              	.LVL193:
 710:Src/mode.c    ****     motor_flag = FALSE;
 1852              		.loc 1 710 0
 1853 002a 0024     		movs	r4, #0
 1854              	.LVL194:
 1855 002c 0D4B     		ldr	r3, .L148+4
 1856 002e 1C70     		strb	r4, [r3]
 711:Src/mode.c    ****     HAL_Delay(500);
 1857              		.loc 1 711 0
 1858 0030 4FF4FA70 		mov	r0, #500
 1859 0034 FFF7FEFF 		bl	HAL_Delay
 1860              	.LVL195:
 712:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1861              		.loc 1 712 0
 1862 0038 49F64242 		movw	r2, #40002
 1863 003c 0A49     		ldr	r1, .L148+8
 1864 003e 0B4B     		ldr	r3, .L148+12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 48


 1865 0040 1868     		ldr	r0, [r3]
 1866 0042 FFF7FEFF 		bl	Flash_Write
 1867              	.LVL196:
 713:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1868              		.loc 1 713 0
 1869 0046 4FF49671 		mov	r1, #300
 1870 004a 4C20     		movs	r0, #76
 1871 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 1872              	.LVL197:
 714:Src/mode.c    ****     HAL_Delay(200);
 1873              		.loc 1 714 0
 1874 0050 C820     		movs	r0, #200
 1875 0052 FFF7FEFF 		bl	HAL_Delay
 1876              	.LVL198:
 715:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1877              		.loc 1 715 0
 1878 0056 2146     		mov	r1, r4
 1879 0058 0A20     		movs	r0, #10
 1880 005a FFF7FEFF 		bl	Tim_BuzzerPwm
 1881              	.LVL199:
 716:Src/mode.c    **** }
 1882              		.loc 1 716 0
 1883 005e 38BD     		pop	{r3, r4, r5, pc}
 1884              	.L149:
 1885              		.align	2
 1886              	.L148:
 1887 0060 00000000 		.word	enc
 1888 0064 00000000 		.word	motor_flag
 1889 0068 00000000 		.word	loger
 1890 006c 00000000 		.word	start_address
 1891              		.cfi_endproc
 1892              	.LFE134:
 1894              		.section	.text.CheckFastStraight,"ax",%progbits
 1895              		.align	1
 1896              		.global	CheckFastStraight
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	CheckFastStraight:
 1903              	.LFB135:
 717:Src/mode.c    **** 
 718:Src/mode.c    **** void CheckFastStraight(uint8_t block)
 719:Src/mode.c    **** {
 1904              		.loc 1 719 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              	.LVL200:
 1909 0000 38B5     		push	{r3, r4, r5, lr}
 1910              	.LCFI22:
 1911              		.cfi_def_cfa_offset 16
 1912              		.cfi_offset 3, -16
 1913              		.cfi_offset 4, -12
 1914              		.cfi_offset 5, -8
 1915              		.cfi_offset 14, -4
 1916 0002 2DED028B 		vpush.64	{d8}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 49


 1917              	.LCFI23:
 1918              		.cfi_def_cfa_offset 24
 1919              		.cfi_offset 80, -24
 1920              		.cfi_offset 81, -20
 1921 0006 0546     		mov	r5, r0
 720:Src/mode.c    ****     SetRunMode(0);
 1922              		.loc 1 720 0
 1923 0008 0020     		movs	r0, #0
 1924              	.LVL201:
 1925 000a FFF7FEFF 		bl	SetRunMode
 1926              	.LVL202:
 721:Src/mode.c    ****     enc.distance = 0;
 1927              		.loc 1 721 0
 1928 000e 204B     		ldr	r3, .L154
 1929 0010 0022     		movs	r2, #0
 1930 0012 1A60     		str	r2, [r3]	@ float
 722:Src/mode.c    ****     Motion_FastStart(1, 800.0f);
 1931              		.loc 1 722 0
 1932 0014 9FED1F0A 		vldr.32	s0, .L154+4
 1933 0018 0120     		movs	r0, #1
 1934 001a FFF7FEFF 		bl	Motion_FastStart
 1935              	.LVL203:
 723:Src/mode.c    ****     block--;
 1936              		.loc 1 723 0
 1937 001e 013D     		subs	r5, r5, #1
 1938 0020 EDB2     		uxtb	r5, r5
 1939              	.LVL204:
 1940              	.LBB12:
 724:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1941              		.loc 1 724 0
 1942 0022 0024     		movs	r4, #0
 1943 0024 08E0     		b	.L151
 1944              	.LVL205:
 1945              	.L152:
 725:Src/mode.c    ****     {
 726:Src/mode.c    ****         Motion_FastStraight(2, 800.0f, 800.0f);
 1946              		.loc 1 726 0 discriminator 3
 1947 0026 9FED1B0A 		vldr.32	s0, .L154+4
 1948 002a F0EE400A 		vmov.f32	s1, s0
 1949 002e 0220     		movs	r0, #2
 1950 0030 FFF7FEFF 		bl	Motion_FastStraight
 1951              	.LVL206:
 724:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1952              		.loc 1 724 0 discriminator 3
 1953 0034 0134     		adds	r4, r4, #1
 1954              	.LVL207:
 1955 0036 E4B2     		uxtb	r4, r4
 1956              	.LVL208:
 1957              	.L151:
 724:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1958              		.loc 1 724 0 is_stmt 0 discriminator 1
 1959 0038 AC42     		cmp	r4, r5
 1960 003a F4D3     		bcc	.L152
 1961              	.LBE12:
 727:Src/mode.c    ****     }
 728:Src/mode.c    ****     Motion_Adjust(1, 800.0f);
 1962              		.loc 1 728 0 is_stmt 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 50


 1963 003c 9FED158A 		vldr.32	s16, .L154+4
 1964 0040 B0EE480A 		vmov.f32	s0, s16
 1965 0044 0120     		movs	r0, #1
 1966 0046 FFF7FEFF 		bl	Motion_Adjust
 1967              	.LVL209:
 729:Src/mode.c    ****     Motion_FastGoal(1, 800.0f);
 1968              		.loc 1 729 0
 1969 004a B0EE480A 		vmov.f32	s0, s16
 1970 004e 0120     		movs	r0, #1
 1971 0050 FFF7FEFF 		bl	Motion_FastGoal
 1972              	.LVL210:
 730:Src/mode.c    ****     motor_flag = FALSE;
 1973              		.loc 1 730 0
 1974 0054 0024     		movs	r4, #0
 1975              	.LVL211:
 1976 0056 104B     		ldr	r3, .L154+8
 1977 0058 1C70     		strb	r4, [r3]
 731:Src/mode.c    ****     HAL_Delay(500);
 1978              		.loc 1 731 0
 1979 005a 4FF4FA70 		mov	r0, #500
 1980 005e FFF7FEFF 		bl	HAL_Delay
 1981              	.LVL212:
 732:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1982              		.loc 1 732 0
 1983 0062 49F64242 		movw	r2, #40002
 1984 0066 0D49     		ldr	r1, .L154+12
 1985 0068 0D4B     		ldr	r3, .L154+16
 1986 006a 1868     		ldr	r0, [r3]
 1987 006c FFF7FEFF 		bl	Flash_Write
 1988              	.LVL213:
 733:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1989              		.loc 1 733 0
 1990 0070 4FF49671 		mov	r1, #300
 1991 0074 4C20     		movs	r0, #76
 1992 0076 FFF7FEFF 		bl	Tim_BuzzerPwm
 1993              	.LVL214:
 734:Src/mode.c    ****     HAL_Delay(200);
 1994              		.loc 1 734 0
 1995 007a C820     		movs	r0, #200
 1996 007c FFF7FEFF 		bl	HAL_Delay
 1997              	.LVL215:
 735:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1998              		.loc 1 735 0
 1999 0080 2146     		mov	r1, r4
 2000 0082 0A20     		movs	r0, #10
 2001 0084 FFF7FEFF 		bl	Tim_BuzzerPwm
 2002              	.LVL216:
 736:Src/mode.c    **** }
 2003              		.loc 1 736 0
 2004 0088 BDEC028B 		vldm	sp!, {d8}
 2005              	.LCFI24:
 2006              		.cfi_restore 80
 2007              		.cfi_restore 81
 2008              		.cfi_def_cfa_offset 16
 2009 008c 38BD     		pop	{r3, r4, r5, pc}
 2010              	.LVL217:
 2011              	.L155:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 51


 2012 008e 00BF     		.align	2
 2013              	.L154:
 2014 0090 00000000 		.word	enc
 2015 0094 00004844 		.word	1145569280
 2016 0098 00000000 		.word	motor_flag
 2017 009c 00000000 		.word	loger
 2018 00a0 00000000 		.word	start_address
 2019              		.cfi_endproc
 2020              	.LFE135:
 2022              		.section	.text.CheckFastestStraight,"ax",%progbits
 2023              		.align	1
 2024              		.global	CheckFastestStraight
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2028              		.fpu fpv4-sp-d16
 2030              	CheckFastestStraight:
 2031              	.LFB136:
 737:Src/mode.c    **** 
 738:Src/mode.c    **** void CheckFastestStraight(uint8_t block)
 739:Src/mode.c    **** {
 2032              		.loc 1 739 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
 2036              	.LVL218:
 2037 0000 10B5     		push	{r4, lr}
 2038              	.LCFI25:
 2039              		.cfi_def_cfa_offset 8
 2040              		.cfi_offset 4, -8
 2041              		.cfi_offset 14, -4
 2042 0002 2DED028B 		vpush.64	{d8}
 2043              	.LCFI26:
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 80, -16
 2046              		.cfi_offset 81, -12
 2047 0006 0446     		mov	r4, r0
 740:Src/mode.c    ****     SetRunMode(1);
 2048              		.loc 1 740 0
 2049 0008 0120     		movs	r0, #1
 2050              	.LVL219:
 2051 000a FFF7FEFF 		bl	SetRunMode
 2052              	.LVL220:
 741:Src/mode.c    ****     enc.distance = 0;
 2053              		.loc 1 741 0
 2054 000e 194B     		ldr	r3, .L158
 2055 0010 0022     		movs	r2, #0
 2056 0012 1A60     		str	r2, [r3]	@ float
 742:Src/mode.c    ****     Motion_FastestStart(2 * (block - 1) + 1, VELO_EST);
 2057              		.loc 1 742 0
 2058 0014 9FED188A 		vldr.32	s16, .L158+4
 2059 0018 04F17F00 		add	r0, r4, #127
 2060 001c 4000     		lsls	r0, r0, #1
 2061 001e 0130     		adds	r0, r0, #1
 2062 0020 B0EE480A 		vmov.f32	s0, s16
 2063 0024 C0B2     		uxtb	r0, r0
 2064 0026 FFF7FEFF 		bl	Motion_FastestStart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 52


 2065              	.LVL221:
 743:Src/mode.c    ****     //Motion_FastestAdjust(1, VELO_EST);
 744:Src/mode.c    ****     Motion_FastestGoal(1, VELO_EST);
 2066              		.loc 1 744 0
 2067 002a B0EE480A 		vmov.f32	s0, s16
 2068 002e 0120     		movs	r0, #1
 2069 0030 FFF7FEFF 		bl	Motion_FastestGoal
 2070              	.LVL222:
 745:Src/mode.c    ****     motor_flag = FALSE;
 2071              		.loc 1 745 0
 2072 0034 0024     		movs	r4, #0
 2073 0036 114B     		ldr	r3, .L158+8
 2074 0038 1C70     		strb	r4, [r3]
 746:Src/mode.c    ****     Tim_FanPwm(0);
 2075              		.loc 1 746 0
 2076 003a 2046     		mov	r0, r4
 2077 003c FFF7FEFF 		bl	Tim_FanPwm
 2078              	.LVL223:
 747:Src/mode.c    ****     HAL_Delay(500);
 2079              		.loc 1 747 0
 2080 0040 4FF4FA70 		mov	r0, #500
 2081 0044 FFF7FEFF 		bl	HAL_Delay
 2082              	.LVL224:
 748:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2083              		.loc 1 748 0
 2084 0048 49F64242 		movw	r2, #40002
 2085 004c 0C49     		ldr	r1, .L158+12
 2086 004e 0D4B     		ldr	r3, .L158+16
 2087 0050 1868     		ldr	r0, [r3]
 2088 0052 FFF7FEFF 		bl	Flash_Write
 2089              	.LVL225:
 749:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2090              		.loc 1 749 0
 2091 0056 4FF49671 		mov	r1, #300
 2092 005a 4C20     		movs	r0, #76
 2093 005c FFF7FEFF 		bl	Tim_BuzzerPwm
 2094              	.LVL226:
 750:Src/mode.c    ****     HAL_Delay(200);
 2095              		.loc 1 750 0
 2096 0060 C820     		movs	r0, #200
 2097 0062 FFF7FEFF 		bl	HAL_Delay
 2098              	.LVL227:
 751:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2099              		.loc 1 751 0
 2100 0066 2146     		mov	r1, r4
 2101 0068 0A20     		movs	r0, #10
 2102 006a FFF7FEFF 		bl	Tim_BuzzerPwm
 2103              	.LVL228:
 752:Src/mode.c    **** }
 2104              		.loc 1 752 0
 2105 006e BDEC028B 		vldm	sp!, {d8}
 2106              	.LCFI27:
 2107              		.cfi_restore 80
 2108              		.cfi_restore 81
 2109              		.cfi_def_cfa_offset 8
 2110 0072 10BD     		pop	{r4, pc}
 2111              	.L159:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 53


 2112              		.align	2
 2113              	.L158:
 2114 0074 00000000 		.word	enc
 2115 0078 00009644 		.word	1150681088
 2116 007c 00000000 		.word	motor_flag
 2117 0080 00000000 		.word	loger
 2118 0084 00000000 		.word	start_address
 2119              		.cfi_endproc
 2120              	.LFE136:
 2122              		.section	.text.CheckDiagonal,"ax",%progbits
 2123              		.align	1
 2124              		.global	CheckDiagonal
 2125              		.syntax unified
 2126              		.thumb
 2127              		.thumb_func
 2128              		.fpu fpv4-sp-d16
 2130              	CheckDiagonal:
 2131              	.LFB137:
 753:Src/mode.c    **** 
 754:Src/mode.c    **** void CheckDiagonal(uint8_t block, int8_t dir)
 755:Src/mode.c    **** {
 2132              		.loc 1 755 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              	.LVL229:
 2137 0000 38B5     		push	{r3, r4, r5, lr}
 2138              	.LCFI28:
 2139              		.cfi_def_cfa_offset 16
 2140              		.cfi_offset 3, -16
 2141              		.cfi_offset 4, -12
 2142              		.cfi_offset 5, -8
 2143              		.cfi_offset 14, -4
 2144 0002 0446     		mov	r4, r0
 2145 0004 0D46     		mov	r5, r1
 756:Src/mode.c    ****     SetRunMode(0);
 2146              		.loc 1 756 0
 2147 0006 0020     		movs	r0, #0
 2148              	.LVL230:
 2149 0008 FFF7FEFF 		bl	SetRunMode
 2150              	.LVL231:
 757:Src/mode.c    ****     enc.distance = 0;
 2151              		.loc 1 757 0
 2152 000c 154B     		ldr	r3, .L165
 2153 000e 0022     		movs	r2, #0
 2154 0010 1A60     		str	r2, [r3]	@ float
 758:Src/mode.c    ****     Motion_DiagonalStart();
 2155              		.loc 1 758 0
 2156 0012 FFF7FEFF 		bl	Motion_DiagonalStart
 2157              	.LVL232:
 759:Src/mode.c    ****     if (dir == 1)
 2158              		.loc 1 759 0
 2159 0016 012D     		cmp	r5, #1
 2160 0018 1FD0     		beq	.L164
 760:Src/mode.c    ****     {
 761:Src/mode.c    ****         //Motion_DiagonalLeft(block);
 762:Src/mode.c    ****         Motion_Diagonal(block);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 54


 763:Src/mode.c    ****     }
 764:Src/mode.c    ****     else
 765:Src/mode.c    ****     {
 766:Src/mode.c    ****         Motion_DiagonalRight(block);
 2161              		.loc 1 766 0
 2162 001a 2046     		mov	r0, r4
 2163 001c FFF7FEFF 		bl	Motion_DiagonalRight
 2164              	.LVL233:
 2165              	.L162:
 767:Src/mode.c    ****     }
 768:Src/mode.c    ****     Motion_DiagonalStop();
 2166              		.loc 1 768 0
 2167 0020 FFF7FEFF 		bl	Motion_DiagonalStop
 2168              	.LVL234:
 769:Src/mode.c    ****     motor_flag = FALSE;
 2169              		.loc 1 769 0
 2170 0024 0024     		movs	r4, #0
 2171 0026 104B     		ldr	r3, .L165+4
 2172 0028 1C70     		strb	r4, [r3]
 770:Src/mode.c    ****     HAL_Delay(500);
 2173              		.loc 1 770 0
 2174 002a 4FF4FA70 		mov	r0, #500
 2175 002e FFF7FEFF 		bl	HAL_Delay
 2176              	.LVL235:
 771:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2177              		.loc 1 771 0
 2178 0032 49F64242 		movw	r2, #40002
 2179 0036 0D49     		ldr	r1, .L165+8
 2180 0038 0D4B     		ldr	r3, .L165+12
 2181 003a 1868     		ldr	r0, [r3]
 2182 003c FFF7FEFF 		bl	Flash_Write
 2183              	.LVL236:
 772:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2184              		.loc 1 772 0
 2185 0040 4FF49671 		mov	r1, #300
 2186 0044 4C20     		movs	r0, #76
 2187 0046 FFF7FEFF 		bl	Tim_BuzzerPwm
 2188              	.LVL237:
 773:Src/mode.c    ****     HAL_Delay(200);
 2189              		.loc 1 773 0
 2190 004a C820     		movs	r0, #200
 2191 004c FFF7FEFF 		bl	HAL_Delay
 2192              	.LVL238:
 774:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2193              		.loc 1 774 0
 2194 0050 2146     		mov	r1, r4
 2195 0052 0A20     		movs	r0, #10
 2196 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 2197              	.LVL239:
 775:Src/mode.c    **** }
 2198              		.loc 1 775 0
 2199 0058 38BD     		pop	{r3, r4, r5, pc}
 2200              	.L164:
 762:Src/mode.c    ****     }
 2201              		.loc 1 762 0
 2202 005a 2046     		mov	r0, r4
 2203 005c FFF7FEFF 		bl	Motion_Diagonal
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 55


 2204              	.LVL240:
 2205 0060 DEE7     		b	.L162
 2206              	.L166:
 2207 0062 00BF     		.align	2
 2208              	.L165:
 2209 0064 00000000 		.word	enc
 2210 0068 00000000 		.word	motor_flag
 2211 006c 00000000 		.word	loger
 2212 0070 00000000 		.word	start_address
 2213              		.cfi_endproc
 2214              	.LFE137:
 2216              		.section	.text.CheckTurn,"ax",%progbits
 2217              		.align	1
 2218              		.global	CheckTurn
 2219              		.syntax unified
 2220              		.thumb
 2221              		.thumb_func
 2222              		.fpu fpv4-sp-d16
 2224              	CheckTurn:
 2225              	.LFB138:
 776:Src/mode.c    **** 
 777:Src/mode.c    **** void CheckTurn(uint8_t num)
 778:Src/mode.c    **** {
 2226              		.loc 1 778 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230              	.LVL241:
 2231 0000 38B5     		push	{r3, r4, r5, lr}
 2232              	.LCFI29:
 2233              		.cfi_def_cfa_offset 16
 2234              		.cfi_offset 3, -16
 2235              		.cfi_offset 4, -12
 2236              		.cfi_offset 5, -8
 2237              		.cfi_offset 14, -4
 2238 0002 0546     		mov	r5, r0
 779:Src/mode.c    ****     SetRunMode(0);
 2239              		.loc 1 779 0
 2240 0004 0020     		movs	r0, #0
 2241              	.LVL242:
 2242 0006 FFF7FEFF 		bl	SetRunMode
 2243              	.LVL243:
 780:Src/mode.c    ****     gyro_z.degree = 0;
 2244              		.loc 1 780 0
 2245 000a 184B     		ldr	r3, .L171
 2246 000c 0022     		movs	r2, #0
 2247 000e 5A60     		str	r2, [r3, #4]	@ float
 2248              	.LVL244:
 2249              	.LBB13:
 781:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2250              		.loc 1 781 0
 2251 0010 0024     		movs	r4, #0
 2252 0012 03E0     		b	.L168
 2253              	.LVL245:
 2254              	.L169:
 782:Src/mode.c    ****     {
 783:Src/mode.c    ****         Motion_TestTurn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 56


 2255              		.loc 1 783 0 discriminator 3
 2256 0014 FFF7FEFF 		bl	Motion_TestTurn
 2257              	.LVL246:
 781:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2258              		.loc 1 781 0 discriminator 3
 2259 0018 0134     		adds	r4, r4, #1
 2260              	.LVL247:
 2261 001a E4B2     		uxtb	r4, r4
 2262              	.LVL248:
 2263              	.L168:
 781:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2264              		.loc 1 781 0 is_stmt 0 discriminator 1
 2265 001c AC42     		cmp	r4, r5
 2266 001e F9D3     		bcc	.L169
 2267              	.LBE13:
 784:Src/mode.c    ****     }
 785:Src/mode.c    ****     motor_flag = FALSE;
 2268              		.loc 1 785 0 is_stmt 1
 2269 0020 0024     		movs	r4, #0
 2270              	.LVL249:
 2271 0022 134B     		ldr	r3, .L171+4
 2272 0024 1C70     		strb	r4, [r3]
 786:Src/mode.c    ****     loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 2273              		.loc 1 786 0
 2274 0026 114B     		ldr	r3, .L171
 2275 0028 D3ED017A 		vldr.32	s15, [r3, #4]
 2276 002c 1149     		ldr	r1, .L171+8
 2277 002e 0B88     		ldrh	r3, [r1]
 2278 0030 FDEEE77A 		vcvt.s32.f32	s15, s15
 2279 0034 03F56A53 		add	r3, r3, #14976
 2280 0038 1833     		adds	r3, r3, #24
 2281 003a 01EB4303 		add	r3, r1, r3, lsl #1
 2282 003e 17EE902A 		vmov	r2, s15	@ int
 2283 0042 5A80     		strh	r2, [r3, #2]	@ movhi
 787:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2284              		.loc 1 787 0
 2285 0044 49F64242 		movw	r2, #40002
 2286 0048 0B4B     		ldr	r3, .L171+12
 2287 004a 1868     		ldr	r0, [r3]
 2288 004c FFF7FEFF 		bl	Flash_Write
 2289              	.LVL250:
 788:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2290              		.loc 1 788 0
 2291 0050 4FF49671 		mov	r1, #300
 2292 0054 4C20     		movs	r0, #76
 2293 0056 FFF7FEFF 		bl	Tim_BuzzerPwm
 2294              	.LVL251:
 789:Src/mode.c    ****     HAL_Delay(200);
 2295              		.loc 1 789 0
 2296 005a C820     		movs	r0, #200
 2297 005c FFF7FEFF 		bl	HAL_Delay
 2298              	.LVL252:
 790:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2299              		.loc 1 790 0
 2300 0060 2146     		mov	r1, r4
 2301 0062 0A20     		movs	r0, #10
 2302 0064 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 57


 2303              	.LVL253:
 791:Src/mode.c    **** }
 2304              		.loc 1 791 0
 2305 0068 38BD     		pop	{r3, r4, r5, pc}
 2306              	.L172:
 2307 006a 00BF     		.align	2
 2308              	.L171:
 2309 006c 00000000 		.word	gyro_z
 2310 0070 00000000 		.word	motor_flag
 2311 0074 00000000 		.word	loger
 2312 0078 00000000 		.word	start_address
 2313              		.cfi_endproc
 2314              	.LFE138:
 2316              		.section	.text.PrintOutPut,"ax",%progbits
 2317              		.align	1
 2318              		.global	PrintOutPut
 2319              		.syntax unified
 2320              		.thumb
 2321              		.thumb_func
 2322              		.fpu fpv4-sp-d16
 2324              	PrintOutPut:
 2325              	.LFB139:
 792:Src/mode.c    **** 
 793:Src/mode.c    **** void PrintOutPut(void)
 794:Src/mode.c    **** {
 2326              		.loc 1 794 0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330 0000 30B5     		push	{r4, r5, lr}
 2331              	.LCFI30:
 2332              		.cfi_def_cfa_offset 12
 2333              		.cfi_offset 4, -12
 2334              		.cfi_offset 5, -8
 2335              		.cfi_offset 14, -4
 2336 0002 83B0     		sub	sp, sp, #12
 2337              	.LCFI31:
 2338              		.cfi_def_cfa_offset 24
 795:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2339              		.loc 1 795 0
 2340 0004 49F64242 		movw	r2, #40002
 2341 0008 1649     		ldr	r1, .L177
 2342 000a 174B     		ldr	r3, .L177+4
 2343 000c 1868     		ldr	r0, [r3]
 2344 000e FFF7FEFF 		bl	Flash_Load
 2345              	.LVL254:
 2346              	.LBB14:
 796:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2347              		.loc 1 796 0
 2348 0012 0024     		movs	r4, #0
 2349 0014 1FE0     		b	.L174
 2350              	.LVL255:
 2351              	.L175:
 797:Src/mode.c    ****     {
 798:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 799:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 800:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 58


 2352              		.loc 1 800 0 discriminator 3
 2353 0016 1348     		ldr	r0, .L177
 2354 0018 00EB4403 		add	r3, r0, r4, lsl #1
 2355 001c B3F90210 		ldrsh	r1, [r3, #2]
 2356 0020 04F51C53 		add	r3, r4, #9984
 2357 0024 1033     		adds	r3, r3, #16
 2358 0026 00EB4303 		add	r3, r0, r3, lsl #1
 2359 002a B3F90220 		ldrsh	r2, [r3, #2]
 2360 002e 04F59C53 		add	r3, r4, #4992
 2361 0032 0833     		adds	r3, r3, #8
 2362 0034 00EB4303 		add	r3, r0, r3, lsl #1
 2363 0038 B3F90230 		ldrsh	r3, [r3, #2]
 2364 003c 04F56A55 		add	r5, r4, #14976
 2365 0040 1835     		adds	r5, r5, #24
 2366 0042 00EB4500 		add	r0, r0, r5, lsl #1
 2367 0046 B0F90200 		ldrsh	r0, [r0, #2]
 2368 004a 0090     		str	r0, [sp]
 2369 004c 0748     		ldr	r0, .L177+8
 2370 004e FFF7FEFF 		bl	printf
 2371              	.LVL256:
 796:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2372              		.loc 1 796 0 discriminator 3
 2373 0052 0134     		adds	r4, r4, #1
 2374              	.LVL257:
 2375 0054 A4B2     		uxth	r4, r4
 2376              	.LVL258:
 2377              	.L174:
 796:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2378              		.loc 1 796 0 is_stmt 0 discriminator 1
 2379 0056 034B     		ldr	r3, .L177
 2380 0058 1B88     		ldrh	r3, [r3]
 2381 005a A342     		cmp	r3, r4
 2382 005c DBD2     		bcs	.L175
 2383              	.LBE14:
 801:Src/mode.c    ****     }
 802:Src/mode.c    **** }
 2384              		.loc 1 802 0 is_stmt 1
 2385 005e 03B0     		add	sp, sp, #12
 2386              	.LCFI32:
 2387              		.cfi_def_cfa_offset 12
 2388              		@ sp needed
 2389 0060 30BD     		pop	{r4, r5, pc}
 2390              	.LVL259:
 2391              	.L178:
 2392 0062 00BF     		.align	2
 2393              	.L177:
 2394 0064 00000000 		.word	loger
 2395 0068 00000000 		.word	start_address
 2396 006c 00000000 		.word	.LC2
 2397              		.cfi_endproc
 2398              	.LFE139:
 2400              		.section	.text.PrintWallData,"ax",%progbits
 2401              		.align	1
 2402              		.global	PrintWallData
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 59


 2406              		.fpu fpv4-sp-d16
 2408              	PrintWallData:
 2409              	.LFB140:
 803:Src/mode.c    **** 
 804:Src/mode.c    **** void PrintWallData(void)
 805:Src/mode.c    **** {
 2410              		.loc 1 805 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 136
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414 0000 30B5     		push	{r4, r5, lr}
 2415              	.LCFI33:
 2416              		.cfi_def_cfa_offset 12
 2417              		.cfi_offset 4, -12
 2418              		.cfi_offset 5, -8
 2419              		.cfi_offset 14, -4
 2420 0002 A3B0     		sub	sp, sp, #140
 2421              	.LCFI34:
 2422              		.cfi_def_cfa_offset 152
 806:Src/mode.c    ****     wallData_t walldata;
 807:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&walldata, sizeof(wallData_t));
 2423              		.loc 1 807 0
 2424 0004 8822     		movs	r2, #136
 2425 0006 6946     		mov	r1, sp
 2426 0008 2C4B     		ldr	r3, .L196
 2427 000a 1868     		ldr	r0, [r3]
 2428 000c FFF7FEFF 		bl	Flash_Load
 2429              	.LVL260:
 808:Src/mode.c    ****     printf("\r\n");
 2430              		.loc 1 808 0
 2431 0010 2B48     		ldr	r0, .L196+4
 2432 0012 FFF7FEFF 		bl	puts
 2433              	.LVL261:
 2434              	.LBB15:
 809:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2435              		.loc 1 809 0
 2436 0016 0024     		movs	r4, #0
 2437 0018 07E0     		b	.L180
 2438              	.LVL262:
 2439              	.L181:
 810:Src/mode.c    ****     {
 811:Src/mode.c    ****         printf("+");
 2440              		.loc 1 811 0 discriminator 3
 2441 001a 2B20     		movs	r0, #43
 2442 001c FFF7FEFF 		bl	putchar
 2443              	.LVL263:
 812:Src/mode.c    ****         printf("---");
 2444              		.loc 1 812 0 discriminator 3
 2445 0020 2848     		ldr	r0, .L196+8
 2446 0022 FFF7FEFF 		bl	printf
 2447              	.LVL264:
 809:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2448              		.loc 1 809 0 discriminator 3
 2449 0026 0134     		adds	r4, r4, #1
 2450              	.LVL265:
 2451 0028 E4B2     		uxtb	r4, r4
 2452              	.LVL266:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 60


 2453              	.L180:
 809:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2454              		.loc 1 809 0 is_stmt 0 discriminator 1
 2455 002a 0F2C     		cmp	r4, #15
 2456 002c F5D9     		bls	.L181
 2457              	.LBE15:
 813:Src/mode.c    ****     }
 814:Src/mode.c    ****     printf("+\r\n");
 2458              		.loc 1 814 0 is_stmt 1
 2459 002e 2648     		ldr	r0, .L196+12
 2460 0030 FFF7FEFF 		bl	puts
 2461              	.LVL267:
 2462              	.LBB16:
 815:Src/mode.c    ****     for (unsigned char j = MAZE_SIZE; j > 0; j--)
 2463              		.loc 1 815 0
 2464 0034 1025     		movs	r5, #16
 2465 0036 3CE0     		b	.L182
 2466              	.LVL268:
 2467              	.L183:
 2468              	.LBB17:
 816:Src/mode.c    ****     {
 817:Src/mode.c    ****         for (unsigned char i = 0; i < MAZE_SIZE; i++)
 818:Src/mode.c    ****         {
 819:Src/mode.c    ****             if (walldata.vertical[i] & 0b1 << (j - 1))
 820:Src/mode.c    ****             {
 821:Src/mode.c    ****                 printf("|");
 822:Src/mode.c    ****             }
 823:Src/mode.c    ****             else
 824:Src/mode.c    ****             {
 825:Src/mode.c    ****                 printf(" ");
 2469              		.loc 1 825 0
 2470 0038 2020     		movs	r0, #32
 2471 003a FFF7FEFF 		bl	putchar
 2472              	.LVL269:
 2473              	.L184:
 826:Src/mode.c    ****             }
 827:Src/mode.c    ****             printf("   ");
 2474              		.loc 1 827 0 discriminator 2
 2475 003e 2348     		ldr	r0, .L196+16
 2476 0040 FFF7FEFF 		bl	printf
 2477              	.LVL270:
 817:Src/mode.c    ****         {
 2478              		.loc 1 817 0 discriminator 2
 2479 0044 0134     		adds	r4, r4, #1
 2480              	.LVL271:
 2481 0046 E4B2     		uxtb	r4, r4
 2482              	.LVL272:
 2483              	.L190:
 817:Src/mode.c    ****         {
 2484              		.loc 1 817 0 is_stmt 0 discriminator 1
 2485 0048 0F2C     		cmp	r4, #15
 2486 004a 0DD8     		bhi	.L193
 819:Src/mode.c    ****             {
 2487              		.loc 1 819 0 is_stmt 1
 2488 004c 22AB     		add	r3, sp, #136
 2489 004e 03EB4403 		add	r3, r3, r4, lsl #1
 2490 0052 33F8883C 		ldrh	r3, [r3, #-136]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 61


 2491 0056 6A1E     		subs	r2, r5, #1
 2492 0058 1341     		asrs	r3, r3, r2
 2493 005a 13F0010F 		tst	r3, #1
 2494 005e EBD0     		beq	.L183
 821:Src/mode.c    ****             }
 2495              		.loc 1 821 0
 2496 0060 7C20     		movs	r0, #124
 2497 0062 FFF7FEFF 		bl	putchar
 2498              	.LVL273:
 2499 0066 EAE7     		b	.L184
 2500              	.L193:
 2501              	.LBE17:
 828:Src/mode.c    ****         }
 829:Src/mode.c    ****         printf("|");
 2502              		.loc 1 829 0
 2503 0068 7C20     		movs	r0, #124
 2504 006a FFF7FEFF 		bl	putchar
 2505              	.LVL274:
 830:Src/mode.c    ****         printf("\r\n");
 2506              		.loc 1 830 0
 2507 006e 1448     		ldr	r0, .L196+4
 2508 0070 FFF7FEFF 		bl	puts
 2509              	.LVL275:
 2510              	.LBB18:
 831:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2511              		.loc 1 831 0
 2512 0074 0024     		movs	r4, #0
 2513              	.LVL276:
 2514 0076 03E0     		b	.L186
 2515              	.LVL277:
 2516              	.L187:
 832:Src/mode.c    ****         {
 833:Src/mode.c    ****             printf("+");
 834:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 835:Src/mode.c    ****             {
 836:Src/mode.c    ****                 printf("---");
 837:Src/mode.c    ****             }
 838:Src/mode.c    ****             else
 839:Src/mode.c    ****             {
 840:Src/mode.c    ****                 printf("   ");
 2517              		.loc 1 840 0
 2518 0078 1448     		ldr	r0, .L196+16
 2519 007a FFF7FEFF 		bl	printf
 2520              	.LVL278:
 2521              	.L188:
 831:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2522              		.loc 1 831 0 discriminator 2
 2523 007e 0134     		adds	r4, r4, #1
 2524              	.LVL279:
 2525              	.L186:
 831:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2526              		.loc 1 831 0 is_stmt 0 discriminator 1
 2527 0080 0F2C     		cmp	r4, #15
 2528 0082 11D8     		bhi	.L194
 833:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 2529              		.loc 1 833 0 is_stmt 1
 2530 0084 2B20     		movs	r0, #43
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 62


 2531 0086 FFF7FEFF 		bl	putchar
 2532              	.LVL280:
 834:Src/mode.c    ****             {
 2533              		.loc 1 834 0
 2534 008a 05F10F03 		add	r3, r5, #15
 2535 008e 22AA     		add	r2, sp, #136
 2536 0090 02EB4303 		add	r3, r2, r3, lsl #1
 2537 0094 33F8863C 		ldrh	r3, [r3, #-134]
 2538 0098 2341     		asrs	r3, r3, r4
 2539 009a 13F0010F 		tst	r3, #1
 2540 009e EBD0     		beq	.L187
 836:Src/mode.c    ****             }
 2541              		.loc 1 836 0
 2542 00a0 0848     		ldr	r0, .L196+8
 2543 00a2 FFF7FEFF 		bl	printf
 2544              	.LVL281:
 2545 00a6 EAE7     		b	.L188
 2546              	.L194:
 2547              	.LBE18:
 841:Src/mode.c    ****             }
 842:Src/mode.c    ****         }
 843:Src/mode.c    ****         printf("+\r\n");
 2548              		.loc 1 843 0 discriminator 2
 2549 00a8 0748     		ldr	r0, .L196+12
 2550 00aa FFF7FEFF 		bl	puts
 2551              	.LVL282:
 815:Src/mode.c    ****     {
 2552              		.loc 1 815 0 discriminator 2
 2553 00ae 013D     		subs	r5, r5, #1
 2554              	.LVL283:
 2555 00b0 EDB2     		uxtb	r5, r5
 2556              	.LVL284:
 2557              	.L182:
 815:Src/mode.c    ****     {
 2558              		.loc 1 815 0 is_stmt 0 discriminator 1
 2559 00b2 0DB1     		cbz	r5, .L195
 2560              	.LBB19:
 817:Src/mode.c    ****         {
 2561              		.loc 1 817 0 is_stmt 1
 2562 00b4 0024     		movs	r4, #0
 2563 00b6 C7E7     		b	.L190
 2564              	.L195:
 2565              	.LBE19:
 2566              	.LBE16:
 844:Src/mode.c    ****     }
 845:Src/mode.c    **** }
 2567              		.loc 1 845 0
 2568 00b8 23B0     		add	sp, sp, #140
 2569              	.LCFI35:
 2570              		.cfi_def_cfa_offset 12
 2571              		@ sp needed
 2572 00ba 30BD     		pop	{r4, r5, pc}
 2573              	.LVL285:
 2574              	.L197:
 2575              		.align	2
 2576              	.L196:
 2577 00bc 00000000 		.word	start_address
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 63


 2578 00c0 00000000 		.word	.LC3
 2579 00c4 04000000 		.word	.LC4
 2580 00c8 08000000 		.word	.LC5
 2581 00cc 0C000000 		.word	.LC6
 2582              		.cfi_endproc
 2583              	.LFE140:
 2585              		.section	.text.PrintMotion,"ax",%progbits
 2586              		.align	1
 2587              		.global	PrintMotion
 2588              		.syntax unified
 2589              		.thumb
 2590              		.thumb_func
 2591              		.fpu fpv4-sp-d16
 2593              	PrintMotion:
 2594              	.LFB141:
 846:Src/mode.c    **** 
 847:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail)
 848:Src/mode.c    **** {
 2595              		.loc 1 848 0
 2596              		.cfi_startproc
 2597              		@ args = 0, pretend = 0, frame = 0
 2598              		@ frame_needed = 0, uses_anonymous_args = 0
 2599              	.LVL286:
 2600 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2601              	.LCFI36:
 2602              		.cfi_def_cfa_offset 24
 2603              		.cfi_offset 3, -24
 2604              		.cfi_offset 4, -20
 2605              		.cfi_offset 5, -16
 2606              		.cfi_offset 6, -12
 2607              		.cfi_offset 7, -8
 2608              		.cfi_offset 14, -4
 2609 0002 0646     		mov	r6, r0
 2610 0004 0F46     		mov	r7, r1
 2611 0006 1546     		mov	r5, r2
 2612              	.LVL287:
 849:Src/mode.c    ****     uint8_t head = 0;
 2613              		.loc 1 849 0
 2614 0008 0024     		movs	r4, #0
 850:Src/mode.c    ****     while (head < tail)
 2615              		.loc 1 850 0
 2616 000a 09E0     		b	.L199
 2617              	.LVL288:
 2618              	.L205:
 851:Src/mode.c    ****     {
 852:Src/mode.c    ****         switch (motion[head] & 0xf)
 853:Src/mode.c    ****         {
 854:Src/mode.c    ****         case START:
 855:Src/mode.c    ****             printf("\r\nSTART:%d\tv_start:%ld\tv_end:%ld\r\n", motion[head] >> 4, velocity[head] >>
 2619              		.loc 1 855 0
 2620 000c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2621 0010 93B2     		uxth	r3, r2
 2622 0012 120C     		lsrs	r2, r2, #16
 2623 0014 0909     		lsrs	r1, r1, #4
 2624 0016 7648     		ldr	r0, .L233
 2625 0018 FFF7FEFF 		bl	printf
 2626              	.LVL289:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 64


 2627              	.L209:
 856:Src/mode.c    ****             break;
 857:Src/mode.c    ****         case LEFT:
 858:Src/mode.c    ****             switch (motion[head] >> 4)
 859:Src/mode.c    ****             {
 860:Src/mode.c    ****             case SEARCH:
 861:Src/mode.c    ****                 printf("LEFT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 862:Src/mode.c    ****                 break;
 863:Src/mode.c    ****             case T_90:
 864:Src/mode.c    ****                 printf("LEFT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[head
 865:Src/mode.c    ****                 break;
 866:Src/mode.c    ****             case T_180:
 867:Src/mode.c    ****                 printf("LEFT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 868:Src/mode.c    ****                 break;
 869:Src/mode.c    ****             case T_45IN:
 870:Src/mode.c    ****                 printf("LEFT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 871:Src/mode.c    ****                 break;
 872:Src/mode.c    ****             case T_45OUT:
 873:Src/mode.c    ****                 printf("LEFT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 874:Src/mode.c    ****                 break;
 875:Src/mode.c    ****             case T_135IN:
 876:Src/mode.c    ****                 printf("LEFT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 877:Src/mode.c    ****                 break;
 878:Src/mode.c    ****             case T_135OUT:
 879:Src/mode.c    ****                 printf("LEFT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 880:Src/mode.c    ****                 break;
 881:Src/mode.c    ****             case T_V90:
 882:Src/mode.c    ****                 printf("LEFT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 883:Src/mode.c    ****                 break;
 884:Src/mode.c    ****             default:
 885:Src/mode.c    ****                 printf("\r\n");
 886:Src/mode.c    ****                 break;
 887:Src/mode.c    ****             }
 888:Src/mode.c    ****             break;
 889:Src/mode.c    ****         case RIGHT:
 890:Src/mode.c    ****             switch (motion[head] >> 4)
 891:Src/mode.c    ****             {
 892:Src/mode.c    ****             case SEARCH:
 893:Src/mode.c    ****                 printf("RIGHT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 894:Src/mode.c    ****                 break;
 895:Src/mode.c    ****             case T_90:
 896:Src/mode.c    ****                 printf("RIGHT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 897:Src/mode.c    ****                 break;
 898:Src/mode.c    ****             case T_180:
 899:Src/mode.c    ****                 printf("RIGHT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 900:Src/mode.c    ****                 break;
 901:Src/mode.c    ****             case T_45IN:
 902:Src/mode.c    ****                 printf("RIGHT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 903:Src/mode.c    ****                 break;
 904:Src/mode.c    ****             case T_45OUT:
 905:Src/mode.c    ****                 printf("RIGHT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 906:Src/mode.c    ****                 break;
 907:Src/mode.c    ****             case T_135IN:
 908:Src/mode.c    ****                 printf("RIGHT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 909:Src/mode.c    ****                 break;
 910:Src/mode.c    ****             case T_135OUT:
 911:Src/mode.c    ****                 printf("RIGHT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 65


 912:Src/mode.c    ****                 break;
 913:Src/mode.c    ****             case T_V90:
 914:Src/mode.c    ****                 printf("RIGHT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 915:Src/mode.c    ****                 break;
 916:Src/mode.c    ****             default:
 917:Src/mode.c    ****                 printf("\r\n");
 918:Src/mode.c    ****                 break;
 919:Src/mode.c    ****             }
 920:Src/mode.c    ****             break;
 921:Src/mode.c    ****         case FRONT:
 922:Src/mode.c    ****             printf("FRONT:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16,
 923:Src/mode.c    ****             break;
 924:Src/mode.c    ****         case DIAGONAL:
 925:Src/mode.c    ****             printf("DIAGONAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 
 926:Src/mode.c    ****             break;
 927:Src/mode.c    ****         case GOAL:
 928:Src/mode.c    ****             printf("GOAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16, 
 929:Src/mode.c    ****             break;
 930:Src/mode.c    ****         case ADJUST:
 931:Src/mode.c    ****             printf("ADJUST:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16
 932:Src/mode.c    ****             break;
 933:Src/mode.c    ****         default:
 934:Src/mode.c    ****             printf("\r\n");
 935:Src/mode.c    ****             break;
 936:Src/mode.c    ****         }
 937:Src/mode.c    ****         head++;
 2628              		.loc 1 937 0
 2629 001c 0134     		adds	r4, r4, #1
 2630              	.LVL290:
 2631 001e E4B2     		uxtb	r4, r4
 2632              	.LVL291:
 2633              	.L199:
 850:Src/mode.c    ****     {
 2634              		.loc 1 850 0
 2635 0020 AC42     		cmp	r4, r5
 2636 0022 80F0E380 		bcs	.L232
 852:Src/mode.c    ****         {
 2637              		.loc 1 852 0
 2638 0026 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2639 002a 01F00F03 		and	r3, r1, #15
 2640 002e 0A2B     		cmp	r3, #10
 2641 0030 00F2D880 		bhi	.L200
 2642 0034 01A0     		adr	r0, .L202
 2643 0036 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 2644 003a 00BF     		.p2align 2
 2645              	.L202:
 2646 003c 9D010000 		.word	.L201+1
 2647 0040 69000000 		.word	.L203+1
 2648 0044 03010000 		.word	.L204+1
 2649 0048 E5010000 		.word	.L200+1
 2650 004c E5010000 		.word	.L200+1
 2651 0050 0D000000 		.word	.L205+1
 2652 0054 C1010000 		.word	.L206+1
 2653 0058 AF010000 		.word	.L207+1
 2654 005c E5010000 		.word	.L200+1
 2655 0060 E5010000 		.word	.L200+1
 2656 0064 D3010000 		.word	.L208+1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 66


 2657              		.p2align 1
 2658              	.L203:
 858:Src/mode.c    ****             {
 2659              		.loc 1 858 0
 2660 0068 0909     		lsrs	r1, r1, #4
 2661 006a 0729     		cmp	r1, #7
 2662 006c 45D8     		bhi	.L210
 2663 006e DFE801F0 		tbb	[pc, r1]
 2664              	.L212:
 2665 0072 04       		.byte	(.L211-.L212)/2
 2666 0073 1C       		.byte	(.L213-.L212)/2
 2667 0074 2C       		.byte	(.L214-.L212)/2
 2668 0075 0C       		.byte	(.L215-.L212)/2
 2669 0076 14       		.byte	(.L216-.L212)/2
 2670 0077 24       		.byte	(.L217-.L212)/2
 2671 0078 34       		.byte	(.L218-.L212)/2
 2672 0079 3C       		.byte	(.L219-.L212)/2
 2673              		.p2align 1
 2674              	.L211:
 861:Src/mode.c    ****                 break;
 2675              		.loc 1 861 0
 2676 007a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2677 007e 8AB2     		uxth	r2, r1
 2678 0080 090C     		lsrs	r1, r1, #16
 2679 0082 5C48     		ldr	r0, .L233+4
 2680 0084 FFF7FEFF 		bl	printf
 2681              	.LVL292:
 862:Src/mode.c    ****             case T_90:
 2682              		.loc 1 862 0
 2683 0088 C8E7     		b	.L209
 2684              	.L215:
 864:Src/mode.c    ****                 break;
 2685              		.loc 1 864 0
 2686 008a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2687 008e 8AB2     		uxth	r2, r1
 2688 0090 090C     		lsrs	r1, r1, #16
 2689 0092 5948     		ldr	r0, .L233+8
 2690 0094 FFF7FEFF 		bl	printf
 2691              	.LVL293:
 865:Src/mode.c    ****             case T_180:
 2692              		.loc 1 865 0
 2693 0098 C0E7     		b	.L209
 2694              	.L216:
 867:Src/mode.c    ****                 break;
 2695              		.loc 1 867 0
 2696 009a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2697 009e 8AB2     		uxth	r2, r1
 2698 00a0 090C     		lsrs	r1, r1, #16
 2699 00a2 5648     		ldr	r0, .L233+12
 2700 00a4 FFF7FEFF 		bl	printf
 2701              	.LVL294:
 868:Src/mode.c    ****             case T_45IN:
 2702              		.loc 1 868 0
 2703 00a8 B8E7     		b	.L209
 2704              	.L213:
 870:Src/mode.c    ****                 break;
 2705              		.loc 1 870 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 67


 2706 00aa 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2707 00ae 8AB2     		uxth	r2, r1
 2708 00b0 090C     		lsrs	r1, r1, #16
 2709 00b2 5348     		ldr	r0, .L233+16
 2710 00b4 FFF7FEFF 		bl	printf
 2711              	.LVL295:
 871:Src/mode.c    ****             case T_45OUT:
 2712              		.loc 1 871 0
 2713 00b8 B0E7     		b	.L209
 2714              	.L217:
 873:Src/mode.c    ****                 break;
 2715              		.loc 1 873 0
 2716 00ba 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2717 00be 8AB2     		uxth	r2, r1
 2718 00c0 090C     		lsrs	r1, r1, #16
 2719 00c2 5048     		ldr	r0, .L233+20
 2720 00c4 FFF7FEFF 		bl	printf
 2721              	.LVL296:
 874:Src/mode.c    ****             case T_135IN:
 2722              		.loc 1 874 0
 2723 00c8 A8E7     		b	.L209
 2724              	.L214:
 876:Src/mode.c    ****                 break;
 2725              		.loc 1 876 0
 2726 00ca 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2727 00ce 8AB2     		uxth	r2, r1
 2728 00d0 090C     		lsrs	r1, r1, #16
 2729 00d2 4D48     		ldr	r0, .L233+24
 2730 00d4 FFF7FEFF 		bl	printf
 2731              	.LVL297:
 877:Src/mode.c    ****             case T_135OUT:
 2732              		.loc 1 877 0
 2733 00d8 A0E7     		b	.L209
 2734              	.L218:
 879:Src/mode.c    ****                 break;
 2735              		.loc 1 879 0
 2736 00da 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2737 00de 8AB2     		uxth	r2, r1
 2738 00e0 090C     		lsrs	r1, r1, #16
 2739 00e2 4A48     		ldr	r0, .L233+28
 2740 00e4 FFF7FEFF 		bl	printf
 2741              	.LVL298:
 880:Src/mode.c    ****             case T_V90:
 2742              		.loc 1 880 0
 2743 00e8 98E7     		b	.L209
 2744              	.L219:
 882:Src/mode.c    ****                 break;
 2745              		.loc 1 882 0
 2746 00ea 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2747 00ee 8AB2     		uxth	r2, r1
 2748 00f0 090C     		lsrs	r1, r1, #16
 2749 00f2 4748     		ldr	r0, .L233+32
 2750 00f4 FFF7FEFF 		bl	printf
 2751              	.LVL299:
 883:Src/mode.c    ****             default:
 2752              		.loc 1 883 0
 2753 00f8 90E7     		b	.L209
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 68


 2754              	.L210:
 885:Src/mode.c    ****                 break;
 2755              		.loc 1 885 0
 2756 00fa 4648     		ldr	r0, .L233+36
 2757 00fc FFF7FEFF 		bl	puts
 2758              	.LVL300:
 886:Src/mode.c    ****             }
 2759              		.loc 1 886 0
 2760 0100 8CE7     		b	.L209
 2761              	.L204:
 890:Src/mode.c    ****             {
 2762              		.loc 1 890 0
 2763 0102 0909     		lsrs	r1, r1, #4
 2764 0104 0729     		cmp	r1, #7
 2765 0106 45D8     		bhi	.L220
 2766 0108 DFE801F0 		tbb	[pc, r1]
 2767              	.L222:
 2768 010c 04       		.byte	(.L221-.L222)/2
 2769 010d 1C       		.byte	(.L223-.L222)/2
 2770 010e 2C       		.byte	(.L224-.L222)/2
 2771 010f 0C       		.byte	(.L225-.L222)/2
 2772 0110 14       		.byte	(.L226-.L222)/2
 2773 0111 24       		.byte	(.L227-.L222)/2
 2774 0112 34       		.byte	(.L228-.L222)/2
 2775 0113 3C       		.byte	(.L229-.L222)/2
 2776              		.p2align 1
 2777              	.L221:
 893:Src/mode.c    ****                 break;
 2778              		.loc 1 893 0
 2779 0114 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2780 0118 8AB2     		uxth	r2, r1
 2781 011a 090C     		lsrs	r1, r1, #16
 2782 011c 3E48     		ldr	r0, .L233+40
 2783 011e FFF7FEFF 		bl	printf
 2784              	.LVL301:
 894:Src/mode.c    ****             case T_90:
 2785              		.loc 1 894 0
 2786 0122 7BE7     		b	.L209
 2787              	.L225:
 896:Src/mode.c    ****                 break;
 2788              		.loc 1 896 0
 2789 0124 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2790 0128 8AB2     		uxth	r2, r1
 2791 012a 090C     		lsrs	r1, r1, #16
 2792 012c 3B48     		ldr	r0, .L233+44
 2793 012e FFF7FEFF 		bl	printf
 2794              	.LVL302:
 897:Src/mode.c    ****             case T_180:
 2795              		.loc 1 897 0
 2796 0132 73E7     		b	.L209
 2797              	.L226:
 899:Src/mode.c    ****                 break;
 2798              		.loc 1 899 0
 2799 0134 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2800 0138 8AB2     		uxth	r2, r1
 2801 013a 090C     		lsrs	r1, r1, #16
 2802 013c 3848     		ldr	r0, .L233+48
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 69


 2803 013e FFF7FEFF 		bl	printf
 2804              	.LVL303:
 900:Src/mode.c    ****             case T_45IN:
 2805              		.loc 1 900 0
 2806 0142 6BE7     		b	.L209
 2807              	.L223:
 902:Src/mode.c    ****                 break;
 2808              		.loc 1 902 0
 2809 0144 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2810 0148 8AB2     		uxth	r2, r1
 2811 014a 090C     		lsrs	r1, r1, #16
 2812 014c 3548     		ldr	r0, .L233+52
 2813 014e FFF7FEFF 		bl	printf
 2814              	.LVL304:
 903:Src/mode.c    ****             case T_45OUT:
 2815              		.loc 1 903 0
 2816 0152 63E7     		b	.L209
 2817              	.L227:
 905:Src/mode.c    ****                 break;
 2818              		.loc 1 905 0
 2819 0154 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2820 0158 8AB2     		uxth	r2, r1
 2821 015a 090C     		lsrs	r1, r1, #16
 2822 015c 3248     		ldr	r0, .L233+56
 2823 015e FFF7FEFF 		bl	printf
 2824              	.LVL305:
 906:Src/mode.c    ****             case T_135IN:
 2825              		.loc 1 906 0
 2826 0162 5BE7     		b	.L209
 2827              	.L224:
 908:Src/mode.c    ****                 break;
 2828              		.loc 1 908 0
 2829 0164 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2830 0168 8AB2     		uxth	r2, r1
 2831 016a 090C     		lsrs	r1, r1, #16
 2832 016c 2F48     		ldr	r0, .L233+60
 2833 016e FFF7FEFF 		bl	printf
 2834              	.LVL306:
 909:Src/mode.c    ****             case T_135OUT:
 2835              		.loc 1 909 0
 2836 0172 53E7     		b	.L209
 2837              	.L228:
 911:Src/mode.c    ****                 break;
 2838              		.loc 1 911 0
 2839 0174 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2840 0178 8AB2     		uxth	r2, r1
 2841 017a 090C     		lsrs	r1, r1, #16
 2842 017c 2C48     		ldr	r0, .L233+64
 2843 017e FFF7FEFF 		bl	printf
 2844              	.LVL307:
 912:Src/mode.c    ****             case T_V90:
 2845              		.loc 1 912 0
 2846 0182 4BE7     		b	.L209
 2847              	.L229:
 914:Src/mode.c    ****                 break;
 2848              		.loc 1 914 0
 2849 0184 57F82410 		ldr	r1, [r7, r4, lsl #2]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 70


 2850 0188 8AB2     		uxth	r2, r1
 2851 018a 090C     		lsrs	r1, r1, #16
 2852 018c 2948     		ldr	r0, .L233+68
 2853 018e FFF7FEFF 		bl	printf
 2854              	.LVL308:
 915:Src/mode.c    ****             default:
 2855              		.loc 1 915 0
 2856 0192 43E7     		b	.L209
 2857              	.L220:
 917:Src/mode.c    ****                 break;
 2858              		.loc 1 917 0
 2859 0194 1F48     		ldr	r0, .L233+36
 2860 0196 FFF7FEFF 		bl	puts
 2861              	.LVL309:
 918:Src/mode.c    ****             }
 2862              		.loc 1 918 0
 2863 019a 3FE7     		b	.L209
 2864              	.L201:
 922:Src/mode.c    ****             break;
 2865              		.loc 1 922 0
 2866 019c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2867 01a0 93B2     		uxth	r3, r2
 2868 01a2 120C     		lsrs	r2, r2, #16
 2869 01a4 0909     		lsrs	r1, r1, #4
 2870 01a6 2448     		ldr	r0, .L233+72
 2871 01a8 FFF7FEFF 		bl	printf
 2872              	.LVL310:
 923:Src/mode.c    ****         case DIAGONAL:
 2873              		.loc 1 923 0
 2874 01ac 36E7     		b	.L209
 2875              	.L207:
 925:Src/mode.c    ****             break;
 2876              		.loc 1 925 0
 2877 01ae 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2878 01b2 93B2     		uxth	r3, r2
 2879 01b4 120C     		lsrs	r2, r2, #16
 2880 01b6 0909     		lsrs	r1, r1, #4
 2881 01b8 2048     		ldr	r0, .L233+76
 2882 01ba FFF7FEFF 		bl	printf
 2883              	.LVL311:
 926:Src/mode.c    ****         case GOAL:
 2884              		.loc 1 926 0
 2885 01be 2DE7     		b	.L209
 2886              	.L206:
 928:Src/mode.c    ****             break;
 2887              		.loc 1 928 0
 2888 01c0 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2889 01c4 93B2     		uxth	r3, r2
 2890 01c6 120C     		lsrs	r2, r2, #16
 2891 01c8 0909     		lsrs	r1, r1, #4
 2892 01ca 1D48     		ldr	r0, .L233+80
 2893 01cc FFF7FEFF 		bl	printf
 2894              	.LVL312:
 929:Src/mode.c    ****         case ADJUST:
 2895              		.loc 1 929 0
 2896 01d0 24E7     		b	.L209
 2897              	.L208:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 71


 931:Src/mode.c    ****             break;
 2898              		.loc 1 931 0
 2899 01d2 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2900 01d6 93B2     		uxth	r3, r2
 2901 01d8 120C     		lsrs	r2, r2, #16
 2902 01da 0909     		lsrs	r1, r1, #4
 2903 01dc 1948     		ldr	r0, .L233+84
 2904 01de FFF7FEFF 		bl	printf
 2905              	.LVL313:
 932:Src/mode.c    ****         default:
 2906              		.loc 1 932 0
 2907 01e2 1BE7     		b	.L209
 2908              	.L200:
 934:Src/mode.c    ****             break;
 2909              		.loc 1 934 0
 2910 01e4 0B48     		ldr	r0, .L233+36
 2911 01e6 FFF7FEFF 		bl	puts
 2912              	.LVL314:
 935:Src/mode.c    ****         }
 2913              		.loc 1 935 0
 2914 01ea 17E7     		b	.L209
 2915              	.L232:
 938:Src/mode.c    ****     }
 939:Src/mode.c    **** }
 2916              		.loc 1 939 0
 2917 01ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2918              	.LVL315:
 2919              	.L234:
 2920 01ee 00BF     		.align	2
 2921              	.L233:
 2922 01f0 00000000 		.word	.LC7
 2923 01f4 24000000 		.word	.LC8
 2924 01f8 48000000 		.word	.LC9
 2925 01fc 6C000000 		.word	.LC10
 2926 0200 90000000 		.word	.LC11
 2927 0204 B4000000 		.word	.LC12
 2928 0208 DC000000 		.word	.LC13
 2929 020c 04010000 		.word	.LC14
 2930 0210 2C010000 		.word	.LC15
 2931 0214 00000000 		.word	.LC3
 2932 0218 50010000 		.word	.LC16
 2933 021c 78010000 		.word	.LC17
 2934 0220 9C010000 		.word	.LC18
 2935 0224 C0010000 		.word	.LC19
 2936 0228 E8010000 		.word	.LC20
 2937 022c 10020000 		.word	.LC21
 2938 0230 38020000 		.word	.LC22
 2939 0234 60020000 		.word	.LC23
 2940 0238 84020000 		.word	.LC24
 2941 023c A8020000 		.word	.LC25
 2942 0240 CC020000 		.word	.LC26
 2943 0244 EC020000 		.word	.LC27
 2944              		.cfi_endproc
 2945              	.LFE141:
 2947              		.section	.text.AdjustStraight,"ax",%progbits
 2948              		.align	1
 2949              		.global	AdjustStraight
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 72


 2950              		.syntax unified
 2951              		.thumb
 2952              		.thumb_func
 2953              		.fpu fpv4-sp-d16
 2955              	AdjustStraight:
 2956              	.LFB142:
 940:Src/mode.c    **** 
 941:Src/mode.c    **** void AdjustStraight(void)
 942:Src/mode.c    **** {
 2957              		.loc 1 942 0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 0
 2960              		@ frame_needed = 0, uses_anonymous_args = 0
 2961 0000 08B5     		push	{r3, lr}
 2962              	.LCFI37:
 2963              		.cfi_def_cfa_offset 8
 2964              		.cfi_offset 3, -8
 2965              		.cfi_offset 14, -4
 943:Src/mode.c    ****     SetRunMode(0);
 2966              		.loc 1 943 0
 2967 0002 0020     		movs	r0, #0
 2968 0004 FFF7FEFF 		bl	SetRunMode
 2969              	.LVL316:
 944:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 2970              		.loc 1 944 0
 2971 0008 6021     		movs	r1, #96
 2972 000a 0846     		mov	r0, r1
 2973 000c FFF7FEFF 		bl	Tim_MotorPwm
 2974              	.LVL317:
 2975              	.L236:
 945:Src/mode.c    ****     while (motor_flag == TRUE)
 2976              		.loc 1 945 0 discriminator 1
 2977 0010 0E4B     		ldr	r3, .L238
 2978 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2979 0014 DBB2     		uxtb	r3, r3
 2980 0016 012B     		cmp	r3, #1
 2981 0018 FAD0     		beq	.L236
 946:Src/mode.c    ****     {
 947:Src/mode.c    ****     }
 948:Src/mode.c    ****     HAL_Delay(500);
 2982              		.loc 1 948 0
 2983 001a 4FF4FA70 		mov	r0, #500
 2984 001e FFF7FEFF 		bl	HAL_Delay
 2985              	.LVL318:
 949:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2986              		.loc 1 949 0
 2987 0022 49F64242 		movw	r2, #40002
 2988 0026 0A49     		ldr	r1, .L238+4
 2989 0028 0A4B     		ldr	r3, .L238+8
 2990 002a 1868     		ldr	r0, [r3]
 2991 002c FFF7FEFF 		bl	Flash_Write
 2992              	.LVL319:
 950:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2993              		.loc 1 950 0
 2994 0030 4FF49671 		mov	r1, #300
 2995 0034 4C20     		movs	r0, #76
 2996 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 73


 2997              	.LVL320:
 951:Src/mode.c    ****     HAL_Delay(200);
 2998              		.loc 1 951 0
 2999 003a C820     		movs	r0, #200
 3000 003c FFF7FEFF 		bl	HAL_Delay
 3001              	.LVL321:
 952:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3002              		.loc 1 952 0
 3003 0040 0021     		movs	r1, #0
 3004 0042 0A20     		movs	r0, #10
 3005 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 3006              	.LVL322:
 953:Src/mode.c    **** }
 3007              		.loc 1 953 0
 3008 0048 08BD     		pop	{r3, pc}
 3009              	.L239:
 3010 004a 00BF     		.align	2
 3011              	.L238:
 3012 004c 00000000 		.word	motor_flag
 3013 0050 00000000 		.word	loger
 3014 0054 00000000 		.word	start_address
 3015              		.cfi_endproc
 3016              	.LFE142:
 3018              		.section	.text.AdjustTurn,"ax",%progbits
 3019              		.align	1
 3020              		.global	AdjustTurn
 3021              		.syntax unified
 3022              		.thumb
 3023              		.thumb_func
 3024              		.fpu fpv4-sp-d16
 3026              	AdjustTurn:
 3027              	.LFB143:
 954:Src/mode.c    **** 
 955:Src/mode.c    **** void AdjustTurn(void)
 956:Src/mode.c    **** {
 3028              		.loc 1 956 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 0
 3031              		@ frame_needed = 0, uses_anonymous_args = 0
 3032 0000 08B5     		push	{r3, lr}
 3033              	.LCFI38:
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 3, -8
 3036              		.cfi_offset 14, -4
 957:Src/mode.c    ****     SetRunMode(0);
 3037              		.loc 1 957 0
 3038 0002 0020     		movs	r0, #0
 3039 0004 FFF7FEFF 		bl	SetRunMode
 3040              	.LVL323:
 958:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 3041              		.loc 1 958 0
 3042 0008 B421     		movs	r1, #180
 3043 000a 6FF0B300 		mvn	r0, #179
 3044 000e FFF7FEFF 		bl	Tim_MotorPwm
 3045              	.LVL324:
 3046              	.L241:
 959:Src/mode.c    ****     while (motor_flag == TRUE)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 74


 3047              		.loc 1 959 0 discriminator 1
 3048 0012 0E4B     		ldr	r3, .L243
 3049 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3050 0016 DBB2     		uxtb	r3, r3
 3051 0018 012B     		cmp	r3, #1
 3052 001a FAD0     		beq	.L241
 960:Src/mode.c    ****     {
 961:Src/mode.c    ****     }
 962:Src/mode.c    ****     HAL_Delay(500);
 3053              		.loc 1 962 0
 3054 001c 4FF4FA70 		mov	r0, #500
 3055 0020 FFF7FEFF 		bl	HAL_Delay
 3056              	.LVL325:
 963:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3057              		.loc 1 963 0
 3058 0024 49F64242 		movw	r2, #40002
 3059 0028 0949     		ldr	r1, .L243+4
 3060 002a 0A4B     		ldr	r3, .L243+8
 3061 002c 1868     		ldr	r0, [r3]
 3062 002e FFF7FEFF 		bl	Flash_Write
 3063              	.LVL326:
 964:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3064              		.loc 1 964 0
 3065 0032 4FF49671 		mov	r1, #300
 3066 0036 4C20     		movs	r0, #76
 3067 0038 FFF7FEFF 		bl	Tim_BuzzerPwm
 3068              	.LVL327:
 965:Src/mode.c    ****     HAL_Delay(200);
 3069              		.loc 1 965 0
 3070 003c C820     		movs	r0, #200
 3071 003e FFF7FEFF 		bl	HAL_Delay
 3072              	.LVL328:
 966:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3073              		.loc 1 966 0
 3074 0042 0021     		movs	r1, #0
 3075 0044 0A20     		movs	r0, #10
 3076 0046 FFF7FEFF 		bl	Tim_BuzzerPwm
 3077              	.LVL329:
 967:Src/mode.c    **** }
 3078              		.loc 1 967 0
 3079 004a 08BD     		pop	{r3, pc}
 3080              	.L244:
 3081              		.align	2
 3082              	.L243:
 3083 004c 00000000 		.word	motor_flag
 3084 0050 00000000 		.word	loger
 3085 0054 00000000 		.word	start_address
 3086              		.cfi_endproc
 3087              	.LFE143:
 3089              		.section	.text.Circuit,"ax",%progbits
 3090              		.align	1
 3091              		.global	Circuit
 3092              		.syntax unified
 3093              		.thumb
 3094              		.thumb_func
 3095              		.fpu fpv4-sp-d16
 3097              	Circuit:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 75


 3098              	.LFB144:
 968:Src/mode.c    **** 
 969:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 970:Src/mode.c    **** {
 3099              		.loc 1 970 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              	.LVL330:
 3104 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3105              	.LCFI39:
 3106              		.cfi_def_cfa_offset 24
 3107              		.cfi_offset 4, -24
 3108              		.cfi_offset 5, -20
 3109              		.cfi_offset 6, -16
 3110              		.cfi_offset 7, -12
 3111              		.cfi_offset 8, -8
 3112              		.cfi_offset 14, -4
 3113 0004 0746     		mov	r7, r0
 3114 0006 0E46     		mov	r6, r1
 3115 0008 9046     		mov	r8, r2
 3116 000a 1D46     		mov	r5, r3
 971:Src/mode.c    ****     Motion_Start();
 3117              		.loc 1 971 0
 3118 000c FFF7FEFF 		bl	Motion_Start
 3119              	.LVL331:
 3120              	.LBB20:
 972:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3121              		.loc 1 972 0
 3122 0010 0024     		movs	r4, #0
 3123 0012 1AE0     		b	.L246
 3124              	.LVL332:
 3125              	.L263:
 973:Src/mode.c    ****     {
 974:Src/mode.c    ****         if (row > 1)
 975:Src/mode.c    ****         {
 976:Src/mode.c    ****             Motion_Straight(1);
 3126              		.loc 1 976 0
 3127 0014 0120     		movs	r0, #1
 3128 0016 FFF7FEFF 		bl	Motion_Straight
 3129              	.LVL333:
 3130 001a 1AE0     		b	.L247
 3131              	.L264:
 977:Src/mode.c    ****         }
 978:Src/mode.c    **** 
 979:Src/mode.c    ****         if (dir == 1)
 980:Src/mode.c    ****         {
 981:Src/mode.c    ****             Motion_LeftTurn();
 3132              		.loc 1 981 0
 3133 001c FFF7FEFF 		bl	Motion_LeftTurn
 3134              	.LVL334:
 3135 0020 1BE0     		b	.L249
 3136              	.L265:
 982:Src/mode.c    ****         }
 983:Src/mode.c    ****         else
 984:Src/mode.c    ****         {
 985:Src/mode.c    ****             Motion_RightTurn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 76


 986:Src/mode.c    ****         }
 987:Src/mode.c    **** 
 988:Src/mode.c    ****         if (colum > 1)
 989:Src/mode.c    ****         {
 990:Src/mode.c    ****             Motion_Straight(1);
 3137              		.loc 1 990 0
 3138 0022 0120     		movs	r0, #1
 3139 0024 FFF7FEFF 		bl	Motion_Straight
 3140              	.LVL335:
 3141 0028 19E0     		b	.L250
 3142              	.L266:
 991:Src/mode.c    ****         }
 992:Src/mode.c    **** 
 993:Src/mode.c    ****         if (dir == 1)
 994:Src/mode.c    ****         {
 995:Src/mode.c    ****             Motion_LeftTurn();
 3143              		.loc 1 995 0
 3144 002a FFF7FEFF 		bl	Motion_LeftTurn
 3145              	.LVL336:
 3146 002e 1AE0     		b	.L252
 3147              	.L267:
 996:Src/mode.c    ****         }
 997:Src/mode.c    ****         else
 998:Src/mode.c    ****         {
 999:Src/mode.c    ****             Motion_RightTurn();
1000:Src/mode.c    ****         }
1001:Src/mode.c    **** 
1002:Src/mode.c    ****         if (row > 1)
1003:Src/mode.c    ****         {
1004:Src/mode.c    ****             Motion_Straight(1);
 3148              		.loc 1 1004 0
 3149 0030 0120     		movs	r0, #1
 3150 0032 FFF7FEFF 		bl	Motion_Straight
 3151              	.LVL337:
 3152 0036 18E0     		b	.L253
 3153              	.L268:
1005:Src/mode.c    ****         }
1006:Src/mode.c    **** 
1007:Src/mode.c    ****         if (dir == 1)
1008:Src/mode.c    ****         {
1009:Src/mode.c    ****             Motion_LeftTurn();
 3154              		.loc 1 1009 0
 3155 0038 FFF7FEFF 		bl	Motion_LeftTurn
 3156              	.LVL338:
 3157 003c 19E0     		b	.L255
 3158              	.L256:
1010:Src/mode.c    ****         }
1011:Src/mode.c    ****         else
1012:Src/mode.c    ****         {
1013:Src/mode.c    ****             Motion_RightTurn();
1014:Src/mode.c    ****         }
1015:Src/mode.c    **** 
1016:Src/mode.c    ****         if (colum > 1)
1017:Src/mode.c    ****         {
1018:Src/mode.c    ****             Motion_Straight(1);
1019:Src/mode.c    ****         }
1020:Src/mode.c    ****         if (dir == 1)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 77


 3159              		.loc 1 1020 0
 3160 003e 012D     		cmp	r5, #1
 3161 0040 1DD0     		beq	.L261
1021:Src/mode.c    ****         {
1022:Src/mode.c    ****             Motion_LeftTurn();
1023:Src/mode.c    ****         }
1024:Src/mode.c    ****         else
1025:Src/mode.c    ****         {
1026:Src/mode.c    ****             Motion_RightTurn();
 3162              		.loc 1 1026 0
 3163 0042 FFF7FEFF 		bl	Motion_RightTurn
 3164              	.LVL339:
 3165              	.L258:
 972:Src/mode.c    ****     {
 3166              		.loc 1 972 0 discriminator 2
 3167 0046 0134     		adds	r4, r4, #1
 3168              	.LVL340:
 3169 0048 E4B2     		uxtb	r4, r4
 3170              	.LVL341:
 3171              	.L246:
 972:Src/mode.c    ****     {
 3172              		.loc 1 972 0 is_stmt 0 discriminator 1
 3173 004a 4445     		cmp	r4, r8
 3174 004c 1AD2     		bcs	.L262
 974:Src/mode.c    ****         {
 3175              		.loc 1 974 0 is_stmt 1
 3176 004e 012F     		cmp	r7, #1
 3177 0050 E0D8     		bhi	.L263
 3178              	.L247:
 979:Src/mode.c    ****         {
 3179              		.loc 1 979 0
 3180 0052 012D     		cmp	r5, #1
 3181 0054 E2D0     		beq	.L264
 985:Src/mode.c    ****         }
 3182              		.loc 1 985 0
 3183 0056 FFF7FEFF 		bl	Motion_RightTurn
 3184              	.LVL342:
 3185              	.L249:
 988:Src/mode.c    ****         {
 3186              		.loc 1 988 0
 3187 005a 012E     		cmp	r6, #1
 3188 005c E1D8     		bhi	.L265
 3189              	.L250:
 993:Src/mode.c    ****         {
 3190              		.loc 1 993 0
 3191 005e 012D     		cmp	r5, #1
 3192 0060 E3D0     		beq	.L266
 999:Src/mode.c    ****         }
 3193              		.loc 1 999 0
 3194 0062 FFF7FEFF 		bl	Motion_RightTurn
 3195              	.LVL343:
 3196              	.L252:
1002:Src/mode.c    ****         {
 3197              		.loc 1 1002 0
 3198 0066 012F     		cmp	r7, #1
 3199 0068 E2D8     		bhi	.L267
 3200              	.L253:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 78


1007:Src/mode.c    ****         {
 3201              		.loc 1 1007 0
 3202 006a 012D     		cmp	r5, #1
 3203 006c E4D0     		beq	.L268
1013:Src/mode.c    ****         }
 3204              		.loc 1 1013 0
 3205 006e FFF7FEFF 		bl	Motion_RightTurn
 3206              	.LVL344:
 3207              	.L255:
1016:Src/mode.c    ****         {
 3208              		.loc 1 1016 0
 3209 0072 012E     		cmp	r6, #1
 3210 0074 E3D9     		bls	.L256
1018:Src/mode.c    ****         }
 3211              		.loc 1 1018 0
 3212 0076 0120     		movs	r0, #1
 3213 0078 FFF7FEFF 		bl	Motion_Straight
 3214              	.LVL345:
 3215 007c DFE7     		b	.L256
 3216              	.L261:
1022:Src/mode.c    ****         }
 3217              		.loc 1 1022 0
 3218 007e FFF7FEFF 		bl	Motion_LeftTurn
 3219              	.LVL346:
 3220 0082 E0E7     		b	.L258
 3221              	.L262:
 3222              	.LBE20:
1027:Src/mode.c    ****         }
1028:Src/mode.c    ****     }
1029:Src/mode.c    ****     Motion_End();
 3223              		.loc 1 1029 0
 3224 0084 FFF7FEFF 		bl	Motion_End
 3225              	.LVL347:
1030:Src/mode.c    ****     motor_flag = FALSE;
 3226              		.loc 1 1030 0
 3227 0088 024B     		ldr	r3, .L269
 3228 008a 0022     		movs	r2, #0
 3229 008c 1A70     		strb	r2, [r3]
1031:Src/mode.c    **** }
 3230              		.loc 1 1031 0
 3231 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3232              	.LVL348:
 3233              	.L270:
 3234 0092 00BF     		.align	2
 3235              	.L269:
 3236 0094 00000000 		.word	motor_flag
 3237              		.cfi_endproc
 3238              	.LFE144:
 3240              		.section	.text.TestComb,"ax",%progbits
 3241              		.align	1
 3242              		.global	TestComb
 3243              		.syntax unified
 3244              		.thumb
 3245              		.thumb_func
 3246              		.fpu fpv4-sp-d16
 3248              	TestComb:
 3249              	.LFB145:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 79


1032:Src/mode.c    **** 
1033:Src/mode.c    **** void TestComb(uint8_t num, uint8_t dir)
1034:Src/mode.c    **** {
 3250              		.loc 1 1034 0
 3251              		.cfi_startproc
 3252              		@ args = 0, pretend = 0, frame = 0
 3253              		@ frame_needed = 0, uses_anonymous_args = 0
 3254              	.LVL349:
 3255 0000 38B5     		push	{r3, r4, r5, lr}
 3256              	.LCFI40:
 3257              		.cfi_def_cfa_offset 16
 3258              		.cfi_offset 3, -16
 3259              		.cfi_offset 4, -12
 3260              		.cfi_offset 5, -8
 3261              		.cfi_offset 14, -4
 3262 0002 0546     		mov	r5, r0
1035:Src/mode.c    ****     if (dir == LEFT)
 3263              		.loc 1 1035 0
 3264 0004 0129     		cmp	r1, #1
 3265 0006 05D0     		beq	.L279
1036:Src/mode.c    ****     {
1037:Src/mode.c    ****         Motion_Start();
1038:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
1039:Src/mode.c    ****         {
1040:Src/mode.c    ****             Motion_LeftTurn();
1041:Src/mode.c    ****             Motion_WallSpinTurn();
1042:Src/mode.c    ****             Motion_LeftTurn();
1043:Src/mode.c    ****         }
1044:Src/mode.c    ****         Motion_End();
1045:Src/mode.c    ****     }
1046:Src/mode.c    ****     else if (dir == RIGHT)
 3266              		.loc 1 1046 0
 3267 0008 0229     		cmp	r1, #2
 3268 000a 14D0     		beq	.L280
 3269              	.LVL350:
 3270              	.L275:
1047:Src/mode.c    ****     {
1048:Src/mode.c    ****         Motion_Start();
1049:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
1050:Src/mode.c    ****         {
1051:Src/mode.c    ****             Motion_RightTurn();
1052:Src/mode.c    ****             Motion_WallSpinTurn();
1053:Src/mode.c    ****             Motion_RightTurn();
1054:Src/mode.c    ****         }
1055:Src/mode.c    ****         Motion_End();
1056:Src/mode.c    ****     }
1057:Src/mode.c    ****     motor_flag = FALSE;
 3271              		.loc 1 1057 0
 3272 000c 124B     		ldr	r3, .L281
 3273 000e 0022     		movs	r2, #0
 3274 0010 1A70     		strb	r2, [r3]
1058:Src/mode.c    **** }
 3275              		.loc 1 1058 0
 3276 0012 38BD     		pop	{r3, r4, r5, pc}
 3277              	.LVL351:
 3278              	.L279:
1037:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 80


 3279              		.loc 1 1037 0
 3280 0014 FFF7FEFF 		bl	Motion_Start
 3281              	.LVL352:
 3282              	.LBB21:
1038:Src/mode.c    ****         {
 3283              		.loc 1 1038 0
 3284 0018 0024     		movs	r4, #0
 3285 001a 07E0     		b	.L273
 3286              	.LVL353:
 3287              	.L274:
1040:Src/mode.c    ****             Motion_WallSpinTurn();
 3288              		.loc 1 1040 0 discriminator 3
 3289 001c FFF7FEFF 		bl	Motion_LeftTurn
 3290              	.LVL354:
1041:Src/mode.c    ****             Motion_LeftTurn();
 3291              		.loc 1 1041 0 discriminator 3
 3292 0020 FFF7FEFF 		bl	Motion_WallSpinTurn
 3293              	.LVL355:
1042:Src/mode.c    ****         }
 3294              		.loc 1 1042 0 discriminator 3
 3295 0024 FFF7FEFF 		bl	Motion_LeftTurn
 3296              	.LVL356:
1038:Src/mode.c    ****         {
 3297              		.loc 1 1038 0 discriminator 3
 3298 0028 0134     		adds	r4, r4, #1
 3299              	.LVL357:
 3300 002a E4B2     		uxtb	r4, r4
 3301              	.LVL358:
 3302              	.L273:
1038:Src/mode.c    ****         {
 3303              		.loc 1 1038 0 is_stmt 0 discriminator 1
 3304 002c AC42     		cmp	r4, r5
 3305 002e F5D3     		bcc	.L274
 3306              	.LBE21:
1044:Src/mode.c    ****     }
 3307              		.loc 1 1044 0 is_stmt 1
 3308 0030 FFF7FEFF 		bl	Motion_End
 3309              	.LVL359:
 3310 0034 EAE7     		b	.L275
 3311              	.LVL360:
 3312              	.L280:
1048:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
 3313              		.loc 1 1048 0
 3314 0036 FFF7FEFF 		bl	Motion_Start
 3315              	.LVL361:
 3316              	.LBB22:
1049:Src/mode.c    ****         {
 3317              		.loc 1 1049 0
 3318 003a 0024     		movs	r4, #0
 3319 003c 07E0     		b	.L276
 3320              	.LVL362:
 3321              	.L277:
1051:Src/mode.c    ****             Motion_WallSpinTurn();
 3322              		.loc 1 1051 0 discriminator 3
 3323 003e FFF7FEFF 		bl	Motion_RightTurn
 3324              	.LVL363:
1052:Src/mode.c    ****             Motion_RightTurn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 81


 3325              		.loc 1 1052 0 discriminator 3
 3326 0042 FFF7FEFF 		bl	Motion_WallSpinTurn
 3327              	.LVL364:
1053:Src/mode.c    ****         }
 3328              		.loc 1 1053 0 discriminator 3
 3329 0046 FFF7FEFF 		bl	Motion_RightTurn
 3330              	.LVL365:
1049:Src/mode.c    ****         {
 3331              		.loc 1 1049 0 discriminator 3
 3332 004a 0134     		adds	r4, r4, #1
 3333              	.LVL366:
 3334 004c E4B2     		uxtb	r4, r4
 3335              	.LVL367:
 3336              	.L276:
1049:Src/mode.c    ****         {
 3337              		.loc 1 1049 0 is_stmt 0 discriminator 1
 3338 004e AC42     		cmp	r4, r5
 3339 0050 F5D3     		bcc	.L277
 3340              	.LBE22:
1055:Src/mode.c    ****     }
 3341              		.loc 1 1055 0 is_stmt 1
 3342 0052 FFF7FEFF 		bl	Motion_End
 3343              	.LVL368:
 3344 0056 D9E7     		b	.L275
 3345              	.L282:
 3346              		.align	2
 3347              	.L281:
 3348 0058 00000000 		.word	motor_flag
 3349              		.cfi_endproc
 3350              	.LFE145:
 3352              		.section	.text.TestSteps,"ax",%progbits
 3353              		.align	1
 3354              		.global	TestSteps
 3355              		.syntax unified
 3356              		.thumb
 3357              		.thumb_func
 3358              		.fpu fpv4-sp-d16
 3360              	TestSteps:
 3361              	.LFB146:
1059:Src/mode.c    **** 
1060:Src/mode.c    **** void TestSteps(uint8_t num)
1061:Src/mode.c    **** {
 3362              		.loc 1 1061 0
 3363              		.cfi_startproc
 3364              		@ args = 0, pretend = 0, frame = 0
 3365              		@ frame_needed = 0, uses_anonymous_args = 0
 3366              	.LVL369:
 3367 0000 38B5     		push	{r3, r4, r5, lr}
 3368              	.LCFI41:
 3369              		.cfi_def_cfa_offset 16
 3370              		.cfi_offset 3, -16
 3371              		.cfi_offset 4, -12
 3372              		.cfi_offset 5, -8
 3373              		.cfi_offset 14, -4
 3374 0002 0546     		mov	r5, r0
1062:Src/mode.c    ****     Motion_Start();
 3375              		.loc 1 1062 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 82


 3376 0004 FFF7FEFF 		bl	Motion_Start
 3377              	.LVL370:
 3378              	.LBB23:
1063:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3379              		.loc 1 1063 0
 3380 0008 0024     		movs	r4, #0
 3381 000a 05E0     		b	.L284
 3382              	.LVL371:
 3383              	.L285:
1064:Src/mode.c    ****     {
1065:Src/mode.c    ****         Motion_RightTurn();
 3384              		.loc 1 1065 0 discriminator 3
 3385 000c FFF7FEFF 		bl	Motion_RightTurn
 3386              	.LVL372:
1066:Src/mode.c    ****         Motion_LeftTurn();
 3387              		.loc 1 1066 0 discriminator 3
 3388 0010 FFF7FEFF 		bl	Motion_LeftTurn
 3389              	.LVL373:
1063:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3390              		.loc 1 1063 0 discriminator 3
 3391 0014 0134     		adds	r4, r4, #1
 3392              	.LVL374:
 3393 0016 E4B2     		uxtb	r4, r4
 3394              	.LVL375:
 3395              	.L284:
1063:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3396              		.loc 1 1063 0 is_stmt 0 discriminator 1
 3397 0018 AC42     		cmp	r4, r5
 3398 001a F7D3     		bcc	.L285
 3399              	.LBE23:
1067:Src/mode.c    ****     }
1068:Src/mode.c    ****     Motion_End();
 3400              		.loc 1 1068 0 is_stmt 1
 3401 001c FFF7FEFF 		bl	Motion_End
 3402              	.LVL376:
1069:Src/mode.c    ****     motor_flag = FALSE;
 3403              		.loc 1 1069 0
 3404 0020 014B     		ldr	r3, .L287
 3405 0022 0022     		movs	r2, #0
 3406 0024 1A70     		strb	r2, [r3]
1070:Src/mode.c    **** }
 3407              		.loc 1 1070 0
 3408 0026 38BD     		pop	{r3, r4, r5, pc}
 3409              	.LVL377:
 3410              	.L288:
 3411              		.align	2
 3412              	.L287:
 3413 0028 00000000 		.word	motor_flag
 3414              		.cfi_endproc
 3415              	.LFE146:
 3417              		.section	.text.Turn45_Test,"ax",%progbits
 3418              		.align	1
 3419              		.global	Turn45_Test
 3420              		.syntax unified
 3421              		.thumb
 3422              		.thumb_func
 3423              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 83


 3425              	Turn45_Test:
 3426              	.LFB147:
1071:Src/mode.c    **** 
1072:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
1073:Src/mode.c    **** {
 3427              		.loc 1 1073 0
 3428              		.cfi_startproc
 3429              		@ args = 0, pretend = 0, frame = 0
 3430              		@ frame_needed = 0, uses_anonymous_args = 0
 3431              	.LVL378:
 3432 0000 70B5     		push	{r4, r5, r6, lr}
 3433              	.LCFI42:
 3434              		.cfi_def_cfa_offset 16
 3435              		.cfi_offset 4, -16
 3436              		.cfi_offset 5, -12
 3437              		.cfi_offset 6, -8
 3438              		.cfi_offset 14, -4
 3439 0002 2DED028B 		vpush.64	{d8}
 3440              	.LCFI43:
 3441              		.cfi_def_cfa_offset 24
 3442              		.cfi_offset 80, -24
 3443              		.cfi_offset 81, -20
 3444 0006 0546     		mov	r5, r0
 3445 0008 0C46     		mov	r4, r1
 3446 000a 1646     		mov	r6, r2
1074:Src/mode.c    ****     SetRunMode(0);
 3447              		.loc 1 1074 0
 3448 000c 0020     		movs	r0, #0
 3449              	.LVL379:
 3450 000e FFF7FEFF 		bl	SetRunMode
 3451              	.LVL380:
1075:Src/mode.c    **** 
1076:Src/mode.c    ****     switch (in_dir)
 3452              		.loc 1 1076 0
 3453 0012 012D     		cmp	r5, #1
 3454 0014 2CD0     		beq	.L291
 3455 0016 45B3     		cbz	r5, .L292
 3456 0018 022D     		cmp	r5, #2
 3457 001a 38D0     		beq	.L293
 3458              	.L290:
1077:Src/mode.c    ****     {
1078:Src/mode.c    ****     case FRONT:
1079:Src/mode.c    ****         Motion_DiagonalStart();
1080:Src/mode.c    ****         break;
1081:Src/mode.c    ****     case LEFT:
1082:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1083:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1084:Src/mode.c    ****         Motion_InLeft45Turn();
1085:Src/mode.c    ****         break;
1086:Src/mode.c    ****     case RIGHT:
1087:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1088:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1089:Src/mode.c    ****         Motion_InRight45Turn();
1090:Src/mode.c    ****         break;
1091:Src/mode.c    ****     default:
1092:Src/mode.c    ****         break;
1093:Src/mode.c    ****     }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 84


1094:Src/mode.c    **** 
1095:Src/mode.c    ****     switch (out_dir)
 3459              		.loc 1 1095 0
 3460 001c 012C     		cmp	r4, #1
 3461 001e 48D0     		beq	.L295
 3462 0020 002C     		cmp	r4, #0
 3463 0022 43D0     		beq	.L296
 3464 0024 022C     		cmp	r4, #2
 3465 0026 55D0     		beq	.L297
 3466              	.L294:
1096:Src/mode.c    ****     {
1097:Src/mode.c    ****     case FRONT:
1098:Src/mode.c    ****         Motion_DiagonalStop();
1099:Src/mode.c    ****         break;
1100:Src/mode.c    ****     case LEFT:
1101:Src/mode.c    ****         if (step > 0)
1102:Src/mode.c    ****         {
1103:Src/mode.c    ****             Motion_DiagonalLeft(step);
1104:Src/mode.c    ****         }
1105:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
1106:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1107:Src/mode.c    ****         break;
1108:Src/mode.c    ****     case RIGHT:
1109:Src/mode.c    ****         if (step > 0)
1110:Src/mode.c    ****         {
1111:Src/mode.c    ****             Motion_DiagonalRight(step);
1112:Src/mode.c    ****         }
1113:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
1114:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1115:Src/mode.c    ****         break;
1116:Src/mode.c    ****     default:
1117:Src/mode.c    ****         break;
1118:Src/mode.c    ****     }
1119:Src/mode.c    **** 
1120:Src/mode.c    ****     motor_flag = FALSE;
 3467              		.loc 1 1120 0
 3468 0028 0024     		movs	r4, #0
 3469 002a 334B     		ldr	r3, .L303
 3470 002c 1C70     		strb	r4, [r3]
1121:Src/mode.c    ****     HAL_Delay(500);
 3471              		.loc 1 1121 0
 3472 002e 4FF4FA70 		mov	r0, #500
 3473 0032 FFF7FEFF 		bl	HAL_Delay
 3474              	.LVL381:
1122:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3475              		.loc 1 1122 0
 3476 0036 49F64242 		movw	r2, #40002
 3477 003a 3049     		ldr	r1, .L303+4
 3478 003c 304B     		ldr	r3, .L303+8
 3479 003e 1868     		ldr	r0, [r3]
 3480 0040 FFF7FEFF 		bl	Flash_Write
 3481              	.LVL382:
1123:Src/mode.c    ****     HAL_Delay(300);
 3482              		.loc 1 1123 0
 3483 0044 4FF49670 		mov	r0, #300
 3484 0048 FFF7FEFF 		bl	HAL_Delay
 3485              	.LVL383:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 85


1124:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3486              		.loc 1 1124 0
 3487 004c 4FF49671 		mov	r1, #300
 3488 0050 4C20     		movs	r0, #76
 3489 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3490              	.LVL384:
1125:Src/mode.c    ****     HAL_Delay(200);
 3491              		.loc 1 1125 0
 3492 0056 C820     		movs	r0, #200
 3493 0058 FFF7FEFF 		bl	HAL_Delay
 3494              	.LVL385:
1126:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3495              		.loc 1 1126 0
 3496 005c 2146     		mov	r1, r4
 3497 005e 0A20     		movs	r0, #10
 3498 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 3499              	.LVL386:
1127:Src/mode.c    **** }
 3500              		.loc 1 1127 0
 3501 0064 BDEC028B 		vldm	sp!, {d8}
 3502              	.LCFI44:
 3503              		.cfi_remember_state
 3504              		.cfi_restore 80
 3505              		.cfi_restore 81
 3506              		.cfi_def_cfa_offset 16
 3507 0068 70BD     		pop	{r4, r5, r6, pc}
 3508              	.L292:
 3509              	.LCFI45:
 3510              		.cfi_restore_state
1079:Src/mode.c    ****         break;
 3511              		.loc 1 1079 0
 3512 006a FFF7FEFF 		bl	Motion_DiagonalStart
 3513              	.LVL387:
1080:Src/mode.c    ****     case LEFT:
 3514              		.loc 1 1080 0
 3515 006e D5E7     		b	.L290
 3516              	.L291:
1082:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
 3517              		.loc 1 1082 0
 3518 0070 9FED248A 		vldr.32	s16, .L303+12
 3519 0074 B0EE480A 		vmov.f32	s0, s16
 3520 0078 0120     		movs	r0, #1
 3521 007a FFF7FEFF 		bl	Motion_FastStart
 3522              	.LVL388:
1083:Src/mode.c    ****         Motion_InLeft45Turn();
 3523              		.loc 1 1083 0
 3524 007e B0EE480A 		vmov.f32	s0, s16
 3525 0082 0120     		movs	r0, #1
 3526 0084 FFF7FEFF 		bl	Motion_Adjust_L
 3527              	.LVL389:
1084:Src/mode.c    ****         break;
 3528              		.loc 1 1084 0
 3529 0088 FFF7FEFF 		bl	Motion_InLeft45Turn
 3530              	.LVL390:
1085:Src/mode.c    ****     case RIGHT:
 3531              		.loc 1 1085 0
 3532 008c C6E7     		b	.L290
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 86


 3533              	.L293:
1087:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 3534              		.loc 1 1087 0
 3535 008e 9FED1D8A 		vldr.32	s16, .L303+12
 3536 0092 B0EE480A 		vmov.f32	s0, s16
 3537 0096 0120     		movs	r0, #1
 3538 0098 FFF7FEFF 		bl	Motion_FastStart
 3539              	.LVL391:
1088:Src/mode.c    ****         Motion_InRight45Turn();
 3540              		.loc 1 1088 0
 3541 009c B0EE480A 		vmov.f32	s0, s16
 3542 00a0 0120     		movs	r0, #1
 3543 00a2 FFF7FEFF 		bl	Motion_Adjust_R
 3544              	.LVL392:
1089:Src/mode.c    ****         break;
 3545              		.loc 1 1089 0
 3546 00a6 FFF7FEFF 		bl	Motion_InRight45Turn
 3547              	.LVL393:
1090:Src/mode.c    ****     default:
 3548              		.loc 1 1090 0
 3549 00aa B7E7     		b	.L290
 3550              	.L296:
1098:Src/mode.c    ****         break;
 3551              		.loc 1 1098 0
 3552 00ac FFF7FEFF 		bl	Motion_DiagonalStop
 3553              	.LVL394:
1099:Src/mode.c    ****     case LEFT:
 3554              		.loc 1 1099 0
 3555 00b0 BAE7     		b	.L294
 3556              	.L295:
1101:Src/mode.c    ****         {
 3557              		.loc 1 1101 0
 3558 00b2 5EB9     		cbnz	r6, .L301
 3559              	.L298:
1105:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3560              		.loc 1 1105 0
 3561 00b4 9FED138A 		vldr.32	s16, .L303+12
 3562 00b8 B0EE480A 		vmov.f32	s0, s16
 3563 00bc FFF7FEFF 		bl	Motion_OutLeft45Turn
 3564              	.LVL395:
1106:Src/mode.c    ****         break;
 3565              		.loc 1 1106 0
 3566 00c0 B0EE480A 		vmov.f32	s0, s16
 3567 00c4 0120     		movs	r0, #1
 3568 00c6 FFF7FEFF 		bl	Motion_FastGoal
 3569              	.LVL396:
1107:Src/mode.c    ****     case RIGHT:
 3570              		.loc 1 1107 0
 3571 00ca ADE7     		b	.L294
 3572              	.L301:
1103:Src/mode.c    ****         }
 3573              		.loc 1 1103 0
 3574 00cc 3046     		mov	r0, r6
 3575 00ce FFF7FEFF 		bl	Motion_DiagonalLeft
 3576              	.LVL397:
 3577 00d2 EFE7     		b	.L298
 3578              	.L297:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 87


1109:Src/mode.c    ****         {
 3579              		.loc 1 1109 0
 3580 00d4 5EB9     		cbnz	r6, .L302
 3581              	.L299:
1113:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3582              		.loc 1 1113 0
 3583 00d6 9FED0B8A 		vldr.32	s16, .L303+12
 3584 00da B0EE480A 		vmov.f32	s0, s16
 3585 00de FFF7FEFF 		bl	Motion_OutRight45Turn
 3586              	.LVL398:
1114:Src/mode.c    ****         break;
 3587              		.loc 1 1114 0
 3588 00e2 B0EE480A 		vmov.f32	s0, s16
 3589 00e6 0120     		movs	r0, #1
 3590 00e8 FFF7FEFF 		bl	Motion_FastGoal
 3591              	.LVL399:
1115:Src/mode.c    ****     default:
 3592              		.loc 1 1115 0
 3593 00ec 9CE7     		b	.L294
 3594              	.L302:
1111:Src/mode.c    ****         }
 3595              		.loc 1 1111 0
 3596 00ee 3046     		mov	r0, r6
 3597 00f0 FFF7FEFF 		bl	Motion_DiagonalRight
 3598              	.LVL400:
 3599 00f4 EFE7     		b	.L299
 3600              	.L304:
 3601 00f6 00BF     		.align	2
 3602              	.L303:
 3603 00f8 00000000 		.word	motor_flag
 3604 00fc 00000000 		.word	loger
 3605 0100 00000000 		.word	start_address
 3606 0104 00004844 		.word	1145569280
 3607              		.cfi_endproc
 3608              	.LFE147:
 3610              		.section	.text.Turn135_Test,"ax",%progbits
 3611              		.align	1
 3612              		.global	Turn135_Test
 3613              		.syntax unified
 3614              		.thumb
 3615              		.thumb_func
 3616              		.fpu fpv4-sp-d16
 3618              	Turn135_Test:
 3619              	.LFB148:
1128:Src/mode.c    **** 
1129:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
1130:Src/mode.c    **** {
 3620              		.loc 1 1130 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 0
 3623              		@ frame_needed = 0, uses_anonymous_args = 0
 3624              	.LVL401:
 3625 0000 70B5     		push	{r4, r5, r6, lr}
 3626              	.LCFI46:
 3627              		.cfi_def_cfa_offset 16
 3628              		.cfi_offset 4, -16
 3629              		.cfi_offset 5, -12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 88


 3630              		.cfi_offset 6, -8
 3631              		.cfi_offset 14, -4
 3632 0002 2DED028B 		vpush.64	{d8}
 3633              	.LCFI47:
 3634              		.cfi_def_cfa_offset 24
 3635              		.cfi_offset 80, -24
 3636              		.cfi_offset 81, -20
 3637 0006 0546     		mov	r5, r0
 3638 0008 0C46     		mov	r4, r1
 3639 000a 1646     		mov	r6, r2
1131:Src/mode.c    ****     SetRunMode(0);
 3640              		.loc 1 1131 0
 3641 000c 0020     		movs	r0, #0
 3642              	.LVL402:
 3643 000e FFF7FEFF 		bl	SetRunMode
 3644              	.LVL403:
1132:Src/mode.c    **** 
1133:Src/mode.c    ****     switch (in_dir)
 3645              		.loc 1 1133 0
 3646 0012 012D     		cmp	r5, #1
 3647 0014 2CD0     		beq	.L307
 3648 0016 45B3     		cbz	r5, .L308
 3649 0018 022D     		cmp	r5, #2
 3650 001a 3BD0     		beq	.L309
 3651              	.L306:
1134:Src/mode.c    ****     {
1135:Src/mode.c    ****     case FRONT:
1136:Src/mode.c    ****         Motion_DiagonalStart();
1137:Src/mode.c    ****         break;
1138:Src/mode.c    ****     case LEFT:
1139:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1140:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1141:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
1142:Src/mode.c    ****         break;
1143:Src/mode.c    ****     case RIGHT:
1144:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1145:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1146:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
1147:Src/mode.c    ****         break;
1148:Src/mode.c    ****     default:
1149:Src/mode.c    ****         break;
1150:Src/mode.c    ****     }
1151:Src/mode.c    **** 
1152:Src/mode.c    ****     switch (out_dir)
 3652              		.loc 1 1152 0
 3653 001c 012C     		cmp	r4, #1
 3654 001e 4ED0     		beq	.L311
 3655 0020 002C     		cmp	r4, #0
 3656 0022 49D0     		beq	.L312
 3657 0024 022C     		cmp	r4, #2
 3658 0026 5AD0     		beq	.L313
 3659              	.L310:
1153:Src/mode.c    ****     {
1154:Src/mode.c    ****     case FRONT:
1155:Src/mode.c    ****         Motion_DiagonalStop();
1156:Src/mode.c    ****         break;
1157:Src/mode.c    ****     case LEFT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 89


1158:Src/mode.c    ****         Motion_DiagonalLeft(step);
1159:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
1160:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1161:Src/mode.c    ****         break;
1162:Src/mode.c    ****     case RIGHT:
1163:Src/mode.c    ****         Motion_DiagonalRight(step);
1164:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
1165:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1166:Src/mode.c    ****         break;
1167:Src/mode.c    ****     default:
1168:Src/mode.c    ****         break;
1169:Src/mode.c    ****     }
1170:Src/mode.c    **** 
1171:Src/mode.c    ****     motor_flag = FALSE;
 3660              		.loc 1 1171 0
 3661 0028 0024     		movs	r4, #0
 3662 002a 354B     		ldr	r3, .L315
 3663 002c 1C70     		strb	r4, [r3]
1172:Src/mode.c    ****     HAL_Delay(500);
 3664              		.loc 1 1172 0
 3665 002e 4FF4FA70 		mov	r0, #500
 3666 0032 FFF7FEFF 		bl	HAL_Delay
 3667              	.LVL404:
1173:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3668              		.loc 1 1173 0
 3669 0036 49F64242 		movw	r2, #40002
 3670 003a 3249     		ldr	r1, .L315+4
 3671 003c 324B     		ldr	r3, .L315+8
 3672 003e 1868     		ldr	r0, [r3]
 3673 0040 FFF7FEFF 		bl	Flash_Write
 3674              	.LVL405:
1174:Src/mode.c    ****     HAL_Delay(300);
 3675              		.loc 1 1174 0
 3676 0044 4FF49670 		mov	r0, #300
 3677 0048 FFF7FEFF 		bl	HAL_Delay
 3678              	.LVL406:
1175:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3679              		.loc 1 1175 0
 3680 004c 4FF49671 		mov	r1, #300
 3681 0050 4C20     		movs	r0, #76
 3682 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3683              	.LVL407:
1176:Src/mode.c    ****     HAL_Delay(200);
 3684              		.loc 1 1176 0
 3685 0056 C820     		movs	r0, #200
 3686 0058 FFF7FEFF 		bl	HAL_Delay
 3687              	.LVL408:
1177:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3688              		.loc 1 1177 0
 3689 005c 2146     		mov	r1, r4
 3690 005e 0A20     		movs	r0, #10
 3691 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 3692              	.LVL409:
1178:Src/mode.c    **** }
 3693              		.loc 1 1178 0
 3694 0064 BDEC028B 		vldm	sp!, {d8}
 3695              	.LCFI48:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 90


 3696              		.cfi_remember_state
 3697              		.cfi_restore 80
 3698              		.cfi_restore 81
 3699              		.cfi_def_cfa_offset 16
 3700 0068 70BD     		pop	{r4, r5, r6, pc}
 3701              	.L308:
 3702              	.LCFI49:
 3703              		.cfi_restore_state
1136:Src/mode.c    ****         break;
 3704              		.loc 1 1136 0
 3705 006a FFF7FEFF 		bl	Motion_DiagonalStart
 3706              	.LVL410:
1137:Src/mode.c    ****     case LEFT:
 3707              		.loc 1 1137 0
 3708 006e D5E7     		b	.L306
 3709              	.L307:
1139:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
 3710              		.loc 1 1139 0
 3711 0070 9FED268A 		vldr.32	s16, .L315+12
 3712 0074 B0EE480A 		vmov.f32	s0, s16
 3713 0078 0120     		movs	r0, #1
 3714 007a FFF7FEFF 		bl	Motion_FastStart
 3715              	.LVL411:
1140:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 3716              		.loc 1 1140 0
 3717 007e B0EE480A 		vmov.f32	s0, s16
 3718 0082 0120     		movs	r0, #1
 3719 0084 FFF7FEFF 		bl	Motion_Adjust_L
 3720              	.LVL412:
1141:Src/mode.c    ****         break;
 3721              		.loc 1 1141 0
 3722 0088 B0EE480A 		vmov.f32	s0, s16
 3723 008c 0220     		movs	r0, #2
 3724 008e FFF7FEFF 		bl	Motion_FastLeftTurn
 3725              	.LVL413:
1142:Src/mode.c    ****     case RIGHT:
 3726              		.loc 1 1142 0
 3727 0092 C3E7     		b	.L306
 3728              	.L309:
1144:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 3729              		.loc 1 1144 0
 3730 0094 9FED1D8A 		vldr.32	s16, .L315+12
 3731 0098 B0EE480A 		vmov.f32	s0, s16
 3732 009c 0120     		movs	r0, #1
 3733 009e FFF7FEFF 		bl	Motion_FastStart
 3734              	.LVL414:
1145:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 3735              		.loc 1 1145 0
 3736 00a2 B0EE480A 		vmov.f32	s0, s16
 3737 00a6 0120     		movs	r0, #1
 3738 00a8 FFF7FEFF 		bl	Motion_Adjust_R
 3739              	.LVL415:
1146:Src/mode.c    ****         break;
 3740              		.loc 1 1146 0
 3741 00ac B0EE480A 		vmov.f32	s0, s16
 3742 00b0 0220     		movs	r0, #2
 3743 00b2 FFF7FEFF 		bl	Motion_FastRightTurn
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 91


 3744              	.LVL416:
1147:Src/mode.c    ****     default:
 3745              		.loc 1 1147 0
 3746 00b6 B1E7     		b	.L306
 3747              	.L312:
1155:Src/mode.c    ****         break;
 3748              		.loc 1 1155 0
 3749 00b8 FFF7FEFF 		bl	Motion_DiagonalStop
 3750              	.LVL417:
1156:Src/mode.c    ****     case LEFT:
 3751              		.loc 1 1156 0
 3752 00bc B4E7     		b	.L310
 3753              	.L311:
1158:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
 3754              		.loc 1 1158 0
 3755 00be 3046     		mov	r0, r6
 3756 00c0 FFF7FEFF 		bl	Motion_DiagonalLeft
 3757              	.LVL418:
1159:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3758              		.loc 1 1159 0
 3759 00c4 9FED118A 		vldr.32	s16, .L315+12
 3760 00c8 B0EE480A 		vmov.f32	s0, s16
 3761 00cc 0620     		movs	r0, #6
 3762 00ce FFF7FEFF 		bl	Motion_FastLeftTurn
 3763              	.LVL419:
1160:Src/mode.c    ****         break;
 3764              		.loc 1 1160 0
 3765 00d2 B0EE480A 		vmov.f32	s0, s16
 3766 00d6 0120     		movs	r0, #1
 3767 00d8 FFF7FEFF 		bl	Motion_FastGoal
 3768              	.LVL420:
1161:Src/mode.c    ****     case RIGHT:
 3769              		.loc 1 1161 0
 3770 00dc A4E7     		b	.L310
 3771              	.L313:
1163:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
 3772              		.loc 1 1163 0
 3773 00de 3046     		mov	r0, r6
 3774 00e0 FFF7FEFF 		bl	Motion_DiagonalRight
 3775              	.LVL421:
1164:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3776              		.loc 1 1164 0
 3777 00e4 9FED098A 		vldr.32	s16, .L315+12
 3778 00e8 B0EE480A 		vmov.f32	s0, s16
 3779 00ec 0620     		movs	r0, #6
 3780 00ee FFF7FEFF 		bl	Motion_FastRightTurn
 3781              	.LVL422:
1165:Src/mode.c    ****         break;
 3782              		.loc 1 1165 0
 3783 00f2 B0EE480A 		vmov.f32	s0, s16
 3784 00f6 0120     		movs	r0, #1
 3785 00f8 FFF7FEFF 		bl	Motion_FastGoal
 3786              	.LVL423:
1166:Src/mode.c    ****     default:
 3787              		.loc 1 1166 0
 3788 00fc 94E7     		b	.L310
 3789              	.L316:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 92


 3790 00fe 00BF     		.align	2
 3791              	.L315:
 3792 0100 00000000 		.word	motor_flag
 3793 0104 00000000 		.word	loger
 3794 0108 00000000 		.word	start_address
 3795 010c 00004844 		.word	1145569280
 3796              		.cfi_endproc
 3797              	.LFE148:
 3799              		.section	.text.TurnBig90_Test,"ax",%progbits
 3800              		.align	1
 3801              		.global	TurnBig90_Test
 3802              		.syntax unified
 3803              		.thumb
 3804              		.thumb_func
 3805              		.fpu fpv4-sp-d16
 3807              	TurnBig90_Test:
 3808              	.LFB149:
1179:Src/mode.c    **** 
1180:Src/mode.c    **** void TurnBig90_Test(int8_t dir)
1181:Src/mode.c    **** {
 3809              		.loc 1 1181 0
 3810              		.cfi_startproc
 3811              		@ args = 0, pretend = 0, frame = 0
 3812              		@ frame_needed = 0, uses_anonymous_args = 0
 3813              	.LVL424:
 3814 0000 10B5     		push	{r4, lr}
 3815              	.LCFI50:
 3816              		.cfi_def_cfa_offset 8
 3817              		.cfi_offset 4, -8
 3818              		.cfi_offset 14, -4
 3819 0002 2DED028B 		vpush.64	{d8}
 3820              	.LCFI51:
 3821              		.cfi_def_cfa_offset 16
 3822              		.cfi_offset 80, -16
 3823              		.cfi_offset 81, -12
 3824 0006 0446     		mov	r4, r0
1182:Src/mode.c    ****     SetRunMode(0);
 3825              		.loc 1 1182 0
 3826 0008 0020     		movs	r0, #0
 3827              	.LVL425:
 3828 000a FFF7FEFF 		bl	SetRunMode
 3829              	.LVL426:
1183:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3830              		.loc 1 1183 0
 3831 000e 9FED1C0A 		vldr.32	s0, .L323
 3832 0012 0120     		movs	r0, #1
 3833 0014 FFF7FEFF 		bl	Motion_FastStart
 3834              	.LVL427:
1184:Src/mode.c    ****     if (dir == LEFT)
 3835              		.loc 1 1184 0
 3836 0018 012C     		cmp	r4, #1
 3837 001a 18D0     		beq	.L321
1185:Src/mode.c    ****     {
1186:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1187:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
1188:Src/mode.c    ****     }
1189:Src/mode.c    ****     else if (dir == RIGHT)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 93


 3838              		.loc 1 1189 0
 3839 001c 022C     		cmp	r4, #2
 3840 001e 22D0     		beq	.L322
 3841              	.L319:
1190:Src/mode.c    ****     {
1191:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1192:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
1193:Src/mode.c    ****     }
1194:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3842              		.loc 1 1194 0
 3843 0020 9FED170A 		vldr.32	s0, .L323
 3844 0024 0120     		movs	r0, #1
 3845 0026 FFF7FEFF 		bl	Motion_FastGoal
 3846              	.LVL428:
1195:Src/mode.c    ****     motor_flag = FALSE;
 3847              		.loc 1 1195 0
 3848 002a 0024     		movs	r4, #0
 3849 002c 154B     		ldr	r3, .L323+4
 3850 002e 1C70     		strb	r4, [r3]
1196:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3851              		.loc 1 1196 0
 3852 0030 4FF49671 		mov	r1, #300
 3853 0034 4C20     		movs	r0, #76
 3854 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 3855              	.LVL429:
1197:Src/mode.c    ****     HAL_Delay(200);
 3856              		.loc 1 1197 0
 3857 003a C820     		movs	r0, #200
 3858 003c FFF7FEFF 		bl	HAL_Delay
 3859              	.LVL430:
1198:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3860              		.loc 1 1198 0
 3861 0040 2146     		mov	r1, r4
 3862 0042 0A20     		movs	r0, #10
 3863 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 3864              	.LVL431:
1199:Src/mode.c    **** }
 3865              		.loc 1 1199 0
 3866 0048 BDEC028B 		vldm	sp!, {d8}
 3867              	.LCFI52:
 3868              		.cfi_remember_state
 3869              		.cfi_restore 80
 3870              		.cfi_restore 81
 3871              		.cfi_def_cfa_offset 8
 3872 004c 10BD     		pop	{r4, pc}
 3873              	.L321:
 3874              	.LCFI53:
 3875              		.cfi_restore_state
1186:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
 3876              		.loc 1 1186 0
 3877 004e 9FED0C8A 		vldr.32	s16, .L323
 3878 0052 B0EE480A 		vmov.f32	s0, s16
 3879 0056 0120     		movs	r0, #1
 3880 0058 FFF7FEFF 		bl	Motion_Adjust_L
 3881              	.LVL432:
1187:Src/mode.c    ****     }
 3882              		.loc 1 1187 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 94


 3883 005c B0EE480A 		vmov.f32	s0, s16
 3884 0060 FFF7FEFF 		bl	Motion_Left90Turn
 3885              	.LVL433:
 3886 0064 DCE7     		b	.L319
 3887              	.L322:
1191:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
 3888              		.loc 1 1191 0
 3889 0066 9FED068A 		vldr.32	s16, .L323
 3890 006a B0EE480A 		vmov.f32	s0, s16
 3891 006e 0120     		movs	r0, #1
 3892 0070 FFF7FEFF 		bl	Motion_Adjust_R
 3893              	.LVL434:
1192:Src/mode.c    ****     }
 3894              		.loc 1 1192 0
 3895 0074 B0EE480A 		vmov.f32	s0, s16
 3896 0078 FFF7FEFF 		bl	Motion_Right90Turn
 3897              	.LVL435:
 3898 007c D0E7     		b	.L319
 3899              	.L324:
 3900 007e 00BF     		.align	2
 3901              	.L323:
 3902 0080 00004844 		.word	1145569280
 3903 0084 00000000 		.word	motor_flag
 3904              		.cfi_endproc
 3905              	.LFE149:
 3907              		.section	.text.TurnBig180_Test,"ax",%progbits
 3908              		.align	1
 3909              		.global	TurnBig180_Test
 3910              		.syntax unified
 3911              		.thumb
 3912              		.thumb_func
 3913              		.fpu fpv4-sp-d16
 3915              	TurnBig180_Test:
 3916              	.LFB150:
1200:Src/mode.c    **** 
1201:Src/mode.c    **** void TurnBig180_Test(int8_t dir)
1202:Src/mode.c    **** {
 3917              		.loc 1 1202 0
 3918              		.cfi_startproc
 3919              		@ args = 0, pretend = 0, frame = 0
 3920              		@ frame_needed = 0, uses_anonymous_args = 0
 3921              	.LVL436:
 3922 0000 10B5     		push	{r4, lr}
 3923              	.LCFI54:
 3924              		.cfi_def_cfa_offset 8
 3925              		.cfi_offset 4, -8
 3926              		.cfi_offset 14, -4
 3927 0002 2DED028B 		vpush.64	{d8}
 3928              	.LCFI55:
 3929              		.cfi_def_cfa_offset 16
 3930              		.cfi_offset 80, -16
 3931              		.cfi_offset 81, -12
 3932 0006 0446     		mov	r4, r0
1203:Src/mode.c    ****     SetRunMode(0);
 3933              		.loc 1 1203 0
 3934 0008 0020     		movs	r0, #0
 3935              	.LVL437:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 95


 3936 000a FFF7FEFF 		bl	SetRunMode
 3937              	.LVL438:
1204:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3938              		.loc 1 1204 0
 3939 000e 9FED1F8A 		vldr.32	s16, .L331
 3940 0012 B0EE480A 		vmov.f32	s0, s16
 3941 0016 0120     		movs	r0, #1
 3942 0018 FFF7FEFF 		bl	Motion_FastStart
 3943              	.LVL439:
1205:Src/mode.c    ****     Motion_Adjust(1, VELO_F);
 3944              		.loc 1 1205 0
 3945 001c B0EE480A 		vmov.f32	s0, s16
 3946 0020 0120     		movs	r0, #1
 3947 0022 FFF7FEFF 		bl	Motion_Adjust
 3948              	.LVL440:
1206:Src/mode.c    ****     if (dir == LEFT)
 3949              		.loc 1 1206 0
 3950 0026 012C     		cmp	r4, #1
 3951 0028 18D0     		beq	.L329
1207:Src/mode.c    ****     {
1208:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1209:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
1210:Src/mode.c    ****     }
1211:Src/mode.c    ****     else if (dir == RIGHT)
 3952              		.loc 1 1211 0
 3953 002a 022C     		cmp	r4, #2
 3954 002c 21D0     		beq	.L330
 3955              	.L327:
1212:Src/mode.c    ****     {
1213:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1214:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
1215:Src/mode.c    ****     }
1216:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3956              		.loc 1 1216 0
 3957 002e 9FED170A 		vldr.32	s0, .L331
 3958 0032 0120     		movs	r0, #1
 3959 0034 FFF7FEFF 		bl	Motion_FastGoal
 3960              	.LVL441:
1217:Src/mode.c    ****     motor_flag = FALSE;
 3961              		.loc 1 1217 0
 3962 0038 0024     		movs	r4, #0
 3963 003a 154B     		ldr	r3, .L331+4
 3964 003c 1C70     		strb	r4, [r3]
1218:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3965              		.loc 1 1218 0
 3966 003e 4FF49671 		mov	r1, #300
 3967 0042 4C20     		movs	r0, #76
 3968 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 3969              	.LVL442:
1219:Src/mode.c    ****     HAL_Delay(200);
 3970              		.loc 1 1219 0
 3971 0048 C820     		movs	r0, #200
 3972 004a FFF7FEFF 		bl	HAL_Delay
 3973              	.LVL443:
1220:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3974              		.loc 1 1220 0
 3975 004e 2146     		mov	r1, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 96


 3976 0050 0A20     		movs	r0, #10
 3977 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3978              	.LVL444:
1221:Src/mode.c    **** }
 3979              		.loc 1 1221 0
 3980 0056 BDEC028B 		vldm	sp!, {d8}
 3981              	.LCFI56:
 3982              		.cfi_remember_state
 3983              		.cfi_restore 80
 3984              		.cfi_restore 81
 3985              		.cfi_def_cfa_offset 8
 3986 005a 10BD     		pop	{r4, pc}
 3987              	.L329:
 3988              	.LCFI57:
 3989              		.cfi_restore_state
1208:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
 3990              		.loc 1 1208 0
 3991 005c B0EE480A 		vmov.f32	s0, s16
 3992 0060 0120     		movs	r0, #1
 3993 0062 FFF7FEFF 		bl	Motion_Adjust_L
 3994              	.LVL445:
1209:Src/mode.c    ****     }
 3995              		.loc 1 1209 0
 3996 0066 B0EE480A 		vmov.f32	s0, s16
 3997 006a 0420     		movs	r0, #4
 3998 006c FFF7FEFF 		bl	Motion_FastLeftTurn
 3999              	.LVL446:
 4000 0070 DDE7     		b	.L327
 4001              	.L330:
1213:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
 4002              		.loc 1 1213 0
 4003 0072 9FED068A 		vldr.32	s16, .L331
 4004 0076 B0EE480A 		vmov.f32	s0, s16
 4005 007a 0120     		movs	r0, #1
 4006 007c FFF7FEFF 		bl	Motion_Adjust_R
 4007              	.LVL447:
1214:Src/mode.c    ****     }
 4008              		.loc 1 1214 0
 4009 0080 B0EE480A 		vmov.f32	s0, s16
 4010 0084 0420     		movs	r0, #4
 4011 0086 FFF7FEFF 		bl	Motion_FastRightTurn
 4012              	.LVL448:
 4013 008a D0E7     		b	.L327
 4014              	.L332:
 4015              		.align	2
 4016              	.L331:
 4017 008c 00004844 		.word	1145569280
 4018 0090 00000000 		.word	motor_flag
 4019              		.cfi_endproc
 4020              	.LFE150:
 4022              		.section	.text.TurnV90_Test,"ax",%progbits
 4023              		.align	1
 4024              		.global	TurnV90_Test
 4025              		.syntax unified
 4026              		.thumb
 4027              		.thumb_func
 4028              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 97


 4030              	TurnV90_Test:
 4031              	.LFB151:
1222:Src/mode.c    **** 
1223:Src/mode.c    **** void TurnV90_Test(int8_t dir)
1224:Src/mode.c    **** {
 4032              		.loc 1 1224 0
 4033              		.cfi_startproc
 4034              		@ args = 0, pretend = 0, frame = 0
 4035              		@ frame_needed = 0, uses_anonymous_args = 0
 4036              	.LVL449:
 4037 0000 10B5     		push	{r4, lr}
 4038              	.LCFI58:
 4039              		.cfi_def_cfa_offset 8
 4040              		.cfi_offset 4, -8
 4041              		.cfi_offset 14, -4
 4042 0002 2DED028B 		vpush.64	{d8}
 4043              	.LCFI59:
 4044              		.cfi_def_cfa_offset 16
 4045              		.cfi_offset 80, -16
 4046              		.cfi_offset 81, -12
 4047 0006 0446     		mov	r4, r0
1225:Src/mode.c    ****     SetRunMode(0);
 4048              		.loc 1 1225 0
 4049 0008 0020     		movs	r0, #0
 4050              	.LVL450:
 4051 000a FFF7FEFF 		bl	SetRunMode
 4052              	.LVL451:
1226:Src/mode.c    ****     Motion_DiagonalStart();
 4053              		.loc 1 1226 0
 4054 000e FFF7FEFF 		bl	Motion_DiagonalStart
 4055              	.LVL452:
1227:Src/mode.c    **** 
1228:Src/mode.c    ****     if (dir == LEFT)
 4056              		.loc 1 1228 0
 4057 0012 012C     		cmp	r4, #1
 4058 0014 1FD0     		beq	.L337
1229:Src/mode.c    ****     {
1230:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1231:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
1232:Src/mode.c    ****     }
1233:Src/mode.c    ****     else
1234:Src/mode.c    ****     {
1235:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 4059              		.loc 1 1235 0
 4060 0016 9FED168A 		vldr.32	s16, .L338
 4061 001a B0EE480A 		vmov.f32	s0, s16
 4062 001e 0120     		movs	r0, #1
 4063 0020 FFF7FEFF 		bl	Motion_Adjust_R
 4064              	.LVL453:
1236:Src/mode.c    ****         Motion_FastRightTurn(T_V90, 800.0f);
 4065              		.loc 1 1236 0
 4066 0024 B0EE480A 		vmov.f32	s0, s16
 4067 0028 0720     		movs	r0, #7
 4068 002a FFF7FEFF 		bl	Motion_FastRightTurn
 4069              	.LVL454:
 4070              	.L335:
1237:Src/mode.c    ****     }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 98


1238:Src/mode.c    ****     Motion_DiagonalStop();
 4071              		.loc 1 1238 0
 4072 002e FFF7FEFF 		bl	Motion_DiagonalStop
 4073              	.LVL455:
1239:Src/mode.c    ****     motor_flag = FALSE;
 4074              		.loc 1 1239 0
 4075 0032 0024     		movs	r4, #0
 4076 0034 0F4B     		ldr	r3, .L338+4
 4077 0036 1C70     		strb	r4, [r3]
1240:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4078              		.loc 1 1240 0
 4079 0038 4FF49671 		mov	r1, #300
 4080 003c 4C20     		movs	r0, #76
 4081 003e FFF7FEFF 		bl	Tim_BuzzerPwm
 4082              	.LVL456:
1241:Src/mode.c    ****     HAL_Delay(200);
 4083              		.loc 1 1241 0
 4084 0042 C820     		movs	r0, #200
 4085 0044 FFF7FEFF 		bl	HAL_Delay
 4086              	.LVL457:
1242:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4087              		.loc 1 1242 0
 4088 0048 2146     		mov	r1, r4
 4089 004a 0A20     		movs	r0, #10
 4090 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 4091              	.LVL458:
1243:Src/mode.c    **** }
 4092              		.loc 1 1243 0
 4093 0050 BDEC028B 		vldm	sp!, {d8}
 4094              	.LCFI60:
 4095              		.cfi_remember_state
 4096              		.cfi_restore 80
 4097              		.cfi_restore 81
 4098              		.cfi_def_cfa_offset 8
 4099 0054 10BD     		pop	{r4, pc}
 4100              	.L337:
 4101              	.LCFI61:
 4102              		.cfi_restore_state
1230:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 4103              		.loc 1 1230 0
 4104 0056 9FED068A 		vldr.32	s16, .L338
 4105 005a B0EE480A 		vmov.f32	s0, s16
 4106 005e 0120     		movs	r0, #1
 4107 0060 FFF7FEFF 		bl	Motion_Adjust_L
 4108              	.LVL459:
1231:Src/mode.c    ****     }
 4109              		.loc 1 1231 0
 4110 0064 B0EE480A 		vmov.f32	s0, s16
 4111 0068 0720     		movs	r0, #7
 4112 006a FFF7FEFF 		bl	Motion_FastLeftTurn
 4113              	.LVL460:
 4114 006e DEE7     		b	.L335
 4115              	.L339:
 4116              		.align	2
 4117              	.L338:
 4118 0070 00004844 		.word	1145569280
 4119 0074 00000000 		.word	motor_flag
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 99


 4120              		.cfi_endproc
 4121              	.LFE151:
 4123              		.section	.text.FastestTurnTest,"ax",%progbits
 4124              		.align	1
 4125              		.global	FastestTurnTest
 4126              		.syntax unified
 4127              		.thumb
 4128              		.thumb_func
 4129              		.fpu fpv4-sp-d16
 4131              	FastestTurnTest:
 4132              	.LFB152:
1244:Src/mode.c    **** 
1245:Src/mode.c    **** void FastestTurnTest(uint8_t dir, uint8_t deg)
1246:Src/mode.c    **** {
 4133              		.loc 1 1246 0
 4134              		.cfi_startproc
 4135              		@ args = 0, pretend = 0, frame = 0
 4136              		@ frame_needed = 0, uses_anonymous_args = 0
 4137              	.LVL461:
 4138 0000 38B5     		push	{r3, r4, r5, lr}
 4139              	.LCFI62:
 4140              		.cfi_def_cfa_offset 16
 4141              		.cfi_offset 3, -16
 4142              		.cfi_offset 4, -12
 4143              		.cfi_offset 5, -8
 4144              		.cfi_offset 14, -4
 4145 0002 2DED028B 		vpush.64	{d8}
 4146              	.LCFI63:
 4147              		.cfi_def_cfa_offset 24
 4148              		.cfi_offset 80, -24
 4149              		.cfi_offset 81, -20
 4150 0006 0546     		mov	r5, r0
 4151 0008 0C46     		mov	r4, r1
1247:Src/mode.c    ****     SetRunMode(1);
 4152              		.loc 1 1247 0
 4153 000a 0120     		movs	r0, #1
 4154              	.LVL462:
 4155 000c FFF7FEFF 		bl	SetRunMode
 4156              	.LVL463:
1248:Src/mode.c    ****     enc.distance = 0;
 4157              		.loc 1 1248 0
 4158 0010 584B     		ldr	r3, .L353
 4159 0012 0022     		movs	r2, #0
 4160 0014 1A60     		str	r2, [r3]	@ float
1249:Src/mode.c    ****     switch (deg)
 4161              		.loc 1 1249 0
 4162 0016 032C     		cmp	r4, #3
 4163 0018 4CD0     		beq	.L342
 4164 001a 042C     		cmp	r4, #4
 4165 001c 7AD0     		beq	.L343
 4166 001e CCB1     		cbz	r4, .L349
 4167              	.L341:
1250:Src/mode.c    ****     {
1251:Src/mode.c    ****     case SEARCH:
1252:Src/mode.c    ****         if (dir == 1)
1253:Src/mode.c    ****         {
1254:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 100


1255:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1256:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1257:Src/mode.c    ****             motor_flag = FALSE;
1258:Src/mode.c    ****             Tim_FanPwm(0);
1259:Src/mode.c    ****         }
1260:Src/mode.c    ****         else
1261:Src/mode.c    ****         {
1262:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
1263:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
1264:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1265:Src/mode.c    ****             motor_flag = FALSE;
1266:Src/mode.c    ****             Tim_FanPwm(0);
1267:Src/mode.c    ****         }
1268:Src/mode.c    ****         break;
1269:Src/mode.c    ****     case T_90:
1270:Src/mode.c    ****         if (dir == 1)
1271:Src/mode.c    ****         {
1272:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1273:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1274:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1275:Src/mode.c    ****             motor_flag = FALSE;
1276:Src/mode.c    ****             Tim_FanPwm(0);
1277:Src/mode.c    ****         }
1278:Src/mode.c    ****         else
1279:Src/mode.c    ****         {
1280:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1281:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
1282:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1283:Src/mode.c    ****             motor_flag = FALSE;
1284:Src/mode.c    ****             Tim_FanPwm(0);
1285:Src/mode.c    ****         }
1286:Src/mode.c    ****         break;
1287:Src/mode.c    ****     case T_180:
1288:Src/mode.c    ****         if (dir == 1)
1289:Src/mode.c    ****         {
1290:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1291:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1292:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1293:Src/mode.c    ****             motor_flag = FALSE;
1294:Src/mode.c    ****             Tim_FanPwm(0);
1295:Src/mode.c    ****         }
1296:Src/mode.c    ****         else
1297:Src/mode.c    ****         {
1298:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1299:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
1300:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1301:Src/mode.c    ****             motor_flag = FALSE;
1302:Src/mode.c    ****             Tim_FanPwm(0);
1303:Src/mode.c    ****         }
1304:Src/mode.c    ****         break;
1305:Src/mode.c    ****     }
1306:Src/mode.c    **** 
1307:Src/mode.c    ****     HAL_Delay(500);
 4168              		.loc 1 1307 0
 4169 0020 4FF4FA70 		mov	r0, #500
 4170 0024 FFF7FEFF 		bl	HAL_Delay
 4171              	.LVL464:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 101


1308:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4172              		.loc 1 1308 0
 4173 0028 49F64242 		movw	r2, #40002
 4174 002c 5249     		ldr	r1, .L353+4
 4175 002e 534B     		ldr	r3, .L353+8
 4176 0030 1868     		ldr	r0, [r3]
 4177 0032 FFF7FEFF 		bl	Flash_Write
 4178              	.LVL465:
1309:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4179              		.loc 1 1309 0
 4180 0036 4FF49671 		mov	r1, #300
 4181 003a 4C20     		movs	r0, #76
 4182 003c FFF7FEFF 		bl	Tim_BuzzerPwm
 4183              	.LVL466:
1310:Src/mode.c    ****     HAL_Delay(200);
 4184              		.loc 1 1310 0
 4185 0040 C820     		movs	r0, #200
 4186 0042 FFF7FEFF 		bl	HAL_Delay
 4187              	.LVL467:
1311:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4188              		.loc 1 1311 0
 4189 0046 0021     		movs	r1, #0
 4190 0048 0A20     		movs	r0, #10
 4191 004a FFF7FEFF 		bl	Tim_BuzzerPwm
 4192              	.LVL468:
1312:Src/mode.c    **** }...
 4193              		.loc 1 1312 0
 4194 004e BDEC028B 		vldm	sp!, {d8}
 4195              	.LCFI64:
 4196              		.cfi_remember_state
 4197              		.cfi_restore 80
 4198              		.cfi_restore 81
 4199              		.cfi_def_cfa_offset 16
 4200 0052 38BD     		pop	{r3, r4, r5, pc}
 4201              	.L349:
 4202              	.LCFI65:
 4203              		.cfi_restore_state
1252:Src/mode.c    ****         if (dir == 1)
 4204              		.loc 1 1252 0
 4205 0054 012D     		cmp	r5, #1
 4206 0056 16D0     		beq	.L350
1262:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
 4207              		.loc 1 1262 0
 4208 0058 9FED498A 		vldr.32	s16, .L353+12
 4209 005c B0EE480A 		vmov.f32	s0, s16
 4210 0060 0320     		movs	r0, #3
 4211 0062 FFF7FEFF 		bl	Motion_FastestStart
 4212              	.LVL469:
1263:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4213              		.loc 1 1263 0
 4214 0066 B0EE480A 		vmov.f32	s0, s16
 4215 006a 2046     		mov	r0, r4
 4216 006c FFF7FEFF 		bl	Motion_FastestRightTurn
 4217              	.LVL470:
1264:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4218              		.loc 1 1264 0
 4219 0070 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 102


 4220 0074 0220     		movs	r0, #2
 4221 0076 FFF7FEFF 		bl	Motion_FastestGoal
 4222              	.LVL471:
1265:Src/mode.c    ****             motor_flag = FALSE;
 4223              		.loc 1 1265 0
 4224 007a 0020     		movs	r0, #0
 4225 007c 414B     		ldr	r3, .L353+16
 4226 007e 1870     		strb	r0, [r3]
1266:Src/mode.c    ****             Tim_FanPwm(0);
 4227              		.loc 1 1266 0
 4228 0080 FFF7FEFF 		bl	Tim_FanPwm
 4229              	.LVL472:
 4230 0084 CCE7     		b	.L341
 4231              	.L350:
1254:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
 4232              		.loc 1 1254 0
 4233 0086 9FED3E8A 		vldr.32	s16, .L353+12
 4234 008a B0EE480A 		vmov.f32	s0, s16
 4235 008e 0320     		movs	r0, #3
 4236 0090 FFF7FEFF 		bl	Motion_FastestStart
 4237              	.LVL473:
1255:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4238              		.loc 1 1255 0
 4239 0094 B0EE480A 		vmov.f32	s0, s16
 4240 0098 2046     		mov	r0, r4
 4241 009a FFF7FEFF 		bl	Motion_FastestLeftTurn
 4242              	.LVL474:
1256:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4243              		.loc 1 1256 0
 4244 009e B0EE480A 		vmov.f32	s0, s16
 4245 00a2 0220     		movs	r0, #2
 4246 00a4 FFF7FEFF 		bl	Motion_FastestGoal
 4247              	.LVL475:
1257:Src/mode.c    ****             motor_flag = FALSE;
 4248              		.loc 1 1257 0
 4249 00a8 0020     		movs	r0, #0
 4250 00aa 364B     		ldr	r3, .L353+16
 4251 00ac 1870     		strb	r0, [r3]
1258:Src/mode.c    ****             Tim_FanPwm(0);
 4252              		.loc 1 1258 0
 4253 00ae FFF7FEFF 		bl	Tim_FanPwm
 4254              	.LVL476:
 4255 00b2 B5E7     		b	.L341
 4256              	.L342:
1270:Src/mode.c    ****         if (dir == 1)
 4257              		.loc 1 1270 0
 4258 00b4 012D     		cmp	r5, #1
 4259 00b6 16D0     		beq	.L351
1280:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4260              		.loc 1 1280 0
 4261 00b8 9FED318A 		vldr.32	s16, .L353+12
 4262 00bc B0EE480A 		vmov.f32	s0, s16
 4263 00c0 0420     		movs	r0, #4
 4264 00c2 FFF7FEFF 		bl	Motion_FastestStart
 4265              	.LVL477:
1281:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4266              		.loc 1 1281 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 103


 4267 00c6 B0EE480A 		vmov.f32	s0, s16
 4268 00ca 2046     		mov	r0, r4
 4269 00cc FFF7FEFF 		bl	Motion_FastestRightTurn
 4270              	.LVL478:
1282:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4271              		.loc 1 1282 0
 4272 00d0 B0EE480A 		vmov.f32	s0, s16
 4273 00d4 0220     		movs	r0, #2
 4274 00d6 FFF7FEFF 		bl	Motion_FastestGoal
 4275              	.LVL479:
1283:Src/mode.c    ****             motor_flag = FALSE;
 4276              		.loc 1 1283 0
 4277 00da 0020     		movs	r0, #0
 4278 00dc 294B     		ldr	r3, .L353+16
 4279 00de 1870     		strb	r0, [r3]
1284:Src/mode.c    ****             Tim_FanPwm(0);
 4280              		.loc 1 1284 0
 4281 00e0 FFF7FEFF 		bl	Tim_FanPwm
 4282              	.LVL480:
 4283 00e4 9CE7     		b	.L341
 4284              	.L351:
1272:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4285              		.loc 1 1272 0
 4286 00e6 9FED268A 		vldr.32	s16, .L353+12
 4287 00ea B0EE480A 		vmov.f32	s0, s16
 4288 00ee 0420     		movs	r0, #4
 4289 00f0 FFF7FEFF 		bl	Motion_FastestStart
 4290              	.LVL481:
1273:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4291              		.loc 1 1273 0
 4292 00f4 B0EE480A 		vmov.f32	s0, s16
 4293 00f8 2046     		mov	r0, r4
 4294 00fa FFF7FEFF 		bl	Motion_FastestLeftTurn
 4295              	.LVL482:
1274:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4296              		.loc 1 1274 0
 4297 00fe B0EE480A 		vmov.f32	s0, s16
 4298 0102 0220     		movs	r0, #2
 4299 0104 FFF7FEFF 		bl	Motion_FastestGoal
 4300              	.LVL483:
1275:Src/mode.c    ****             motor_flag = FALSE;
 4301              		.loc 1 1275 0
 4302 0108 0020     		movs	r0, #0
 4303 010a 1E4B     		ldr	r3, .L353+16
 4304 010c 1870     		strb	r0, [r3]
1276:Src/mode.c    ****             Tim_FanPwm(0);
 4305              		.loc 1 1276 0
 4306 010e FFF7FEFF 		bl	Tim_FanPwm
 4307              	.LVL484:
 4308 0112 85E7     		b	.L341
 4309              	.L343:
1288:Src/mode.c    ****         if (dir == 1)
 4310              		.loc 1 1288 0
 4311 0114 012D     		cmp	r5, #1
 4312 0116 16D0     		beq	.L352
1298:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4313              		.loc 1 1298 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 104


 4314 0118 9FED198A 		vldr.32	s16, .L353+12
 4315 011c B0EE480A 		vmov.f32	s0, s16
 4316 0120 0420     		movs	r0, #4
 4317 0122 FFF7FEFF 		bl	Motion_FastestStart
 4318              	.LVL485:
1299:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4319              		.loc 1 1299 0
 4320 0126 B0EE480A 		vmov.f32	s0, s16
 4321 012a 2046     		mov	r0, r4
 4322 012c FFF7FEFF 		bl	Motion_FastestRightTurn
 4323              	.LVL486:
1300:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4324              		.loc 1 1300 0
 4325 0130 B0EE480A 		vmov.f32	s0, s16
 4326 0134 0220     		movs	r0, #2
 4327 0136 FFF7FEFF 		bl	Motion_FastestGoal
 4328              	.LVL487:
1301:Src/mode.c    ****             motor_flag = FALSE;
 4329              		.loc 1 1301 0
 4330 013a 0020     		movs	r0, #0
 4331 013c 114B     		ldr	r3, .L353+16
 4332 013e 1870     		strb	r0, [r3]
1302:Src/mode.c    ****             Tim_FanPwm(0);
 4333              		.loc 1 1302 0
 4334 0140 FFF7FEFF 		bl	Tim_FanPwm
 4335              	.LVL488:
 4336 0144 6CE7     		b	.L341
 4337              	.L352:
1290:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4338              		.loc 1 1290 0
 4339 0146 9FED0E8A 		vldr.32	s16, .L353+12
 4340 014a B0EE480A 		vmov.f32	s0, s16
 4341 014e 0420     		movs	r0, #4
 4342 0150 FFF7FEFF 		bl	Motion_FastestStart
 4343              	.LVL489:
1291:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4344              		.loc 1 1291 0
 4345 0154 B0EE480A 		vmov.f32	s0, s16
 4346 0158 2046     		mov	r0, r4
 4347 015a FFF7FEFF 		bl	Motion_FastestLeftTurn
 4348              	.LVL490:
1292:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4349              		.loc 1 1292 0
 4350 015e B0EE480A 		vmov.f32	s0, s16
 4351 0162 0220     		movs	r0, #2
 4352 0164 FFF7FEFF 		bl	Motion_FastestGoal
 4353              	.LVL491:
1293:Src/mode.c    ****             motor_flag = FALSE;
 4354              		.loc 1 1293 0
 4355 0168 0020     		movs	r0, #0
 4356 016a 064B     		ldr	r3, .L353+16
 4357 016c 1870     		strb	r0, [r3]
1294:Src/mode.c    ****             Tim_FanPwm(0);
 4358              		.loc 1 1294 0
 4359 016e FFF7FEFF 		bl	Tim_FanPwm
 4360              	.LVL492:
 4361 0172 55E7     		b	.L341
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 105


 4362              	.L354:
 4363              		.align	2
 4364              	.L353:
 4365 0174 00000000 		.word	enc
 4366 0178 00000000 		.word	loger
 4367 017c 00000000 		.word	start_address
 4368 0180 00009644 		.word	1150681088
 4369 0184 00000000 		.word	motor_flag
 4370              		.cfi_endproc
 4371              	.LFE152:
 4373              		.section	.text.Mode_Mouse,"ax",%progbits
 4374              		.align	1
 4375              		.global	Mode_Mouse
 4376              		.syntax unified
 4377              		.thumb
 4378              		.thumb_func
 4379              		.fpu fpv4-sp-d16
 4381              	Mode_Mouse:
 4382              	.LFB126:
  65:Src/mode.c    **** {
 4383              		.loc 1 65 0
 4384              		.cfi_startproc
 4385              		@ args = 0, pretend = 0, frame = 0
 4386              		@ frame_needed = 0, uses_anonymous_args = 0
 4387              	.LVL493:
 4388 0000 08B5     		push	{r3, lr}
 4389              	.LCFI66:
 4390              		.cfi_def_cfa_offset 8
 4391              		.cfi_offset 3, -8
 4392              		.cfi_offset 14, -4
  66:Src/mode.c    ****     switch (mode)
 4393              		.loc 1 66 0
 4394 0002 1328     		cmp	r0, #19
 4395 0004 0DD8     		bhi	.L355
 4396 0006 DFE800F0 		tbb	[pc, r0]
 4397              	.L358:
 4398 000a 0A       		.byte	(.L357-.L358)/2
 4399 000b 0D       		.byte	(.L359-.L358)/2
 4400 000c 12       		.byte	(.L360-.L358)/2
 4401 000d 1A       		.byte	(.L361-.L358)/2
 4402 000e 1D       		.byte	(.L362-.L358)/2
 4403 000f 20       		.byte	(.L363-.L358)/2
 4404 0010 23       		.byte	(.L364-.L358)/2
 4405 0011 2A       		.byte	(.L365-.L358)/2
 4406 0012 32       		.byte	(.L366-.L358)/2
 4407 0013 39       		.byte	(.L367-.L358)/2
 4408 0014 40       		.byte	(.L368-.L358)/2
 4409 0015 4A       		.byte	(.L369-.L358)/2
 4410 0016 54       		.byte	(.L370-.L358)/2
 4411 0017 5D       		.byte	(.L371-.L358)/2
 4412 0018 66       		.byte	(.L372-.L358)/2
 4413 0019 6F       		.byte	(.L373-.L358)/2
 4414 001a 77       		.byte	(.L374-.L358)/2
 4415 001b 7F       		.byte	(.L375-.L358)/2
 4416 001c 87       		.byte	(.L376-.L358)/2
 4417 001d 8F       		.byte	(.L377-.L358)/2
 4418              		.p2align 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 106


 4419              	.L357:
  70:Src/mode.c    ****         SearchRun();
 4420              		.loc 1 70 0
 4421 001e FFF7FEFF 		bl	SearchRun
 4422              	.LVL494:
 4423              	.L355:
 215:Src/mode.c    **** }
 4424              		.loc 1 215 0
 4425 0022 08BD     		pop	{r3, pc}
 4426              	.LVL495:
 4427              	.L359:
  73:Src/mode.c    ****         Tim_FanPwm(400);
 4428              		.loc 1 73 0
 4429 0024 4FF4C870 		mov	r0, #400
 4430              	.LVL496:
 4431 0028 FFF7FEFF 		bl	Tim_FanPwm
 4432              	.LVL497:
  75:Src/mode.c    ****         break;
 4433              		.loc 1 75 0
 4434 002c F9E7     		b	.L355
 4435              	.LVL498:
 4436              	.L360:
  83:Src/mode.c    ****         Mode_FastestRun(FALSE, 100.0f, 1, 3);
 4437              		.loc 1 83 0
 4438 002e 0322     		movs	r2, #3
 4439 0030 0121     		movs	r1, #1
 4440 0032 9FED410A 		vldr.32	s0, .L379
 4441 0036 0020     		movs	r0, #0
 4442              	.LVL499:
 4443 0038 FFF7FEFF 		bl	Mode_FastestRun
 4444              	.LVL500:
  84:Src/mode.c    ****         break;
 4445              		.loc 1 84 0
 4446 003c F1E7     		b	.L355
 4447              	.LVL501:
 4448              	.L361:
  87:Src/mode.c    ****         SensorCheck();
 4449              		.loc 1 87 0
 4450 003e FFF7FEFF 		bl	SensorCheck
 4451              	.LVL502:
  88:Src/mode.c    ****         break;
 4452              		.loc 1 88 0
 4453 0042 EEE7     		b	.L355
 4454              	.LVL503:
 4455              	.L362:
  91:Src/mode.c    ****         PrintOutPut();
 4456              		.loc 1 91 0
 4457 0044 FFF7FEFF 		bl	PrintOutPut
 4458              	.LVL504:
  92:Src/mode.c    ****         break;
 4459              		.loc 1 92 0
 4460 0048 EBE7     		b	.L355
 4461              	.LVL505:
 4462              	.L363:
  94:Src/mode.c    ****         PrintWallData();
 4463              		.loc 1 94 0
 4464 004a FFF7FEFF 		bl	PrintWallData
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 107


 4465              	.LVL506:
  95:Src/mode.c    ****         break;
 4466              		.loc 1 95 0
 4467 004e E8E7     		b	.L355
 4468              	.LVL507:
 4469              	.L364:
 110:Src/mode.c    ****         control_wall_flag = 0;
 4470              		.loc 1 110 0
 4471 0050 3A4B     		ldr	r3, .L379+4
 4472 0052 0022     		movs	r2, #0
 4473 0054 1A70     		strb	r2, [r3]
 111:Src/mode.c    ****         CheckFastestStraight(4);
 4474              		.loc 1 111 0
 4475 0056 0420     		movs	r0, #4
 4476              	.LVL508:
 4477 0058 FFF7FEFF 		bl	CheckFastestStraight
 4478              	.LVL509:
 112:Src/mode.c    ****         break;
 4479              		.loc 1 112 0
 4480 005c E1E7     		b	.L355
 4481              	.LVL510:
 4482              	.L365:
 114:Src/mode.c    ****         control_wall_flag = 3;
 4483              		.loc 1 114 0
 4484 005e 374B     		ldr	r3, .L379+4
 4485 0060 0322     		movs	r2, #3
 4486 0062 1A70     		strb	r2, [r3]
 115:Src/mode.c    ****         CheckDiagonal(4, 1);
 4487              		.loc 1 115 0
 4488 0064 0121     		movs	r1, #1
 4489 0066 0420     		movs	r0, #4
 4490              	.LVL511:
 4491 0068 FFF7FEFF 		bl	CheckDiagonal
 4492              	.LVL512:
 120:Src/mode.c    ****         break;
 4493              		.loc 1 120 0
 4494 006c D9E7     		b	.L355
 4495              	.LVL513:
 4496              	.L366:
 136:Src/mode.c    ****         control_wall_flag = FALSE;
 4497              		.loc 1 136 0
 4498 006e 0021     		movs	r1, #0
 4499 0070 324B     		ldr	r3, .L379+4
 4500 0072 1970     		strb	r1, [r3]
 137:Src/mode.c    ****         FastestTurnTest(1, SEARCH);
 4501              		.loc 1 137 0
 4502 0074 0120     		movs	r0, #1
 4503              	.LVL514:
 4504 0076 FFF7FEFF 		bl	FastestTurnTest
 4505              	.LVL515:
 138:Src/mode.c    ****         break;
 4506              		.loc 1 138 0
 4507 007a D2E7     		b	.L355
 4508              	.LVL516:
 4509              	.L367:
 153:Src/mode.c    ****         control_wall_flag = FALSE;
 4510              		.loc 1 153 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 108


 4511 007c 0021     		movs	r1, #0
 4512 007e 2F4B     		ldr	r3, .L379+4
 4513 0080 1970     		strb	r1, [r3]
 154:Src/mode.c    ****         FastestTurnTest(-1, SEARCH);
 4514              		.loc 1 154 0
 4515 0082 FF20     		movs	r0, #255
 4516              	.LVL517:
 4517 0084 FFF7FEFF 		bl	FastestTurnTest
 4518              	.LVL518:
 155:Src/mode.c    ****         break;
 4519              		.loc 1 155 0
 4520 0088 CBE7     		b	.L355
 4521              	.LVL519:
 4522              	.L368:
 157:Src/mode.c    ****         control_wall_flag = FALSE;
 4523              		.loc 1 157 0
 4524 008a 0020     		movs	r0, #0
 4525              	.LVL520:
 4526 008c 2B4B     		ldr	r3, .L379+4
 4527 008e 1870     		strb	r0, [r3]
 158:Src/mode.c    ****         SetRunMode(0);
 4528              		.loc 1 158 0
 4529 0090 FFF7FEFF 		bl	SetRunMode
 4530              	.LVL521:
 160:Src/mode.c    ****         TestComb(6, LEFT);
 4531              		.loc 1 160 0
 4532 0094 0121     		movs	r1, #1
 4533 0096 0620     		movs	r0, #6
 4534 0098 FFF7FEFF 		bl	TestComb
 4535              	.LVL522:
 161:Src/mode.c    ****         break;
 4536              		.loc 1 161 0
 4537 009c C1E7     		b	.L355
 4538              	.LVL523:
 4539              	.L369:
 163:Src/mode.c    ****         control_wall_flag = FALSE;
 4540              		.loc 1 163 0
 4541 009e 0020     		movs	r0, #0
 4542              	.LVL524:
 4543 00a0 264B     		ldr	r3, .L379+4
 4544 00a2 1870     		strb	r0, [r3]
 164:Src/mode.c    ****         SetRunMode(0);
 4545              		.loc 1 164 0
 4546 00a4 FFF7FEFF 		bl	SetRunMode
 4547              	.LVL525:
 166:Src/mode.c    ****         TestComb(6, RIGHT);
 4548              		.loc 1 166 0
 4549 00a8 0221     		movs	r1, #2
 4550 00aa 0620     		movs	r0, #6
 4551 00ac FFF7FEFF 		bl	TestComb
 4552              	.LVL526:
 167:Src/mode.c    ****         break;
 4553              		.loc 1 167 0
 4554 00b0 B7E7     		b	.L355
 4555              	.LVL527:
 4556              	.L370:
 170:Src/mode.c    ****         control_wall_flag = 3;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 109


 4557              		.loc 1 170 0
 4558 00b2 224B     		ldr	r3, .L379+4
 4559 00b4 0322     		movs	r2, #3
 4560 00b6 1A70     		strb	r2, [r3]
 172:Src/mode.c    ****         Turn135_Test(FRONT, LEFT, 0);
 4561              		.loc 1 172 0
 4562 00b8 0022     		movs	r2, #0
 4563 00ba 0121     		movs	r1, #1
 4564 00bc 1046     		mov	r0, r2
 4565              	.LVL528:
 4566 00be FFF7FEFF 		bl	Turn135_Test
 4567              	.LVL529:
 173:Src/mode.c    ****         break;
 4568              		.loc 1 173 0
 4569 00c2 AEE7     		b	.L355
 4570              	.LVL530:
 4571              	.L371:
 175:Src/mode.c    ****         control_wall_flag = 3;
 4572              		.loc 1 175 0
 4573 00c4 1D4B     		ldr	r3, .L379+4
 4574 00c6 0322     		movs	r2, #3
 4575 00c8 1A70     		strb	r2, [r3]
 177:Src/mode.c    ****         Turn135_Test(FRONT, RIGHT, 0);
 4576              		.loc 1 177 0
 4577 00ca 0022     		movs	r2, #0
 4578 00cc 0221     		movs	r1, #2
 4579 00ce 1046     		mov	r0, r2
 4580              	.LVL531:
 4581 00d0 FFF7FEFF 		bl	Turn135_Test
 4582              	.LVL532:
 178:Src/mode.c    ****         break;
 4583              		.loc 1 178 0
 4584 00d4 A5E7     		b	.L355
 4585              	.LVL533:
 4586              	.L372:
 180:Src/mode.c    ****         control_wall_flag = 2;
 4587              		.loc 1 180 0
 4588 00d6 194B     		ldr	r3, .L379+4
 4589 00d8 0222     		movs	r2, #2
 4590 00da 1A70     		strb	r2, [r3]
 182:Src/mode.c    ****         Turn135_Test(LEFT, FRONT, 1);
 4591              		.loc 1 182 0
 4592 00dc 0122     		movs	r2, #1
 4593 00de 0021     		movs	r1, #0
 4594 00e0 1046     		mov	r0, r2
 4595              	.LVL534:
 4596 00e2 FFF7FEFF 		bl	Turn135_Test
 4597              	.LVL535:
 183:Src/mode.c    ****         break;
 4598              		.loc 1 183 0
 4599 00e6 9CE7     		b	.L355
 4600              	.LVL536:
 4601              	.L373:
 185:Src/mode.c    ****         control_wall_flag = 2;
 4602              		.loc 1 185 0
 4603 00e8 0220     		movs	r0, #2
 4604              	.LVL537:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 110


 4605 00ea 144B     		ldr	r3, .L379+4
 4606 00ec 1870     		strb	r0, [r3]
 187:Src/mode.c    ****         Turn135_Test(RIGHT, FRONT, 1);
 4607              		.loc 1 187 0
 4608 00ee 0122     		movs	r2, #1
 4609 00f0 0021     		movs	r1, #0
 4610 00f2 FFF7FEFF 		bl	Turn135_Test
 4611              	.LVL538:
 188:Src/mode.c    ****         break;
 4612              		.loc 1 188 0
 4613 00f6 94E7     		b	.L355
 4614              	.LVL539:
 4615              	.L374:
 191:Src/mode.c    ****         control_wall_flag = 0;
 4616              		.loc 1 191 0
 4617 00f8 104B     		ldr	r3, .L379+4
 4618 00fa 0022     		movs	r2, #0
 4619 00fc 1A70     		strb	r2, [r3]
 193:Src/mode.c    ****         FastestTurnTest(1, T_90);
 4620              		.loc 1 193 0
 4621 00fe 0321     		movs	r1, #3
 4622 0100 0120     		movs	r0, #1
 4623              	.LVL540:
 4624 0102 FFF7FEFF 		bl	FastestTurnTest
 4625              	.LVL541:
 194:Src/mode.c    ****         break;
 4626              		.loc 1 194 0
 4627 0106 8CE7     		b	.L355
 4628              	.LVL542:
 4629              	.L375:
 196:Src/mode.c    ****         control_wall_flag = 0;
 4630              		.loc 1 196 0
 4631 0108 0C4B     		ldr	r3, .L379+4
 4632 010a 0022     		movs	r2, #0
 4633 010c 1A70     		strb	r2, [r3]
 198:Src/mode.c    ****         FastestTurnTest(-1, T_90);
 4634              		.loc 1 198 0
 4635 010e 0321     		movs	r1, #3
 4636 0110 FF20     		movs	r0, #255
 4637              	.LVL543:
 4638 0112 FFF7FEFF 		bl	FastestTurnTest
 4639              	.LVL544:
 199:Src/mode.c    ****         break;
 4640              		.loc 1 199 0
 4641 0116 84E7     		b	.L355
 4642              	.LVL545:
 4643              	.L376:
 201:Src/mode.c    ****         control_wall_flag = 0;
 4644              		.loc 1 201 0
 4645 0118 084B     		ldr	r3, .L379+4
 4646 011a 0022     		movs	r2, #0
 4647 011c 1A70     		strb	r2, [r3]
 204:Src/mode.c    ****         FastestTurnTest(1, T_180);
 4648              		.loc 1 204 0
 4649 011e 0421     		movs	r1, #4
 4650 0120 0120     		movs	r0, #1
 4651              	.LVL546:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 111


 4652 0122 FFF7FEFF 		bl	FastestTurnTest
 4653              	.LVL547:
 205:Src/mode.c    ****         break;
 4654              		.loc 1 205 0
 4655 0126 7CE7     		b	.L355
 4656              	.LVL548:
 4657              	.L377:
 207:Src/mode.c    ****         control_wall_flag = 0;
 4658              		.loc 1 207 0
 4659 0128 044B     		ldr	r3, .L379+4
 4660 012a 0022     		movs	r2, #0
 4661 012c 1A70     		strb	r2, [r3]
 210:Src/mode.c    ****         FastestTurnTest(-1, T_180);
 4662              		.loc 1 210 0
 4663 012e 0421     		movs	r1, #4
 4664 0130 FF20     		movs	r0, #255
 4665              	.LVL549:
 4666 0132 FFF7FEFF 		bl	FastestTurnTest
 4667              	.LVL550:
 215:Src/mode.c    **** }
 4668              		.loc 1 215 0
 4669 0136 74E7     		b	.L355
 4670              	.L380:
 4671              		.align	2
 4672              	.L379:
 4673 0138 0000C842 		.word	1120403456
 4674 013c 00000000 		.word	control_wall_flag
 4675              		.cfi_endproc
 4676              	.LFE126:
 4678              		.global	gy
 4679              		.global	gx
 4680              		.section	.bss.gy,"aw",%nobits
 4681              		.set	.LANCHOR0,. + 0
 4684              	gy:
 4685 0000 00       		.space	1
 4686              		.section	.data.gx,"aw",%progbits
 4687              		.set	.LANCHOR1,. + 0
 4690              	gx:
 4691 0000 01       		.byte	1
 4692              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 4693              		.align	2
 4694              	.LC0:
 4695 0000 25640D00 		.ascii	"%d\015\000"
 4696              		.section	.rodata.PrintMotion.str1.4,"aMS",%progbits,1
 4697              		.align	2
 4698              	.LC7:
 4699 0000 0D0A5354 		.ascii	"\015\012START:%d\011v_start:%ld\011v_end:%ld\015\012"
 4699      4152543A 
 4699      25640976 
 4699      5F737461 
 4699      72743A25 
 4700 0022 00       		.ascii	"\000"
 4701 0023 00       		.space	1
 4702              	.LC8:
 4703 0024 4C454654 		.ascii	"LEFT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 4703      3A534541 
 4703      52434809 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 112


 4703      765F7374 
 4703      6172743A 
 4704              	.LC9:
 4705 0048 4C454654 		.ascii	"LEFT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 4705      3A545F39 
 4705      3009765F 
 4705      73746172 
 4705      743A256C 
 4706 006a 0000     		.space	2
 4707              	.LC10:
 4708 006c 4C454654 		.ascii	"LEFT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 4708      3A545F31 
 4708      38300976 
 4708      5F737461 
 4708      72743A25 
 4709 008f 00       		.space	1
 4710              	.LC11:
 4711 0090 4C454654 		.ascii	"LEFT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4711      3A545F34 
 4711      35494E09 
 4711      765F7374 
 4711      6172743A 
 4712              	.LC12:
 4713 00b4 4C454654 		.ascii	"LEFT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4713      3A545F34 
 4713      354F5554 
 4713      09765F73 
 4713      74617274 
 4714 00d9 000000   		.space	3
 4715              	.LC13:
 4716 00dc 4C454654 		.ascii	"LEFT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4716      3A545F31 
 4716      3335494E 
 4716      09765F73 
 4716      74617274 
 4717 0101 000000   		.space	3
 4718              	.LC14:
 4719 0104 4C454654 		.ascii	"LEFT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4719      3A545F31 
 4719      33354F55 
 4719      5409765F 
 4719      73746172 
 4720 012a 0000     		.space	2
 4721              	.LC15:
 4722 012c 4C454654 		.ascii	"LEFT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 4722      3A545F56 
 4722      39300976 
 4722      5F737461 
 4722      72743A25 
 4723 014f 00       		.space	1
 4724              	.LC16:
 4725 0150 52494748 		.ascii	"RIGHT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 4725      543A5345 
 4725      41524348 
 4725      09765F73 
 4725      74617274 
 4726 0175 000000   		.space	3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 113


 4727              	.LC17:
 4728 0178 52494748 		.ascii	"RIGHT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 4728      543A545F 
 4728      39300976 
 4728      5F737461 
 4728      72743A25 
 4729 019b 00       		.space	1
 4730              	.LC18:
 4731 019c 52494748 		.ascii	"RIGHT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 4731      543A545F 
 4731      31383009 
 4731      765F7374 
 4731      6172743A 
 4732              	.LC19:
 4733 01c0 52494748 		.ascii	"RIGHT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4733      543A545F 
 4733      3435494E 
 4733      09765F73 
 4733      74617274 
 4734 01e5 000000   		.space	3
 4735              	.LC20:
 4736 01e8 52494748 		.ascii	"RIGHT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4736      543A545F 
 4736      34354F55 
 4736      5409765F 
 4736      73746172 
 4737 020e 0000     		.space	2
 4738              	.LC21:
 4739 0210 52494748 		.ascii	"RIGHT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4739      543A545F 
 4739      31333549 
 4739      4E09765F 
 4739      73746172 
 4740 0236 0000     		.space	2
 4741              	.LC22:
 4742 0238 52494748 		.ascii	"RIGHT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4742      543A545F 
 4742      3133354F 
 4742      55540976 
 4742      5F737461 
 4743 025f 00       		.space	1
 4744              	.LC23:
 4745 0260 52494748 		.ascii	"RIGHT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 4745      543A545F 
 4745      56393009 
 4745      765F7374 
 4745      6172743A 
 4746              	.LC24:
 4747 0284 46524F4E 		.ascii	"FRONT:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4747      543A2564 
 4747      09765F73 
 4747      74617274 
 4747      3A256C64 
 4748 02a5 000000   		.space	3
 4749              	.LC25:
 4750 02a8 44494147 		.ascii	"DIAGONAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4750      4F4E414C 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 114


 4750      3A256409 
 4750      765F7374 
 4750      6172743A 
 4751              	.LC26:
 4752 02cc 474F414C 		.ascii	"GOAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4752      3A256409 
 4752      765F7374 
 4752      6172743A 
 4752      256C6409 
 4753              	.LC27:
 4754 02ec 41444A55 		.ascii	"ADJUST:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4754      53543A25 
 4754      6409765F 
 4754      73746172 
 4754      743A256C 
 4755              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 4756              		.align	2
 4757              	.LC2:
 4758 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 4758      64092564 
 4758      0925640D 
 4758      0A00
 4759              		.section	.rodata.PrintWallData.str1.4,"aMS",%progbits,1
 4760              		.align	2
 4761              	.LC3:
 4762 0000 0D00     		.ascii	"\015\000"
 4763 0002 0000     		.space	2
 4764              	.LC4:
 4765 0004 2D2D2D00 		.ascii	"---\000"
 4766              	.LC5:
 4767 0008 2B0D00   		.ascii	"+\015\000"
 4768 000b 00       		.space	1
 4769              	.LC6:
 4770 000c 20202000 		.ascii	"   \000"
 4771              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 4772              		.align	2
 4773              	.LC1:
 4774 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\012\000"
 4774      20666C3A 
 4774      25642066 
 4774      3A256420 
 4774      66723A25 
 4775              		.text
 4776              	.Letext0:
 4777              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4778              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4779              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4780              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4781              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 4782              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4783              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 4784              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 4785              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4786              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4787              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 4788              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4789              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 115


 4790              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 4791              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 4792              		.file 17 "Inc/spi.h"
 4793              		.file 18 "Inc/tim.h"
 4794              		.file 19 "Inc/adc.h"
 4795              		.file 20 "Inc/MazeCon.h"
 4796              		.file 21 "Inc/flash.h"
 4797              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4798              		.file 23 "Inc/motion.h"
 4799              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 4800              		.file 25 "<built-in>"
 4801              		.file 26 "Inc/Maze.h"
 4802              		.file 27 "Inc/Map.h"
 4803              		.file 28 "Inc/control.h"
 4804              		.file 29 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 116


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:242    .text.Mode_Select:00000150 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:253    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:260    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:389    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:403    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:410    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:508    .text.SetRunMode:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:516    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:523    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:541    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:545    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:642    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:649    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:656    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:962    .text.SearchRun:00000220 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:973    .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:980    .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1220   .text.Mode_FastRun:00000188 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1233   .text.Mode_FastRun:000001bc $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1372   .text.Mode_FastRun:000002b8 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1383   .text.Mode_FastestRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1390   .text.Mode_FastestRun:00000000 Mode_FastestRun
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1630   .text.Mode_FastestRun:00000188 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1643   .text.Mode_FastestRun:000001bc $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1785   .text.Mode_FastestRun:000002bc $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1795   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1802   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1887   .text.CheckStraight:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1895   .text.CheckFastStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:1902   .text.CheckFastStraight:00000000 CheckFastStraight
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2014   .text.CheckFastStraight:00000090 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2023   .text.CheckFastestStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2030   .text.CheckFastestStraight:00000000 CheckFastestStraight
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2114   .text.CheckFastestStraight:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2123   .text.CheckDiagonal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2130   .text.CheckDiagonal:00000000 CheckDiagonal
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2209   .text.CheckDiagonal:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2217   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2224   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2309   .text.CheckTurn:0000006c $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2317   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2324   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2394   .text.PrintOutPut:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2401   .text.PrintWallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2408   .text.PrintWallData:00000000 PrintWallData
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2577   .text.PrintWallData:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2586   .text.PrintMotion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2593   .text.PrintMotion:00000000 PrintMotion
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2646   .text.PrintMotion:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2657   .text.PrintMotion:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2665   .text.PrintMotion:00000072 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2673   .text.PrintMotion:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2768   .text.PrintMotion:0000010c $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 117


C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2776   .text.PrintMotion:00000114 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2922   .text.PrintMotion:000001f0 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2948   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:2955   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3012   .text.AdjustStraight:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3019   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3026   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3083   .text.AdjustTurn:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3090   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3097   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3236   .text.Circuit:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3241   .text.TestComb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3248   .text.TestComb:00000000 TestComb
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3348   .text.TestComb:00000058 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3353   .text.TestSteps:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3360   .text.TestSteps:00000000 TestSteps
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3413   .text.TestSteps:00000028 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3418   .text.Turn45_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3425   .text.Turn45_Test:00000000 Turn45_Test
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3603   .text.Turn45_Test:000000f8 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3611   .text.Turn135_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3618   .text.Turn135_Test:00000000 Turn135_Test
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3792   .text.Turn135_Test:00000100 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3800   .text.TurnBig90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3807   .text.TurnBig90_Test:00000000 TurnBig90_Test
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3902   .text.TurnBig90_Test:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3908   .text.TurnBig180_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:3915   .text.TurnBig180_Test:00000000 TurnBig180_Test
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4017   .text.TurnBig180_Test:0000008c $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4023   .text.TurnV90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4030   .text.TurnV90_Test:00000000 TurnV90_Test
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4118   .text.TurnV90_Test:00000070 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4124   .text.FastestTurnTest:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4131   .text.FastestTurnTest:00000000 FastestTurnTest
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4365   .text.FastestTurnTest:00000174 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4374   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4381   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4398   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4418   .text.Mode_Mouse:0000001e $t
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4673   .text.Mode_Mouse:00000138 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4684   .bss.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4690   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4685   .bss.gy:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4693   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4697   .rodata.PrintMotion.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4756   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4760   .rodata.PrintWallData.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s:4772   .rodata.SensorCheck.str1.4:00000000 $d

UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
accel
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 118


gyro_y
enc
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
Control_SetupStraightPID
Control_SetupTurnPID
Tim_FanPwm
motor_flag
Map_Init
Map_InitFast
Motion_Start
Map_addWall
Map_DelWall
Motion_End
Flash_Write
Maze_UpdatePosition
Motion_Restart
Maze_UpdateStepMap
Maze_GetNextMotion
Maze_KnownStepAccel
Motion_Switch
control_wall_flag
counter_s
start_address
Flash_Load
Maze_UpdateStepMapEx
Motion_MaxVeloSet
Maze_GetNextMotionEx
Maze_GetGoalSize
Maze_Compress
Motion_FastStart
Motion_FastLeftTurn
Motion_FastStraight
Motion_DiagonalLeft
Motion_DiagonalRight
Motion_FastRightTurn
Motion_FastGoal
Motion_Adjust
Motion_Adjust_L
Motion_Adjust_R
Motion_FastestStart
Motion_FastestLeftTurn
Motion_FastestStraight
Motion_FastestRightTurn
Motion_FastestGoal
Motion_FastestAdjust_L
Motion_FastestAdjust_R
Tim_MotorBrake
Motion_Straight
loger
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc43oNDk.s 			page 119


Motion_DiagonalStart
Motion_DiagonalStop
Motion_Diagonal
Motion_TestTurn
gyro_z
puts
putchar
Tim_MotorPwm
Motion_LeftTurn
Motion_RightTurn
Motion_WallSpinTurn
Motion_InLeft45Turn
Motion_InRight45Turn
Motion_OutLeft45Turn
Motion_OutRight45Turn
Motion_Left90Turn
Motion_Right90Turn
