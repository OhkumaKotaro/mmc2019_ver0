ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** extern uint8_t counter_s;
  30:Src/mode.c    **** 
  31:Src/mode.c    **** unsigned char gx = 1, gy = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 2


  32:Src/mode.c    **** walledge_t walledge_search={-8,-8,0,0,107.0f,109.0f,0,0};
  33:Src/mode.c    **** walledge_t walledge_800 = {-10,-10,-10,-10,13.0f,13.0f,20.0f,21.0f};
  34:Src/mode.c    **** walledge_t walledge_1200 = {-11,-19,-10,-10,11.0f,19.0f,20.0f,20.0f};
  35:Src/mode.c    **** 
  36:Src/mode.c    **** //Prototype Function
  37:Src/mode.c    **** void SensorCheck(void);
  38:Src/mode.c    **** void SetRunMode(uint8_t fan_flag);
  39:Src/mode.c    **** void CheckStraight(uint8_t block);
  40:Src/mode.c    **** void CheckFastStraight(uint8_t block);
  41:Src/mode.c    **** void CheckFastestStraight(uint8_t block);
  42:Src/mode.c    **** void CheckDiagonal(uint8_t block, int8_t dir);
  43:Src/mode.c    **** void CheckTurn(uint8_t num);
  44:Src/mode.c    **** void PrintOutPut(void);
  45:Src/mode.c    **** void PrintWallData(void);
  46:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail);
  47:Src/mode.c    **** void AdjustStraight(void);
  48:Src/mode.c    **** void AdjustTurn(void);
  49:Src/mode.c    **** void SearchRun(void);
  50:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn);
  51:Src/mode.c    **** void Mode_FastestRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn);
  52:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  53:Src/mode.c    **** void TestComb(uint8_t num, uint8_t dir);
  54:Src/mode.c    **** void TestSteps(uint8_t num);
  55:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  56:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  57:Src/mode.c    **** void TurnBig90_Test(int8_t dir);
  58:Src/mode.c    **** void TurnBig180_Test(int8_t dir);
  59:Src/mode.c    **** void TurnV90_Test(int8_t dir);
  60:Src/mode.c    **** void FastestTurnTest(uint8_t dir, uint8_t deg);
  61:Src/mode.c    **** 
  62:Src/mode.c    **** /****************************************************************************************
  63:Src/mode.c    ****  * outline  : wright mode 
  64:Src/mode.c    ****  * argument : mode nomber
  65:Src/mode.c    ****  * return   : void
  66:Src/mode.c    **** ********************************************************************************************/
  67:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  68:Src/mode.c    **** {
  69:Src/mode.c    ****     switch (mode)
  70:Src/mode.c    ****     {
  71:Src/mode.c    ****     //WHITE
  72:Src/mode.c    ****     case 0:
  73:Src/mode.c    ****         SearchRun();
  74:Src/mode.c    ****         break;
  75:Src/mode.c    ****     case 1:
  76:Src/mode.c    ****         //Tim_FanPwm(4);
  77:Src/mode.c    ****         //Mode_FastRun(FALSE, 160.0f, 1, 3);
  78:Src/mode.c    ****         Mode_FastRun(TRUE, 0.0f, 7, 5);
  79:Src/mode.c    ****         break;
  80:Src/mode.c    ****     case 2:
  81:Src/mode.c    ****         /*
  82:Src/mode.c    ****         SetRunMode();
  83:Src/mode.c    ****         control_wall_flag = FALSE;
  84:Src/mode.c    ****         Motion_enkai();
  85:Src/mode.c    ****         */
  86:Src/mode.c    ****         Mode_FastRun(TRUE, 120.0f, 7, 5);
  87:Src/mode.c    ****         //Mode_FastestRun(FALSE, 100.0f, 1, 3);
  88:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 3


  89:Src/mode.c    ****     case 3:
  90:Src/mode.c    ****         Mode_FastRun(FALSE, 120.0f, 1, 3);
  91:Src/mode.c    ****         //Mode_FastRun(TRUE, 160.0f, 7, 5);
  92:Src/mode.c    ****         //SensorCheck();
  93:Src/mode.c    ****         break;
  94:Src/mode.c    ****     //CYAN
  95:Src/mode.c    ****     case 4:
  96:Src/mode.c    ****         PrintOutPut();
  97:Src/mode.c    ****         break;
  98:Src/mode.c    ****     case 5:
  99:Src/mode.c    ****         PrintWallData();
 100:Src/mode.c    ****         break;
 101:Src/mode.c    ****     case 6: //straight
 102:Src/mode.c    ****         /*
 103:Src/mode.c    ****         control_wall_flag = 0;
 104:Src/mode.c    ****         CheckDiagonal(4, 1);
 105:Src/mode.c    ****         */
 106:Src/mode.c    ****         control_wall_flag = 1;
 107:Src/mode.c    ****         CheckStraight(0);
 108:Src/mode.c    ****         /*
 109:Src/mode.c    ****        control_wall_flag = 2;
 110:Src/mode.c    ****        CheckFastStraight(6);
 111:Src/mode.c    ****        */
 112:Src/mode.c    ****         /*
 113:Src/mode.c    ****         control_wall_flag = 0;
 114:Src/mode.c    ****         CheckFastestStraight(4);
 115:Src/mode.c    ****         */
 116:Src/mode.c    ****         break;
 117:Src/mode.c    ****     case 7: //turn
 118:Src/mode.c    ****             //control_wall_flag = 3;
 119:Src/mode.c    ****             //CheckDiagonal(4, 1);
 120:Src/mode.c    ****         control_wall_flag = 0;
 121:Src/mode.c    ****         CheckTurn(1);
 122:Src/mode.c    ****         break;
 123:Src/mode.c    ****     //YELLOW
 124:Src/mode.c    ****     case 8: //left turn
 125:Src/mode.c    ****         control_wall_flag = FALSE;
 126:Src/mode.c    ****         SetRunMode(0);
 127:Src/mode.c    ****         Motion_Start();
 128:Src/mode.c    ****         Motion_LeftTurn();
 129:Src/mode.c    ****         Motion_End();
 130:Src/mode.c    ****         motor_flag = FALSE;
 131:Src/mode.c    ****         HAL_Delay(500);
 132:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 133:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 134:Src/mode.c    ****         HAL_Delay(200);
 135:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 136:Src/mode.c    ****         //control_wall_flag = FALSE;
 137:Src/mode.c    ****         //FastestTurnTest(1, SEARCH);
 138:Src/mode.c    ****         break;
 139:Src/mode.c    ****     case 9: //right turn
 140:Src/mode.c    ****         control_wall_flag = FALSE;
 141:Src/mode.c    ****         SetRunMode(0);
 142:Src/mode.c    ****         Motion_Start();
 143:Src/mode.c    ****         Motion_RightTurn();
 144:Src/mode.c    ****         Motion_End();
 145:Src/mode.c    ****         motor_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 4


 146:Src/mode.c    ****         HAL_Delay(500);
 147:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 148:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 149:Src/mode.c    ****         HAL_Delay(200);
 150:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 151:Src/mode.c    ****         //control_wall_flag = FALSE;
 152:Src/mode.c    ****         //FastestTurnTest(-1, SEARCH);
 153:Src/mode.c    ****         break;
 154:Src/mode.c    ****     case 10: //circuit left
 155:Src/mode.c    ****         control_wall_flag = FALSE;
 156:Src/mode.c    ****         SetRunMode(0);
 157:Src/mode.c    ****         //Circuit(2, 2, 3, 1);
 158:Src/mode.c    ****         TestComb(6, LEFT);
 159:Src/mode.c    ****         break;
 160:Src/mode.c    ****     case 11: //circuit right
 161:Src/mode.c    ****         control_wall_flag = FALSE;
 162:Src/mode.c    ****         SetRunMode(0);
 163:Src/mode.c    ****         //Circuit(2, 2, 3, -1);
 164:Src/mode.c    ****         TestComb(6, RIGHT);
 165:Src/mode.c    ****         break;
 166:Src/mode.c    ****     //GREEN
 167:Src/mode.c    ****     case 12: //left quarter turn
 168:Src/mode.c    ****         control_wall_flag = 3;
 169:Src/mode.c    ****         //Turn45_Test(FRONT, LEFT, 1);
 170:Src/mode.c    ****         Turn135_Test(FRONT, LEFT, 0);
 171:Src/mode.c    ****         break;
 172:Src/mode.c    ****     case 13: //right quarter turn
 173:Src/mode.c    ****         control_wall_flag = 3;
 174:Src/mode.c    ****         //Turn45_Test(FRONT, RIGHT, 1);
 175:Src/mode.c    ****         Turn135_Test(FRONT, RIGHT, 0);
 176:Src/mode.c    ****         break;
 177:Src/mode.c    ****     case 14:
 178:Src/mode.c    ****         control_wall_flag = 2;
 179:Src/mode.c    ****         //Turn45_Test(LEFT, FRONT, 1);
 180:Src/mode.c    ****         Turn135_Test(LEFT, FRONT, 1);
 181:Src/mode.c    ****         break;
 182:Src/mode.c    ****     case 15:
 183:Src/mode.c    ****         control_wall_flag = 2;
 184:Src/mode.c    ****         //Turn45_Test(RIGHT, FRONT, 1);
 185:Src/mode.c    ****         Turn135_Test(RIGHT, FRONT, 1);
 186:Src/mode.c    ****         break;
 187:Src/mode.c    ****     //MAGENTA
 188:Src/mode.c    ****     case 16:
 189:Src/mode.c    ****         Mode_FastestRun(TRUE, 0.0f, 7, 5);
 190:Src/mode.c    ****         break;
 191:Src/mode.c    ****     case 17:
 192:Src/mode.c    ****         Mode_FastestRun(TRUE, 100.0f, 7, 5);
 193:Src/mode.c    ****         break;
 194:Src/mode.c    ****     case 18:
 195:Src/mode.c    ****         Mode_FastestRun(TRUE, 180.0f, 7, 5);
 196:Src/mode.c    ****         break;
 197:Src/mode.c    ****     case 19:
 198:Src/mode.c    ****         control_wall_flag = 0;
 199:Src/mode.c    ****         //TurnBig180_Test(RIGHT);
 200:Src/mode.c    ****         //TurnV90_Test(RIGHT);
 201:Src/mode.c    ****         FastestTurnTest(-1, T_180);
 202:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 5


 203:Src/mode.c    ****     default:
 204:Src/mode.c    ****         break;
 205:Src/mode.c    ****     }
 206:Src/mode.c    **** }
 207:Src/mode.c    **** 
 208:Src/mode.c    **** char Mode_Select(void)
 209:Src/mode.c    **** {
  28              		.loc 1 209 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 210:Src/mode.c    ****     int8_t mode = 0;
 211:Src/mode.c    ****     uint8_t state = 0;
 212:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 212 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
  42              	.LVL1:
 213:Src/mode.c    ****     accel.z = 0;
  43              		.loc 1 213 0
  44 0006 524B     		ldr	r3, .L34
  45 0008 0022     		movs	r2, #0
  46 000a 9A60     		str	r2, [r3, #8]	@ float
 211:Src/mode.c    ****     Control_ResetVelo();
  47              		.loc 1 211 0
  48 000c 0024     		movs	r4, #0
 210:Src/mode.c    ****     int8_t mode = 0;
  49              		.loc 1 210 0
  50 000e 2546     		mov	r5, r4
  51 0010 50E0     		b	.L18
  52              	.LVL2:
  53              	.L28:
 214:Src/mode.c    **** 
 215:Src/mode.c    ****     while (1)
 216:Src/mode.c    ****     {
 217:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 218:Src/mode.c    ****         {
 219:Src/mode.c    ****             if (gyro_y < -300.0f)
 220:Src/mode.c    ****             {
 221:Src/mode.c    ****                 mode++;
 222:Src/mode.c    ****             }
 223:Src/mode.c    ****             else if (gyro_y > 300.0f)
  54              		.loc 1 223 0
  55 0012 504B     		ldr	r3, .L34+4
  56 0014 93ED007A 		vldr.32	s14, [r3]
  57 0018 DFED4F7A 		vldr.32	s15, .L34+8
  58 001c B4EEE77A 		vcmpe.f32	s14, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 65DD     		ble	.L7
 224:Src/mode.c    ****             {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 6


 225:Src/mode.c    ****                 mode--;
  61              		.loc 1 225 0
  62 0026 013D     		subs	r5, r5, #1
  63              	.LVL3:
  64 0028 6DB2     		sxtb	r5, r5
  65              	.LVL4:
  66 002a 62E0     		b	.L7
  67              	.L19:
 226:Src/mode.c    ****             }
 227:Src/mode.c    ****             if (mode > 3)
 228:Src/mode.c    ****             {
 229:Src/mode.c    ****                 mode = 0;
  68              		.loc 1 229 0
  69 002c 0025     		movs	r5, #0
  70              	.LVL5:
  71              	.L9:
 230:Src/mode.c    ****             }
 231:Src/mode.c    ****             else if (mode < 0)
 232:Src/mode.c    ****             {
 233:Src/mode.c    ****                 mode = 3;
 234:Src/mode.c    ****             }
 235:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  72              		.loc 1 235 0
  73 002e 6FF00900 		mvn	r0, #9
  74 0032 00FB05F0 		mul	r0, r0, r5
  75 0036 4FF49671 		mov	r1, #300
  76 003a AA30     		adds	r0, r0, #170
  77 003c FFF7FEFF 		bl	Tim_BuzzerPwm
  78              	.LVL6:
 236:Src/mode.c    ****             HAL_Delay(100);
  79              		.loc 1 236 0
  80 0040 6420     		movs	r0, #100
  81 0042 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL7:
 237:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  83              		.loc 1 237 0
  84 0046 0021     		movs	r1, #0
  85 0048 0A20     		movs	r0, #10
  86 004a FFF7FEFF 		bl	Tim_BuzzerPwm
  87              	.LVL8:
 238:Src/mode.c    ****             HAL_Delay(500);
  88              		.loc 1 238 0
  89 004e 4FF4FA70 		mov	r0, #500
  90 0052 FFF7FEFF 		bl	HAL_Delay
  91              	.LVL9:
  92              	.L3:
 239:Src/mode.c    ****         }
 240:Src/mode.c    ****         if (enc.offset > 20)
  93              		.loc 1 240 0
  94 0056 414B     		ldr	r3, .L34+12
  95 0058 93ED027A 		vldr.32	s14, [r3, #8]
  96 005c F3EE047A 		vmov.f32	s15, #2.0e+1
  97 0060 B4EEE77A 		vcmpe.f32	s14, s15
  98 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  99 0068 4BDD     		ble	.L29
 241:Src/mode.c    ****         {
 242:Src/mode.c    ****             if (state == 16)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 7


 100              		.loc 1 242 0
 101 006a 102C     		cmp	r4, #16
 102 006c 47D0     		beq	.L21
 243:Src/mode.c    ****             {
 244:Src/mode.c    ****                 state = 0;
 245:Src/mode.c    ****             }
 246:Src/mode.c    ****             else
 247:Src/mode.c    ****             {
 248:Src/mode.c    ****                 state += 4;
 103              		.loc 1 248 0
 104 006e 0434     		adds	r4, r4, #4
 105              	.LVL10:
 106 0070 E4B2     		uxtb	r4, r4
 107              	.LVL11:
 108              	.L12:
 249:Src/mode.c    ****             }
 250:Src/mode.c    ****             enc.offset = 0;
 109              		.loc 1 250 0
 110 0072 3A4B     		ldr	r3, .L34+12
 111 0074 0022     		movs	r2, #0
 112 0076 9A60     		str	r2, [r3, #8]	@ float
 113              	.L13:
 251:Src/mode.c    ****         }
 252:Src/mode.c    ****         else if (enc.offset < -20)
 253:Src/mode.c    ****         {
 254:Src/mode.c    ****             if (state == 0)
 255:Src/mode.c    ****             {
 256:Src/mode.c    ****                 state = 16;
 257:Src/mode.c    ****             }
 258:Src/mode.c    ****             else
 259:Src/mode.c    ****             {
 260:Src/mode.c    ****                 state -= 4;
 261:Src/mode.c    ****             }
 262:Src/mode.c    ****             enc.offset = 0;
 263:Src/mode.c    ****         }
 264:Src/mode.c    ****         if (accel.z > 30.0f)
 114              		.loc 1 264 0
 115 0078 354B     		ldr	r3, .L34
 116 007a 93ED027A 		vldr.32	s14, [r3, #8]
 117 007e F3EE0E7A 		vmov.f32	s15, #3.0e+1
 118 0082 B4EEE77A 		vcmpe.f32	s14, s15
 119 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 120 008a 4DDC     		bgt	.L32
 265:Src/mode.c    ****         {
 266:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 267:Src/mode.c    ****             HAL_Delay(100);
 268:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 269:Src/mode.c    ****             HAL_Delay(500);
 270:Src/mode.c    ****             break;
 271:Src/mode.c    ****         }
 272:Src/mode.c    ****         Gpio_FullColor(state % 7);
 121              		.loc 1 272 0
 122 008c 3448     		ldr	r0, .L34+16
 123 008e A0FB0430 		umull	r3, r0, r0, r4
 124 0092 231A     		subs	r3, r4, r0
 125 0094 00EB5300 		add	r0, r0, r3, lsr #1
 126 0098 8008     		lsrs	r0, r0, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 8


 127 009a C0EBC000 		rsb	r0, r0, r0, lsl #3
 128 009e 201A     		subs	r0, r4, r0
 129 00a0 C0B2     		uxtb	r0, r0
 130 00a2 FFF7FEFF 		bl	Gpio_FullColor
 131              	.LVL12:
 273:Src/mode.c    ****         Gpio_SideLed(mode);
 132              		.loc 1 273 0
 133 00a6 E8B2     		uxtb	r0, r5
 134 00a8 FFF7FEFF 		bl	Gpio_SideLed
 135              	.LVL13:
 274:Src/mode.c    ****         printf("%d\r", mode + state);
 136              		.loc 1 274 0
 137 00ac 2919     		adds	r1, r5, r4
 138 00ae 2D48     		ldr	r0, .L34+20
 139 00b0 FFF7FEFF 		bl	printf
 140              	.LVL14:
 141              	.L18:
 217:Src/mode.c    ****         {
 142              		.loc 1 217 0
 143 00b4 274B     		ldr	r3, .L34+4
 144 00b6 93ED007A 		vldr.32	s14, [r3]
 145 00ba DFED277A 		vldr.32	s15, .L34+8
 146 00be B4EEE77A 		vcmpe.f32	s14, s15
 147 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 148 00c6 08DC     		bgt	.L2
 217:Src/mode.c    ****         {
 149              		.loc 1 217 0 is_stmt 0 discriminator 1
 150 00c8 93ED007A 		vldr.32	s14, [r3]
 151 00cc DFED267A 		vldr.32	s15, .L34+24
 152 00d0 B4EEE77A 		vcmpe.f32	s14, s15
 153 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 00d8 BDD5     		bpl	.L3
 155              	.L2:
 219:Src/mode.c    ****             {
 156              		.loc 1 219 0 is_stmt 1
 157 00da 1E4B     		ldr	r3, .L34+4
 158 00dc 93ED007A 		vldr.32	s14, [r3]
 159 00e0 DFED217A 		vldr.32	s15, .L34+24
 160 00e4 B4EEE77A 		vcmpe.f32	s14, s15
 161 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 00ec 91D5     		bpl	.L28
 221:Src/mode.c    ****             }
 163              		.loc 1 221 0
 164 00ee 0135     		adds	r5, r5, #1
 165              	.LVL15:
 166 00f0 6DB2     		sxtb	r5, r5
 167              	.LVL16:
 168              	.L7:
 227:Src/mode.c    ****             {
 169              		.loc 1 227 0
 170 00f2 032D     		cmp	r5, #3
 171 00f4 9ADC     		bgt	.L19
 231:Src/mode.c    ****             {
 172              		.loc 1 231 0
 173 00f6 002D     		cmp	r5, #0
 174 00f8 99DA     		bge	.L9
 233:Src/mode.c    ****             }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 9


 175              		.loc 1 233 0
 176 00fa 0325     		movs	r5, #3
 177              	.LVL17:
 178 00fc 97E7     		b	.L9
 179              	.LVL18:
 180              	.L21:
 244:Src/mode.c    ****             }
 181              		.loc 1 244 0
 182 00fe 0024     		movs	r4, #0
 183              	.LVL19:
 184 0100 B7E7     		b	.L12
 185              	.LVL20:
 186              	.L29:
 252:Src/mode.c    ****         {
 187              		.loc 1 252 0
 188 0102 164B     		ldr	r3, .L34+12
 189 0104 93ED027A 		vldr.32	s14, [r3, #8]
 190 0108 FBEE047A 		vmov.f32	s15, #-2.0e+1
 191 010c B4EEE77A 		vcmpe.f32	s14, s15
 192 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193 0114 B0D5     		bpl	.L13
 254:Src/mode.c    ****             {
 194              		.loc 1 254 0
 195 0116 2CB1     		cbz	r4, .L22
 260:Src/mode.c    ****             }
 196              		.loc 1 260 0
 197 0118 043C     		subs	r4, r4, #4
 198              	.LVL21:
 199 011a E4B2     		uxtb	r4, r4
 200              	.LVL22:
 201              	.L15:
 262:Src/mode.c    ****         }
 202              		.loc 1 262 0
 203 011c 0F4B     		ldr	r3, .L34+12
 204 011e 0022     		movs	r2, #0
 205 0120 9A60     		str	r2, [r3, #8]	@ float
 206 0122 A9E7     		b	.L13
 207              	.L22:
 256:Src/mode.c    ****             }
 208              		.loc 1 256 0
 209 0124 1024     		movs	r4, #16
 210              	.LVL23:
 211 0126 F9E7     		b	.L15
 212              	.LVL24:
 213              	.L32:
 266:Src/mode.c    ****             HAL_Delay(100);
 214              		.loc 1 266 0
 215 0128 4FF49671 		mov	r1, #300
 216 012c 4C20     		movs	r0, #76
 217 012e FFF7FEFF 		bl	Tim_BuzzerPwm
 218              	.LVL25:
 267:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 219              		.loc 1 267 0
 220 0132 6420     		movs	r0, #100
 221 0134 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL26:
 268:Src/mode.c    ****             HAL_Delay(500);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 10


 223              		.loc 1 268 0
 224 0138 0021     		movs	r1, #0
 225 013a 0A20     		movs	r0, #10
 226 013c FFF7FEFF 		bl	Tim_BuzzerPwm
 227              	.LVL27:
 269:Src/mode.c    ****             break;
 228              		.loc 1 269 0
 229 0140 4FF4FA70 		mov	r0, #500
 230 0144 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL28:
 275:Src/mode.c    ****     }
 276:Src/mode.c    ****     return mode + state;
 232              		.loc 1 276 0
 233 0148 2C44     		add	r4, r4, r5
 234              	.LVL29:
 235 014a E0B2     		uxtb	r0, r4
 277:Src/mode.c    **** }
 236              		.loc 1 277 0
 237 014c 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL30:
 239              	.L35:
 240 014e 00BF     		.align	2
 241              	.L34:
 242 0150 00000000 		.word	accel
 243 0154 00000000 		.word	gyro_y
 244 0158 00009643 		.word	1133903872
 245 015c 00000000 		.word	enc
 246 0160 25499224 		.word	613566757
 247 0164 00000000 		.word	.LC0
 248 0168 000096C3 		.word	-1013579776
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.SensorCheck,"ax",%progbits
 253              		.align	1
 254              		.global	SensorCheck
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	SensorCheck:
 261              	.LFB128:
 278:Src/mode.c    **** 
 279:Src/mode.c    **** void SensorCheck(void)
 280:Src/mode.c    **** {
 262              		.loc 1 280 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 281:Src/mode.c    ****     Adc_IrSensorStart();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 11


 274              		.loc 1 281 0
 275 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 276              	.LVL31:
 277 0008 2CE0     		b	.L43
 278              	.L48:
 282:Src/mode.c    **** 
 283:Src/mode.c    ****     while (1)
 284:Src/mode.c    ****     {
 285:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 286:Src/mode.c    ****         {
 287:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 279              		.loc 1 287 0
 280 000a 0022     		movs	r2, #0
 281 000c 8021     		movs	r1, #128
 282 000e 2D48     		ldr	r0, .L51
 283 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL32:
 285 0014 2FE0     		b	.L38
 286              	.L49:
 288:Src/mode.c    ****         }
 289:Src/mode.c    ****         else
 290:Src/mode.c    ****         {
 291:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 292:Src/mode.c    ****         }
 293:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 294:Src/mode.c    ****         {
 295:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 287              		.loc 1 295 0
 288 0016 0022     		movs	r2, #0
 289 0018 1021     		movs	r1, #16
 290 001a 2B48     		ldr	r0, .L51+4
 291 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL33:
 293 0020 32E0     		b	.L40
 294              	.L50:
 296:Src/mode.c    ****         }
 297:Src/mode.c    ****         else
 298:Src/mode.c    ****         {
 299:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 300:Src/mode.c    ****         }
 301:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 302:Src/mode.c    ****         {
 303:Src/mode.c    ****             Gpio_FullColor(WHITE);
 295              		.loc 1 303 0
 296 0022 0020     		movs	r0, #0
 297 0024 FFF7FEFF 		bl	Gpio_FullColor
 298              	.LVL34:
 299              	.L42:
 304:Src/mode.c    ****         }
 305:Src/mode.c    ****         else
 306:Src/mode.c    ****         {
 307:Src/mode.c    ****             Gpio_FullColor(DARK);
 308:Src/mode.c    ****         }
 309:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r\n", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now,
 300              		.loc 1 309 0
 301 0028 284B     		ldr	r3, .L51+8
 302 002a B3F90010 		ldrsh	r1, [r3]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 12


 303 002e 284B     		ldr	r3, .L51+12
 304 0030 B3F90020 		ldrsh	r2, [r3]
 305 0034 274B     		ldr	r3, .L51+16
 306 0036 B3F90030 		ldrsh	r3, [r3]
 307 003a 2748     		ldr	r0, .L51+20
 308 003c B0F90000 		ldrsh	r0, [r0]
 309 0040 264C     		ldr	r4, .L51+24
 310 0042 B4F90040 		ldrsh	r4, [r4]
 311 0046 0194     		str	r4, [sp, #4]
 312 0048 0090     		str	r0, [sp]
 313 004a 2548     		ldr	r0, .L51+28
 314 004c FFF7FEFF 		bl	printf
 315              	.LVL35:
 310:Src/mode.c    **** 
 311:Src/mode.c    ****         if (accel.x > 60)
 316              		.loc 1 311 0
 317 0050 244B     		ldr	r3, .L51+32
 318 0052 93ED007A 		vldr.32	s14, [r3]
 319 0056 DFED247A 		vldr.32	s15, .L51+36
 320 005a B4EEE77A 		vcmpe.f32	s14, s15
 321 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 322 0062 19DC     		bgt	.L47
 323              	.L43:
 285:Src/mode.c    ****         {
 324              		.loc 1 285 0
 325 0064 1D4B     		ldr	r3, .L51+24
 326 0066 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 327 0068 012B     		cmp	r3, #1
 328 006a CED0     		beq	.L48
 291:Src/mode.c    ****         }
 329              		.loc 1 291 0
 330 006c 0122     		movs	r2, #1
 331 006e 8021     		movs	r1, #128
 332 0070 1448     		ldr	r0, .L51
 333 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL36:
 335              	.L38:
 293:Src/mode.c    ****         {
 336              		.loc 1 293 0
 337 0076 154B     		ldr	r3, .L51+8
 338 0078 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 339 007a 012B     		cmp	r3, #1
 340 007c CBD0     		beq	.L49
 299:Src/mode.c    ****         }
 341              		.loc 1 299 0
 342 007e 0122     		movs	r2, #1
 343 0080 1021     		movs	r1, #16
 344 0082 1148     		ldr	r0, .L51+4
 345 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL37:
 347              	.L40:
 301:Src/mode.c    ****         {
 348              		.loc 1 301 0
 349 0088 124B     		ldr	r3, .L51+16
 350 008a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 351 008c 012B     		cmp	r3, #1
 352 008e C8D0     		beq	.L50
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 13


 307:Src/mode.c    ****         }
 353              		.loc 1 307 0
 354 0090 0720     		movs	r0, #7
 355 0092 FFF7FEFF 		bl	Gpio_FullColor
 356              	.LVL38:
 357 0096 C7E7     		b	.L42
 358              	.L47:
 312:Src/mode.c    ****         {
 313:Src/mode.c    ****             Adc_IrSensorFinish();
 359              		.loc 1 313 0
 360 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 361              	.LVL39:
 314:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 362              		.loc 1 314 0
 363 009c 4FF49671 		mov	r1, #300
 364 00a0 4C20     		movs	r0, #76
 365 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 366              	.LVL40:
 315:Src/mode.c    ****             HAL_Delay(300);
 367              		.loc 1 315 0
 368 00a6 4FF49670 		mov	r0, #300
 369 00aa FFF7FEFF 		bl	HAL_Delay
 370              	.LVL41:
 316:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 371              		.loc 1 316 0
 372 00ae 0021     		movs	r1, #0
 373 00b0 0A20     		movs	r0, #10
 374 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 375              	.LVL42:
 317:Src/mode.c    ****             HAL_Delay(500);
 376              		.loc 1 317 0
 377 00b6 4FF4FA70 		mov	r0, #500
 378 00ba FFF7FEFF 		bl	HAL_Delay
 379              	.LVL43:
 318:Src/mode.c    ****             break;
 319:Src/mode.c    ****         }
 320:Src/mode.c    ****     }
 321:Src/mode.c    **** }
 380              		.loc 1 321 0
 381 00be 02B0     		add	sp, sp, #8
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 00c0 10BD     		pop	{r4, pc}
 386              	.L52:
 387 00c2 00BF     		.align	2
 388              	.L51:
 389 00c4 00040240 		.word	1073873920
 390 00c8 00000240 		.word	1073872896
 391 00cc 00000000 		.word	sen_l
 392 00d0 00000000 		.word	sen_fl
 393 00d4 00000000 		.word	sen_front
 394 00d8 00000000 		.word	sen_fr
 395 00dc 00000000 		.word	sen_r
 396 00e0 00000000 		.word	.LC1
 397 00e4 00000000 		.word	accel
 398 00e8 00007042 		.word	1114636288
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 14


 399              		.cfi_endproc
 400              	.LFE128:
 402              		.section	.text.SetRunMode,"ax",%progbits
 403              		.align	1
 404              		.global	SetRunMode
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SetRunMode:
 411              	.LFB129:
 322:Src/mode.c    **** 
 323:Src/mode.c    **** void SetRunMode(uint8_t fan_flag)
 324:Src/mode.c    **** {
 412              		.loc 1 324 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL44:
 417 0000 10B5     		push	{r4, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422 0002 0446     		mov	r4, r0
 325:Src/mode.c    ****     Adc_IrSensorStart();
 423              		.loc 1 325 0
 424 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 425              	.LVL45:
 426              	.L54:
 326:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 427              		.loc 1 326 0 discriminator 1
 428 0008 254B     		ldr	r3, .L59
 429 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 430 000c 012B     		cmp	r3, #1
 431 000e FBD1     		bne	.L54
 327:Src/mode.c    ****     {
 328:Src/mode.c    ****     }
 329:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 432              		.loc 1 329 0
 433 0010 4FF49671 		mov	r1, #300
 434 0014 4C20     		movs	r0, #76
 435 0016 FFF7FEFF 		bl	Tim_BuzzerPwm
 436              	.LVL46:
 330:Src/mode.c    ****     HAL_Delay(100);
 437              		.loc 1 330 0
 438 001a 6420     		movs	r0, #100
 439 001c FFF7FEFF 		bl	HAL_Delay
 440              	.LVL47:
 331:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 441              		.loc 1 331 0
 442 0020 0021     		movs	r1, #0
 443 0022 0A20     		movs	r0, #10
 444 0024 FFF7FEFF 		bl	Tim_BuzzerPwm
 445              	.LVL48:
 332:Src/mode.c    ****     Gpio_FullColor(DARK);
 446              		.loc 1 332 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 15


 447 0028 0720     		movs	r0, #7
 448 002a FFF7FEFF 		bl	Gpio_FullColor
 449              	.LVL49:
 333:Src/mode.c    ****     Gpio_SideLed(0);
 450              		.loc 1 333 0
 451 002e 0020     		movs	r0, #0
 452 0030 FFF7FEFF 		bl	Gpio_SideLed
 453              	.LVL50:
 334:Src/mode.c    ****     HAL_Delay(5000);
 454              		.loc 1 334 0
 455 0034 41F28830 		movw	r0, #5000
 456 0038 FFF7FEFF 		bl	HAL_Delay
 457              	.LVL51:
 335:Src/mode.c    ****     Spi_GyroReset();
 458              		.loc 1 335 0
 459 003c FFF7FEFF 		bl	Spi_GyroReset
 460              	.LVL52:
 336:Src/mode.c    ****     HAL_Delay(1200);
 461              		.loc 1 336 0
 462 0040 4FF49660 		mov	r0, #1200
 463 0044 FFF7FEFF 		bl	HAL_Delay
 464              	.LVL53:
 337:Src/mode.c    ****     if (fan_flag == 0)
 465              		.loc 1 337 0
 466 0048 E4B1     		cbz	r4, .L58
 338:Src/mode.c    ****     {
 339:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 340:Src/mode.c    ****         HAL_Delay(100);
 341:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 342:Src/mode.c    ****     }
 343:Src/mode.c    ****     else
 344:Src/mode.c    ****     {
 345:Src/mode.c    ****         Control_SetupStraightPID(4.0f, 11.5f, 0);
 467              		.loc 1 345 0
 468 004a 9FED161A 		vldr.32	s2, .L59+4
 469 004e F2EE070A 		vmov.f32	s1, #1.15e+1
 470 0052 B1EE000A 		vmov.f32	s0, #4.0e+0
 471 0056 FFF7FEFF 		bl	Control_SetupStraightPID
 472              	.LVL54:
 346:Src/mode.c    ****         Control_SetupTurnPID(1.2f, 21.0f, 1.0f);
 473              		.loc 1 346 0
 474 005a B7EE001A 		vmov.f32	s2, #1.0e+0
 475 005e F3EE050A 		vmov.f32	s1, #2.1e+1
 476 0062 9FED110A 		vldr.32	s0, .L59+8
 477 0066 FFF7FEFF 		bl	Control_SetupTurnPID
 478              	.LVL55:
 347:Src/mode.c    ****         //Tim_SetTireRadius(12.37f);
 348:Src/mode.c    ****         Tim_FanPwm(3);
 479              		.loc 1 348 0
 480 006a 0320     		movs	r0, #3
 481 006c FFF7FEFF 		bl	Tim_FanPwm
 482              	.LVL56:
 349:Src/mode.c    ****         HAL_Delay(3000);
 483              		.loc 1 349 0
 484 0070 40F6B830 		movw	r0, #3000
 485 0074 FFF7FEFF 		bl	HAL_Delay
 486              	.LVL57:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 16


 487              	.L56:
 350:Src/mode.c    ****     }
 351:Src/mode.c    ****     Control_ResetVelo();
 488              		.loc 1 351 0
 489 0078 FFF7FEFF 		bl	Control_ResetVelo
 490              	.LVL58:
 352:Src/mode.c    ****     motor_flag = TRUE;
 491              		.loc 1 352 0
 492 007c 0B4B     		ldr	r3, .L59+12
 493 007e 0122     		movs	r2, #1
 494 0080 1A70     		strb	r2, [r3]
 353:Src/mode.c    **** }
 495              		.loc 1 353 0
 496 0082 10BD     		pop	{r4, pc}
 497              	.L58:
 339:Src/mode.c    ****         HAL_Delay(100);
 498              		.loc 1 339 0
 499 0084 4FF49671 		mov	r1, #300
 500 0088 4C20     		movs	r0, #76
 501 008a FFF7FEFF 		bl	Tim_BuzzerPwm
 502              	.LVL59:
 340:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 503              		.loc 1 340 0
 504 008e 6420     		movs	r0, #100
 505 0090 FFF7FEFF 		bl	HAL_Delay
 506              	.LVL60:
 341:Src/mode.c    ****     }
 507              		.loc 1 341 0
 508 0094 0021     		movs	r1, #0
 509 0096 0A20     		movs	r0, #10
 510 0098 FFF7FEFF 		bl	Tim_BuzzerPwm
 511              	.LVL61:
 512 009c ECE7     		b	.L56
 513              	.L60:
 514 009e 00BF     		.align	2
 515              	.L59:
 516 00a0 00000000 		.word	sen_front
 517 00a4 00000000 		.word	0
 518 00a8 9A99993F 		.word	1067030938
 519 00ac 00000000 		.word	motor_flag
 520              		.cfi_endproc
 521              	.LFE129:
 523              		.section	.text.Get_WallData,"ax",%progbits
 524              		.align	1
 525              		.global	Get_WallData
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	Get_WallData:
 532              	.LFB130:
 354:Src/mode.c    **** 
 355:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 356:Src/mode.c    **** {
 533              		.loc 1 356 0
 534              		.cfi_startproc
 535              		@ args = 12, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 17


 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL62:
 539 0000 10B4     		push	{r4}
 540              	.LCFI5:
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 4, -4
 543 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 357:Src/mode.c    ****     // 方向別に壁の状態を取得
 358:Src/mode.c    ****     switch (direction)
 544              		.loc 1 358 0
 545 0006 032C     		cmp	r4, #3
 546 0008 0ED8     		bhi	.L61
 547 000a DFE804F0 		tbb	[pc, r4]
 548              	.L64:
 549 000e 02       		.byte	(.L63-.L64)/2
 550 000f 28       		.byte	(.L65-.L64)/2
 551 0010 1C       		.byte	(.L66-.L64)/2
 552 0011 10       		.byte	(.L67-.L64)/2
 553              		.p2align 1
 554              	.L63:
 359:Src/mode.c    ****     {
 360:Src/mode.c    ****     case NORTH:
 361:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 555              		.loc 1 361 0
 556 0012 194C     		ldr	r4, .L69
 557 0014 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 558 0016 0470     		strb	r4, [r0]
 362:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 559              		.loc 1 362 0
 560 0018 1848     		ldr	r0, .L69+4
 561              	.LVL63:
 562 001a 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 563 001c 0870     		strb	r0, [r1]
 363:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 564              		.loc 1 363 0
 565 001e 1849     		ldr	r1, .L69+8
 566              	.LVL64:
 567 0020 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 568 0022 1170     		strb	r1, [r2]
 364:Src/mode.c    ****         *s_wall = 0;
 569              		.loc 1 364 0
 570 0024 0022     		movs	r2, #0
 571              	.LVL65:
 572 0026 1A70     		strb	r2, [r3]
 573              	.LVL66:
 574              	.L61:
 365:Src/mode.c    ****         break;
 366:Src/mode.c    ****     case EAST:
 367:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 368:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 369:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 370:Src/mode.c    ****         *w_wall = 0;
 371:Src/mode.c    ****         break;
 372:Src/mode.c    ****     case SOUTH:
 373:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 374:Src/mode.c    ****         *w_wall = sen_r.is_wall;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 18


 375:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 376:Src/mode.c    ****         *n_wall = 0;
 377:Src/mode.c    ****         break;
 378:Src/mode.c    ****     case WEST:
 379:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 380:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 381:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 382:Src/mode.c    ****         *e_wall = 0;
 383:Src/mode.c    ****         break;
 384:Src/mode.c    ****     default:
 385:Src/mode.c    ****         break;
 386:Src/mode.c    ****     }
 387:Src/mode.c    **** }
 575              		.loc 1 387 0
 576 0028 5DF8044B 		ldr	r4, [sp], #4
 577              	.LCFI6:
 578              		.cfi_remember_state
 579              		.cfi_restore 4
 580              		.cfi_def_cfa_offset 0
 581              	.LVL67:
 582 002c 7047     		bx	lr
 583              	.LVL68:
 584              	.L67:
 585              	.LCFI7:
 586              		.cfi_restore_state
 367:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 587              		.loc 1 367 0
 588 002e 124C     		ldr	r4, .L69
 589 0030 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 590 0032 0C70     		strb	r4, [r1]
 368:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 591              		.loc 1 368 0
 592 0034 1149     		ldr	r1, .L69+4
 593              	.LVL69:
 594 0036 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 595 0038 1970     		strb	r1, [r3]
 369:Src/mode.c    ****         *w_wall = 0;
 596              		.loc 1 369 0
 597 003a 114B     		ldr	r3, .L69+8
 598              	.LVL70:
 599 003c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 600 003e 0370     		strb	r3, [r0]
 370:Src/mode.c    ****         break;
 601              		.loc 1 370 0
 602 0040 0023     		movs	r3, #0
 603 0042 1370     		strb	r3, [r2]
 371:Src/mode.c    ****     case SOUTH:
 604              		.loc 1 371 0
 605 0044 F0E7     		b	.L61
 606              	.LVL71:
 607              	.L66:
 373:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 608              		.loc 1 373 0
 609 0046 0C4C     		ldr	r4, .L69
 610 0048 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 611 004a 1C70     		strb	r4, [r3]
 374:Src/mode.c    ****         *e_wall = sen_l.is_wall;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 19


 612              		.loc 1 374 0
 613 004c 0B4B     		ldr	r3, .L69+4
 614              	.LVL72:
 615 004e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 616 0050 1370     		strb	r3, [r2]
 375:Src/mode.c    ****         *n_wall = 0;
 617              		.loc 1 375 0
 618 0052 0B4B     		ldr	r3, .L69+8
 619 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 620 0056 0B70     		strb	r3, [r1]
 376:Src/mode.c    ****         break;
 621              		.loc 1 376 0
 622 0058 0023     		movs	r3, #0
 623 005a 0370     		strb	r3, [r0]
 377:Src/mode.c    ****     case WEST:
 624              		.loc 1 377 0
 625 005c E4E7     		b	.L61
 626              	.LVL73:
 627              	.L65:
 379:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 628              		.loc 1 379 0
 629 005e 064C     		ldr	r4, .L69
 630 0060 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 631 0062 1470     		strb	r4, [r2]
 380:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 632              		.loc 1 380 0
 633 0064 054A     		ldr	r2, .L69+4
 634              	.LVL74:
 635 0066 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 636 0068 0270     		strb	r2, [r0]
 381:Src/mode.c    ****         *e_wall = 0;
 637              		.loc 1 381 0
 638 006a 054A     		ldr	r2, .L69+8
 639 006c 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 640 006e 1A70     		strb	r2, [r3]
 382:Src/mode.c    ****         break;
 641              		.loc 1 382 0
 642 0070 0023     		movs	r3, #0
 643              	.LVL75:
 644 0072 0B70     		strb	r3, [r1]
 645              		.loc 1 387 0
 646 0074 D8E7     		b	.L61
 647              	.L70:
 648 0076 00BF     		.align	2
 649              	.L69:
 650 0078 00000000 		.word	sen_front
 651 007c 00000000 		.word	sen_r
 652 0080 00000000 		.word	sen_l
 653              		.cfi_endproc
 654              	.LFE130:
 656              		.section	.text.SearchRun,"ax",%progbits
 657              		.align	1
 658              		.global	SearchRun
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 20


 664              	SearchRun:
 665              	.LFB131:
 388:Src/mode.c    **** 
 389:Src/mode.c    **** void SearchRun(void)
 390:Src/mode.c    **** {
 666              		.loc 1 390 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 288
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 671              	.LCFI8:
 672              		.cfi_def_cfa_offset 20
 673              		.cfi_offset 4, -20
 674              		.cfi_offset 5, -16
 675              		.cfi_offset 6, -12
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 CDB0     		sub	sp, sp, #308
 679              	.LCFI9:
 680              		.cfi_def_cfa_offset 328
 391:Src/mode.c    ****     //壁情報を持った構造体を定義
 392:Src/mode.c    ****     wallData_t wall_data;
 393:Src/mode.c    ****     wallData_t wall_data_fast;
 394:Src/mode.c    **** 
 395:Src/mode.c    ****     //ポジションを定義、初期化
 396:Src/mode.c    ****     pos_t mypos;
 397:Src/mode.c    ****     mypos.dir = 0;
 681              		.loc 1 397 0
 682 0004 0024     		movs	r4, #0
 683 0006 8DF81E40 		strb	r4, [sp, #30]
 398:Src/mode.c    ****     mypos.x = 0;
 684              		.loc 1 398 0
 685 000a 8DF81C40 		strb	r4, [sp, #28]
 399:Src/mode.c    ****     mypos.y = 1;
 686              		.loc 1 399 0
 687 000e 0125     		movs	r5, #1
 688 0010 8DF81D50 		strb	r5, [sp, #29]
 400:Src/mode.c    **** 
 401:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 402:Src/mode.c    ****     Map_Init(&wall_data);
 689              		.loc 1 402 0
 690 0014 2AA8     		add	r0, sp, #168
 691 0016 FFF7FEFF 		bl	Map_Init
 692              	.LVL76:
 403:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 693              		.loc 1 403 0
 694 001a 08A8     		add	r0, sp, #32
 695 001c FFF7FEFF 		bl	Map_InitFast
 696              	.LVL77:
 404:Src/mode.c    **** 
 405:Src/mode.c    ****     //歩数マップの作製
 406:Src/mode.c    ****     uint16_t nextdir = FRONT;
 407:Src/mode.c    ****     //最初の区画は進んでいるものとする
 408:Src/mode.c    ****     unsigned char flag_goal = 0;
 697              		.loc 1 408 0
 698 0020 8DF81B40 		strb	r4, [sp, #27]
 409:Src/mode.c    ****     //enable control side wall
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 21


 410:Src/mode.c    ****     control_wall_flag = 1;
 699              		.loc 1 410 0
 700 0024 954B     		ldr	r3, .L82
 701 0026 1D70     		strb	r5, [r3]
 411:Src/mode.c    ****     //counter set
 412:Src/mode.c    ****     counter_s = 0;
 702              		.loc 1 412 0
 703 0028 954B     		ldr	r3, .L82+4
 704 002a 1C70     		strb	r4, [r3]
 413:Src/mode.c    ****     Control_WallEdgeSet(walledge_search);
 705              		.loc 1 413 0
 706 002c 954B     		ldr	r3, .L82+8
 707 002e 03F11002 		add	r2, r3, #16
 708 0032 92E80300 		ldm	r2, {r0, r1}
 709 0036 8DE80300 		stm	sp, {r0, r1}
 710 003a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 711 003c FFF7FEFF 		bl	Control_WallEdgeSet
 712              	.LVL78:
 414:Src/mode.c    ****     SetRunMode(0);
 713              		.loc 1 414 0
 714 0040 2046     		mov	r0, r4
 715 0042 FFF7FEFF 		bl	SetRunMode
 716              	.LVL79:
 415:Src/mode.c    ****     Motion_Start();
 717              		.loc 1 415 0
 718 0046 FFF7FEFF 		bl	Motion_Start
 719              	.LVL80:
 720 004a 81E0     		b	.L77
 721              	.LVL81:
 722              	.L80:
 723              	.LBB2:
 416:Src/mode.c    ****     while (1)
 417:Src/mode.c    ****     {
 418:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 419:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 420:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 421:Src/mode.c    **** 
 422:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 423:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 424:Src/mode.c    ****         Map_AddUnknownWall(mypos.x,mypos.y,&wall_data,Maze_GetGoalSize(),gx,gy);
 425:Src/mode.c    **** 
 426:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 427:Src/mode.c    **** 
 428:Src/mode.c    ****         if(flag_goal==0 && Maze_GetStep(mypos.x,mypos.y)==MAX_STEP){
 724              		.loc 1 428 0 discriminator 1
 725 004c 9DF81D10 		ldrb	r1, [sp, #29]	@ zero_extendqisi2
 726 0050 9DF81C00 		ldrb	r0, [sp, #28]	@ zero_extendqisi2
 727 0054 FFF7FEFF 		bl	Maze_GetStep
 728              	.LVL82:
 729 0058 FF28     		cmp	r0, #255
 730 005a 40F0CE80 		bne	.L72
 429:Src/mode.c    ****             Maze_ResetWall(&wall_data,mypos);
 731              		.loc 1 429 0
 732 005e 0799     		ldr	r1, [sp, #28]
 733 0060 2AA8     		add	r0, sp, #168
 734 0062 FFF7FEFF 		bl	Maze_ResetWall
 735              	.LVL83:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 22


 736 0066 C8E0     		b	.L72
 737              	.L81:
 430:Src/mode.c    ****         }
 431:Src/mode.c    ****         
 432:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 433:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 434:Src/mode.c    ****         //Maze_UpdatePosition(nextdir, &mypos);
 435:Src/mode.c    ****         Motion_Switch(nextdir);
 436:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 738              		.loc 1 436 0 discriminator 1
 739 0068 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 740 006c 8649     		ldr	r1, .L82+12
 741 006e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 742 0070 8A42     		cmp	r2, r1
 743 0072 40F0D580 		bne	.L73
 437:Src/mode.c    ****         {
 438:Src/mode.c    ****             if (flag_goal == 0)
 744              		.loc 1 438 0
 745 0076 9DF81B10 		ldrb	r1, [sp, #27]	@ zero_extendqisi2
 746 007a 0029     		cmp	r1, #0
 747 007c 40F0D080 		bne	.L73
 439:Src/mode.c    ****             {
 440:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 748              		.loc 1 440 0
 749 0080 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 750 0084 0291     		str	r1, [sp, #8]
 751 0086 0192     		str	r2, [sp, #4]
 752 0088 0093     		str	r3, [sp]
 753 008a 0DF11A03 		add	r3, sp, #26
 754 008e 0DF11902 		add	r2, sp, #25
 755 0092 06A9     		add	r1, sp, #24
 756 0094 0DF11700 		add	r0, sp, #23
 757 0098 FFF7FEFF 		bl	Get_WallData
 758              	.LVL84:
 441:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 759              		.loc 1 441 0
 760 009c 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 761 00a0 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 762 00a4 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 763 00a8 0191     		str	r1, [sp, #4]
 764 00aa 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 765 00ae 0091     		str	r1, [sp]
 766 00b0 07A9     		add	r1, sp, #28
 767 00b2 2AA8     		add	r0, sp, #168
 768 00b4 FFF7FEFF 		bl	Map_addWall
 769              	.LVL85:
 442:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 770              		.loc 1 442 0
 771 00b8 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 772 00bc 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 773 00c0 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 774 00c4 0191     		str	r1, [sp, #4]
 775 00c6 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 776 00ca 0091     		str	r1, [sp]
 777 00cc 07A9     		add	r1, sp, #28
 778 00ce 08A8     		add	r0, sp, #32
 779 00d0 FFF7FEFF 		bl	Map_DelWall
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 23


 780              	.LVL86:
 443:Src/mode.c    ****                 Motion_End();
 781              		.loc 1 443 0
 782 00d4 FFF7FEFF 		bl	Motion_End
 783              	.LVL87:
 444:Src/mode.c    ****                 motor_flag = FALSE;
 784              		.loc 1 444 0
 785 00d8 0024     		movs	r4, #0
 786 00da 6C4B     		ldr	r3, .L82+16
 787 00dc 1C70     		strb	r4, [r3]
 445:Src/mode.c    ****                 flag_goal = 1;
 788              		.loc 1 445 0
 789 00de 0123     		movs	r3, #1
 790 00e0 8DF81B30 		strb	r3, [sp, #27]
 446:Src/mode.c    ****                 HAL_Delay(1000);
 791              		.loc 1 446 0
 792 00e4 4FF47A70 		mov	r0, #1000
 793 00e8 FFF7FEFF 		bl	HAL_Delay
 794              	.LVL88:
 447:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 795              		.loc 1 447 0
 796 00ec 8822     		movs	r2, #136
 797 00ee 08A9     		add	r1, sp, #32
 798 00f0 674B     		ldr	r3, .L82+20
 799 00f2 1868     		ldr	r0, [r3]
 800 00f4 FFF7FEFF 		bl	Flash_Write
 801              	.LVL89:
 448:Src/mode.c    ****                 HAL_Delay(2000);
 802              		.loc 1 448 0
 803 00f8 4FF4FA60 		mov	r0, #2000
 804 00fc FFF7FEFF 		bl	HAL_Delay
 805              	.LVL90:
 449:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 806              		.loc 1 449 0
 807 0100 4FF49671 		mov	r1, #300
 808 0104 5B20     		movs	r0, #91
 809 0106 FFF7FEFF 		bl	Tim_BuzzerPwm
 810              	.LVL91:
 450:Src/mode.c    ****                 HAL_Delay(200);
 811              		.loc 1 450 0
 812 010a C820     		movs	r0, #200
 813 010c FFF7FEFF 		bl	HAL_Delay
 814              	.LVL92:
 451:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 815              		.loc 1 451 0
 816 0110 2146     		mov	r1, r4
 817 0112 0A20     		movs	r0, #10
 818 0114 FFF7FEFF 		bl	Tim_BuzzerPwm
 819              	.LVL93:
 452:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 820              		.loc 1 452 0
 821 0118 5E4B     		ldr	r3, .L82+24
 822 011a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 823 011c 53B9     		cbnz	r3, .L74
 824              	.LVL94:
 453:Src/mode.c    ****                 {
 454:Src/mode.c    ****                     nextdir = FRONT;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 24


 455:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 825              		.loc 1 455 0
 826 011e 07A9     		add	r1, sp, #28
 827 0120 2046     		mov	r0, r4
 828 0122 FFF7FEFF 		bl	Maze_UpdatePosition
 829              	.LVL95:
 456:Src/mode.c    ****                     motor_flag = TRUE;
 830              		.loc 1 456 0
 831 0126 594B     		ldr	r3, .L82+16
 832 0128 0122     		movs	r2, #1
 833 012a 1A70     		strb	r2, [r3]
 457:Src/mode.c    ****                     Motion_Restart(FALSE);
 834              		.loc 1 457 0
 835 012c 2046     		mov	r0, r4
 836 012e FFF7FEFF 		bl	Motion_Restart
 837              	.LVL96:
 838 0132 75E0     		b	.L73
 839              	.LVL97:
 840              	.L74:
 458:Src/mode.c    ****                 }
 459:Src/mode.c    ****                 else
 460:Src/mode.c    ****                 {
 461:Src/mode.c    ****                     nextdir = PIVO_REAR;
 462:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 841              		.loc 1 462 0
 842 0134 07A9     		add	r1, sp, #28
 843 0136 0420     		movs	r0, #4
 844 0138 FFF7FEFF 		bl	Maze_UpdatePosition
 845              	.LVL98:
 463:Src/mode.c    ****                     motor_flag = TRUE;
 846              		.loc 1 463 0
 847 013c 0120     		movs	r0, #1
 848 013e 534B     		ldr	r3, .L82+16
 849 0140 1870     		strb	r0, [r3]
 464:Src/mode.c    ****                     Motion_Restart(TRUE);
 850              		.loc 1 464 0
 851 0142 FFF7FEFF 		bl	Motion_Restart
 852              	.LVL99:
 853 0146 6BE0     		b	.L73
 854              	.LVL100:
 855              	.L75:
 465:Src/mode.c    ****                 }
 466:Src/mode.c    ****             }
 467:Src/mode.c    ****         }
 468:Src/mode.c    ****         if (counter_s > 150 && flag_goal == 1)
 469:Src/mode.c    ****         {
 470:Src/mode.c    ****             flag_goal = 2;
 471:Src/mode.c    ****         }
 472:Src/mode.c    ****         if (flag_goal == 2)
 856              		.loc 1 472 0
 857 0148 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 858 014c 022B     		cmp	r3, #2
 859 014e 73D0     		beq	.L79
 860              	.L77:
 418:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 861              		.loc 1 418 0
 862 0150 0023     		movs	r3, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 25


 863 0152 8DF81730 		strb	r3, [sp, #23]
 864 0156 8DF81830 		strb	r3, [sp, #24]
 865 015a 8DF81930 		strb	r3, [sp, #25]
 866 015e 8DF81A30 		strb	r3, [sp, #26]
 420:Src/mode.c    **** 
 867              		.loc 1 420 0
 868 0162 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 869 0166 0293     		str	r3, [sp, #8]
 870 0168 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 871 016c 0193     		str	r3, [sp, #4]
 872 016e 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 873 0172 0093     		str	r3, [sp]
 874 0174 0DF11A03 		add	r3, sp, #26
 875 0178 0DF11902 		add	r2, sp, #25
 876 017c 06A9     		add	r1, sp, #24
 877 017e 0DF11700 		add	r0, sp, #23
 878 0182 FFF7FEFF 		bl	Get_WallData
 879              	.LVL101:
 422:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 880              		.loc 1 422 0
 881 0186 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 882 018a 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 883 018e 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 884 0192 0191     		str	r1, [sp, #4]
 885 0194 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 886 0198 0091     		str	r1, [sp]
 887 019a 07A9     		add	r1, sp, #28
 888 019c 2AA8     		add	r0, sp, #168
 889 019e FFF7FEFF 		bl	Map_addWall
 890              	.LVL102:
 423:Src/mode.c    ****         Map_AddUnknownWall(mypos.x,mypos.y,&wall_data,Maze_GetGoalSize(),gx,gy);
 891              		.loc 1 423 0
 892 01a2 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 893 01a6 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 894 01aa 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 895 01ae 0191     		str	r1, [sp, #4]
 896 01b0 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 897 01b4 0091     		str	r1, [sp]
 898 01b6 07A9     		add	r1, sp, #28
 899 01b8 08A8     		add	r0, sp, #32
 900 01ba FFF7FEFF 		bl	Map_DelWall
 901              	.LVL103:
 424:Src/mode.c    **** 
 902              		.loc 1 424 0
 903 01be 9DF81C60 		ldrb	r6, [sp, #28]	@ zero_extendqisi2
 904 01c2 9DF81D70 		ldrb	r7, [sp, #29]	@ zero_extendqisi2
 905 01c6 FFF7FEFF 		bl	Maze_GetGoalSize
 906              	.LVL104:
 907 01ca 2F4D     		ldr	r5, .L82+12
 908 01cc 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 909 01ce 0193     		str	r3, [sp, #4]
 910 01d0 314C     		ldr	r4, .L82+28
 911 01d2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 912 01d4 0093     		str	r3, [sp]
 913 01d6 0346     		mov	r3, r0
 914 01d8 2AAA     		add	r2, sp, #168
 915 01da 3946     		mov	r1, r7
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 26


 916 01dc 3046     		mov	r0, r6
 917 01de FFF7FEFF 		bl	Map_AddUnknownWall
 918              	.LVL105:
 426:Src/mode.c    **** 
 919              		.loc 1 426 0
 920 01e2 2AAB     		add	r3, sp, #168
 921 01e4 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 922 01e6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 923 01e8 0DF11B00 		add	r0, sp, #27
 924 01ec FFF7FEFF 		bl	Maze_UpdateStepMap
 925              	.LVL106:
 428:Src/mode.c    ****             Maze_ResetWall(&wall_data,mypos);
 926              		.loc 1 428 0
 927 01f0 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 928 01f4 002B     		cmp	r3, #0
 929 01f6 3FF429AF 		beq	.L80
 930              	.L72:
 432:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 931              		.loc 1 432 0
 932 01fa 2AA9     		add	r1, sp, #168
 933 01fc 07A8     		add	r0, sp, #28
 934 01fe FFF7FEFF 		bl	Maze_GetNextMotion
 935              	.LVL107:
 433:Src/mode.c    ****         //Maze_UpdatePosition(nextdir, &mypos);
 936              		.loc 1 433 0
 937 0202 82B2     		uxth	r2, r0
 938 0204 2AA9     		add	r1, sp, #168
 939 0206 07A8     		add	r0, sp, #28
 940              	.LVL108:
 941 0208 FFF7FEFF 		bl	Maze_KnownStepAccel
 942              	.LVL109:
 435:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 943              		.loc 1 435 0
 944 020c C0B2     		uxtb	r0, r0
 945              	.LVL110:
 946 020e FFF7FEFF 		bl	Motion_Switch
 947              	.LVL111:
 436:Src/mode.c    ****         {
 948              		.loc 1 436 0
 949 0212 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 950 0216 204A     		ldr	r2, .L82+28
 951 0218 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 952 021a 9342     		cmp	r3, r2
 953 021c 3FF424AF 		beq	.L81
 954              	.L73:
 468:Src/mode.c    ****         {
 955              		.loc 1 468 0
 956 0220 174B     		ldr	r3, .L82+4
 957 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 958 0224 962B     		cmp	r3, #150
 959 0226 8FD9     		bls	.L75
 468:Src/mode.c    ****         {
 960              		.loc 1 468 0 is_stmt 0 discriminator 1
 961 0228 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 962 022c 012B     		cmp	r3, #1
 963 022e 8BD1     		bne	.L75
 470:Src/mode.c    ****         }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 27


 964              		.loc 1 470 0 is_stmt 1
 965 0230 0223     		movs	r3, #2
 966 0232 8DF81B30 		strb	r3, [sp, #27]
 967 0236 87E7     		b	.L75
 968              	.L79:
 473:Src/mode.c    ****         {
 474:Src/mode.c    ****             Motion_End();
 969              		.loc 1 474 0
 970 0238 FFF7FEFF 		bl	Motion_End
 971              	.LVL112:
 475:Src/mode.c    ****             motor_flag = FALSE;
 972              		.loc 1 475 0
 973 023c 0024     		movs	r4, #0
 974 023e 134B     		ldr	r3, .L82+16
 975 0240 1C70     		strb	r4, [r3]
 476:Src/mode.c    ****             HAL_Delay(1000);
 976              		.loc 1 476 0
 977 0242 4FF47A70 		mov	r0, #1000
 978 0246 FFF7FEFF 		bl	HAL_Delay
 979              	.LVL113:
 477:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 980              		.loc 1 477 0
 981 024a 8822     		movs	r2, #136
 982 024c 08A9     		add	r1, sp, #32
 983 024e 104B     		ldr	r3, .L82+20
 984 0250 1868     		ldr	r0, [r3]
 985 0252 FFF7FEFF 		bl	Flash_Write
 986              	.LVL114:
 478:Src/mode.c    ****             HAL_Delay(2000);
 987              		.loc 1 478 0
 988 0256 4FF4FA60 		mov	r0, #2000
 989 025a FFF7FEFF 		bl	HAL_Delay
 990              	.LVL115:
 479:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 991              		.loc 1 479 0
 992 025e 4FF49671 		mov	r1, #300
 993 0262 5B20     		movs	r0, #91
 994 0264 FFF7FEFF 		bl	Tim_BuzzerPwm
 995              	.LVL116:
 480:Src/mode.c    ****             HAL_Delay(200);
 996              		.loc 1 480 0
 997 0268 C820     		movs	r0, #200
 998 026a FFF7FEFF 		bl	HAL_Delay
 999              	.LVL117:
 481:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 1000              		.loc 1 481 0
 1001 026e 2146     		mov	r1, r4
 1002 0270 0A20     		movs	r0, #10
 1003 0272 FFF7FEFF 		bl	Tim_BuzzerPwm
 1004              	.LVL118:
 1005              	.LBE2:
 482:Src/mode.c    ****             break;
 483:Src/mode.c    ****         }
 484:Src/mode.c    ****     }
 485:Src/mode.c    **** }
 1006              		.loc 1 485 0
 1007 0276 4DB0     		add	sp, sp, #308
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 28


 1008              	.LCFI10:
 1009              		.cfi_def_cfa_offset 20
 1010              		@ sp needed
 1011 0278 F0BD     		pop	{r4, r5, r6, r7, pc}
 1012              	.L83:
 1013 027a 00BF     		.align	2
 1014              	.L82:
 1015 027c 00000000 		.word	control_wall_flag
 1016 0280 00000000 		.word	counter_s
 1017 0284 00000000 		.word	.LANCHOR0
 1018 0288 00000000 		.word	.LANCHOR1
 1019 028c 00000000 		.word	motor_flag
 1020 0290 00000000 		.word	start_address
 1021 0294 00000000 		.word	sen_front
 1022 0298 00000000 		.word	.LANCHOR2
 1023              		.cfi_endproc
 1024              	.LFE131:
 1026              		.section	.text.Mode_FastRun,"ax",%progbits
 1027              		.align	1
 1028              		.global	Mode_FastRun
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	Mode_FastRun:
 1035              	.LFB132:
 486:Src/mode.c    **** 
 487:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn)
 488:Src/mode.c    **** {
 1036              		.loc 1 488 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 1680
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL119:
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              	.LCFI11:
 1043              		.cfi_def_cfa_offset 20
 1044              		.cfi_offset 4, -20
 1045              		.cfi_offset 5, -16
 1046              		.cfi_offset 6, -12
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 2DED028B 		vpush.64	{d8}
 1050              	.LCFI12:
 1051              		.cfi_def_cfa_offset 28
 1052              		.cfi_offset 80, -28
 1053              		.cfi_offset 81, -24
 1054 0006 ADF29C6D 		subw	sp, sp, #1692
 1055              	.LCFI13:
 1056              		.cfi_def_cfa_offset 1720
 1057 000a 0446     		mov	r4, r0
 1058 000c B0EE408A 		vmov.f32	s16, s0
 1059 0010 0E46     		mov	r6, r1
 1060 0012 1746     		mov	r7, r2
 489:Src/mode.c    ****     wallData_t wallData;
 490:Src/mode.c    ****     pos_t pos;
 491:Src/mode.c    ****     uint16_t motion[255];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 29


 492:Src/mode.c    ****     uint32_t velocity[255];
 493:Src/mode.c    ****     uint8_t tail = 0;
 1061              		.loc 1 493 0
 1062 0014 0025     		movs	r5, #0
 1063 0016 8DF80F50 		strb	r5, [sp, #15]
 1064              	.LVL120:
 494:Src/mode.c    ****     uint8_t head = 0;
 495:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 1065              		.loc 1 495 0
 1066 001a 8822     		movs	r2, #136
 1067              	.LVL121:
 1068 001c 0DF5C261 		add	r1, sp, #1552
 1069              	.LVL122:
 1070 0020 AA4B     		ldr	r3, .L113
 1071 0022 1868     		ldr	r0, [r3]
 1072              	.LVL123:
 1073 0024 FFF7FEFF 		bl	Flash_Load
 1074              	.LVL124:
 496:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 1075              		.loc 1 496 0
 1076 0028 A94B     		ldr	r3, .L113+4
 1077 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1078 002c A94A     		ldr	r2, .L113+8
 1079 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1080 0030 0092     		str	r2, [sp]
 1081 0032 3A46     		mov	r2, r7
 1082 0034 3146     		mov	r1, r6
 1083 0036 0DF5C260 		add	r0, sp, #1552
 1084 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1085              	.LVL125:
 497:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1086              		.loc 1 497 0
 1087 003e B0EE480A 		vmov.f32	s0, s16
 1088 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1089              	.LVL126:
 498:Src/mode.c    ****     Control_WallEdgeSet(walledge_800);
 1090              		.loc 1 498 0
 1091 0046 A44B     		ldr	r3, .L113+12
 1092 0048 03F11002 		add	r2, r3, #16
 1093 004c 92E80300 		ldm	r2, {r0, r1}
 1094 0050 8DE80300 		stm	sp, {r0, r1}
 1095 0054 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1096 0056 FFF7FEFF 		bl	Control_WallEdgeSet
 1097              	.LVL127:
 499:Src/mode.c    ****     pos.dir = NORTH;
 1098              		.loc 1 499 0
 1099 005a 8DF80E56 		strb	r5, [sp, #1550]
 500:Src/mode.c    ****     pos.x = 0;
 1100              		.loc 1 500 0
 1101 005e 8DF80C56 		strb	r5, [sp, #1548]
 501:Src/mode.c    ****     pos.y = 1;
 1102              		.loc 1 501 0
 1103 0062 0123     		movs	r3, #1
 1104 0064 8DF80D36 		strb	r3, [sp, #1549]
 502:Src/mode.c    ****     motion[tail] = START;
 1105              		.loc 1 502 0
 1106 0068 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 30


 1107 006c 0DF20C42 		addw	r2, sp, #1036
 1108 0070 0521     		movs	r1, #5
 1109 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 503:Src/mode.c    ****     tail++;
 1110              		.loc 1 503 0
 1111 0076 0133     		adds	r3, r3, #1
 1112 0078 DBB2     		uxtb	r3, r3
 504:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1113              		.loc 1 504 0
 1114 007a 1021     		movs	r1, #16
 1115 007c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 505:Src/mode.c    ****     tail++;
 1116              		.loc 1 505 0
 1117 0080 0133     		adds	r3, r3, #1
 1118 0082 8DF80F30 		strb	r3, [sp, #15]
 1119              	.LVL128:
 1120 0086 1AE0     		b	.L91
 1121              	.L108:
 1122              	.LBB3:
 506:Src/mode.c    ****     head += 2;
 507:Src/mode.c    ****     while (1)
 508:Src/mode.c    ****     {
 509:Src/mode.c    ****         if (Maze_GetGoalSize() == 1)
 510:Src/mode.c    ****         {
 511:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 1123              		.loc 1 511 0
 1124 0088 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1125 008c 904B     		ldr	r3, .L113+4
 1126 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 0090 9A42     		cmp	r2, r3
 1128 0092 2DD0     		beq	.L107
 1129              	.L86:
 512:Src/mode.c    ****             {
 513:Src/mode.c    ****                 break;
 514:Src/mode.c    ****             }
 515:Src/mode.c    ****         }
 516:Src/mode.c    ****         else
 517:Src/mode.c    ****         {
 518:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 519:Src/mode.c    ****             {
 520:Src/mode.c    ****                 break;
 521:Src/mode.c    ****             }
 522:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == gy)
 523:Src/mode.c    ****             {
 524:Src/mode.c    ****                 break;
 525:Src/mode.c    ****             }
 526:Src/mode.c    ****             if (pos.x == gx && pos.y == (gy + 1))
 527:Src/mode.c    ****             {
 528:Src/mode.c    ****                 break;
 529:Src/mode.c    ****             }
 530:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == (gy + 1))
 531:Src/mode.c    ****             {
 532:Src/mode.c    ****                 break;
 533:Src/mode.c    ****             }
 534:Src/mode.c    ****         }
 535:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1130              		.loc 1 535 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 31


 1131 0094 0DF5C261 		add	r1, sp, #1552
 1132 0098 0DF20C60 		addw	r0, sp, #1548
 1133 009c FFF7FEFF 		bl	Maze_GetNextMotionEx
 1134              	.LVL129:
 536:Src/mode.c    ****         motion[tail] = buff;
 1135              		.loc 1 536 0
 1136 00a0 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1137 00a4 0DF20C42 		addw	r2, sp, #1036
 1138 00a8 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 537:Src/mode.c    ****         tail++;
 1139              		.loc 1 537 0
 1140 00ac 0133     		adds	r3, r3, #1
 1141 00ae 8DF80F30 		strb	r3, [sp, #15]
 538:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1142              		.loc 1 538 0
 1143 00b2 0DF20C61 		addw	r1, sp, #1548
 1144 00b6 00F00F00 		and	r0, r0, #15
 1145              	.LVL130:
 1146 00ba FFF7FEFF 		bl	Maze_UpdatePosition
 1147              	.LVL131:
 1148              	.L91:
 509:Src/mode.c    ****         {
 1149              		.loc 1 509 0
 1150 00be FFF7FEFF 		bl	Maze_GetGoalSize
 1151              	.LVL132:
 1152 00c2 0128     		cmp	r0, #1
 1153 00c4 E0D0     		beq	.L108
 518:Src/mode.c    ****             {
 1154              		.loc 1 518 0
 1155 00c6 9DF80C36 		ldrb	r3, [sp, #1548]	@ zero_extendqisi2
 1156 00ca 814A     		ldr	r2, .L113+4
 1157 00cc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1158 00ce 9342     		cmp	r3, r2
 1159 00d0 15D0     		beq	.L109
 1160              	.L88:
 522:Src/mode.c    ****             {
 1161              		.loc 1 522 0
 1162 00d2 511C     		adds	r1, r2, #1
 1163 00d4 8B42     		cmp	r3, r1
 1164 00d6 34D0     		beq	.L110
 1165              	.L89:
 526:Src/mode.c    ****             {
 1166              		.loc 1 526 0
 1167 00d8 9342     		cmp	r3, r2
 1168 00da 39D0     		beq	.L111
 1169              	.L90:
 530:Src/mode.c    ****             {
 1170              		.loc 1 530 0
 1171 00dc 8B42     		cmp	r3, r1
 1172 00de D9D1     		bne	.L86
 530:Src/mode.c    ****             {
 1173              		.loc 1 530 0 is_stmt 0 discriminator 1
 1174 00e0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1175 00e4 7B4B     		ldr	r3, .L113+8
 1176 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1177 00e8 0133     		adds	r3, r3, #1
 1178 00ea 9A42     		cmp	r2, r3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 32


 1179 00ec D2D1     		bne	.L86
 1180              	.LBE3:
 1181 00ee 0CE0     		b	.L87
 1182              	.L107:
 1183              	.LBB4:
 511:Src/mode.c    ****             {
 1184              		.loc 1 511 0 is_stmt 1 discriminator 1
 1185 00f0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1186 00f4 774B     		ldr	r3, .L113+8
 1187 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1188 00f8 9A42     		cmp	r2, r3
 1189 00fa CBD1     		bne	.L86
 1190 00fc 05E0     		b	.L87
 1191              	.L109:
 518:Src/mode.c    ****             {
 1192              		.loc 1 518 0 discriminator 1
 1193 00fe 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1194 0102 7449     		ldr	r1, .L113+8
 1195 0104 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1196 0106 8842     		cmp	r0, r1
 1197 0108 E3D1     		bne	.L88
 1198              	.L87:
 1199              	.LBE4:
 539:Src/mode.c    ****     }
 540:Src/mode.c    ****     motion[tail] = GOAL;
 1200              		.loc 1 540 0
 1201 010a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1202 010e 0DF20C41 		addw	r1, sp, #1036
 1203 0112 0622     		movs	r2, #6
 1204 0114 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 541:Src/mode.c    ****     tail++;
 1205              		.loc 1 541 0
 1206 0118 0133     		adds	r3, r3, #1
 1207 011a 8DF80F30 		strb	r3, [sp, #15]
 1208              	.LVL133:
 542:Src/mode.c    ****     head = 0;
 543:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail, VELO_S, VELO_F);
 1209              		.loc 1 543 0
 1210 011e DFED6F0A 		vldr.32	s1, .L113+16
 1211 0122 9FED6F0A 		vldr.32	s0, .L113+20
 1212 0126 0DF10F03 		add	r3, sp, #15
 1213 012a 04AA     		add	r2, sp, #16
 1214 012c 2046     		mov	r0, r4
 1215 012e FFF7FEFF 		bl	Maze_Compress
 1216              	.LVL134:
 544:Src/mode.c    **** 
 545:Src/mode.c    ****     control_wall_flag = 2;
 1217              		.loc 1 545 0
 1218 0132 6C4B     		ldr	r3, .L113+24
 1219 0134 0222     		movs	r2, #2
 1220 0136 1A70     		strb	r2, [r3]
 546:Src/mode.c    ****     SetRunMode(0);
 1221              		.loc 1 546 0
 1222 0138 0020     		movs	r0, #0
 1223 013a FFF7FEFF 		bl	SetRunMode
 1224              	.LVL135:
 542:Src/mode.c    ****     head = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 33


 1225              		.loc 1 542 0
 1226 013e 0024     		movs	r4, #0
 547:Src/mode.c    ****     while (head != tail)
 1227              		.loc 1 547 0
 1228 0140 1BE0     		b	.L92
 1229              	.LVL136:
 1230              	.L110:
 1231              	.LBB5:
 522:Src/mode.c    ****             {
 1232              		.loc 1 522 0 discriminator 1
 1233 0142 9DF80D56 		ldrb	r5, [sp, #1549]	@ zero_extendqisi2
 1234 0146 6348     		ldr	r0, .L113+8
 1235 0148 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1236 014a 8542     		cmp	r5, r0
 1237 014c C4D1     		bne	.L89
 1238              	.LBE5:
 1239 014e DCE7     		b	.L87
 1240              	.L111:
 1241              	.LBB6:
 526:Src/mode.c    ****             {
 1242              		.loc 1 526 0 discriminator 1
 1243 0150 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1244 0154 5F4A     		ldr	r2, .L113+8
 1245 0156 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1246 0158 0132     		adds	r2, r2, #1
 1247 015a 9042     		cmp	r0, r2
 1248 015c BED1     		bne	.L90
 1249              	.LBE6:
 1250 015e D4E7     		b	.L87
 1251              	.LVL137:
 1252              	.L98:
 548:Src/mode.c    ****     {
 549:Src/mode.c    ****         switch (motion[head] & 0xf)
 550:Src/mode.c    ****         {
 551:Src/mode.c    ****         case START:
 552:Src/mode.c    ****             Motion_FastStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1253              		.loc 1 552 0
 1254 0160 04AB     		add	r3, sp, #16
 1255 0162 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1256 0166 00EE103A 		vmov	s0, r3	@ int
 1257 016a B8EE400A 		vcvt.f32.u32	s0, s0
 1258 016e C0F30710 		ubfx	r0, r0, #4, #8
 1259 0172 FFF7FEFF 		bl	Motion_FastStart
 1260              	.LVL138:
 1261              	.L93:
 553:Src/mode.c    ****             break;
 554:Src/mode.c    ****         case LEFT:
 555:Src/mode.c    ****             Motion_FastLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 556:Src/mode.c    ****             break;
 557:Src/mode.c    ****         case FRONT:
 558:Src/mode.c    ****             Motion_FastStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(velocity[
 559:Src/mode.c    ****             break;
 560:Src/mode.c    ****         case DIAGONAL_L:
 561:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 562:Src/mode.c    ****             break;
 563:Src/mode.c    ****         case DIAGONAL_R:
 564:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 34


 565:Src/mode.c    ****             break;
 566:Src/mode.c    ****         case RIGHT:
 567:Src/mode.c    ****             Motion_FastRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 568:Src/mode.c    ****             break;
 569:Src/mode.c    ****         case GOAL:
 570:Src/mode.c    ****             Motion_FastGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 571:Src/mode.c    ****             break;
 572:Src/mode.c    ****         case ADJUST:
 573:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 574:Src/mode.c    ****             break;
 575:Src/mode.c    ****         case ADJUST_L:
 576:Src/mode.c    ****             Motion_Adjust_L(motion[head] >> 4, (float)(velocity[head] >> 16));
 577:Src/mode.c    ****             break;
 578:Src/mode.c    ****         case ADJUST_R:
 579:Src/mode.c    ****             Motion_Adjust_R(motion[head] >> 4, (float)(velocity[head] >> 16));
 580:Src/mode.c    ****             break;
 581:Src/mode.c    ****         default:
 582:Src/mode.c    ****             break;
 583:Src/mode.c    ****         }
 584:Src/mode.c    ****         head++;
 1262              		.loc 1 584 0
 1263 0176 0134     		adds	r4, r4, #1
 1264              	.LVL139:
 1265 0178 E4B2     		uxtb	r4, r4
 1266              	.LVL140:
 1267              	.L92:
 547:Src/mode.c    ****     {
 1268              		.loc 1 547 0
 1269 017a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1270 017e A342     		cmp	r3, r4
 1271 0180 00F08B80 		beq	.L112
 549:Src/mode.c    ****         {
 1272              		.loc 1 549 0
 1273 0184 0DF20C43 		addw	r3, sp, #1036
 1274 0188 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1275 018c 00F00F03 		and	r3, r0, #15
 1276 0190 0C2B     		cmp	r3, #12
 1277 0192 F0D8     		bhi	.L93
 1278 0194 01A2     		adr	r2, .L95
 1279 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1280 019a 00BF     		.p2align 2
 1281              	.L95:
 1282 019c E9010000 		.word	.L94+1
 1283 01a0 D1010000 		.word	.L96+1
 1284 01a4 21020000 		.word	.L97+1
 1285 01a8 77010000 		.word	.L93+1
 1286 01ac 77010000 		.word	.L93+1
 1287 01b0 61010000 		.word	.L98+1
 1288 01b4 39020000 		.word	.L99+1
 1289 01b8 77010000 		.word	.L93+1
 1290 01bc 0D020000 		.word	.L100+1
 1291 01c0 17020000 		.word	.L101+1
 1292 01c4 53020000 		.word	.L102+1
 1293 01c8 6B020000 		.word	.L103+1
 1294 01cc 83020000 		.word	.L104+1
 1295              		.p2align 1
 1296              	.L96:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 35


 555:Src/mode.c    ****             break;
 1297              		.loc 1 555 0
 1298 01d0 04AB     		add	r3, sp, #16
 1299 01d2 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1300 01d6 00EE103A 		vmov	s0, r3	@ int
 1301 01da B8EE400A 		vcvt.f32.u32	s0, s0
 1302 01de C0F30710 		ubfx	r0, r0, #4, #8
 1303 01e2 FFF7FEFF 		bl	Motion_FastLeftTurn
 1304              	.LVL141:
 556:Src/mode.c    ****         case FRONT:
 1305              		.loc 1 556 0
 1306 01e6 C6E7     		b	.L93
 1307              	.L94:
 558:Src/mode.c    ****             break;
 1308              		.loc 1 558 0
 1309 01e8 04AB     		add	r3, sp, #16
 1310 01ea 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1311 01ee 1A0C     		lsrs	r2, r3, #16
 1312 01f0 00EE102A 		vmov	s0, r2	@ int
 1313 01f4 9BB2     		uxth	r3, r3
 1314 01f6 00EE903A 		vmov	s1, r3	@ int
 1315 01fa F8EE600A 		vcvt.f32.u32	s1, s1
 1316 01fe B8EE400A 		vcvt.f32.u32	s0, s0
 1317 0202 C0F30710 		ubfx	r0, r0, #4, #8
 1318 0206 FFF7FEFF 		bl	Motion_FastStraight
 1319              	.LVL142:
 559:Src/mode.c    ****         case DIAGONAL_L:
 1320              		.loc 1 559 0
 1321 020a B4E7     		b	.L93
 1322              	.L100:
 561:Src/mode.c    ****             break;
 1323              		.loc 1 561 0
 1324 020c C0F30710 		ubfx	r0, r0, #4, #8
 1325 0210 FFF7FEFF 		bl	Motion_DiagonalLeft
 1326              	.LVL143:
 562:Src/mode.c    ****         case DIAGONAL_R:
 1327              		.loc 1 562 0
 1328 0214 AFE7     		b	.L93
 1329              	.L101:
 564:Src/mode.c    ****             break;
 1330              		.loc 1 564 0
 1331 0216 C0F30710 		ubfx	r0, r0, #4, #8
 1332 021a FFF7FEFF 		bl	Motion_DiagonalRight
 1333              	.LVL144:
 565:Src/mode.c    ****         case RIGHT:
 1334              		.loc 1 565 0
 1335 021e AAE7     		b	.L93
 1336              	.L97:
 567:Src/mode.c    ****             break;
 1337              		.loc 1 567 0
 1338 0220 04AB     		add	r3, sp, #16
 1339 0222 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1340 0226 00EE103A 		vmov	s0, r3	@ int
 1341 022a B8EE400A 		vcvt.f32.u32	s0, s0
 1342 022e C0F30710 		ubfx	r0, r0, #4, #8
 1343 0232 FFF7FEFF 		bl	Motion_FastRightTurn
 1344              	.LVL145:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 36


 568:Src/mode.c    ****         case GOAL:
 1345              		.loc 1 568 0
 1346 0236 9EE7     		b	.L93
 1347              	.L99:
 570:Src/mode.c    ****             break;
 1348              		.loc 1 570 0
 1349 0238 04AB     		add	r3, sp, #16
 1350 023a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1351 023e 1B0C     		lsrs	r3, r3, #16
 1352 0240 00EE103A 		vmov	s0, r3	@ int
 1353 0244 B8EE400A 		vcvt.f32.u32	s0, s0
 1354 0248 C0F30710 		ubfx	r0, r0, #4, #8
 1355 024c FFF7FEFF 		bl	Motion_FastGoal
 1356              	.LVL146:
 571:Src/mode.c    ****         case ADJUST:
 1357              		.loc 1 571 0
 1358 0250 91E7     		b	.L93
 1359              	.L102:
 573:Src/mode.c    ****             break;
 1360              		.loc 1 573 0
 1361 0252 04AB     		add	r3, sp, #16
 1362 0254 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1363 0258 1B0C     		lsrs	r3, r3, #16
 1364 025a 00EE103A 		vmov	s0, r3	@ int
 1365 025e B8EE400A 		vcvt.f32.u32	s0, s0
 1366 0262 0009     		lsrs	r0, r0, #4
 1367 0264 FFF7FEFF 		bl	Motion_Adjust
 1368              	.LVL147:
 574:Src/mode.c    ****         case ADJUST_L:
 1369              		.loc 1 574 0
 1370 0268 85E7     		b	.L93
 1371              	.L103:
 576:Src/mode.c    ****             break;
 1372              		.loc 1 576 0
 1373 026a 04AB     		add	r3, sp, #16
 1374 026c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1375 0270 1B0C     		lsrs	r3, r3, #16
 1376 0272 00EE103A 		vmov	s0, r3	@ int
 1377 0276 B8EE400A 		vcvt.f32.u32	s0, s0
 1378 027a 0009     		lsrs	r0, r0, #4
 1379 027c FFF7FEFF 		bl	Motion_Adjust_L
 1380              	.LVL148:
 577:Src/mode.c    ****         case ADJUST_R:
 1381              		.loc 1 577 0
 1382 0280 79E7     		b	.L93
 1383              	.L104:
 579:Src/mode.c    ****             break;
 1384              		.loc 1 579 0
 1385 0282 04AB     		add	r3, sp, #16
 1386 0284 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1387 0288 1B0C     		lsrs	r3, r3, #16
 1388 028a 00EE103A 		vmov	s0, r3	@ int
 1389 028e B8EE400A 		vcvt.f32.u32	s0, s0
 1390 0292 0009     		lsrs	r0, r0, #4
 1391 0294 FFF7FEFF 		bl	Motion_Adjust_R
 1392              	.LVL149:
 580:Src/mode.c    ****         default:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 37


 1393              		.loc 1 580 0
 1394 0298 6DE7     		b	.L93
 1395              	.L112:
 585:Src/mode.c    ****     }
 586:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 587:Src/mode.c    ****     HAL_Delay(500);
 1396              		.loc 1 587 0
 1397 029a 4FF4FA70 		mov	r0, #500
 1398 029e FFF7FEFF 		bl	HAL_Delay
 1399              	.LVL150:
 588:Src/mode.c    ****     motor_flag = FALSE;
 1400              		.loc 1 588 0
 1401 02a2 0024     		movs	r4, #0
 1402              	.LVL151:
 1403 02a4 104B     		ldr	r3, .L113+28
 1404 02a6 1C70     		strb	r4, [r3]
 589:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1405              		.loc 1 589 0
 1406 02a8 4FF49671 		mov	r1, #300
 1407 02ac 4C20     		movs	r0, #76
 1408 02ae FFF7FEFF 		bl	Tim_BuzzerPwm
 1409              	.LVL152:
 590:Src/mode.c    ****     HAL_Delay(200);
 1410              		.loc 1 590 0
 1411 02b2 C820     		movs	r0, #200
 1412 02b4 FFF7FEFF 		bl	HAL_Delay
 1413              	.LVL153:
 591:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1414              		.loc 1 591 0
 1415 02b8 2146     		mov	r1, r4
 1416 02ba 0A20     		movs	r0, #10
 1417 02bc FFF7FEFF 		bl	Tim_BuzzerPwm
 1418              	.LVL154:
 592:Src/mode.c    **** }
 1419              		.loc 1 592 0
 1420 02c0 0DF29C6D 		addw	sp, sp, #1692
 1421              	.LCFI14:
 1422              		.cfi_def_cfa_offset 28
 1423              		@ sp needed
 1424 02c4 BDEC028B 		vldm	sp!, {d8}
 1425              	.LCFI15:
 1426              		.cfi_restore 80
 1427              		.cfi_restore 81
 1428              		.cfi_def_cfa_offset 20
 1429              	.LVL155:
 1430 02c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1431              	.L114:
 1432 02ca 00BF     		.align	2
 1433              	.L113:
 1434 02cc 00000000 		.word	start_address
 1435 02d0 00000000 		.word	.LANCHOR2
 1436 02d4 00000000 		.word	.LANCHOR1
 1437 02d8 00000000 		.word	.LANCHOR3
 1438 02dc 00004844 		.word	1145569280
 1439 02e0 00001644 		.word	1142292480
 1440 02e4 00000000 		.word	control_wall_flag
 1441 02e8 00000000 		.word	motor_flag
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 38


 1442              		.cfi_endproc
 1443              	.LFE132:
 1445              		.section	.text.Mode_FastestRun,"ax",%progbits
 1446              		.align	1
 1447              		.global	Mode_FastestRun
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	Mode_FastestRun:
 1454              	.LFB133:
 593:Src/mode.c    **** 
 594:Src/mode.c    **** void Mode_FastestRun(uint8_t diagonal_flag, float gain, uint8_t w_str, uint8_t w_turn) //GainMax=19
 595:Src/mode.c    **** {
 1455              		.loc 1 595 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 1680
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              	.LVL156:
 1460 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1461              	.LCFI16:
 1462              		.cfi_def_cfa_offset 20
 1463              		.cfi_offset 4, -20
 1464              		.cfi_offset 5, -16
 1465              		.cfi_offset 6, -12
 1466              		.cfi_offset 7, -8
 1467              		.cfi_offset 14, -4
 1468 0002 2DED028B 		vpush.64	{d8}
 1469              	.LCFI17:
 1470              		.cfi_def_cfa_offset 28
 1471              		.cfi_offset 80, -28
 1472              		.cfi_offset 81, -24
 1473 0006 ADF29C6D 		subw	sp, sp, #1692
 1474              	.LCFI18:
 1475              		.cfi_def_cfa_offset 1720
 1476 000a 0446     		mov	r4, r0
 1477 000c B0EE408A 		vmov.f32	s16, s0
 1478 0010 0E46     		mov	r6, r1
 1479 0012 1746     		mov	r7, r2
 596:Src/mode.c    ****     wallData_t wallData;
 597:Src/mode.c    ****     pos_t pos;
 598:Src/mode.c    ****     uint16_t motion[255];
 599:Src/mode.c    ****     uint32_t velocity[255];
 600:Src/mode.c    ****     uint8_t tail = 0;
 1480              		.loc 1 600 0
 1481 0014 0025     		movs	r5, #0
 1482 0016 8DF80F50 		strb	r5, [sp, #15]
 1483              	.LVL157:
 601:Src/mode.c    ****     uint8_t head = 0;
 602:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 1484              		.loc 1 602 0
 1485 001a 8822     		movs	r2, #136
 1486              	.LVL158:
 1487 001c 0DF5C261 		add	r1, sp, #1552
 1488              	.LVL159:
 1489 0020 AB4B     		ldr	r3, .L144
 1490 0022 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 39


 1491              	.LVL160:
 1492 0024 FFF7FEFF 		bl	Flash_Load
 1493              	.LVL161:
 603:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 1494              		.loc 1 603 0
 1495 0028 AA4B     		ldr	r3, .L144+4
 1496 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1497 002c AA4A     		ldr	r2, .L144+8
 1498 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1499 0030 0092     		str	r2, [sp]
 1500 0032 3A46     		mov	r2, r7
 1501 0034 3146     		mov	r1, r6
 1502 0036 0DF5C260 		add	r0, sp, #1552
 1503 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1504              	.LVL162:
 604:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1505              		.loc 1 604 0
 1506 003e B0EE480A 		vmov.f32	s0, s16
 1507 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1508              	.LVL163:
 605:Src/mode.c    ****     Control_WallEdgeSet(walledge_1200);
 1509              		.loc 1 605 0
 1510 0046 A54B     		ldr	r3, .L144+12
 1511 0048 03F11002 		add	r2, r3, #16
 1512 004c 92E80300 		ldm	r2, {r0, r1}
 1513 0050 8DE80300 		stm	sp, {r0, r1}
 1514 0054 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1515 0056 FFF7FEFF 		bl	Control_WallEdgeSet
 1516              	.LVL164:
 606:Src/mode.c    ****     pos.dir = NORTH;
 1517              		.loc 1 606 0
 1518 005a 8DF80E56 		strb	r5, [sp, #1550]
 607:Src/mode.c    ****     pos.x = 0;
 1519              		.loc 1 607 0
 1520 005e 8DF80C56 		strb	r5, [sp, #1548]
 608:Src/mode.c    ****     pos.y = 1;
 1521              		.loc 1 608 0
 1522 0062 0123     		movs	r3, #1
 1523 0064 8DF80D36 		strb	r3, [sp, #1549]
 609:Src/mode.c    ****     motion[tail] = START;
 1524              		.loc 1 609 0
 1525 0068 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1526 006c 0DF20C42 		addw	r2, sp, #1036
 1527 0070 0521     		movs	r1, #5
 1528 0072 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 610:Src/mode.c    ****     tail++;
 1529              		.loc 1 610 0
 1530 0076 0133     		adds	r3, r3, #1
 1531 0078 DBB2     		uxtb	r3, r3
 611:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1532              		.loc 1 611 0
 1533 007a 1021     		movs	r1, #16
 1534 007c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 612:Src/mode.c    ****     tail++;
 1535              		.loc 1 612 0
 1536 0080 0133     		adds	r3, r3, #1
 1537 0082 8DF80F30 		strb	r3, [sp, #15]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 40


 1538              	.LVL165:
 1539 0086 1AE0     		b	.L122
 1540              	.L139:
 1541              	.LBB7:
 613:Src/mode.c    ****     head += 2;
 614:Src/mode.c    ****     while (1)
 615:Src/mode.c    ****     {
 616:Src/mode.c    ****         if (Maze_GetGoalSize() == 1)
 617:Src/mode.c    ****         {
 618:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 1542              		.loc 1 618 0
 1543 0088 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1544 008c 914B     		ldr	r3, .L144+4
 1545 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 0090 9A42     		cmp	r2, r3
 1547 0092 2DD0     		beq	.L138
 1548              	.L117:
 619:Src/mode.c    ****             {
 620:Src/mode.c    ****                 break;
 621:Src/mode.c    ****             }
 622:Src/mode.c    ****         }
 623:Src/mode.c    ****         else
 624:Src/mode.c    ****         {
 625:Src/mode.c    ****             if (pos.x == gx && pos.y == gy)
 626:Src/mode.c    ****             {
 627:Src/mode.c    ****                 break;
 628:Src/mode.c    ****             }
 629:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == gy)
 630:Src/mode.c    ****             {
 631:Src/mode.c    ****                 break;
 632:Src/mode.c    ****             }
 633:Src/mode.c    ****             if (pos.x == gx && pos.y == (gy + 1))
 634:Src/mode.c    ****             {
 635:Src/mode.c    ****                 break;
 636:Src/mode.c    ****             }
 637:Src/mode.c    ****             if (pos.x == (gx + 1) && pos.y == (gy + 1))
 638:Src/mode.c    ****             {
 639:Src/mode.c    ****                 break;
 640:Src/mode.c    ****             }
 641:Src/mode.c    ****         }
 642:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1549              		.loc 1 642 0
 1550 0094 0DF5C261 		add	r1, sp, #1552
 1551 0098 0DF20C60 		addw	r0, sp, #1548
 1552 009c FFF7FEFF 		bl	Maze_GetNextMotionEx
 1553              	.LVL166:
 643:Src/mode.c    ****         motion[tail] = buff;
 1554              		.loc 1 643 0
 1555 00a0 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1556 00a4 0DF20C42 		addw	r2, sp, #1036
 1557 00a8 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 644:Src/mode.c    ****         tail++;
 1558              		.loc 1 644 0
 1559 00ac 0133     		adds	r3, r3, #1
 1560 00ae 8DF80F30 		strb	r3, [sp, #15]
 645:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1561              		.loc 1 645 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 41


 1562 00b2 0DF20C61 		addw	r1, sp, #1548
 1563 00b6 00F00F00 		and	r0, r0, #15
 1564              	.LVL167:
 1565 00ba FFF7FEFF 		bl	Maze_UpdatePosition
 1566              	.LVL168:
 1567              	.L122:
 616:Src/mode.c    ****         {
 1568              		.loc 1 616 0
 1569 00be FFF7FEFF 		bl	Maze_GetGoalSize
 1570              	.LVL169:
 1571 00c2 0128     		cmp	r0, #1
 1572 00c4 E0D0     		beq	.L139
 625:Src/mode.c    ****             {
 1573              		.loc 1 625 0
 1574 00c6 9DF80C36 		ldrb	r3, [sp, #1548]	@ zero_extendqisi2
 1575 00ca 824A     		ldr	r2, .L144+4
 1576 00cc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1577 00ce 9342     		cmp	r3, r2
 1578 00d0 15D0     		beq	.L140
 1579              	.L119:
 629:Src/mode.c    ****             {
 1580              		.loc 1 629 0
 1581 00d2 511C     		adds	r1, r2, #1
 1582 00d4 8B42     		cmp	r3, r1
 1583 00d6 34D0     		beq	.L141
 1584              	.L120:
 633:Src/mode.c    ****             {
 1585              		.loc 1 633 0
 1586 00d8 9342     		cmp	r3, r2
 1587 00da 39D0     		beq	.L142
 1588              	.L121:
 637:Src/mode.c    ****             {
 1589              		.loc 1 637 0
 1590 00dc 8B42     		cmp	r3, r1
 1591 00de D9D1     		bne	.L117
 637:Src/mode.c    ****             {
 1592              		.loc 1 637 0 is_stmt 0 discriminator 1
 1593 00e0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1594 00e4 7C4B     		ldr	r3, .L144+8
 1595 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 00e8 0133     		adds	r3, r3, #1
 1597 00ea 9A42     		cmp	r2, r3
 1598 00ec D2D1     		bne	.L117
 1599              	.LBE7:
 1600 00ee 0CE0     		b	.L118
 1601              	.L138:
 1602              	.LBB8:
 618:Src/mode.c    ****             {
 1603              		.loc 1 618 0 is_stmt 1 discriminator 1
 1604 00f0 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1605 00f4 784B     		ldr	r3, .L144+8
 1606 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1607 00f8 9A42     		cmp	r2, r3
 1608 00fa CBD1     		bne	.L117
 1609 00fc 05E0     		b	.L118
 1610              	.L140:
 625:Src/mode.c    ****             {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 42


 1611              		.loc 1 625 0 discriminator 1
 1612 00fe 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1613 0102 7549     		ldr	r1, .L144+8
 1614 0104 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1615 0106 8842     		cmp	r0, r1
 1616 0108 E3D1     		bne	.L119
 1617              	.L118:
 1618              	.LBE8:
 646:Src/mode.c    ****     }
 647:Src/mode.c    ****     motion[tail] = GOAL;
 1619              		.loc 1 647 0
 1620 010a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1621 010e 0DF20C41 		addw	r1, sp, #1036
 1622 0112 0622     		movs	r2, #6
 1623 0114 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 648:Src/mode.c    ****     tail++;
 1624              		.loc 1 648 0
 1625 0118 0133     		adds	r3, r3, #1
 1626 011a 8DF80F30 		strb	r3, [sp, #15]
 1627              	.LVL170:
 649:Src/mode.c    ****     head = 0;
 650:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail, VELO_EST, VELO_EST);
 1628              		.loc 1 650 0
 1629 011e 9FED700A 		vldr.32	s0, .L144+16
 1630 0122 F0EE400A 		vmov.f32	s1, s0
 1631 0126 0DF10F03 		add	r3, sp, #15
 1632 012a 04AA     		add	r2, sp, #16
 1633 012c 2046     		mov	r0, r4
 1634 012e FFF7FEFF 		bl	Maze_Compress
 1635              	.LVL171:
 651:Src/mode.c    **** 
 652:Src/mode.c    ****     control_wall_flag = 4;
 1636              		.loc 1 652 0
 1637 0132 6C4B     		ldr	r3, .L144+20
 1638 0134 0422     		movs	r2, #4
 1639 0136 1A70     		strb	r2, [r3]
 653:Src/mode.c    ****     SetRunMode(1);
 1640              		.loc 1 653 0
 1641 0138 0120     		movs	r0, #1
 1642 013a FFF7FEFF 		bl	SetRunMode
 1643              	.LVL172:
 649:Src/mode.c    ****     head = 0;
 1644              		.loc 1 649 0
 1645 013e 0024     		movs	r4, #0
 654:Src/mode.c    ****     while (head != tail)
 1646              		.loc 1 654 0
 1647 0140 1BE0     		b	.L123
 1648              	.LVL173:
 1649              	.L141:
 1650              	.LBB9:
 629:Src/mode.c    ****             {
 1651              		.loc 1 629 0 discriminator 1
 1652 0142 9DF80D56 		ldrb	r5, [sp, #1549]	@ zero_extendqisi2
 1653 0146 6448     		ldr	r0, .L144+8
 1654 0148 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1655 014a 8542     		cmp	r5, r0
 1656 014c C4D1     		bne	.L120
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 43


 1657              	.LBE9:
 1658 014e DCE7     		b	.L118
 1659              	.L142:
 1660              	.LBB10:
 633:Src/mode.c    ****             {
 1661              		.loc 1 633 0 discriminator 1
 1662 0150 9DF80D06 		ldrb	r0, [sp, #1549]	@ zero_extendqisi2
 1663 0154 604A     		ldr	r2, .L144+8
 1664 0156 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1665 0158 0132     		adds	r2, r2, #1
 1666 015a 9042     		cmp	r0, r2
 1667 015c BED1     		bne	.L121
 1668              	.LBE10:
 1669 015e D4E7     		b	.L118
 1670              	.LVL174:
 1671              	.L129:
 655:Src/mode.c    ****     {
 656:Src/mode.c    ****         switch (motion[head] & 0xf)
 657:Src/mode.c    ****         {
 658:Src/mode.c    ****         case START:
 659:Src/mode.c    ****             Motion_FastestStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1672              		.loc 1 659 0
 1673 0160 04AB     		add	r3, sp, #16
 1674 0162 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1675 0166 00EE103A 		vmov	s0, r3	@ int
 1676 016a B8EE400A 		vcvt.f32.u32	s0, s0
 1677 016e C0F30710 		ubfx	r0, r0, #4, #8
 1678 0172 FFF7FEFF 		bl	Motion_FastestStart
 1679              	.LVL175:
 1680              	.L124:
 660:Src/mode.c    ****             break;
 661:Src/mode.c    ****         case LEFT:
 662:Src/mode.c    ****             Motion_FastestLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 663:Src/mode.c    ****             break;
 664:Src/mode.c    ****         case FRONT:
 665:Src/mode.c    ****             Motion_FastestStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(veloci
 666:Src/mode.c    ****             break;
 667:Src/mode.c    ****         case DIAGONAL_L:
 668:Src/mode.c    ****             Motion_FastestDiagonalLeft(motion[head] >> 4);
 669:Src/mode.c    ****             break;
 670:Src/mode.c    ****         case DIAGONAL_R:
 671:Src/mode.c    ****             Motion_FastestDiagonalRight(motion[head] >> 4);
 672:Src/mode.c    ****             break;
 673:Src/mode.c    ****         case RIGHT:
 674:Src/mode.c    ****             Motion_FastestRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 675:Src/mode.c    ****             break;
 676:Src/mode.c    ****         case GOAL:
 677:Src/mode.c    ****             Motion_FastestGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 678:Src/mode.c    ****             break;
 679:Src/mode.c    ****         case ADJUST:
 680:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 681:Src/mode.c    ****             break;
 682:Src/mode.c    ****         case ADJUST_L:
 683:Src/mode.c    ****             Motion_FastestAdjust_L(motion[head] >> 4, (float)(velocity[head] >> 16));
 684:Src/mode.c    ****             break;
 685:Src/mode.c    ****         case ADJUST_R:
 686:Src/mode.c    ****             Motion_FastestAdjust_R(motion[head] >> 4, (float)(velocity[head] >> 16));
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 44


 687:Src/mode.c    ****             break;
 688:Src/mode.c    ****         default:
 689:Src/mode.c    ****             break;
 690:Src/mode.c    ****         }
 691:Src/mode.c    ****         head++;
 1681              		.loc 1 691 0
 1682 0176 0134     		adds	r4, r4, #1
 1683              	.LVL176:
 1684 0178 E4B2     		uxtb	r4, r4
 1685              	.LVL177:
 1686              	.L123:
 654:Src/mode.c    ****     {
 1687              		.loc 1 654 0
 1688 017a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1689 017e A342     		cmp	r3, r4
 1690 0180 00F08B80 		beq	.L143
 656:Src/mode.c    ****         {
 1691              		.loc 1 656 0
 1692 0184 0DF20C43 		addw	r3, sp, #1036
 1693 0188 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1694 018c 00F00F03 		and	r3, r0, #15
 1695 0190 0C2B     		cmp	r3, #12
 1696 0192 F0D8     		bhi	.L124
 1697 0194 01A2     		adr	r2, .L126
 1698 0196 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1699 019a 00BF     		.p2align 2
 1700              	.L126:
 1701 019c E9010000 		.word	.L125+1
 1702 01a0 D1010000 		.word	.L127+1
 1703 01a4 21020000 		.word	.L128+1
 1704 01a8 77010000 		.word	.L124+1
 1705 01ac 77010000 		.word	.L124+1
 1706 01b0 61010000 		.word	.L129+1
 1707 01b4 39020000 		.word	.L130+1
 1708 01b8 77010000 		.word	.L124+1
 1709 01bc 0D020000 		.word	.L131+1
 1710 01c0 17020000 		.word	.L132+1
 1711 01c4 53020000 		.word	.L133+1
 1712 01c8 6B020000 		.word	.L134+1
 1713 01cc 83020000 		.word	.L135+1
 1714              		.p2align 1
 1715              	.L127:
 662:Src/mode.c    ****             break;
 1716              		.loc 1 662 0
 1717 01d0 04AB     		add	r3, sp, #16
 1718 01d2 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1719 01d6 00EE103A 		vmov	s0, r3	@ int
 1720 01da B8EE400A 		vcvt.f32.u32	s0, s0
 1721 01de C0F30710 		ubfx	r0, r0, #4, #8
 1722 01e2 FFF7FEFF 		bl	Motion_FastestLeftTurn
 1723              	.LVL178:
 663:Src/mode.c    ****         case FRONT:
 1724              		.loc 1 663 0
 1725 01e6 C6E7     		b	.L124
 1726              	.L125:
 665:Src/mode.c    ****             break;
 1727              		.loc 1 665 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 45


 1728 01e8 04AB     		add	r3, sp, #16
 1729 01ea 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1730 01ee 1A0C     		lsrs	r2, r3, #16
 1731 01f0 00EE102A 		vmov	s0, r2	@ int
 1732 01f4 9BB2     		uxth	r3, r3
 1733 01f6 00EE903A 		vmov	s1, r3	@ int
 1734 01fa F8EE600A 		vcvt.f32.u32	s1, s1
 1735 01fe B8EE400A 		vcvt.f32.u32	s0, s0
 1736 0202 C0F30710 		ubfx	r0, r0, #4, #8
 1737 0206 FFF7FEFF 		bl	Motion_FastestStraight
 1738              	.LVL179:
 666:Src/mode.c    ****         case DIAGONAL_L:
 1739              		.loc 1 666 0
 1740 020a B4E7     		b	.L124
 1741              	.L131:
 668:Src/mode.c    ****             break;
 1742              		.loc 1 668 0
 1743 020c C0F30710 		ubfx	r0, r0, #4, #8
 1744 0210 FFF7FEFF 		bl	Motion_FastestDiagonalLeft
 1745              	.LVL180:
 669:Src/mode.c    ****         case DIAGONAL_R:
 1746              		.loc 1 669 0
 1747 0214 AFE7     		b	.L124
 1748              	.L132:
 671:Src/mode.c    ****             break;
 1749              		.loc 1 671 0
 1750 0216 C0F30710 		ubfx	r0, r0, #4, #8
 1751 021a FFF7FEFF 		bl	Motion_FastestDiagonalRight
 1752              	.LVL181:
 672:Src/mode.c    ****         case RIGHT:
 1753              		.loc 1 672 0
 1754 021e AAE7     		b	.L124
 1755              	.L128:
 674:Src/mode.c    ****             break;
 1756              		.loc 1 674 0
 1757 0220 04AB     		add	r3, sp, #16
 1758 0222 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1759 0226 00EE103A 		vmov	s0, r3	@ int
 1760 022a B8EE400A 		vcvt.f32.u32	s0, s0
 1761 022e C0F30710 		ubfx	r0, r0, #4, #8
 1762 0232 FFF7FEFF 		bl	Motion_FastestRightTurn
 1763              	.LVL182:
 675:Src/mode.c    ****         case GOAL:
 1764              		.loc 1 675 0
 1765 0236 9EE7     		b	.L124
 1766              	.L130:
 677:Src/mode.c    ****             break;
 1767              		.loc 1 677 0
 1768 0238 04AB     		add	r3, sp, #16
 1769 023a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1770 023e 1B0C     		lsrs	r3, r3, #16
 1771 0240 00EE103A 		vmov	s0, r3	@ int
 1772 0244 B8EE400A 		vcvt.f32.u32	s0, s0
 1773 0248 C0F30710 		ubfx	r0, r0, #4, #8
 1774 024c FFF7FEFF 		bl	Motion_FastestGoal
 1775              	.LVL183:
 678:Src/mode.c    ****         case ADJUST:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 46


 1776              		.loc 1 678 0
 1777 0250 91E7     		b	.L124
 1778              	.L133:
 680:Src/mode.c    ****             break;
 1779              		.loc 1 680 0
 1780 0252 04AB     		add	r3, sp, #16
 1781 0254 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1782 0258 1B0C     		lsrs	r3, r3, #16
 1783 025a 00EE103A 		vmov	s0, r3	@ int
 1784 025e B8EE400A 		vcvt.f32.u32	s0, s0
 1785 0262 0009     		lsrs	r0, r0, #4
 1786 0264 FFF7FEFF 		bl	Motion_Adjust
 1787              	.LVL184:
 681:Src/mode.c    ****         case ADJUST_L:
 1788              		.loc 1 681 0
 1789 0268 85E7     		b	.L124
 1790              	.L134:
 683:Src/mode.c    ****             break;
 1791              		.loc 1 683 0
 1792 026a 04AB     		add	r3, sp, #16
 1793 026c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1794 0270 1B0C     		lsrs	r3, r3, #16
 1795 0272 00EE103A 		vmov	s0, r3	@ int
 1796 0276 B8EE400A 		vcvt.f32.u32	s0, s0
 1797 027a 0009     		lsrs	r0, r0, #4
 1798 027c FFF7FEFF 		bl	Motion_FastestAdjust_L
 1799              	.LVL185:
 684:Src/mode.c    ****         case ADJUST_R:
 1800              		.loc 1 684 0
 1801 0280 79E7     		b	.L124
 1802              	.L135:
 686:Src/mode.c    ****             break;
 1803              		.loc 1 686 0
 1804 0282 04AB     		add	r3, sp, #16
 1805 0284 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1806 0288 1B0C     		lsrs	r3, r3, #16
 1807 028a 00EE103A 		vmov	s0, r3	@ int
 1808 028e B8EE400A 		vcvt.f32.u32	s0, s0
 1809 0292 0009     		lsrs	r0, r0, #4
 1810 0294 FFF7FEFF 		bl	Motion_FastestAdjust_R
 1811              	.LVL186:
 687:Src/mode.c    ****         default:
 1812              		.loc 1 687 0
 1813 0298 6DE7     		b	.L124
 1814              	.L143:
 692:Src/mode.c    ****     }
 693:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 694:Src/mode.c    ****     Tim_MotorBrake();
 1815              		.loc 1 694 0
 1816 029a FFF7FEFF 		bl	Tim_MotorBrake
 1817              	.LVL187:
 695:Src/mode.c    ****     HAL_Delay(500);
 1818              		.loc 1 695 0
 1819 029e 4FF4FA70 		mov	r0, #500
 1820 02a2 FFF7FEFF 		bl	HAL_Delay
 1821              	.LVL188:
 696:Src/mode.c    ****     motor_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 47


 1822              		.loc 1 696 0
 1823 02a6 0024     		movs	r4, #0
 1824              	.LVL189:
 1825 02a8 0F4B     		ldr	r3, .L144+24
 1826 02aa 1C70     		strb	r4, [r3]
 697:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1827              		.loc 1 697 0
 1828 02ac 4FF49671 		mov	r1, #300
 1829 02b0 4C20     		movs	r0, #76
 1830 02b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 1831              	.LVL190:
 698:Src/mode.c    ****     HAL_Delay(200);
 1832              		.loc 1 698 0
 1833 02b6 C820     		movs	r0, #200
 1834 02b8 FFF7FEFF 		bl	HAL_Delay
 1835              	.LVL191:
 699:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1836              		.loc 1 699 0
 1837 02bc 2146     		mov	r1, r4
 1838 02be 0A20     		movs	r0, #10
 1839 02c0 FFF7FEFF 		bl	Tim_BuzzerPwm
 1840              	.LVL192:
 700:Src/mode.c    **** }
 1841              		.loc 1 700 0
 1842 02c4 0DF29C6D 		addw	sp, sp, #1692
 1843              	.LCFI19:
 1844              		.cfi_def_cfa_offset 28
 1845              		@ sp needed
 1846 02c8 BDEC028B 		vldm	sp!, {d8}
 1847              	.LCFI20:
 1848              		.cfi_restore 80
 1849              		.cfi_restore 81
 1850              		.cfi_def_cfa_offset 20
 1851              	.LVL193:
 1852 02cc F0BD     		pop	{r4, r5, r6, r7, pc}
 1853              	.L145:
 1854 02ce 00BF     		.align	2
 1855              	.L144:
 1856 02d0 00000000 		.word	start_address
 1857 02d4 00000000 		.word	.LANCHOR2
 1858 02d8 00000000 		.word	.LANCHOR1
 1859 02dc 00000000 		.word	.LANCHOR4
 1860 02e0 00009644 		.word	1150681088
 1861 02e4 00000000 		.word	control_wall_flag
 1862 02e8 00000000 		.word	motor_flag
 1863              		.cfi_endproc
 1864              	.LFE133:
 1866              		.section	.text.CheckStraight,"ax",%progbits
 1867              		.align	1
 1868              		.global	CheckStraight
 1869              		.syntax unified
 1870              		.thumb
 1871              		.thumb_func
 1872              		.fpu fpv4-sp-d16
 1874              	CheckStraight:
 1875              	.LFB134:
 701:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 48


 702:Src/mode.c    **** void CheckStraight(uint8_t block)
 703:Src/mode.c    **** {
 1876              		.loc 1 703 0
 1877              		.cfi_startproc
 1878              		@ args = 0, pretend = 0, frame = 0
 1879              		@ frame_needed = 0, uses_anonymous_args = 0
 1880              	.LVL194:
 1881 0000 38B5     		push	{r3, r4, r5, lr}
 1882              	.LCFI21:
 1883              		.cfi_def_cfa_offset 16
 1884              		.cfi_offset 3, -16
 1885              		.cfi_offset 4, -12
 1886              		.cfi_offset 5, -8
 1887              		.cfi_offset 14, -4
 1888 0002 0546     		mov	r5, r0
 704:Src/mode.c    ****     SetRunMode(0);
 1889              		.loc 1 704 0
 1890 0004 0020     		movs	r0, #0
 1891              	.LVL195:
 1892 0006 FFF7FEFF 		bl	SetRunMode
 1893              	.LVL196:
 705:Src/mode.c    ****     enc.distance = 0;
 1894              		.loc 1 705 0
 1895 000a 154B     		ldr	r3, .L150
 1896 000c 0022     		movs	r2, #0
 1897 000e 1A60     		str	r2, [r3]	@ float
 706:Src/mode.c    ****     Motion_Start();
 1898              		.loc 1 706 0
 1899 0010 FFF7FEFF 		bl	Motion_Start
 1900              	.LVL197:
 1901              	.LBB11:
 707:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1902              		.loc 1 707 0
 1903 0014 0024     		movs	r4, #0
 1904 0016 04E0     		b	.L147
 1905              	.LVL198:
 1906              	.L148:
 708:Src/mode.c    ****     {
 709:Src/mode.c    ****         Motion_Straight(0);
 1907              		.loc 1 709 0 discriminator 3
 1908 0018 0020     		movs	r0, #0
 1909 001a FFF7FEFF 		bl	Motion_Straight
 1910              	.LVL199:
 707:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1911              		.loc 1 707 0 discriminator 3
 1912 001e 0134     		adds	r4, r4, #1
 1913              	.LVL200:
 1914 0020 E4B2     		uxtb	r4, r4
 1915              	.LVL201:
 1916              	.L147:
 707:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1917              		.loc 1 707 0 is_stmt 0 discriminator 1
 1918 0022 AC42     		cmp	r4, r5
 1919 0024 F8D3     		bcc	.L148
 1920              	.LBE11:
 710:Src/mode.c    ****     }
 711:Src/mode.c    ****     Motion_End();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 49


 1921              		.loc 1 711 0 is_stmt 1
 1922 0026 FFF7FEFF 		bl	Motion_End
 1923              	.LVL202:
 712:Src/mode.c    ****     motor_flag = FALSE;
 1924              		.loc 1 712 0
 1925 002a 0024     		movs	r4, #0
 1926              	.LVL203:
 1927 002c 0D4B     		ldr	r3, .L150+4
 1928 002e 1C70     		strb	r4, [r3]
 713:Src/mode.c    ****     HAL_Delay(500);
 1929              		.loc 1 713 0
 1930 0030 4FF4FA70 		mov	r0, #500
 1931 0034 FFF7FEFF 		bl	HAL_Delay
 1932              	.LVL204:
 714:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1933              		.loc 1 714 0
 1934 0038 49F64242 		movw	r2, #40002
 1935 003c 0A49     		ldr	r1, .L150+8
 1936 003e 0B4B     		ldr	r3, .L150+12
 1937 0040 1868     		ldr	r0, [r3]
 1938 0042 FFF7FEFF 		bl	Flash_Write
 1939              	.LVL205:
 715:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1940              		.loc 1 715 0
 1941 0046 4FF49671 		mov	r1, #300
 1942 004a 4C20     		movs	r0, #76
 1943 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 1944              	.LVL206:
 716:Src/mode.c    ****     HAL_Delay(200);
 1945              		.loc 1 716 0
 1946 0050 C820     		movs	r0, #200
 1947 0052 FFF7FEFF 		bl	HAL_Delay
 1948              	.LVL207:
 717:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1949              		.loc 1 717 0
 1950 0056 2146     		mov	r1, r4
 1951 0058 0A20     		movs	r0, #10
 1952 005a FFF7FEFF 		bl	Tim_BuzzerPwm
 1953              	.LVL208:
 718:Src/mode.c    **** }
 1954              		.loc 1 718 0
 1955 005e 38BD     		pop	{r3, r4, r5, pc}
 1956              	.L151:
 1957              		.align	2
 1958              	.L150:
 1959 0060 00000000 		.word	enc
 1960 0064 00000000 		.word	motor_flag
 1961 0068 00000000 		.word	loger
 1962 006c 00000000 		.word	start_address
 1963              		.cfi_endproc
 1964              	.LFE134:
 1966              		.section	.text.CheckFastStraight,"ax",%progbits
 1967              		.align	1
 1968              		.global	CheckFastStraight
 1969              		.syntax unified
 1970              		.thumb
 1971              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 50


 1972              		.fpu fpv4-sp-d16
 1974              	CheckFastStraight:
 1975              	.LFB135:
 719:Src/mode.c    **** 
 720:Src/mode.c    **** void CheckFastStraight(uint8_t block)
 721:Src/mode.c    **** {
 1976              		.loc 1 721 0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 0
 1979              		@ frame_needed = 0, uses_anonymous_args = 0
 1980              	.LVL209:
 1981 0000 38B5     		push	{r3, r4, r5, lr}
 1982              	.LCFI22:
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 3, -16
 1985              		.cfi_offset 4, -12
 1986              		.cfi_offset 5, -8
 1987              		.cfi_offset 14, -4
 1988 0002 2DED028B 		vpush.64	{d8}
 1989              	.LCFI23:
 1990              		.cfi_def_cfa_offset 24
 1991              		.cfi_offset 80, -24
 1992              		.cfi_offset 81, -20
 1993 0006 0546     		mov	r5, r0
 722:Src/mode.c    ****     SetRunMode(0);
 1994              		.loc 1 722 0
 1995 0008 0020     		movs	r0, #0
 1996              	.LVL210:
 1997 000a FFF7FEFF 		bl	SetRunMode
 1998              	.LVL211:
 723:Src/mode.c    ****     enc.distance = 0;
 1999              		.loc 1 723 0
 2000 000e 204B     		ldr	r3, .L156
 2001 0010 0022     		movs	r2, #0
 2002 0012 1A60     		str	r2, [r3]	@ float
 724:Src/mode.c    ****     Motion_FastStart(1, 800.0f);
 2003              		.loc 1 724 0
 2004 0014 9FED1F0A 		vldr.32	s0, .L156+4
 2005 0018 0120     		movs	r0, #1
 2006 001a FFF7FEFF 		bl	Motion_FastStart
 2007              	.LVL212:
 725:Src/mode.c    ****     block--;
 2008              		.loc 1 725 0
 2009 001e 013D     		subs	r5, r5, #1
 2010 0020 EDB2     		uxtb	r5, r5
 2011              	.LVL213:
 2012              	.LBB12:
 726:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 2013              		.loc 1 726 0
 2014 0022 0024     		movs	r4, #0
 2015 0024 08E0     		b	.L153
 2016              	.LVL214:
 2017              	.L154:
 727:Src/mode.c    ****     {
 728:Src/mode.c    ****         Motion_FastStraight(2, 800.0f, 800.0f);
 2018              		.loc 1 728 0 discriminator 3
 2019 0026 9FED1B0A 		vldr.32	s0, .L156+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 51


 2020 002a F0EE400A 		vmov.f32	s1, s0
 2021 002e 0220     		movs	r0, #2
 2022 0030 FFF7FEFF 		bl	Motion_FastStraight
 2023              	.LVL215:
 726:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 2024              		.loc 1 726 0 discriminator 3
 2025 0034 0134     		adds	r4, r4, #1
 2026              	.LVL216:
 2027 0036 E4B2     		uxtb	r4, r4
 2028              	.LVL217:
 2029              	.L153:
 726:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 2030              		.loc 1 726 0 is_stmt 0 discriminator 1
 2031 0038 AC42     		cmp	r4, r5
 2032 003a F4D3     		bcc	.L154
 2033              	.LBE12:
 729:Src/mode.c    ****     }
 730:Src/mode.c    ****     Motion_Adjust(1, 800.0f);
 2034              		.loc 1 730 0 is_stmt 1
 2035 003c 9FED158A 		vldr.32	s16, .L156+4
 2036 0040 B0EE480A 		vmov.f32	s0, s16
 2037 0044 0120     		movs	r0, #1
 2038 0046 FFF7FEFF 		bl	Motion_Adjust
 2039              	.LVL218:
 731:Src/mode.c    ****     Motion_FastGoal(1, 800.0f);
 2040              		.loc 1 731 0
 2041 004a B0EE480A 		vmov.f32	s0, s16
 2042 004e 0120     		movs	r0, #1
 2043 0050 FFF7FEFF 		bl	Motion_FastGoal
 2044              	.LVL219:
 732:Src/mode.c    ****     motor_flag = FALSE;
 2045              		.loc 1 732 0
 2046 0054 0024     		movs	r4, #0
 2047              	.LVL220:
 2048 0056 104B     		ldr	r3, .L156+8
 2049 0058 1C70     		strb	r4, [r3]
 733:Src/mode.c    ****     HAL_Delay(500);
 2050              		.loc 1 733 0
 2051 005a 4FF4FA70 		mov	r0, #500
 2052 005e FFF7FEFF 		bl	HAL_Delay
 2053              	.LVL221:
 734:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2054              		.loc 1 734 0
 2055 0062 49F64242 		movw	r2, #40002
 2056 0066 0D49     		ldr	r1, .L156+12
 2057 0068 0D4B     		ldr	r3, .L156+16
 2058 006a 1868     		ldr	r0, [r3]
 2059 006c FFF7FEFF 		bl	Flash_Write
 2060              	.LVL222:
 735:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2061              		.loc 1 735 0
 2062 0070 4FF49671 		mov	r1, #300
 2063 0074 4C20     		movs	r0, #76
 2064 0076 FFF7FEFF 		bl	Tim_BuzzerPwm
 2065              	.LVL223:
 736:Src/mode.c    ****     HAL_Delay(200);
 2066              		.loc 1 736 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 52


 2067 007a C820     		movs	r0, #200
 2068 007c FFF7FEFF 		bl	HAL_Delay
 2069              	.LVL224:
 737:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2070              		.loc 1 737 0
 2071 0080 2146     		mov	r1, r4
 2072 0082 0A20     		movs	r0, #10
 2073 0084 FFF7FEFF 		bl	Tim_BuzzerPwm
 2074              	.LVL225:
 738:Src/mode.c    **** }
 2075              		.loc 1 738 0
 2076 0088 BDEC028B 		vldm	sp!, {d8}
 2077              	.LCFI24:
 2078              		.cfi_restore 80
 2079              		.cfi_restore 81
 2080              		.cfi_def_cfa_offset 16
 2081 008c 38BD     		pop	{r3, r4, r5, pc}
 2082              	.LVL226:
 2083              	.L157:
 2084 008e 00BF     		.align	2
 2085              	.L156:
 2086 0090 00000000 		.word	enc
 2087 0094 00004844 		.word	1145569280
 2088 0098 00000000 		.word	motor_flag
 2089 009c 00000000 		.word	loger
 2090 00a0 00000000 		.word	start_address
 2091              		.cfi_endproc
 2092              	.LFE135:
 2094              		.section	.text.CheckFastestStraight,"ax",%progbits
 2095              		.align	1
 2096              		.global	CheckFastestStraight
 2097              		.syntax unified
 2098              		.thumb
 2099              		.thumb_func
 2100              		.fpu fpv4-sp-d16
 2102              	CheckFastestStraight:
 2103              	.LFB136:
 739:Src/mode.c    **** 
 740:Src/mode.c    **** void CheckFastestStraight(uint8_t block)
 741:Src/mode.c    **** {
 2104              		.loc 1 741 0
 2105              		.cfi_startproc
 2106              		@ args = 0, pretend = 0, frame = 0
 2107              		@ frame_needed = 0, uses_anonymous_args = 0
 2108              	.LVL227:
 2109 0000 10B5     		push	{r4, lr}
 2110              	.LCFI25:
 2111              		.cfi_def_cfa_offset 8
 2112              		.cfi_offset 4, -8
 2113              		.cfi_offset 14, -4
 2114 0002 2DED028B 		vpush.64	{d8}
 2115              	.LCFI26:
 2116              		.cfi_def_cfa_offset 16
 2117              		.cfi_offset 80, -16
 2118              		.cfi_offset 81, -12
 2119 0006 0446     		mov	r4, r0
 742:Src/mode.c    ****     SetRunMode(1);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 53


 2120              		.loc 1 742 0
 2121 0008 0120     		movs	r0, #1
 2122              	.LVL228:
 2123 000a FFF7FEFF 		bl	SetRunMode
 2124              	.LVL229:
 743:Src/mode.c    ****     enc.distance = 0;
 2125              		.loc 1 743 0
 2126 000e 194B     		ldr	r3, .L160
 2127 0010 0022     		movs	r2, #0
 2128 0012 1A60     		str	r2, [r3]	@ float
 744:Src/mode.c    ****     Motion_FastestStart(2 * (block - 1) + 1, VELO_EST);
 2129              		.loc 1 744 0
 2130 0014 9FED188A 		vldr.32	s16, .L160+4
 2131 0018 04F17F00 		add	r0, r4, #127
 2132 001c 4000     		lsls	r0, r0, #1
 2133 001e 0130     		adds	r0, r0, #1
 2134 0020 B0EE480A 		vmov.f32	s0, s16
 2135 0024 C0B2     		uxtb	r0, r0
 2136 0026 FFF7FEFF 		bl	Motion_FastestStart
 2137              	.LVL230:
 745:Src/mode.c    ****     //Motion_FastestAdjust(1, VELO_EST);
 746:Src/mode.c    ****     Motion_FastestGoal(1, VELO_EST);
 2138              		.loc 1 746 0
 2139 002a B0EE480A 		vmov.f32	s0, s16
 2140 002e 0120     		movs	r0, #1
 2141 0030 FFF7FEFF 		bl	Motion_FastestGoal
 2142              	.LVL231:
 747:Src/mode.c    ****     motor_flag = FALSE;
 2143              		.loc 1 747 0
 2144 0034 0024     		movs	r4, #0
 2145 0036 114B     		ldr	r3, .L160+8
 2146 0038 1C70     		strb	r4, [r3]
 748:Src/mode.c    ****     Tim_FanPwm(0);
 2147              		.loc 1 748 0
 2148 003a 2046     		mov	r0, r4
 2149 003c FFF7FEFF 		bl	Tim_FanPwm
 2150              	.LVL232:
 749:Src/mode.c    ****     HAL_Delay(500);
 2151              		.loc 1 749 0
 2152 0040 4FF4FA70 		mov	r0, #500
 2153 0044 FFF7FEFF 		bl	HAL_Delay
 2154              	.LVL233:
 750:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2155              		.loc 1 750 0
 2156 0048 49F64242 		movw	r2, #40002
 2157 004c 0C49     		ldr	r1, .L160+12
 2158 004e 0D4B     		ldr	r3, .L160+16
 2159 0050 1868     		ldr	r0, [r3]
 2160 0052 FFF7FEFF 		bl	Flash_Write
 2161              	.LVL234:
 751:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2162              		.loc 1 751 0
 2163 0056 4FF49671 		mov	r1, #300
 2164 005a 4C20     		movs	r0, #76
 2165 005c FFF7FEFF 		bl	Tim_BuzzerPwm
 2166              	.LVL235:
 752:Src/mode.c    ****     HAL_Delay(200);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 54


 2167              		.loc 1 752 0
 2168 0060 C820     		movs	r0, #200
 2169 0062 FFF7FEFF 		bl	HAL_Delay
 2170              	.LVL236:
 753:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2171              		.loc 1 753 0
 2172 0066 2146     		mov	r1, r4
 2173 0068 0A20     		movs	r0, #10
 2174 006a FFF7FEFF 		bl	Tim_BuzzerPwm
 2175              	.LVL237:
 754:Src/mode.c    **** }
 2176              		.loc 1 754 0
 2177 006e BDEC028B 		vldm	sp!, {d8}
 2178              	.LCFI27:
 2179              		.cfi_restore 80
 2180              		.cfi_restore 81
 2181              		.cfi_def_cfa_offset 8
 2182 0072 10BD     		pop	{r4, pc}
 2183              	.L161:
 2184              		.align	2
 2185              	.L160:
 2186 0074 00000000 		.word	enc
 2187 0078 00009644 		.word	1150681088
 2188 007c 00000000 		.word	motor_flag
 2189 0080 00000000 		.word	loger
 2190 0084 00000000 		.word	start_address
 2191              		.cfi_endproc
 2192              	.LFE136:
 2194              		.section	.text.CheckDiagonal,"ax",%progbits
 2195              		.align	1
 2196              		.global	CheckDiagonal
 2197              		.syntax unified
 2198              		.thumb
 2199              		.thumb_func
 2200              		.fpu fpv4-sp-d16
 2202              	CheckDiagonal:
 2203              	.LFB137:
 755:Src/mode.c    **** 
 756:Src/mode.c    **** void CheckDiagonal(uint8_t block, int8_t dir)
 757:Src/mode.c    **** {
 2204              		.loc 1 757 0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208              	.LVL238:
 2209 0000 38B5     		push	{r3, r4, r5, lr}
 2210              	.LCFI28:
 2211              		.cfi_def_cfa_offset 16
 2212              		.cfi_offset 3, -16
 2213              		.cfi_offset 4, -12
 2214              		.cfi_offset 5, -8
 2215              		.cfi_offset 14, -4
 2216 0002 0446     		mov	r4, r0
 2217 0004 0D46     		mov	r5, r1
 758:Src/mode.c    ****     SetRunMode(0);
 2218              		.loc 1 758 0
 2219 0006 0020     		movs	r0, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 55


 2220              	.LVL239:
 2221 0008 FFF7FEFF 		bl	SetRunMode
 2222              	.LVL240:
 759:Src/mode.c    ****     enc.distance = 0;
 2223              		.loc 1 759 0
 2224 000c 154B     		ldr	r3, .L167
 2225 000e 0022     		movs	r2, #0
 2226 0010 1A60     		str	r2, [r3]	@ float
 760:Src/mode.c    ****     Motion_DiagonalStart();
 2227              		.loc 1 760 0
 2228 0012 FFF7FEFF 		bl	Motion_DiagonalStart
 2229              	.LVL241:
 761:Src/mode.c    ****     if (dir == 1)
 2230              		.loc 1 761 0
 2231 0016 012D     		cmp	r5, #1
 2232 0018 1FD0     		beq	.L166
 762:Src/mode.c    ****     {
 763:Src/mode.c    ****         //Motion_DiagonalLeft(block);
 764:Src/mode.c    ****         Motion_Diagonal(block);
 765:Src/mode.c    ****     }
 766:Src/mode.c    ****     else
 767:Src/mode.c    ****     {
 768:Src/mode.c    ****         Motion_DiagonalRight(block);
 2233              		.loc 1 768 0
 2234 001a 2046     		mov	r0, r4
 2235 001c FFF7FEFF 		bl	Motion_DiagonalRight
 2236              	.LVL242:
 2237              	.L164:
 769:Src/mode.c    ****     }
 770:Src/mode.c    ****     Motion_DiagonalStop();
 2238              		.loc 1 770 0
 2239 0020 FFF7FEFF 		bl	Motion_DiagonalStop
 2240              	.LVL243:
 771:Src/mode.c    ****     motor_flag = FALSE;
 2241              		.loc 1 771 0
 2242 0024 0024     		movs	r4, #0
 2243 0026 104B     		ldr	r3, .L167+4
 2244 0028 1C70     		strb	r4, [r3]
 772:Src/mode.c    ****     HAL_Delay(500);
 2245              		.loc 1 772 0
 2246 002a 4FF4FA70 		mov	r0, #500
 2247 002e FFF7FEFF 		bl	HAL_Delay
 2248              	.LVL244:
 773:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2249              		.loc 1 773 0
 2250 0032 49F64242 		movw	r2, #40002
 2251 0036 0D49     		ldr	r1, .L167+8
 2252 0038 0D4B     		ldr	r3, .L167+12
 2253 003a 1868     		ldr	r0, [r3]
 2254 003c FFF7FEFF 		bl	Flash_Write
 2255              	.LVL245:
 774:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2256              		.loc 1 774 0
 2257 0040 4FF49671 		mov	r1, #300
 2258 0044 4C20     		movs	r0, #76
 2259 0046 FFF7FEFF 		bl	Tim_BuzzerPwm
 2260              	.LVL246:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 56


 775:Src/mode.c    ****     HAL_Delay(200);
 2261              		.loc 1 775 0
 2262 004a C820     		movs	r0, #200
 2263 004c FFF7FEFF 		bl	HAL_Delay
 2264              	.LVL247:
 776:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2265              		.loc 1 776 0
 2266 0050 2146     		mov	r1, r4
 2267 0052 0A20     		movs	r0, #10
 2268 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 2269              	.LVL248:
 777:Src/mode.c    **** }
 2270              		.loc 1 777 0
 2271 0058 38BD     		pop	{r3, r4, r5, pc}
 2272              	.L166:
 764:Src/mode.c    ****     }
 2273              		.loc 1 764 0
 2274 005a 2046     		mov	r0, r4
 2275 005c FFF7FEFF 		bl	Motion_Diagonal
 2276              	.LVL249:
 2277 0060 DEE7     		b	.L164
 2278              	.L168:
 2279 0062 00BF     		.align	2
 2280              	.L167:
 2281 0064 00000000 		.word	enc
 2282 0068 00000000 		.word	motor_flag
 2283 006c 00000000 		.word	loger
 2284 0070 00000000 		.word	start_address
 2285              		.cfi_endproc
 2286              	.LFE137:
 2288              		.section	.text.CheckTurn,"ax",%progbits
 2289              		.align	1
 2290              		.global	CheckTurn
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu fpv4-sp-d16
 2296              	CheckTurn:
 2297              	.LFB138:
 778:Src/mode.c    **** 
 779:Src/mode.c    **** void CheckTurn(uint8_t num)
 780:Src/mode.c    **** {
 2298              		.loc 1 780 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 0, uses_anonymous_args = 0
 2302              	.LVL250:
 2303 0000 38B5     		push	{r3, r4, r5, lr}
 2304              	.LCFI29:
 2305              		.cfi_def_cfa_offset 16
 2306              		.cfi_offset 3, -16
 2307              		.cfi_offset 4, -12
 2308              		.cfi_offset 5, -8
 2309              		.cfi_offset 14, -4
 2310 0002 0546     		mov	r5, r0
 781:Src/mode.c    ****     SetRunMode(0);
 2311              		.loc 1 781 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 57


 2312 0004 0020     		movs	r0, #0
 2313              	.LVL251:
 2314 0006 FFF7FEFF 		bl	SetRunMode
 2315              	.LVL252:
 782:Src/mode.c    ****     gyro_z.degree = 0;
 2316              		.loc 1 782 0
 2317 000a 114B     		ldr	r3, .L173
 2318 000c 0022     		movs	r2, #0
 2319 000e 5A60     		str	r2, [r3, #4]	@ float
 2320              	.LVL253:
 2321              	.LBB13:
 783:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2322              		.loc 1 783 0
 2323 0010 0024     		movs	r4, #0
 2324 0012 03E0     		b	.L170
 2325              	.LVL254:
 2326              	.L171:
 784:Src/mode.c    ****     {
 785:Src/mode.c    ****         Motion_TestTurn();
 2327              		.loc 1 785 0 discriminator 3
 2328 0014 FFF7FEFF 		bl	Motion_TestTurn
 2329              	.LVL255:
 783:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2330              		.loc 1 783 0 discriminator 3
 2331 0018 0134     		adds	r4, r4, #1
 2332              	.LVL256:
 2333 001a E4B2     		uxtb	r4, r4
 2334              	.LVL257:
 2335              	.L170:
 783:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2336              		.loc 1 783 0 is_stmt 0 discriminator 1
 2337 001c AC42     		cmp	r4, r5
 2338 001e F9D3     		bcc	.L171
 2339              	.LBE13:
 786:Src/mode.c    ****     }
 787:Src/mode.c    ****     motor_flag = FALSE;
 2340              		.loc 1 787 0 is_stmt 1
 2341 0020 0024     		movs	r4, #0
 2342              	.LVL258:
 2343 0022 0C4B     		ldr	r3, .L173+4
 2344 0024 1C70     		strb	r4, [r3]
 788:Src/mode.c    ****     //loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 789:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2345              		.loc 1 789 0
 2346 0026 49F64242 		movw	r2, #40002
 2347 002a 0B49     		ldr	r1, .L173+8
 2348 002c 0B4B     		ldr	r3, .L173+12
 2349 002e 1868     		ldr	r0, [r3]
 2350 0030 FFF7FEFF 		bl	Flash_Write
 2351              	.LVL259:
 790:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2352              		.loc 1 790 0
 2353 0034 4FF49671 		mov	r1, #300
 2354 0038 4C20     		movs	r0, #76
 2355 003a FFF7FEFF 		bl	Tim_BuzzerPwm
 2356              	.LVL260:
 791:Src/mode.c    ****     HAL_Delay(200);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 58


 2357              		.loc 1 791 0
 2358 003e C820     		movs	r0, #200
 2359 0040 FFF7FEFF 		bl	HAL_Delay
 2360              	.LVL261:
 792:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2361              		.loc 1 792 0
 2362 0044 2146     		mov	r1, r4
 2363 0046 0A20     		movs	r0, #10
 2364 0048 FFF7FEFF 		bl	Tim_BuzzerPwm
 2365              	.LVL262:
 793:Src/mode.c    **** }
 2366              		.loc 1 793 0
 2367 004c 38BD     		pop	{r3, r4, r5, pc}
 2368              	.L174:
 2369 004e 00BF     		.align	2
 2370              	.L173:
 2371 0050 00000000 		.word	gyro_z
 2372 0054 00000000 		.word	motor_flag
 2373 0058 00000000 		.word	loger
 2374 005c 00000000 		.word	start_address
 2375              		.cfi_endproc
 2376              	.LFE138:
 2378              		.section	.text.PrintOutPut,"ax",%progbits
 2379              		.align	1
 2380              		.global	PrintOutPut
 2381              		.syntax unified
 2382              		.thumb
 2383              		.thumb_func
 2384              		.fpu fpv4-sp-d16
 2386              	PrintOutPut:
 2387              	.LFB139:
 794:Src/mode.c    **** 
 795:Src/mode.c    **** void PrintOutPut(void)
 796:Src/mode.c    **** {
 2388              		.loc 1 796 0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 0, uses_anonymous_args = 0
 2392 0000 30B5     		push	{r4, r5, lr}
 2393              	.LCFI30:
 2394              		.cfi_def_cfa_offset 12
 2395              		.cfi_offset 4, -12
 2396              		.cfi_offset 5, -8
 2397              		.cfi_offset 14, -4
 2398 0002 83B0     		sub	sp, sp, #12
 2399              	.LCFI31:
 2400              		.cfi_def_cfa_offset 24
 797:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2401              		.loc 1 797 0
 2402 0004 49F64242 		movw	r2, #40002
 2403 0008 1649     		ldr	r1, .L179
 2404 000a 174B     		ldr	r3, .L179+4
 2405 000c 1868     		ldr	r0, [r3]
 2406 000e FFF7FEFF 		bl	Flash_Load
 2407              	.LVL263:
 2408              	.LBB14:
 798:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 59


 2409              		.loc 1 798 0
 2410 0012 0024     		movs	r4, #0
 2411 0014 1FE0     		b	.L176
 2412              	.LVL264:
 2413              	.L177:
 799:Src/mode.c    ****     {
 800:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 801:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 802:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
 2414              		.loc 1 802 0 discriminator 3
 2415 0016 1348     		ldr	r0, .L179
 2416 0018 00EB4403 		add	r3, r0, r4, lsl #1
 2417 001c B3F90210 		ldrsh	r1, [r3, #2]
 2418 0020 04F51C53 		add	r3, r4, #9984
 2419 0024 1033     		adds	r3, r3, #16
 2420 0026 00EB4303 		add	r3, r0, r3, lsl #1
 2421 002a B3F90220 		ldrsh	r2, [r3, #2]
 2422 002e 04F59C53 		add	r3, r4, #4992
 2423 0032 0833     		adds	r3, r3, #8
 2424 0034 00EB4303 		add	r3, r0, r3, lsl #1
 2425 0038 B3F90230 		ldrsh	r3, [r3, #2]
 2426 003c 04F56A55 		add	r5, r4, #14976
 2427 0040 1835     		adds	r5, r5, #24
 2428 0042 00EB4500 		add	r0, r0, r5, lsl #1
 2429 0046 B0F90200 		ldrsh	r0, [r0, #2]
 2430 004a 0090     		str	r0, [sp]
 2431 004c 0748     		ldr	r0, .L179+8
 2432 004e FFF7FEFF 		bl	printf
 2433              	.LVL265:
 798:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2434              		.loc 1 798 0 discriminator 3
 2435 0052 0134     		adds	r4, r4, #1
 2436              	.LVL266:
 2437 0054 A4B2     		uxth	r4, r4
 2438              	.LVL267:
 2439              	.L176:
 798:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 2440              		.loc 1 798 0 is_stmt 0 discriminator 1
 2441 0056 034B     		ldr	r3, .L179
 2442 0058 1B88     		ldrh	r3, [r3]
 2443 005a A342     		cmp	r3, r4
 2444 005c DBD2     		bcs	.L177
 2445              	.LBE14:
 803:Src/mode.c    ****     }
 804:Src/mode.c    **** }
 2446              		.loc 1 804 0 is_stmt 1
 2447 005e 03B0     		add	sp, sp, #12
 2448              	.LCFI32:
 2449              		.cfi_def_cfa_offset 12
 2450              		@ sp needed
 2451 0060 30BD     		pop	{r4, r5, pc}
 2452              	.LVL268:
 2453              	.L180:
 2454 0062 00BF     		.align	2
 2455              	.L179:
 2456 0064 00000000 		.word	loger
 2457 0068 00000000 		.word	start_address
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 60


 2458 006c 00000000 		.word	.LC2
 2459              		.cfi_endproc
 2460              	.LFE139:
 2462              		.section	.text.PrintWallData,"ax",%progbits
 2463              		.align	1
 2464              		.global	PrintWallData
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2468              		.fpu fpv4-sp-d16
 2470              	PrintWallData:
 2471              	.LFB140:
 805:Src/mode.c    **** 
 806:Src/mode.c    **** void PrintWallData(void)
 807:Src/mode.c    **** {
 2472              		.loc 1 807 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 136
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476 0000 30B5     		push	{r4, r5, lr}
 2477              	.LCFI33:
 2478              		.cfi_def_cfa_offset 12
 2479              		.cfi_offset 4, -12
 2480              		.cfi_offset 5, -8
 2481              		.cfi_offset 14, -4
 2482 0002 A3B0     		sub	sp, sp, #140
 2483              	.LCFI34:
 2484              		.cfi_def_cfa_offset 152
 808:Src/mode.c    ****     wallData_t walldata;
 809:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&walldata, sizeof(wallData_t));
 2485              		.loc 1 809 0
 2486 0004 8822     		movs	r2, #136
 2487 0006 6946     		mov	r1, sp
 2488 0008 2C4B     		ldr	r3, .L198
 2489 000a 1868     		ldr	r0, [r3]
 2490 000c FFF7FEFF 		bl	Flash_Load
 2491              	.LVL269:
 810:Src/mode.c    ****     printf("\r\n");
 2492              		.loc 1 810 0
 2493 0010 2B48     		ldr	r0, .L198+4
 2494 0012 FFF7FEFF 		bl	puts
 2495              	.LVL270:
 2496              	.LBB15:
 811:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2497              		.loc 1 811 0
 2498 0016 0024     		movs	r4, #0
 2499 0018 07E0     		b	.L182
 2500              	.LVL271:
 2501              	.L183:
 812:Src/mode.c    ****     {
 813:Src/mode.c    ****         printf("+");
 2502              		.loc 1 813 0 discriminator 3
 2503 001a 2B20     		movs	r0, #43
 2504 001c FFF7FEFF 		bl	putchar
 2505              	.LVL272:
 814:Src/mode.c    ****         printf("---");
 2506              		.loc 1 814 0 discriminator 3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 61


 2507 0020 2848     		ldr	r0, .L198+8
 2508 0022 FFF7FEFF 		bl	printf
 2509              	.LVL273:
 811:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2510              		.loc 1 811 0 discriminator 3
 2511 0026 0134     		adds	r4, r4, #1
 2512              	.LVL274:
 2513 0028 E4B2     		uxtb	r4, r4
 2514              	.LVL275:
 2515              	.L182:
 811:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 2516              		.loc 1 811 0 is_stmt 0 discriminator 1
 2517 002a 0F2C     		cmp	r4, #15
 2518 002c F5D9     		bls	.L183
 2519              	.LBE15:
 815:Src/mode.c    ****     }
 816:Src/mode.c    ****     printf("+\r\n");
 2520              		.loc 1 816 0 is_stmt 1
 2521 002e 2648     		ldr	r0, .L198+12
 2522 0030 FFF7FEFF 		bl	puts
 2523              	.LVL276:
 2524              	.LBB16:
 817:Src/mode.c    ****     for (unsigned char j = MAZE_SIZE; j > 0; j--)
 2525              		.loc 1 817 0
 2526 0034 1025     		movs	r5, #16
 2527 0036 3CE0     		b	.L184
 2528              	.LVL277:
 2529              	.L185:
 2530              	.LBB17:
 818:Src/mode.c    ****     {
 819:Src/mode.c    ****         for (unsigned char i = 0; i < MAZE_SIZE; i++)
 820:Src/mode.c    ****         {
 821:Src/mode.c    ****             if (walldata.vertical[i] & 0b1 << (j - 1))
 822:Src/mode.c    ****             {
 823:Src/mode.c    ****                 printf("|");
 824:Src/mode.c    ****             }
 825:Src/mode.c    ****             else
 826:Src/mode.c    ****             {
 827:Src/mode.c    ****                 printf(" ");
 2531              		.loc 1 827 0
 2532 0038 2020     		movs	r0, #32
 2533 003a FFF7FEFF 		bl	putchar
 2534              	.LVL278:
 2535              	.L186:
 828:Src/mode.c    ****             }
 829:Src/mode.c    ****             printf("   ");
 2536              		.loc 1 829 0 discriminator 2
 2537 003e 2348     		ldr	r0, .L198+16
 2538 0040 FFF7FEFF 		bl	printf
 2539              	.LVL279:
 819:Src/mode.c    ****         {
 2540              		.loc 1 819 0 discriminator 2
 2541 0044 0134     		adds	r4, r4, #1
 2542              	.LVL280:
 2543 0046 E4B2     		uxtb	r4, r4
 2544              	.LVL281:
 2545              	.L192:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 62


 819:Src/mode.c    ****         {
 2546              		.loc 1 819 0 is_stmt 0 discriminator 1
 2547 0048 0F2C     		cmp	r4, #15
 2548 004a 0DD8     		bhi	.L195
 821:Src/mode.c    ****             {
 2549              		.loc 1 821 0 is_stmt 1
 2550 004c 22AB     		add	r3, sp, #136
 2551 004e 03EB4403 		add	r3, r3, r4, lsl #1
 2552 0052 33F8883C 		ldrh	r3, [r3, #-136]
 2553 0056 6A1E     		subs	r2, r5, #1
 2554 0058 1341     		asrs	r3, r3, r2
 2555 005a 13F0010F 		tst	r3, #1
 2556 005e EBD0     		beq	.L185
 823:Src/mode.c    ****             }
 2557              		.loc 1 823 0
 2558 0060 7C20     		movs	r0, #124
 2559 0062 FFF7FEFF 		bl	putchar
 2560              	.LVL282:
 2561 0066 EAE7     		b	.L186
 2562              	.L195:
 2563              	.LBE17:
 830:Src/mode.c    ****         }
 831:Src/mode.c    ****         printf("|");
 2564              		.loc 1 831 0
 2565 0068 7C20     		movs	r0, #124
 2566 006a FFF7FEFF 		bl	putchar
 2567              	.LVL283:
 832:Src/mode.c    ****         printf("\r\n");
 2568              		.loc 1 832 0
 2569 006e 1448     		ldr	r0, .L198+4
 2570 0070 FFF7FEFF 		bl	puts
 2571              	.LVL284:
 2572              	.LBB18:
 833:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2573              		.loc 1 833 0
 2574 0074 0024     		movs	r4, #0
 2575              	.LVL285:
 2576 0076 03E0     		b	.L188
 2577              	.LVL286:
 2578              	.L189:
 834:Src/mode.c    ****         {
 835:Src/mode.c    ****             printf("+");
 836:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 837:Src/mode.c    ****             {
 838:Src/mode.c    ****                 printf("---");
 839:Src/mode.c    ****             }
 840:Src/mode.c    ****             else
 841:Src/mode.c    ****             {
 842:Src/mode.c    ****                 printf("   ");
 2579              		.loc 1 842 0
 2580 0078 1448     		ldr	r0, .L198+16
 2581 007a FFF7FEFF 		bl	printf
 2582              	.LVL287:
 2583              	.L190:
 833:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2584              		.loc 1 833 0 discriminator 2
 2585 007e 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 63


 2586              	.LVL288:
 2587              	.L188:
 833:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 2588              		.loc 1 833 0 is_stmt 0 discriminator 1
 2589 0080 0F2C     		cmp	r4, #15
 2590 0082 11D8     		bhi	.L196
 835:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 2591              		.loc 1 835 0 is_stmt 1
 2592 0084 2B20     		movs	r0, #43
 2593 0086 FFF7FEFF 		bl	putchar
 2594              	.LVL289:
 836:Src/mode.c    ****             {
 2595              		.loc 1 836 0
 2596 008a 05F10F03 		add	r3, r5, #15
 2597 008e 22AA     		add	r2, sp, #136
 2598 0090 02EB4303 		add	r3, r2, r3, lsl #1
 2599 0094 33F8863C 		ldrh	r3, [r3, #-134]
 2600 0098 2341     		asrs	r3, r3, r4
 2601 009a 13F0010F 		tst	r3, #1
 2602 009e EBD0     		beq	.L189
 838:Src/mode.c    ****             }
 2603              		.loc 1 838 0
 2604 00a0 0848     		ldr	r0, .L198+8
 2605 00a2 FFF7FEFF 		bl	printf
 2606              	.LVL290:
 2607 00a6 EAE7     		b	.L190
 2608              	.L196:
 2609              	.LBE18:
 843:Src/mode.c    ****             }
 844:Src/mode.c    ****         }
 845:Src/mode.c    ****         printf("+\r\n");
 2610              		.loc 1 845 0 discriminator 2
 2611 00a8 0748     		ldr	r0, .L198+12
 2612 00aa FFF7FEFF 		bl	puts
 2613              	.LVL291:
 817:Src/mode.c    ****     {
 2614              		.loc 1 817 0 discriminator 2
 2615 00ae 013D     		subs	r5, r5, #1
 2616              	.LVL292:
 2617 00b0 EDB2     		uxtb	r5, r5
 2618              	.LVL293:
 2619              	.L184:
 817:Src/mode.c    ****     {
 2620              		.loc 1 817 0 is_stmt 0 discriminator 1
 2621 00b2 0DB1     		cbz	r5, .L197
 2622              	.LBB19:
 819:Src/mode.c    ****         {
 2623              		.loc 1 819 0 is_stmt 1
 2624 00b4 0024     		movs	r4, #0
 2625 00b6 C7E7     		b	.L192
 2626              	.L197:
 2627              	.LBE19:
 2628              	.LBE16:
 846:Src/mode.c    ****     }
 847:Src/mode.c    **** }
 2629              		.loc 1 847 0
 2630 00b8 23B0     		add	sp, sp, #140
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 64


 2631              	.LCFI35:
 2632              		.cfi_def_cfa_offset 12
 2633              		@ sp needed
 2634 00ba 30BD     		pop	{r4, r5, pc}
 2635              	.LVL294:
 2636              	.L199:
 2637              		.align	2
 2638              	.L198:
 2639 00bc 00000000 		.word	start_address
 2640 00c0 00000000 		.word	.LC3
 2641 00c4 04000000 		.word	.LC4
 2642 00c8 08000000 		.word	.LC5
 2643 00cc 0C000000 		.word	.LC6
 2644              		.cfi_endproc
 2645              	.LFE140:
 2647              		.section	.text.PrintMotion,"ax",%progbits
 2648              		.align	1
 2649              		.global	PrintMotion
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2653              		.fpu fpv4-sp-d16
 2655              	PrintMotion:
 2656              	.LFB141:
 848:Src/mode.c    **** 
 849:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail)
 850:Src/mode.c    **** {
 2657              		.loc 1 850 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              	.LVL295:
 2662 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2663              	.LCFI36:
 2664              		.cfi_def_cfa_offset 24
 2665              		.cfi_offset 3, -24
 2666              		.cfi_offset 4, -20
 2667              		.cfi_offset 5, -16
 2668              		.cfi_offset 6, -12
 2669              		.cfi_offset 7, -8
 2670              		.cfi_offset 14, -4
 2671 0002 0646     		mov	r6, r0
 2672 0004 0F46     		mov	r7, r1
 2673 0006 1546     		mov	r5, r2
 2674              	.LVL296:
 851:Src/mode.c    ****     uint8_t head = 0;
 2675              		.loc 1 851 0
 2676 0008 0024     		movs	r4, #0
 852:Src/mode.c    ****     while (head < tail)
 2677              		.loc 1 852 0
 2678 000a 09E0     		b	.L201
 2679              	.LVL297:
 2680              	.L207:
 853:Src/mode.c    ****     {
 854:Src/mode.c    ****         switch (motion[head] & 0xf)
 855:Src/mode.c    ****         {
 856:Src/mode.c    ****         case START:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 65


 857:Src/mode.c    ****             printf("\r\nSTART:%d\tv_start:%ld\tv_end:%ld\r\n", motion[head] >> 4, velocity[head] >>
 2681              		.loc 1 857 0
 2682 000c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2683 0010 93B2     		uxth	r3, r2
 2684 0012 120C     		lsrs	r2, r2, #16
 2685 0014 0909     		lsrs	r1, r1, #4
 2686 0016 7648     		ldr	r0, .L235
 2687 0018 FFF7FEFF 		bl	printf
 2688              	.LVL298:
 2689              	.L211:
 858:Src/mode.c    ****             break;
 859:Src/mode.c    ****         case LEFT:
 860:Src/mode.c    ****             switch (motion[head] >> 4)
 861:Src/mode.c    ****             {
 862:Src/mode.c    ****             case SEARCH:
 863:Src/mode.c    ****                 printf("LEFT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 864:Src/mode.c    ****                 break;
 865:Src/mode.c    ****             case T_90:
 866:Src/mode.c    ****                 printf("LEFT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[head
 867:Src/mode.c    ****                 break;
 868:Src/mode.c    ****             case T_180:
 869:Src/mode.c    ****                 printf("LEFT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 870:Src/mode.c    ****                 break;
 871:Src/mode.c    ****             case T_45IN:
 872:Src/mode.c    ****                 printf("LEFT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 873:Src/mode.c    ****                 break;
 874:Src/mode.c    ****             case T_45OUT:
 875:Src/mode.c    ****                 printf("LEFT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 876:Src/mode.c    ****                 break;
 877:Src/mode.c    ****             case T_135IN:
 878:Src/mode.c    ****                 printf("LEFT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 879:Src/mode.c    ****                 break;
 880:Src/mode.c    ****             case T_135OUT:
 881:Src/mode.c    ****                 printf("LEFT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 882:Src/mode.c    ****                 break;
 883:Src/mode.c    ****             case T_V90:
 884:Src/mode.c    ****                 printf("LEFT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 885:Src/mode.c    ****                 break;
 886:Src/mode.c    ****             default:
 887:Src/mode.c    ****                 printf("\r\n");
 888:Src/mode.c    ****                 break;
 889:Src/mode.c    ****             }
 890:Src/mode.c    ****             break;
 891:Src/mode.c    ****         case RIGHT:
 892:Src/mode.c    ****             switch (motion[head] >> 4)
 893:Src/mode.c    ****             {
 894:Src/mode.c    ****             case SEARCH:
 895:Src/mode.c    ****                 printf("RIGHT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 896:Src/mode.c    ****                 break;
 897:Src/mode.c    ****             case T_90:
 898:Src/mode.c    ****                 printf("RIGHT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 899:Src/mode.c    ****                 break;
 900:Src/mode.c    ****             case T_180:
 901:Src/mode.c    ****                 printf("RIGHT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 902:Src/mode.c    ****                 break;
 903:Src/mode.c    ****             case T_45IN:
 904:Src/mode.c    ****                 printf("RIGHT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 66


 905:Src/mode.c    ****                 break;
 906:Src/mode.c    ****             case T_45OUT:
 907:Src/mode.c    ****                 printf("RIGHT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 908:Src/mode.c    ****                 break;
 909:Src/mode.c    ****             case T_135IN:
 910:Src/mode.c    ****                 printf("RIGHT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 911:Src/mode.c    ****                 break;
 912:Src/mode.c    ****             case T_135OUT:
 913:Src/mode.c    ****                 printf("RIGHT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity
 914:Src/mode.c    ****                 break;
 915:Src/mode.c    ****             case T_V90:
 916:Src/mode.c    ****                 printf("RIGHT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 917:Src/mode.c    ****                 break;
 918:Src/mode.c    ****             default:
 919:Src/mode.c    ****                 printf("\r\n");
 920:Src/mode.c    ****                 break;
 921:Src/mode.c    ****             }
 922:Src/mode.c    ****             break;
 923:Src/mode.c    ****         case FRONT:
 924:Src/mode.c    ****             printf("FRONT:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16,
 925:Src/mode.c    ****             break;
 926:Src/mode.c    ****         case DIAGONAL:
 927:Src/mode.c    ****             printf("DIAGONAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 
 928:Src/mode.c    ****             break;
 929:Src/mode.c    ****         case GOAL:
 930:Src/mode.c    ****             printf("GOAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16, 
 931:Src/mode.c    ****             break;
 932:Src/mode.c    ****         case ADJUST:
 933:Src/mode.c    ****             printf("ADJUST:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16
 934:Src/mode.c    ****             break;
 935:Src/mode.c    ****         default:
 936:Src/mode.c    ****             printf("\r\n");
 937:Src/mode.c    ****             break;
 938:Src/mode.c    ****         }
 939:Src/mode.c    ****         head++;
 2690              		.loc 1 939 0
 2691 001c 0134     		adds	r4, r4, #1
 2692              	.LVL299:
 2693 001e E4B2     		uxtb	r4, r4
 2694              	.LVL300:
 2695              	.L201:
 852:Src/mode.c    ****     {
 2696              		.loc 1 852 0
 2697 0020 AC42     		cmp	r4, r5
 2698 0022 80F0E380 		bcs	.L234
 854:Src/mode.c    ****         {
 2699              		.loc 1 854 0
 2700 0026 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2701 002a 01F00F03 		and	r3, r1, #15
 2702 002e 0A2B     		cmp	r3, #10
 2703 0030 00F2D880 		bhi	.L202
 2704 0034 01A0     		adr	r0, .L204
 2705 0036 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 2706 003a 00BF     		.p2align 2
 2707              	.L204:
 2708 003c 9D010000 		.word	.L203+1
 2709 0040 69000000 		.word	.L205+1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 67


 2710 0044 03010000 		.word	.L206+1
 2711 0048 E5010000 		.word	.L202+1
 2712 004c E5010000 		.word	.L202+1
 2713 0050 0D000000 		.word	.L207+1
 2714 0054 C1010000 		.word	.L208+1
 2715 0058 AF010000 		.word	.L209+1
 2716 005c E5010000 		.word	.L202+1
 2717 0060 E5010000 		.word	.L202+1
 2718 0064 D3010000 		.word	.L210+1
 2719              		.p2align 1
 2720              	.L205:
 860:Src/mode.c    ****             {
 2721              		.loc 1 860 0
 2722 0068 0909     		lsrs	r1, r1, #4
 2723 006a 0729     		cmp	r1, #7
 2724 006c 45D8     		bhi	.L212
 2725 006e DFE801F0 		tbb	[pc, r1]
 2726              	.L214:
 2727 0072 04       		.byte	(.L213-.L214)/2
 2728 0073 1C       		.byte	(.L215-.L214)/2
 2729 0074 2C       		.byte	(.L216-.L214)/2
 2730 0075 0C       		.byte	(.L217-.L214)/2
 2731 0076 14       		.byte	(.L218-.L214)/2
 2732 0077 24       		.byte	(.L219-.L214)/2
 2733 0078 34       		.byte	(.L220-.L214)/2
 2734 0079 3C       		.byte	(.L221-.L214)/2
 2735              		.p2align 1
 2736              	.L213:
 863:Src/mode.c    ****                 break;
 2737              		.loc 1 863 0
 2738 007a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2739 007e 8AB2     		uxth	r2, r1
 2740 0080 090C     		lsrs	r1, r1, #16
 2741 0082 5C48     		ldr	r0, .L235+4
 2742 0084 FFF7FEFF 		bl	printf
 2743              	.LVL301:
 864:Src/mode.c    ****             case T_90:
 2744              		.loc 1 864 0
 2745 0088 C8E7     		b	.L211
 2746              	.L217:
 866:Src/mode.c    ****                 break;
 2747              		.loc 1 866 0
 2748 008a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2749 008e 8AB2     		uxth	r2, r1
 2750 0090 090C     		lsrs	r1, r1, #16
 2751 0092 5948     		ldr	r0, .L235+8
 2752 0094 FFF7FEFF 		bl	printf
 2753              	.LVL302:
 867:Src/mode.c    ****             case T_180:
 2754              		.loc 1 867 0
 2755 0098 C0E7     		b	.L211
 2756              	.L218:
 869:Src/mode.c    ****                 break;
 2757              		.loc 1 869 0
 2758 009a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2759 009e 8AB2     		uxth	r2, r1
 2760 00a0 090C     		lsrs	r1, r1, #16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 68


 2761 00a2 5648     		ldr	r0, .L235+12
 2762 00a4 FFF7FEFF 		bl	printf
 2763              	.LVL303:
 870:Src/mode.c    ****             case T_45IN:
 2764              		.loc 1 870 0
 2765 00a8 B8E7     		b	.L211
 2766              	.L215:
 872:Src/mode.c    ****                 break;
 2767              		.loc 1 872 0
 2768 00aa 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2769 00ae 8AB2     		uxth	r2, r1
 2770 00b0 090C     		lsrs	r1, r1, #16
 2771 00b2 5348     		ldr	r0, .L235+16
 2772 00b4 FFF7FEFF 		bl	printf
 2773              	.LVL304:
 873:Src/mode.c    ****             case T_45OUT:
 2774              		.loc 1 873 0
 2775 00b8 B0E7     		b	.L211
 2776              	.L219:
 875:Src/mode.c    ****                 break;
 2777              		.loc 1 875 0
 2778 00ba 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2779 00be 8AB2     		uxth	r2, r1
 2780 00c0 090C     		lsrs	r1, r1, #16
 2781 00c2 5048     		ldr	r0, .L235+20
 2782 00c4 FFF7FEFF 		bl	printf
 2783              	.LVL305:
 876:Src/mode.c    ****             case T_135IN:
 2784              		.loc 1 876 0
 2785 00c8 A8E7     		b	.L211
 2786              	.L216:
 878:Src/mode.c    ****                 break;
 2787              		.loc 1 878 0
 2788 00ca 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2789 00ce 8AB2     		uxth	r2, r1
 2790 00d0 090C     		lsrs	r1, r1, #16
 2791 00d2 4D48     		ldr	r0, .L235+24
 2792 00d4 FFF7FEFF 		bl	printf
 2793              	.LVL306:
 879:Src/mode.c    ****             case T_135OUT:
 2794              		.loc 1 879 0
 2795 00d8 A0E7     		b	.L211
 2796              	.L220:
 881:Src/mode.c    ****                 break;
 2797              		.loc 1 881 0
 2798 00da 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2799 00de 8AB2     		uxth	r2, r1
 2800 00e0 090C     		lsrs	r1, r1, #16
 2801 00e2 4A48     		ldr	r0, .L235+28
 2802 00e4 FFF7FEFF 		bl	printf
 2803              	.LVL307:
 882:Src/mode.c    ****             case T_V90:
 2804              		.loc 1 882 0
 2805 00e8 98E7     		b	.L211
 2806              	.L221:
 884:Src/mode.c    ****                 break;
 2807              		.loc 1 884 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 69


 2808 00ea 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2809 00ee 8AB2     		uxth	r2, r1
 2810 00f0 090C     		lsrs	r1, r1, #16
 2811 00f2 4748     		ldr	r0, .L235+32
 2812 00f4 FFF7FEFF 		bl	printf
 2813              	.LVL308:
 885:Src/mode.c    ****             default:
 2814              		.loc 1 885 0
 2815 00f8 90E7     		b	.L211
 2816              	.L212:
 887:Src/mode.c    ****                 break;
 2817              		.loc 1 887 0
 2818 00fa 4648     		ldr	r0, .L235+36
 2819 00fc FFF7FEFF 		bl	puts
 2820              	.LVL309:
 888:Src/mode.c    ****             }
 2821              		.loc 1 888 0
 2822 0100 8CE7     		b	.L211
 2823              	.L206:
 892:Src/mode.c    ****             {
 2824              		.loc 1 892 0
 2825 0102 0909     		lsrs	r1, r1, #4
 2826 0104 0729     		cmp	r1, #7
 2827 0106 45D8     		bhi	.L222
 2828 0108 DFE801F0 		tbb	[pc, r1]
 2829              	.L224:
 2830 010c 04       		.byte	(.L223-.L224)/2
 2831 010d 1C       		.byte	(.L225-.L224)/2
 2832 010e 2C       		.byte	(.L226-.L224)/2
 2833 010f 0C       		.byte	(.L227-.L224)/2
 2834 0110 14       		.byte	(.L228-.L224)/2
 2835 0111 24       		.byte	(.L229-.L224)/2
 2836 0112 34       		.byte	(.L230-.L224)/2
 2837 0113 3C       		.byte	(.L231-.L224)/2
 2838              		.p2align 1
 2839              	.L223:
 895:Src/mode.c    ****                 break;
 2840              		.loc 1 895 0
 2841 0114 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2842 0118 8AB2     		uxth	r2, r1
 2843 011a 090C     		lsrs	r1, r1, #16
 2844 011c 3E48     		ldr	r0, .L235+40
 2845 011e FFF7FEFF 		bl	printf
 2846              	.LVL310:
 896:Src/mode.c    ****             case T_90:
 2847              		.loc 1 896 0
 2848 0122 7BE7     		b	.L211
 2849              	.L227:
 898:Src/mode.c    ****                 break;
 2850              		.loc 1 898 0
 2851 0124 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2852 0128 8AB2     		uxth	r2, r1
 2853 012a 090C     		lsrs	r1, r1, #16
 2854 012c 3B48     		ldr	r0, .L235+44
 2855 012e FFF7FEFF 		bl	printf
 2856              	.LVL311:
 899:Src/mode.c    ****             case T_180:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 70


 2857              		.loc 1 899 0
 2858 0132 73E7     		b	.L211
 2859              	.L228:
 901:Src/mode.c    ****                 break;
 2860              		.loc 1 901 0
 2861 0134 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2862 0138 8AB2     		uxth	r2, r1
 2863 013a 090C     		lsrs	r1, r1, #16
 2864 013c 3848     		ldr	r0, .L235+48
 2865 013e FFF7FEFF 		bl	printf
 2866              	.LVL312:
 902:Src/mode.c    ****             case T_45IN:
 2867              		.loc 1 902 0
 2868 0142 6BE7     		b	.L211
 2869              	.L225:
 904:Src/mode.c    ****                 break;
 2870              		.loc 1 904 0
 2871 0144 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2872 0148 8AB2     		uxth	r2, r1
 2873 014a 090C     		lsrs	r1, r1, #16
 2874 014c 3548     		ldr	r0, .L235+52
 2875 014e FFF7FEFF 		bl	printf
 2876              	.LVL313:
 905:Src/mode.c    ****             case T_45OUT:
 2877              		.loc 1 905 0
 2878 0152 63E7     		b	.L211
 2879              	.L229:
 907:Src/mode.c    ****                 break;
 2880              		.loc 1 907 0
 2881 0154 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2882 0158 8AB2     		uxth	r2, r1
 2883 015a 090C     		lsrs	r1, r1, #16
 2884 015c 3248     		ldr	r0, .L235+56
 2885 015e FFF7FEFF 		bl	printf
 2886              	.LVL314:
 908:Src/mode.c    ****             case T_135IN:
 2887              		.loc 1 908 0
 2888 0162 5BE7     		b	.L211
 2889              	.L226:
 910:Src/mode.c    ****                 break;
 2890              		.loc 1 910 0
 2891 0164 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2892 0168 8AB2     		uxth	r2, r1
 2893 016a 090C     		lsrs	r1, r1, #16
 2894 016c 2F48     		ldr	r0, .L235+60
 2895 016e FFF7FEFF 		bl	printf
 2896              	.LVL315:
 911:Src/mode.c    ****             case T_135OUT:
 2897              		.loc 1 911 0
 2898 0172 53E7     		b	.L211
 2899              	.L230:
 913:Src/mode.c    ****                 break;
 2900              		.loc 1 913 0
 2901 0174 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2902 0178 8AB2     		uxth	r2, r1
 2903 017a 090C     		lsrs	r1, r1, #16
 2904 017c 2C48     		ldr	r0, .L235+64
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 71


 2905 017e FFF7FEFF 		bl	printf
 2906              	.LVL316:
 914:Src/mode.c    ****             case T_V90:
 2907              		.loc 1 914 0
 2908 0182 4BE7     		b	.L211
 2909              	.L231:
 916:Src/mode.c    ****                 break;
 2910              		.loc 1 916 0
 2911 0184 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2912 0188 8AB2     		uxth	r2, r1
 2913 018a 090C     		lsrs	r1, r1, #16
 2914 018c 2948     		ldr	r0, .L235+68
 2915 018e FFF7FEFF 		bl	printf
 2916              	.LVL317:
 917:Src/mode.c    ****             default:
 2917              		.loc 1 917 0
 2918 0192 43E7     		b	.L211
 2919              	.L222:
 919:Src/mode.c    ****                 break;
 2920              		.loc 1 919 0
 2921 0194 1F48     		ldr	r0, .L235+36
 2922 0196 FFF7FEFF 		bl	puts
 2923              	.LVL318:
 920:Src/mode.c    ****             }
 2924              		.loc 1 920 0
 2925 019a 3FE7     		b	.L211
 2926              	.L203:
 924:Src/mode.c    ****             break;
 2927              		.loc 1 924 0
 2928 019c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2929 01a0 93B2     		uxth	r3, r2
 2930 01a2 120C     		lsrs	r2, r2, #16
 2931 01a4 0909     		lsrs	r1, r1, #4
 2932 01a6 2448     		ldr	r0, .L235+72
 2933 01a8 FFF7FEFF 		bl	printf
 2934              	.LVL319:
 925:Src/mode.c    ****         case DIAGONAL:
 2935              		.loc 1 925 0
 2936 01ac 36E7     		b	.L211
 2937              	.L209:
 927:Src/mode.c    ****             break;
 2938              		.loc 1 927 0
 2939 01ae 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2940 01b2 93B2     		uxth	r3, r2
 2941 01b4 120C     		lsrs	r2, r2, #16
 2942 01b6 0909     		lsrs	r1, r1, #4
 2943 01b8 2048     		ldr	r0, .L235+76
 2944 01ba FFF7FEFF 		bl	printf
 2945              	.LVL320:
 928:Src/mode.c    ****         case GOAL:
 2946              		.loc 1 928 0
 2947 01be 2DE7     		b	.L211
 2948              	.L208:
 930:Src/mode.c    ****             break;
 2949              		.loc 1 930 0
 2950 01c0 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2951 01c4 93B2     		uxth	r3, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 72


 2952 01c6 120C     		lsrs	r2, r2, #16
 2953 01c8 0909     		lsrs	r1, r1, #4
 2954 01ca 1D48     		ldr	r0, .L235+80
 2955 01cc FFF7FEFF 		bl	printf
 2956              	.LVL321:
 931:Src/mode.c    ****         case ADJUST:
 2957              		.loc 1 931 0
 2958 01d0 24E7     		b	.L211
 2959              	.L210:
 933:Src/mode.c    ****             break;
 2960              		.loc 1 933 0
 2961 01d2 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2962 01d6 93B2     		uxth	r3, r2
 2963 01d8 120C     		lsrs	r2, r2, #16
 2964 01da 0909     		lsrs	r1, r1, #4
 2965 01dc 1948     		ldr	r0, .L235+84
 2966 01de FFF7FEFF 		bl	printf
 2967              	.LVL322:
 934:Src/mode.c    ****         default:
 2968              		.loc 1 934 0
 2969 01e2 1BE7     		b	.L211
 2970              	.L202:
 936:Src/mode.c    ****             break;
 2971              		.loc 1 936 0
 2972 01e4 0B48     		ldr	r0, .L235+36
 2973 01e6 FFF7FEFF 		bl	puts
 2974              	.LVL323:
 937:Src/mode.c    ****         }
 2975              		.loc 1 937 0
 2976 01ea 17E7     		b	.L211
 2977              	.L234:
 940:Src/mode.c    ****     }
 941:Src/mode.c    **** }
 2978              		.loc 1 941 0
 2979 01ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2980              	.LVL324:
 2981              	.L236:
 2982 01ee 00BF     		.align	2
 2983              	.L235:
 2984 01f0 00000000 		.word	.LC7
 2985 01f4 24000000 		.word	.LC8
 2986 01f8 48000000 		.word	.LC9
 2987 01fc 6C000000 		.word	.LC10
 2988 0200 90000000 		.word	.LC11
 2989 0204 B4000000 		.word	.LC12
 2990 0208 DC000000 		.word	.LC13
 2991 020c 04010000 		.word	.LC14
 2992 0210 2C010000 		.word	.LC15
 2993 0214 00000000 		.word	.LC3
 2994 0218 50010000 		.word	.LC16
 2995 021c 78010000 		.word	.LC17
 2996 0220 9C010000 		.word	.LC18
 2997 0224 C0010000 		.word	.LC19
 2998 0228 E8010000 		.word	.LC20
 2999 022c 10020000 		.word	.LC21
 3000 0230 38020000 		.word	.LC22
 3001 0234 60020000 		.word	.LC23
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 73


 3002 0238 84020000 		.word	.LC24
 3003 023c A8020000 		.word	.LC25
 3004 0240 CC020000 		.word	.LC26
 3005 0244 EC020000 		.word	.LC27
 3006              		.cfi_endproc
 3007              	.LFE141:
 3009              		.section	.text.AdjustStraight,"ax",%progbits
 3010              		.align	1
 3011              		.global	AdjustStraight
 3012              		.syntax unified
 3013              		.thumb
 3014              		.thumb_func
 3015              		.fpu fpv4-sp-d16
 3017              	AdjustStraight:
 3018              	.LFB142:
 942:Src/mode.c    **** 
 943:Src/mode.c    **** void AdjustStraight(void)
 944:Src/mode.c    **** {
 3019              		.loc 1 944 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 0
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023 0000 08B5     		push	{r3, lr}
 3024              	.LCFI37:
 3025              		.cfi_def_cfa_offset 8
 3026              		.cfi_offset 3, -8
 3027              		.cfi_offset 14, -4
 945:Src/mode.c    ****     SetRunMode(0);
 3028              		.loc 1 945 0
 3029 0002 0020     		movs	r0, #0
 3030 0004 FFF7FEFF 		bl	SetRunMode
 3031              	.LVL325:
 946:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 3032              		.loc 1 946 0
 3033 0008 6021     		movs	r1, #96
 3034 000a 0846     		mov	r0, r1
 3035 000c FFF7FEFF 		bl	Tim_MotorPwm
 3036              	.LVL326:
 3037              	.L238:
 947:Src/mode.c    ****     while (motor_flag == TRUE)
 3038              		.loc 1 947 0 discriminator 1
 3039 0010 0E4B     		ldr	r3, .L240
 3040 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3041 0014 DBB2     		uxtb	r3, r3
 3042 0016 012B     		cmp	r3, #1
 3043 0018 FAD0     		beq	.L238
 948:Src/mode.c    ****     {
 949:Src/mode.c    ****     }
 950:Src/mode.c    ****     HAL_Delay(500);
 3044              		.loc 1 950 0
 3045 001a 4FF4FA70 		mov	r0, #500
 3046 001e FFF7FEFF 		bl	HAL_Delay
 3047              	.LVL327:
 951:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3048              		.loc 1 951 0
 3049 0022 49F64242 		movw	r2, #40002
 3050 0026 0A49     		ldr	r1, .L240+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 74


 3051 0028 0A4B     		ldr	r3, .L240+8
 3052 002a 1868     		ldr	r0, [r3]
 3053 002c FFF7FEFF 		bl	Flash_Write
 3054              	.LVL328:
 952:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3055              		.loc 1 952 0
 3056 0030 4FF49671 		mov	r1, #300
 3057 0034 4C20     		movs	r0, #76
 3058 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 3059              	.LVL329:
 953:Src/mode.c    ****     HAL_Delay(200);
 3060              		.loc 1 953 0
 3061 003a C820     		movs	r0, #200
 3062 003c FFF7FEFF 		bl	HAL_Delay
 3063              	.LVL330:
 954:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3064              		.loc 1 954 0
 3065 0040 0021     		movs	r1, #0
 3066 0042 0A20     		movs	r0, #10
 3067 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 3068              	.LVL331:
 955:Src/mode.c    **** }
 3069              		.loc 1 955 0
 3070 0048 08BD     		pop	{r3, pc}
 3071              	.L241:
 3072 004a 00BF     		.align	2
 3073              	.L240:
 3074 004c 00000000 		.word	motor_flag
 3075 0050 00000000 		.word	loger
 3076 0054 00000000 		.word	start_address
 3077              		.cfi_endproc
 3078              	.LFE142:
 3080              		.section	.text.AdjustTurn,"ax",%progbits
 3081              		.align	1
 3082              		.global	AdjustTurn
 3083              		.syntax unified
 3084              		.thumb
 3085              		.thumb_func
 3086              		.fpu fpv4-sp-d16
 3088              	AdjustTurn:
 3089              	.LFB143:
 956:Src/mode.c    **** 
 957:Src/mode.c    **** void AdjustTurn(void)
 958:Src/mode.c    **** {
 3090              		.loc 1 958 0
 3091              		.cfi_startproc
 3092              		@ args = 0, pretend = 0, frame = 0
 3093              		@ frame_needed = 0, uses_anonymous_args = 0
 3094 0000 08B5     		push	{r3, lr}
 3095              	.LCFI38:
 3096              		.cfi_def_cfa_offset 8
 3097              		.cfi_offset 3, -8
 3098              		.cfi_offset 14, -4
 959:Src/mode.c    ****     SetRunMode(0);
 3099              		.loc 1 959 0
 3100 0002 0020     		movs	r0, #0
 3101 0004 FFF7FEFF 		bl	SetRunMode
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 75


 3102              	.LVL332:
 960:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 3103              		.loc 1 960 0
 3104 0008 B421     		movs	r1, #180
 3105 000a 6FF0B300 		mvn	r0, #179
 3106 000e FFF7FEFF 		bl	Tim_MotorPwm
 3107              	.LVL333:
 3108              	.L243:
 961:Src/mode.c    ****     while (motor_flag == TRUE)
 3109              		.loc 1 961 0 discriminator 1
 3110 0012 0E4B     		ldr	r3, .L245
 3111 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3112 0016 DBB2     		uxtb	r3, r3
 3113 0018 012B     		cmp	r3, #1
 3114 001a FAD0     		beq	.L243
 962:Src/mode.c    ****     {
 963:Src/mode.c    ****     }
 964:Src/mode.c    ****     HAL_Delay(500);
 3115              		.loc 1 964 0
 3116 001c 4FF4FA70 		mov	r0, #500
 3117 0020 FFF7FEFF 		bl	HAL_Delay
 3118              	.LVL334:
 965:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3119              		.loc 1 965 0
 3120 0024 49F64242 		movw	r2, #40002
 3121 0028 0949     		ldr	r1, .L245+4
 3122 002a 0A4B     		ldr	r3, .L245+8
 3123 002c 1868     		ldr	r0, [r3]
 3124 002e FFF7FEFF 		bl	Flash_Write
 3125              	.LVL335:
 966:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3126              		.loc 1 966 0
 3127 0032 4FF49671 		mov	r1, #300
 3128 0036 4C20     		movs	r0, #76
 3129 0038 FFF7FEFF 		bl	Tim_BuzzerPwm
 3130              	.LVL336:
 967:Src/mode.c    ****     HAL_Delay(200);
 3131              		.loc 1 967 0
 3132 003c C820     		movs	r0, #200
 3133 003e FFF7FEFF 		bl	HAL_Delay
 3134              	.LVL337:
 968:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3135              		.loc 1 968 0
 3136 0042 0021     		movs	r1, #0
 3137 0044 0A20     		movs	r0, #10
 3138 0046 FFF7FEFF 		bl	Tim_BuzzerPwm
 3139              	.LVL338:
 969:Src/mode.c    **** }
 3140              		.loc 1 969 0
 3141 004a 08BD     		pop	{r3, pc}
 3142              	.L246:
 3143              		.align	2
 3144              	.L245:
 3145 004c 00000000 		.word	motor_flag
 3146 0050 00000000 		.word	loger
 3147 0054 00000000 		.word	start_address
 3148              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 76


 3149              	.LFE143:
 3151              		.section	.text.Circuit,"ax",%progbits
 3152              		.align	1
 3153              		.global	Circuit
 3154              		.syntax unified
 3155              		.thumb
 3156              		.thumb_func
 3157              		.fpu fpv4-sp-d16
 3159              	Circuit:
 3160              	.LFB144:
 970:Src/mode.c    **** 
 971:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 972:Src/mode.c    **** {
 3161              		.loc 1 972 0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 0
 3164              		@ frame_needed = 0, uses_anonymous_args = 0
 3165              	.LVL339:
 3166 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3167              	.LCFI39:
 3168              		.cfi_def_cfa_offset 24
 3169              		.cfi_offset 4, -24
 3170              		.cfi_offset 5, -20
 3171              		.cfi_offset 6, -16
 3172              		.cfi_offset 7, -12
 3173              		.cfi_offset 8, -8
 3174              		.cfi_offset 14, -4
 3175 0004 0746     		mov	r7, r0
 3176 0006 0E46     		mov	r6, r1
 3177 0008 9046     		mov	r8, r2
 3178 000a 1D46     		mov	r5, r3
 973:Src/mode.c    ****     Motion_Start();
 3179              		.loc 1 973 0
 3180 000c FFF7FEFF 		bl	Motion_Start
 3181              	.LVL340:
 3182              	.LBB20:
 974:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3183              		.loc 1 974 0
 3184 0010 0024     		movs	r4, #0
 3185 0012 1AE0     		b	.L248
 3186              	.LVL341:
 3187              	.L265:
 975:Src/mode.c    ****     {
 976:Src/mode.c    ****         if (row > 1)
 977:Src/mode.c    ****         {
 978:Src/mode.c    ****             Motion_Straight(1);
 3188              		.loc 1 978 0
 3189 0014 0120     		movs	r0, #1
 3190 0016 FFF7FEFF 		bl	Motion_Straight
 3191              	.LVL342:
 3192 001a 1AE0     		b	.L249
 3193              	.L266:
 979:Src/mode.c    ****         }
 980:Src/mode.c    **** 
 981:Src/mode.c    ****         if (dir == 1)
 982:Src/mode.c    ****         {
 983:Src/mode.c    ****             Motion_LeftTurn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 77


 3194              		.loc 1 983 0
 3195 001c FFF7FEFF 		bl	Motion_LeftTurn
 3196              	.LVL343:
 3197 0020 1BE0     		b	.L251
 3198              	.L267:
 984:Src/mode.c    ****         }
 985:Src/mode.c    ****         else
 986:Src/mode.c    ****         {
 987:Src/mode.c    ****             Motion_RightTurn();
 988:Src/mode.c    ****         }
 989:Src/mode.c    **** 
 990:Src/mode.c    ****         if (colum > 1)
 991:Src/mode.c    ****         {
 992:Src/mode.c    ****             Motion_Straight(1);
 3199              		.loc 1 992 0
 3200 0022 0120     		movs	r0, #1
 3201 0024 FFF7FEFF 		bl	Motion_Straight
 3202              	.LVL344:
 3203 0028 19E0     		b	.L252
 3204              	.L268:
 993:Src/mode.c    ****         }
 994:Src/mode.c    **** 
 995:Src/mode.c    ****         if (dir == 1)
 996:Src/mode.c    ****         {
 997:Src/mode.c    ****             Motion_LeftTurn();
 3205              		.loc 1 997 0
 3206 002a FFF7FEFF 		bl	Motion_LeftTurn
 3207              	.LVL345:
 3208 002e 1AE0     		b	.L254
 3209              	.L269:
 998:Src/mode.c    ****         }
 999:Src/mode.c    ****         else
1000:Src/mode.c    ****         {
1001:Src/mode.c    ****             Motion_RightTurn();
1002:Src/mode.c    ****         }
1003:Src/mode.c    **** 
1004:Src/mode.c    ****         if (row > 1)
1005:Src/mode.c    ****         {
1006:Src/mode.c    ****             Motion_Straight(1);
 3210              		.loc 1 1006 0
 3211 0030 0120     		movs	r0, #1
 3212 0032 FFF7FEFF 		bl	Motion_Straight
 3213              	.LVL346:
 3214 0036 18E0     		b	.L255
 3215              	.L270:
1007:Src/mode.c    ****         }
1008:Src/mode.c    **** 
1009:Src/mode.c    ****         if (dir == 1)
1010:Src/mode.c    ****         {
1011:Src/mode.c    ****             Motion_LeftTurn();
 3216              		.loc 1 1011 0
 3217 0038 FFF7FEFF 		bl	Motion_LeftTurn
 3218              	.LVL347:
 3219 003c 19E0     		b	.L257
 3220              	.L258:
1012:Src/mode.c    ****         }
1013:Src/mode.c    ****         else
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 78


1014:Src/mode.c    ****         {
1015:Src/mode.c    ****             Motion_RightTurn();
1016:Src/mode.c    ****         }
1017:Src/mode.c    **** 
1018:Src/mode.c    ****         if (colum > 1)
1019:Src/mode.c    ****         {
1020:Src/mode.c    ****             Motion_Straight(1);
1021:Src/mode.c    ****         }
1022:Src/mode.c    ****         if (dir == 1)
 3221              		.loc 1 1022 0
 3222 003e 012D     		cmp	r5, #1
 3223 0040 1DD0     		beq	.L263
1023:Src/mode.c    ****         {
1024:Src/mode.c    ****             Motion_LeftTurn();
1025:Src/mode.c    ****         }
1026:Src/mode.c    ****         else
1027:Src/mode.c    ****         {
1028:Src/mode.c    ****             Motion_RightTurn();
 3224              		.loc 1 1028 0
 3225 0042 FFF7FEFF 		bl	Motion_RightTurn
 3226              	.LVL348:
 3227              	.L260:
 974:Src/mode.c    ****     {
 3228              		.loc 1 974 0 discriminator 2
 3229 0046 0134     		adds	r4, r4, #1
 3230              	.LVL349:
 3231 0048 E4B2     		uxtb	r4, r4
 3232              	.LVL350:
 3233              	.L248:
 974:Src/mode.c    ****     {
 3234              		.loc 1 974 0 is_stmt 0 discriminator 1
 3235 004a 4445     		cmp	r4, r8
 3236 004c 1AD2     		bcs	.L264
 976:Src/mode.c    ****         {
 3237              		.loc 1 976 0 is_stmt 1
 3238 004e 012F     		cmp	r7, #1
 3239 0050 E0D8     		bhi	.L265
 3240              	.L249:
 981:Src/mode.c    ****         {
 3241              		.loc 1 981 0
 3242 0052 012D     		cmp	r5, #1
 3243 0054 E2D0     		beq	.L266
 987:Src/mode.c    ****         }
 3244              		.loc 1 987 0
 3245 0056 FFF7FEFF 		bl	Motion_RightTurn
 3246              	.LVL351:
 3247              	.L251:
 990:Src/mode.c    ****         {
 3248              		.loc 1 990 0
 3249 005a 012E     		cmp	r6, #1
 3250 005c E1D8     		bhi	.L267
 3251              	.L252:
 995:Src/mode.c    ****         {
 3252              		.loc 1 995 0
 3253 005e 012D     		cmp	r5, #1
 3254 0060 E3D0     		beq	.L268
1001:Src/mode.c    ****         }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 79


 3255              		.loc 1 1001 0
 3256 0062 FFF7FEFF 		bl	Motion_RightTurn
 3257              	.LVL352:
 3258              	.L254:
1004:Src/mode.c    ****         {
 3259              		.loc 1 1004 0
 3260 0066 012F     		cmp	r7, #1
 3261 0068 E2D8     		bhi	.L269
 3262              	.L255:
1009:Src/mode.c    ****         {
 3263              		.loc 1 1009 0
 3264 006a 012D     		cmp	r5, #1
 3265 006c E4D0     		beq	.L270
1015:Src/mode.c    ****         }
 3266              		.loc 1 1015 0
 3267 006e FFF7FEFF 		bl	Motion_RightTurn
 3268              	.LVL353:
 3269              	.L257:
1018:Src/mode.c    ****         {
 3270              		.loc 1 1018 0
 3271 0072 012E     		cmp	r6, #1
 3272 0074 E3D9     		bls	.L258
1020:Src/mode.c    ****         }
 3273              		.loc 1 1020 0
 3274 0076 0120     		movs	r0, #1
 3275 0078 FFF7FEFF 		bl	Motion_Straight
 3276              	.LVL354:
 3277 007c DFE7     		b	.L258
 3278              	.L263:
1024:Src/mode.c    ****         }
 3279              		.loc 1 1024 0
 3280 007e FFF7FEFF 		bl	Motion_LeftTurn
 3281              	.LVL355:
 3282 0082 E0E7     		b	.L260
 3283              	.L264:
 3284              	.LBE20:
1029:Src/mode.c    ****         }
1030:Src/mode.c    ****     }
1031:Src/mode.c    ****     Motion_End();
 3285              		.loc 1 1031 0
 3286 0084 FFF7FEFF 		bl	Motion_End
 3287              	.LVL356:
1032:Src/mode.c    ****     motor_flag = FALSE;
 3288              		.loc 1 1032 0
 3289 0088 024B     		ldr	r3, .L271
 3290 008a 0022     		movs	r2, #0
 3291 008c 1A70     		strb	r2, [r3]
1033:Src/mode.c    **** }
 3292              		.loc 1 1033 0
 3293 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3294              	.LVL357:
 3295              	.L272:
 3296 0092 00BF     		.align	2
 3297              	.L271:
 3298 0094 00000000 		.word	motor_flag
 3299              		.cfi_endproc
 3300              	.LFE144:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 80


 3302              		.section	.text.TestComb,"ax",%progbits
 3303              		.align	1
 3304              		.global	TestComb
 3305              		.syntax unified
 3306              		.thumb
 3307              		.thumb_func
 3308              		.fpu fpv4-sp-d16
 3310              	TestComb:
 3311              	.LFB145:
1034:Src/mode.c    **** 
1035:Src/mode.c    **** void TestComb(uint8_t num, uint8_t dir)
1036:Src/mode.c    **** {
 3312              		.loc 1 1036 0
 3313              		.cfi_startproc
 3314              		@ args = 0, pretend = 0, frame = 0
 3315              		@ frame_needed = 0, uses_anonymous_args = 0
 3316              	.LVL358:
 3317 0000 38B5     		push	{r3, r4, r5, lr}
 3318              	.LCFI40:
 3319              		.cfi_def_cfa_offset 16
 3320              		.cfi_offset 3, -16
 3321              		.cfi_offset 4, -12
 3322              		.cfi_offset 5, -8
 3323              		.cfi_offset 14, -4
 3324 0002 0546     		mov	r5, r0
1037:Src/mode.c    ****     if (dir == LEFT)
 3325              		.loc 1 1037 0
 3326 0004 0129     		cmp	r1, #1
 3327 0006 05D0     		beq	.L281
1038:Src/mode.c    ****     {
1039:Src/mode.c    ****         Motion_Start();
1040:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
1041:Src/mode.c    ****         {
1042:Src/mode.c    ****             Motion_LeftTurn();
1043:Src/mode.c    ****             Motion_WallSpinTurn();
1044:Src/mode.c    ****             Motion_LeftTurn();
1045:Src/mode.c    ****         }
1046:Src/mode.c    ****         Motion_End();
1047:Src/mode.c    ****     }
1048:Src/mode.c    ****     else if (dir == RIGHT)
 3328              		.loc 1 1048 0
 3329 0008 0229     		cmp	r1, #2
 3330 000a 14D0     		beq	.L282
 3331              	.LVL359:
 3332              	.L277:
1049:Src/mode.c    ****     {
1050:Src/mode.c    ****         Motion_Start();
1051:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
1052:Src/mode.c    ****         {
1053:Src/mode.c    ****             Motion_RightTurn();
1054:Src/mode.c    ****             Motion_WallSpinTurn();
1055:Src/mode.c    ****             Motion_RightTurn();
1056:Src/mode.c    ****         }
1057:Src/mode.c    ****         Motion_End();
1058:Src/mode.c    ****     }
1059:Src/mode.c    ****     motor_flag = FALSE;
 3333              		.loc 1 1059 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 81


 3334 000c 124B     		ldr	r3, .L283
 3335 000e 0022     		movs	r2, #0
 3336 0010 1A70     		strb	r2, [r3]
1060:Src/mode.c    **** }
 3337              		.loc 1 1060 0
 3338 0012 38BD     		pop	{r3, r4, r5, pc}
 3339              	.LVL360:
 3340              	.L281:
1039:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
 3341              		.loc 1 1039 0
 3342 0014 FFF7FEFF 		bl	Motion_Start
 3343              	.LVL361:
 3344              	.LBB21:
1040:Src/mode.c    ****         {
 3345              		.loc 1 1040 0
 3346 0018 0024     		movs	r4, #0
 3347 001a 07E0     		b	.L275
 3348              	.LVL362:
 3349              	.L276:
1042:Src/mode.c    ****             Motion_WallSpinTurn();
 3350              		.loc 1 1042 0 discriminator 3
 3351 001c FFF7FEFF 		bl	Motion_LeftTurn
 3352              	.LVL363:
1043:Src/mode.c    ****             Motion_LeftTurn();
 3353              		.loc 1 1043 0 discriminator 3
 3354 0020 FFF7FEFF 		bl	Motion_WallSpinTurn
 3355              	.LVL364:
1044:Src/mode.c    ****         }
 3356              		.loc 1 1044 0 discriminator 3
 3357 0024 FFF7FEFF 		bl	Motion_LeftTurn
 3358              	.LVL365:
1040:Src/mode.c    ****         {
 3359              		.loc 1 1040 0 discriminator 3
 3360 0028 0134     		adds	r4, r4, #1
 3361              	.LVL366:
 3362 002a E4B2     		uxtb	r4, r4
 3363              	.LVL367:
 3364              	.L275:
1040:Src/mode.c    ****         {
 3365              		.loc 1 1040 0 is_stmt 0 discriminator 1
 3366 002c AC42     		cmp	r4, r5
 3367 002e F5D3     		bcc	.L276
 3368              	.LBE21:
1046:Src/mode.c    ****     }
 3369              		.loc 1 1046 0 is_stmt 1
 3370 0030 FFF7FEFF 		bl	Motion_End
 3371              	.LVL368:
 3372 0034 EAE7     		b	.L277
 3373              	.LVL369:
 3374              	.L282:
1050:Src/mode.c    ****         for (uint8_t i = 0; i < num; i++)
 3375              		.loc 1 1050 0
 3376 0036 FFF7FEFF 		bl	Motion_Start
 3377              	.LVL370:
 3378              	.LBB22:
1051:Src/mode.c    ****         {
 3379              		.loc 1 1051 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 82


 3380 003a 0024     		movs	r4, #0
 3381 003c 07E0     		b	.L278
 3382              	.LVL371:
 3383              	.L279:
1053:Src/mode.c    ****             Motion_WallSpinTurn();
 3384              		.loc 1 1053 0 discriminator 3
 3385 003e FFF7FEFF 		bl	Motion_RightTurn
 3386              	.LVL372:
1054:Src/mode.c    ****             Motion_RightTurn();
 3387              		.loc 1 1054 0 discriminator 3
 3388 0042 FFF7FEFF 		bl	Motion_WallSpinTurn
 3389              	.LVL373:
1055:Src/mode.c    ****         }
 3390              		.loc 1 1055 0 discriminator 3
 3391 0046 FFF7FEFF 		bl	Motion_RightTurn
 3392              	.LVL374:
1051:Src/mode.c    ****         {
 3393              		.loc 1 1051 0 discriminator 3
 3394 004a 0134     		adds	r4, r4, #1
 3395              	.LVL375:
 3396 004c E4B2     		uxtb	r4, r4
 3397              	.LVL376:
 3398              	.L278:
1051:Src/mode.c    ****         {
 3399              		.loc 1 1051 0 is_stmt 0 discriminator 1
 3400 004e AC42     		cmp	r4, r5
 3401 0050 F5D3     		bcc	.L279
 3402              	.LBE22:
1057:Src/mode.c    ****     }
 3403              		.loc 1 1057 0 is_stmt 1
 3404 0052 FFF7FEFF 		bl	Motion_End
 3405              	.LVL377:
 3406 0056 D9E7     		b	.L277
 3407              	.L284:
 3408              		.align	2
 3409              	.L283:
 3410 0058 00000000 		.word	motor_flag
 3411              		.cfi_endproc
 3412              	.LFE145:
 3414              		.section	.text.TestSteps,"ax",%progbits
 3415              		.align	1
 3416              		.global	TestSteps
 3417              		.syntax unified
 3418              		.thumb
 3419              		.thumb_func
 3420              		.fpu fpv4-sp-d16
 3422              	TestSteps:
 3423              	.LFB146:
1061:Src/mode.c    **** 
1062:Src/mode.c    **** void TestSteps(uint8_t num)
1063:Src/mode.c    **** {
 3424              		.loc 1 1063 0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 0
 3427              		@ frame_needed = 0, uses_anonymous_args = 0
 3428              	.LVL378:
 3429 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 83


 3430              	.LCFI41:
 3431              		.cfi_def_cfa_offset 16
 3432              		.cfi_offset 3, -16
 3433              		.cfi_offset 4, -12
 3434              		.cfi_offset 5, -8
 3435              		.cfi_offset 14, -4
 3436 0002 0546     		mov	r5, r0
1064:Src/mode.c    ****     Motion_Start();
 3437              		.loc 1 1064 0
 3438 0004 FFF7FEFF 		bl	Motion_Start
 3439              	.LVL379:
 3440              	.LBB23:
1065:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3441              		.loc 1 1065 0
 3442 0008 0024     		movs	r4, #0
 3443 000a 05E0     		b	.L286
 3444              	.LVL380:
 3445              	.L287:
1066:Src/mode.c    ****     {
1067:Src/mode.c    ****         Motion_RightTurn();
 3446              		.loc 1 1067 0 discriminator 3
 3447 000c FFF7FEFF 		bl	Motion_RightTurn
 3448              	.LVL381:
1068:Src/mode.c    ****         Motion_LeftTurn();
 3449              		.loc 1 1068 0 discriminator 3
 3450 0010 FFF7FEFF 		bl	Motion_LeftTurn
 3451              	.LVL382:
1065:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3452              		.loc 1 1065 0 discriminator 3
 3453 0014 0134     		adds	r4, r4, #1
 3454              	.LVL383:
 3455 0016 E4B2     		uxtb	r4, r4
 3456              	.LVL384:
 3457              	.L286:
1065:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 3458              		.loc 1 1065 0 is_stmt 0 discriminator 1
 3459 0018 AC42     		cmp	r4, r5
 3460 001a F7D3     		bcc	.L287
 3461              	.LBE23:
1069:Src/mode.c    ****     }
1070:Src/mode.c    ****     Motion_End();
 3462              		.loc 1 1070 0 is_stmt 1
 3463 001c FFF7FEFF 		bl	Motion_End
 3464              	.LVL385:
1071:Src/mode.c    ****     motor_flag = FALSE;
 3465              		.loc 1 1071 0
 3466 0020 014B     		ldr	r3, .L289
 3467 0022 0022     		movs	r2, #0
 3468 0024 1A70     		strb	r2, [r3]
1072:Src/mode.c    **** }
 3469              		.loc 1 1072 0
 3470 0026 38BD     		pop	{r3, r4, r5, pc}
 3471              	.LVL386:
 3472              	.L290:
 3473              		.align	2
 3474              	.L289:
 3475 0028 00000000 		.word	motor_flag
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 84


 3476              		.cfi_endproc
 3477              	.LFE146:
 3479              		.section	.text.Turn45_Test,"ax",%progbits
 3480              		.align	1
 3481              		.global	Turn45_Test
 3482              		.syntax unified
 3483              		.thumb
 3484              		.thumb_func
 3485              		.fpu fpv4-sp-d16
 3487              	Turn45_Test:
 3488              	.LFB147:
1073:Src/mode.c    **** 
1074:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
1075:Src/mode.c    **** {
 3489              		.loc 1 1075 0
 3490              		.cfi_startproc
 3491              		@ args = 0, pretend = 0, frame = 0
 3492              		@ frame_needed = 0, uses_anonymous_args = 0
 3493              	.LVL387:
 3494 0000 70B5     		push	{r4, r5, r6, lr}
 3495              	.LCFI42:
 3496              		.cfi_def_cfa_offset 16
 3497              		.cfi_offset 4, -16
 3498              		.cfi_offset 5, -12
 3499              		.cfi_offset 6, -8
 3500              		.cfi_offset 14, -4
 3501 0002 2DED028B 		vpush.64	{d8}
 3502              	.LCFI43:
 3503              		.cfi_def_cfa_offset 24
 3504              		.cfi_offset 80, -24
 3505              		.cfi_offset 81, -20
 3506 0006 0546     		mov	r5, r0
 3507 0008 0C46     		mov	r4, r1
 3508 000a 1646     		mov	r6, r2
1076:Src/mode.c    ****     SetRunMode(0);
 3509              		.loc 1 1076 0
 3510 000c 0020     		movs	r0, #0
 3511              	.LVL388:
 3512 000e FFF7FEFF 		bl	SetRunMode
 3513              	.LVL389:
1077:Src/mode.c    **** 
1078:Src/mode.c    ****     switch (in_dir)
 3514              		.loc 1 1078 0
 3515 0012 012D     		cmp	r5, #1
 3516 0014 2CD0     		beq	.L293
 3517 0016 45B3     		cbz	r5, .L294
 3518 0018 022D     		cmp	r5, #2
 3519 001a 38D0     		beq	.L295
 3520              	.L292:
1079:Src/mode.c    ****     {
1080:Src/mode.c    ****     case FRONT:
1081:Src/mode.c    ****         Motion_DiagonalStart();
1082:Src/mode.c    ****         break;
1083:Src/mode.c    ****     case LEFT:
1084:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1085:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1086:Src/mode.c    ****         Motion_InLeft45Turn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 85


1087:Src/mode.c    ****         break;
1088:Src/mode.c    ****     case RIGHT:
1089:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1090:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1091:Src/mode.c    ****         Motion_InRight45Turn();
1092:Src/mode.c    ****         break;
1093:Src/mode.c    ****     default:
1094:Src/mode.c    ****         break;
1095:Src/mode.c    ****     }
1096:Src/mode.c    **** 
1097:Src/mode.c    ****     switch (out_dir)
 3521              		.loc 1 1097 0
 3522 001c 012C     		cmp	r4, #1
 3523 001e 48D0     		beq	.L297
 3524 0020 002C     		cmp	r4, #0
 3525 0022 43D0     		beq	.L298
 3526 0024 022C     		cmp	r4, #2
 3527 0026 55D0     		beq	.L299
 3528              	.L296:
1098:Src/mode.c    ****     {
1099:Src/mode.c    ****     case FRONT:
1100:Src/mode.c    ****         Motion_DiagonalStop();
1101:Src/mode.c    ****         break;
1102:Src/mode.c    ****     case LEFT:
1103:Src/mode.c    ****         if (step > 0)
1104:Src/mode.c    ****         {
1105:Src/mode.c    ****             Motion_DiagonalLeft(step);
1106:Src/mode.c    ****         }
1107:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
1108:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1109:Src/mode.c    ****         break;
1110:Src/mode.c    ****     case RIGHT:
1111:Src/mode.c    ****         if (step > 0)
1112:Src/mode.c    ****         {
1113:Src/mode.c    ****             Motion_DiagonalRight(step);
1114:Src/mode.c    ****         }
1115:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
1116:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1117:Src/mode.c    ****         break;
1118:Src/mode.c    ****     default:
1119:Src/mode.c    ****         break;
1120:Src/mode.c    ****     }
1121:Src/mode.c    **** 
1122:Src/mode.c    ****     motor_flag = FALSE;
 3529              		.loc 1 1122 0
 3530 0028 0024     		movs	r4, #0
 3531 002a 334B     		ldr	r3, .L305
 3532 002c 1C70     		strb	r4, [r3]
1123:Src/mode.c    ****     HAL_Delay(500);
 3533              		.loc 1 1123 0
 3534 002e 4FF4FA70 		mov	r0, #500
 3535 0032 FFF7FEFF 		bl	HAL_Delay
 3536              	.LVL390:
1124:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3537              		.loc 1 1124 0
 3538 0036 49F64242 		movw	r2, #40002
 3539 003a 3049     		ldr	r1, .L305+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 86


 3540 003c 304B     		ldr	r3, .L305+8
 3541 003e 1868     		ldr	r0, [r3]
 3542 0040 FFF7FEFF 		bl	Flash_Write
 3543              	.LVL391:
1125:Src/mode.c    ****     HAL_Delay(300);
 3544              		.loc 1 1125 0
 3545 0044 4FF49670 		mov	r0, #300
 3546 0048 FFF7FEFF 		bl	HAL_Delay
 3547              	.LVL392:
1126:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3548              		.loc 1 1126 0
 3549 004c 4FF49671 		mov	r1, #300
 3550 0050 4C20     		movs	r0, #76
 3551 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3552              	.LVL393:
1127:Src/mode.c    ****     HAL_Delay(200);
 3553              		.loc 1 1127 0
 3554 0056 C820     		movs	r0, #200
 3555 0058 FFF7FEFF 		bl	HAL_Delay
 3556              	.LVL394:
1128:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3557              		.loc 1 1128 0
 3558 005c 2146     		mov	r1, r4
 3559 005e 0A20     		movs	r0, #10
 3560 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 3561              	.LVL395:
1129:Src/mode.c    **** }
 3562              		.loc 1 1129 0
 3563 0064 BDEC028B 		vldm	sp!, {d8}
 3564              	.LCFI44:
 3565              		.cfi_remember_state
 3566              		.cfi_restore 80
 3567              		.cfi_restore 81
 3568              		.cfi_def_cfa_offset 16
 3569 0068 70BD     		pop	{r4, r5, r6, pc}
 3570              	.L294:
 3571              	.LCFI45:
 3572              		.cfi_restore_state
1081:Src/mode.c    ****         break;
 3573              		.loc 1 1081 0
 3574 006a FFF7FEFF 		bl	Motion_DiagonalStart
 3575              	.LVL396:
1082:Src/mode.c    ****     case LEFT:
 3576              		.loc 1 1082 0
 3577 006e D5E7     		b	.L292
 3578              	.L293:
1084:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
 3579              		.loc 1 1084 0
 3580 0070 9FED248A 		vldr.32	s16, .L305+12
 3581 0074 B0EE480A 		vmov.f32	s0, s16
 3582 0078 0120     		movs	r0, #1
 3583 007a FFF7FEFF 		bl	Motion_FastStart
 3584              	.LVL397:
1085:Src/mode.c    ****         Motion_InLeft45Turn();
 3585              		.loc 1 1085 0
 3586 007e B0EE480A 		vmov.f32	s0, s16
 3587 0082 0120     		movs	r0, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 87


 3588 0084 FFF7FEFF 		bl	Motion_Adjust_L
 3589              	.LVL398:
1086:Src/mode.c    ****         break;
 3590              		.loc 1 1086 0
 3591 0088 FFF7FEFF 		bl	Motion_InLeft45Turn
 3592              	.LVL399:
1087:Src/mode.c    ****     case RIGHT:
 3593              		.loc 1 1087 0
 3594 008c C6E7     		b	.L292
 3595              	.L295:
1089:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 3596              		.loc 1 1089 0
 3597 008e 9FED1D8A 		vldr.32	s16, .L305+12
 3598 0092 B0EE480A 		vmov.f32	s0, s16
 3599 0096 0120     		movs	r0, #1
 3600 0098 FFF7FEFF 		bl	Motion_FastStart
 3601              	.LVL400:
1090:Src/mode.c    ****         Motion_InRight45Turn();
 3602              		.loc 1 1090 0
 3603 009c B0EE480A 		vmov.f32	s0, s16
 3604 00a0 0120     		movs	r0, #1
 3605 00a2 FFF7FEFF 		bl	Motion_Adjust_R
 3606              	.LVL401:
1091:Src/mode.c    ****         break;
 3607              		.loc 1 1091 0
 3608 00a6 FFF7FEFF 		bl	Motion_InRight45Turn
 3609              	.LVL402:
1092:Src/mode.c    ****     default:
 3610              		.loc 1 1092 0
 3611 00aa B7E7     		b	.L292
 3612              	.L298:
1100:Src/mode.c    ****         break;
 3613              		.loc 1 1100 0
 3614 00ac FFF7FEFF 		bl	Motion_DiagonalStop
 3615              	.LVL403:
1101:Src/mode.c    ****     case LEFT:
 3616              		.loc 1 1101 0
 3617 00b0 BAE7     		b	.L296
 3618              	.L297:
1103:Src/mode.c    ****         {
 3619              		.loc 1 1103 0
 3620 00b2 5EB9     		cbnz	r6, .L303
 3621              	.L300:
1107:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3622              		.loc 1 1107 0
 3623 00b4 9FED138A 		vldr.32	s16, .L305+12
 3624 00b8 B0EE480A 		vmov.f32	s0, s16
 3625 00bc FFF7FEFF 		bl	Motion_OutLeft45Turn
 3626              	.LVL404:
1108:Src/mode.c    ****         break;
 3627              		.loc 1 1108 0
 3628 00c0 B0EE480A 		vmov.f32	s0, s16
 3629 00c4 0120     		movs	r0, #1
 3630 00c6 FFF7FEFF 		bl	Motion_FastGoal
 3631              	.LVL405:
1109:Src/mode.c    ****     case RIGHT:
 3632              		.loc 1 1109 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 88


 3633 00ca ADE7     		b	.L296
 3634              	.L303:
1105:Src/mode.c    ****         }
 3635              		.loc 1 1105 0
 3636 00cc 3046     		mov	r0, r6
 3637 00ce FFF7FEFF 		bl	Motion_DiagonalLeft
 3638              	.LVL406:
 3639 00d2 EFE7     		b	.L300
 3640              	.L299:
1111:Src/mode.c    ****         {
 3641              		.loc 1 1111 0
 3642 00d4 5EB9     		cbnz	r6, .L304
 3643              	.L301:
1115:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3644              		.loc 1 1115 0
 3645 00d6 9FED0B8A 		vldr.32	s16, .L305+12
 3646 00da B0EE480A 		vmov.f32	s0, s16
 3647 00de FFF7FEFF 		bl	Motion_OutRight45Turn
 3648              	.LVL407:
1116:Src/mode.c    ****         break;
 3649              		.loc 1 1116 0
 3650 00e2 B0EE480A 		vmov.f32	s0, s16
 3651 00e6 0120     		movs	r0, #1
 3652 00e8 FFF7FEFF 		bl	Motion_FastGoal
 3653              	.LVL408:
1117:Src/mode.c    ****     default:
 3654              		.loc 1 1117 0
 3655 00ec 9CE7     		b	.L296
 3656              	.L304:
1113:Src/mode.c    ****         }
 3657              		.loc 1 1113 0
 3658 00ee 3046     		mov	r0, r6
 3659 00f0 FFF7FEFF 		bl	Motion_DiagonalRight
 3660              	.LVL409:
 3661 00f4 EFE7     		b	.L301
 3662              	.L306:
 3663 00f6 00BF     		.align	2
 3664              	.L305:
 3665 00f8 00000000 		.word	motor_flag
 3666 00fc 00000000 		.word	loger
 3667 0100 00000000 		.word	start_address
 3668 0104 00004844 		.word	1145569280
 3669              		.cfi_endproc
 3670              	.LFE147:
 3672              		.section	.text.Turn135_Test,"ax",%progbits
 3673              		.align	1
 3674              		.global	Turn135_Test
 3675              		.syntax unified
 3676              		.thumb
 3677              		.thumb_func
 3678              		.fpu fpv4-sp-d16
 3680              	Turn135_Test:
 3681              	.LFB148:
1130:Src/mode.c    **** 
1131:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
1132:Src/mode.c    **** {
 3682              		.loc 1 1132 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 89


 3683              		.cfi_startproc
 3684              		@ args = 0, pretend = 0, frame = 0
 3685              		@ frame_needed = 0, uses_anonymous_args = 0
 3686              	.LVL410:
 3687 0000 70B5     		push	{r4, r5, r6, lr}
 3688              	.LCFI46:
 3689              		.cfi_def_cfa_offset 16
 3690              		.cfi_offset 4, -16
 3691              		.cfi_offset 5, -12
 3692              		.cfi_offset 6, -8
 3693              		.cfi_offset 14, -4
 3694 0002 2DED028B 		vpush.64	{d8}
 3695              	.LCFI47:
 3696              		.cfi_def_cfa_offset 24
 3697              		.cfi_offset 80, -24
 3698              		.cfi_offset 81, -20
 3699 0006 0546     		mov	r5, r0
 3700 0008 0C46     		mov	r4, r1
 3701 000a 1646     		mov	r6, r2
1133:Src/mode.c    ****     SetRunMode(0);
 3702              		.loc 1 1133 0
 3703 000c 0020     		movs	r0, #0
 3704              	.LVL411:
 3705 000e FFF7FEFF 		bl	SetRunMode
 3706              	.LVL412:
1134:Src/mode.c    **** 
1135:Src/mode.c    ****     switch (in_dir)
 3707              		.loc 1 1135 0
 3708 0012 012D     		cmp	r5, #1
 3709 0014 2CD0     		beq	.L309
 3710 0016 45B3     		cbz	r5, .L310
 3711 0018 022D     		cmp	r5, #2
 3712 001a 3BD0     		beq	.L311
 3713              	.L308:
1136:Src/mode.c    ****     {
1137:Src/mode.c    ****     case FRONT:
1138:Src/mode.c    ****         Motion_DiagonalStart();
1139:Src/mode.c    ****         break;
1140:Src/mode.c    ****     case LEFT:
1141:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1142:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1143:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
1144:Src/mode.c    ****         break;
1145:Src/mode.c    ****     case RIGHT:
1146:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
1147:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1148:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
1149:Src/mode.c    ****         break;
1150:Src/mode.c    ****     default:
1151:Src/mode.c    ****         break;
1152:Src/mode.c    ****     }
1153:Src/mode.c    **** 
1154:Src/mode.c    ****     switch (out_dir)
 3714              		.loc 1 1154 0
 3715 001c 012C     		cmp	r4, #1
 3716 001e 4ED0     		beq	.L313
 3717 0020 002C     		cmp	r4, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 90


 3718 0022 49D0     		beq	.L314
 3719 0024 022C     		cmp	r4, #2
 3720 0026 5AD0     		beq	.L315
 3721              	.L312:
1155:Src/mode.c    ****     {
1156:Src/mode.c    ****     case FRONT:
1157:Src/mode.c    ****         Motion_DiagonalStop();
1158:Src/mode.c    ****         break;
1159:Src/mode.c    ****     case LEFT:
1160:Src/mode.c    ****         Motion_DiagonalLeft(step);
1161:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
1162:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1163:Src/mode.c    ****         break;
1164:Src/mode.c    ****     case RIGHT:
1165:Src/mode.c    ****         Motion_DiagonalRight(step);
1166:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
1167:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
1168:Src/mode.c    ****         break;
1169:Src/mode.c    ****     default:
1170:Src/mode.c    ****         break;
1171:Src/mode.c    ****     }
1172:Src/mode.c    **** 
1173:Src/mode.c    ****     motor_flag = FALSE;
 3722              		.loc 1 1173 0
 3723 0028 0024     		movs	r4, #0
 3724 002a 354B     		ldr	r3, .L317
 3725 002c 1C70     		strb	r4, [r3]
1174:Src/mode.c    ****     HAL_Delay(500);
 3726              		.loc 1 1174 0
 3727 002e 4FF4FA70 		mov	r0, #500
 3728 0032 FFF7FEFF 		bl	HAL_Delay
 3729              	.LVL413:
1175:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3730              		.loc 1 1175 0
 3731 0036 49F64242 		movw	r2, #40002
 3732 003a 3249     		ldr	r1, .L317+4
 3733 003c 324B     		ldr	r3, .L317+8
 3734 003e 1868     		ldr	r0, [r3]
 3735 0040 FFF7FEFF 		bl	Flash_Write
 3736              	.LVL414:
1176:Src/mode.c    ****     HAL_Delay(300);
 3737              		.loc 1 1176 0
 3738 0044 4FF49670 		mov	r0, #300
 3739 0048 FFF7FEFF 		bl	HAL_Delay
 3740              	.LVL415:
1177:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3741              		.loc 1 1177 0
 3742 004c 4FF49671 		mov	r1, #300
 3743 0050 4C20     		movs	r0, #76
 3744 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 3745              	.LVL416:
1178:Src/mode.c    ****     HAL_Delay(200);
 3746              		.loc 1 1178 0
 3747 0056 C820     		movs	r0, #200
 3748 0058 FFF7FEFF 		bl	HAL_Delay
 3749              	.LVL417:
1179:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 91


 3750              		.loc 1 1179 0
 3751 005c 2146     		mov	r1, r4
 3752 005e 0A20     		movs	r0, #10
 3753 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 3754              	.LVL418:
1180:Src/mode.c    **** }
 3755              		.loc 1 1180 0
 3756 0064 BDEC028B 		vldm	sp!, {d8}
 3757              	.LCFI48:
 3758              		.cfi_remember_state
 3759              		.cfi_restore 80
 3760              		.cfi_restore 81
 3761              		.cfi_def_cfa_offset 16
 3762 0068 70BD     		pop	{r4, r5, r6, pc}
 3763              	.L310:
 3764              	.LCFI49:
 3765              		.cfi_restore_state
1138:Src/mode.c    ****         break;
 3766              		.loc 1 1138 0
 3767 006a FFF7FEFF 		bl	Motion_DiagonalStart
 3768              	.LVL419:
1139:Src/mode.c    ****     case LEFT:
 3769              		.loc 1 1139 0
 3770 006e D5E7     		b	.L308
 3771              	.L309:
1141:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
 3772              		.loc 1 1141 0
 3773 0070 9FED268A 		vldr.32	s16, .L317+12
 3774 0074 B0EE480A 		vmov.f32	s0, s16
 3775 0078 0120     		movs	r0, #1
 3776 007a FFF7FEFF 		bl	Motion_FastStart
 3777              	.LVL420:
1142:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 3778              		.loc 1 1142 0
 3779 007e B0EE480A 		vmov.f32	s0, s16
 3780 0082 0120     		movs	r0, #1
 3781 0084 FFF7FEFF 		bl	Motion_Adjust_L
 3782              	.LVL421:
1143:Src/mode.c    ****         break;
 3783              		.loc 1 1143 0
 3784 0088 B0EE480A 		vmov.f32	s0, s16
 3785 008c 0220     		movs	r0, #2
 3786 008e FFF7FEFF 		bl	Motion_FastLeftTurn
 3787              	.LVL422:
1144:Src/mode.c    ****     case RIGHT:
 3788              		.loc 1 1144 0
 3789 0092 C3E7     		b	.L308
 3790              	.L311:
1146:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 3791              		.loc 1 1146 0
 3792 0094 9FED1D8A 		vldr.32	s16, .L317+12
 3793 0098 B0EE480A 		vmov.f32	s0, s16
 3794 009c 0120     		movs	r0, #1
 3795 009e FFF7FEFF 		bl	Motion_FastStart
 3796              	.LVL423:
1147:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 3797              		.loc 1 1147 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 92


 3798 00a2 B0EE480A 		vmov.f32	s0, s16
 3799 00a6 0120     		movs	r0, #1
 3800 00a8 FFF7FEFF 		bl	Motion_Adjust_R
 3801              	.LVL424:
1148:Src/mode.c    ****         break;
 3802              		.loc 1 1148 0
 3803 00ac B0EE480A 		vmov.f32	s0, s16
 3804 00b0 0220     		movs	r0, #2
 3805 00b2 FFF7FEFF 		bl	Motion_FastRightTurn
 3806              	.LVL425:
1149:Src/mode.c    ****     default:
 3807              		.loc 1 1149 0
 3808 00b6 B1E7     		b	.L308
 3809              	.L314:
1157:Src/mode.c    ****         break;
 3810              		.loc 1 1157 0
 3811 00b8 FFF7FEFF 		bl	Motion_DiagonalStop
 3812              	.LVL426:
1158:Src/mode.c    ****     case LEFT:
 3813              		.loc 1 1158 0
 3814 00bc B4E7     		b	.L312
 3815              	.L313:
1160:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
 3816              		.loc 1 1160 0
 3817 00be 3046     		mov	r0, r6
 3818 00c0 FFF7FEFF 		bl	Motion_DiagonalLeft
 3819              	.LVL427:
1161:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3820              		.loc 1 1161 0
 3821 00c4 9FED118A 		vldr.32	s16, .L317+12
 3822 00c8 B0EE480A 		vmov.f32	s0, s16
 3823 00cc 0620     		movs	r0, #6
 3824 00ce FFF7FEFF 		bl	Motion_FastLeftTurn
 3825              	.LVL428:
1162:Src/mode.c    ****         break;
 3826              		.loc 1 1162 0
 3827 00d2 B0EE480A 		vmov.f32	s0, s16
 3828 00d6 0120     		movs	r0, #1
 3829 00d8 FFF7FEFF 		bl	Motion_FastGoal
 3830              	.LVL429:
1163:Src/mode.c    ****     case RIGHT:
 3831              		.loc 1 1163 0
 3832 00dc A4E7     		b	.L312
 3833              	.L315:
1165:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
 3834              		.loc 1 1165 0
 3835 00de 3046     		mov	r0, r6
 3836 00e0 FFF7FEFF 		bl	Motion_DiagonalRight
 3837              	.LVL430:
1166:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 3838              		.loc 1 1166 0
 3839 00e4 9FED098A 		vldr.32	s16, .L317+12
 3840 00e8 B0EE480A 		vmov.f32	s0, s16
 3841 00ec 0620     		movs	r0, #6
 3842 00ee FFF7FEFF 		bl	Motion_FastRightTurn
 3843              	.LVL431:
1167:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 93


 3844              		.loc 1 1167 0
 3845 00f2 B0EE480A 		vmov.f32	s0, s16
 3846 00f6 0120     		movs	r0, #1
 3847 00f8 FFF7FEFF 		bl	Motion_FastGoal
 3848              	.LVL432:
1168:Src/mode.c    ****     default:
 3849              		.loc 1 1168 0
 3850 00fc 94E7     		b	.L312
 3851              	.L318:
 3852 00fe 00BF     		.align	2
 3853              	.L317:
 3854 0100 00000000 		.word	motor_flag
 3855 0104 00000000 		.word	loger
 3856 0108 00000000 		.word	start_address
 3857 010c 00004844 		.word	1145569280
 3858              		.cfi_endproc
 3859              	.LFE148:
 3861              		.section	.text.TurnBig90_Test,"ax",%progbits
 3862              		.align	1
 3863              		.global	TurnBig90_Test
 3864              		.syntax unified
 3865              		.thumb
 3866              		.thumb_func
 3867              		.fpu fpv4-sp-d16
 3869              	TurnBig90_Test:
 3870              	.LFB149:
1181:Src/mode.c    **** 
1182:Src/mode.c    **** void TurnBig90_Test(int8_t dir)
1183:Src/mode.c    **** {
 3871              		.loc 1 1183 0
 3872              		.cfi_startproc
 3873              		@ args = 0, pretend = 0, frame = 0
 3874              		@ frame_needed = 0, uses_anonymous_args = 0
 3875              	.LVL433:
 3876 0000 10B5     		push	{r4, lr}
 3877              	.LCFI50:
 3878              		.cfi_def_cfa_offset 8
 3879              		.cfi_offset 4, -8
 3880              		.cfi_offset 14, -4
 3881 0002 2DED028B 		vpush.64	{d8}
 3882              	.LCFI51:
 3883              		.cfi_def_cfa_offset 16
 3884              		.cfi_offset 80, -16
 3885              		.cfi_offset 81, -12
 3886 0006 0446     		mov	r4, r0
1184:Src/mode.c    ****     SetRunMode(0);
 3887              		.loc 1 1184 0
 3888 0008 0020     		movs	r0, #0
 3889              	.LVL434:
 3890 000a FFF7FEFF 		bl	SetRunMode
 3891              	.LVL435:
1185:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3892              		.loc 1 1185 0
 3893 000e 9FED1C0A 		vldr.32	s0, .L325
 3894 0012 0120     		movs	r0, #1
 3895 0014 FFF7FEFF 		bl	Motion_FastStart
 3896              	.LVL436:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 94


1186:Src/mode.c    ****     if (dir == LEFT)
 3897              		.loc 1 1186 0
 3898 0018 012C     		cmp	r4, #1
 3899 001a 18D0     		beq	.L323
1187:Src/mode.c    ****     {
1188:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1189:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
1190:Src/mode.c    ****     }
1191:Src/mode.c    ****     else if (dir == RIGHT)
 3900              		.loc 1 1191 0
 3901 001c 022C     		cmp	r4, #2
 3902 001e 22D0     		beq	.L324
 3903              	.L321:
1192:Src/mode.c    ****     {
1193:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1194:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
1195:Src/mode.c    ****     }
1196:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3904              		.loc 1 1196 0
 3905 0020 9FED170A 		vldr.32	s0, .L325
 3906 0024 0120     		movs	r0, #1
 3907 0026 FFF7FEFF 		bl	Motion_FastGoal
 3908              	.LVL437:
1197:Src/mode.c    ****     motor_flag = FALSE;
 3909              		.loc 1 1197 0
 3910 002a 0024     		movs	r4, #0
 3911 002c 154B     		ldr	r3, .L325+4
 3912 002e 1C70     		strb	r4, [r3]
1198:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3913              		.loc 1 1198 0
 3914 0030 4FF49671 		mov	r1, #300
 3915 0034 4C20     		movs	r0, #76
 3916 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 3917              	.LVL438:
1199:Src/mode.c    ****     HAL_Delay(200);
 3918              		.loc 1 1199 0
 3919 003a C820     		movs	r0, #200
 3920 003c FFF7FEFF 		bl	HAL_Delay
 3921              	.LVL439:
1200:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3922              		.loc 1 1200 0
 3923 0040 2146     		mov	r1, r4
 3924 0042 0A20     		movs	r0, #10
 3925 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 3926              	.LVL440:
1201:Src/mode.c    **** }
 3927              		.loc 1 1201 0
 3928 0048 BDEC028B 		vldm	sp!, {d8}
 3929              	.LCFI52:
 3930              		.cfi_remember_state
 3931              		.cfi_restore 80
 3932              		.cfi_restore 81
 3933              		.cfi_def_cfa_offset 8
 3934 004c 10BD     		pop	{r4, pc}
 3935              	.L323:
 3936              	.LCFI53:
 3937              		.cfi_restore_state
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 95


1188:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
 3938              		.loc 1 1188 0
 3939 004e 9FED0C8A 		vldr.32	s16, .L325
 3940 0052 B0EE480A 		vmov.f32	s0, s16
 3941 0056 0120     		movs	r0, #1
 3942 0058 FFF7FEFF 		bl	Motion_Adjust_L
 3943              	.LVL441:
1189:Src/mode.c    ****     }
 3944              		.loc 1 1189 0
 3945 005c B0EE480A 		vmov.f32	s0, s16
 3946 0060 FFF7FEFF 		bl	Motion_Left90Turn
 3947              	.LVL442:
 3948 0064 DCE7     		b	.L321
 3949              	.L324:
1193:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
 3950              		.loc 1 1193 0
 3951 0066 9FED068A 		vldr.32	s16, .L325
 3952 006a B0EE480A 		vmov.f32	s0, s16
 3953 006e 0120     		movs	r0, #1
 3954 0070 FFF7FEFF 		bl	Motion_Adjust_R
 3955              	.LVL443:
1194:Src/mode.c    ****     }
 3956              		.loc 1 1194 0
 3957 0074 B0EE480A 		vmov.f32	s0, s16
 3958 0078 FFF7FEFF 		bl	Motion_Right90Turn
 3959              	.LVL444:
 3960 007c D0E7     		b	.L321
 3961              	.L326:
 3962 007e 00BF     		.align	2
 3963              	.L325:
 3964 0080 00004844 		.word	1145569280
 3965 0084 00000000 		.word	motor_flag
 3966              		.cfi_endproc
 3967              	.LFE149:
 3969              		.section	.text.TurnBig180_Test,"ax",%progbits
 3970              		.align	1
 3971              		.global	TurnBig180_Test
 3972              		.syntax unified
 3973              		.thumb
 3974              		.thumb_func
 3975              		.fpu fpv4-sp-d16
 3977              	TurnBig180_Test:
 3978              	.LFB150:
1202:Src/mode.c    **** 
1203:Src/mode.c    **** void TurnBig180_Test(int8_t dir)
1204:Src/mode.c    **** {
 3979              		.loc 1 1204 0
 3980              		.cfi_startproc
 3981              		@ args = 0, pretend = 0, frame = 0
 3982              		@ frame_needed = 0, uses_anonymous_args = 0
 3983              	.LVL445:
 3984 0000 10B5     		push	{r4, lr}
 3985              	.LCFI54:
 3986              		.cfi_def_cfa_offset 8
 3987              		.cfi_offset 4, -8
 3988              		.cfi_offset 14, -4
 3989 0002 2DED028B 		vpush.64	{d8}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 96


 3990              	.LCFI55:
 3991              		.cfi_def_cfa_offset 16
 3992              		.cfi_offset 80, -16
 3993              		.cfi_offset 81, -12
 3994 0006 0446     		mov	r4, r0
1205:Src/mode.c    ****     SetRunMode(0);
 3995              		.loc 1 1205 0
 3996 0008 0020     		movs	r0, #0
 3997              	.LVL446:
 3998 000a FFF7FEFF 		bl	SetRunMode
 3999              	.LVL447:
1206:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 4000              		.loc 1 1206 0
 4001 000e 9FED1F8A 		vldr.32	s16, .L333
 4002 0012 B0EE480A 		vmov.f32	s0, s16
 4003 0016 0120     		movs	r0, #1
 4004 0018 FFF7FEFF 		bl	Motion_FastStart
 4005              	.LVL448:
1207:Src/mode.c    ****     Motion_Adjust(1, VELO_F);
 4006              		.loc 1 1207 0
 4007 001c B0EE480A 		vmov.f32	s0, s16
 4008 0020 0120     		movs	r0, #1
 4009 0022 FFF7FEFF 		bl	Motion_Adjust
 4010              	.LVL449:
1208:Src/mode.c    ****     if (dir == LEFT)
 4011              		.loc 1 1208 0
 4012 0026 012C     		cmp	r4, #1
 4013 0028 18D0     		beq	.L331
1209:Src/mode.c    ****     {
1210:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1211:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
1212:Src/mode.c    ****     }
1213:Src/mode.c    ****     else if (dir == RIGHT)
 4014              		.loc 1 1213 0
 4015 002a 022C     		cmp	r4, #2
 4016 002c 21D0     		beq	.L332
 4017              	.L329:
1214:Src/mode.c    ****     {
1215:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
1216:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
1217:Src/mode.c    ****     }
1218:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 4018              		.loc 1 1218 0
 4019 002e 9FED170A 		vldr.32	s0, .L333
 4020 0032 0120     		movs	r0, #1
 4021 0034 FFF7FEFF 		bl	Motion_FastGoal
 4022              	.LVL450:
1219:Src/mode.c    ****     motor_flag = FALSE;
 4023              		.loc 1 1219 0
 4024 0038 0024     		movs	r4, #0
 4025 003a 154B     		ldr	r3, .L333+4
 4026 003c 1C70     		strb	r4, [r3]
1220:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4027              		.loc 1 1220 0
 4028 003e 4FF49671 		mov	r1, #300
 4029 0042 4C20     		movs	r0, #76
 4030 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 97


 4031              	.LVL451:
1221:Src/mode.c    ****     HAL_Delay(200);
 4032              		.loc 1 1221 0
 4033 0048 C820     		movs	r0, #200
 4034 004a FFF7FEFF 		bl	HAL_Delay
 4035              	.LVL452:
1222:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4036              		.loc 1 1222 0
 4037 004e 2146     		mov	r1, r4
 4038 0050 0A20     		movs	r0, #10
 4039 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 4040              	.LVL453:
1223:Src/mode.c    **** }
 4041              		.loc 1 1223 0
 4042 0056 BDEC028B 		vldm	sp!, {d8}
 4043              	.LCFI56:
 4044              		.cfi_remember_state
 4045              		.cfi_restore 80
 4046              		.cfi_restore 81
 4047              		.cfi_def_cfa_offset 8
 4048 005a 10BD     		pop	{r4, pc}
 4049              	.L331:
 4050              	.LCFI57:
 4051              		.cfi_restore_state
1210:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
 4052              		.loc 1 1210 0
 4053 005c B0EE480A 		vmov.f32	s0, s16
 4054 0060 0120     		movs	r0, #1
 4055 0062 FFF7FEFF 		bl	Motion_Adjust_L
 4056              	.LVL454:
1211:Src/mode.c    ****     }
 4057              		.loc 1 1211 0
 4058 0066 B0EE480A 		vmov.f32	s0, s16
 4059 006a 0420     		movs	r0, #4
 4060 006c FFF7FEFF 		bl	Motion_FastLeftTurn
 4061              	.LVL455:
 4062 0070 DDE7     		b	.L329
 4063              	.L332:
1215:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
 4064              		.loc 1 1215 0
 4065 0072 9FED068A 		vldr.32	s16, .L333
 4066 0076 B0EE480A 		vmov.f32	s0, s16
 4067 007a 0120     		movs	r0, #1
 4068 007c FFF7FEFF 		bl	Motion_Adjust_R
 4069              	.LVL456:
1216:Src/mode.c    ****     }
 4070              		.loc 1 1216 0
 4071 0080 B0EE480A 		vmov.f32	s0, s16
 4072 0084 0420     		movs	r0, #4
 4073 0086 FFF7FEFF 		bl	Motion_FastRightTurn
 4074              	.LVL457:
 4075 008a D0E7     		b	.L329
 4076              	.L334:
 4077              		.align	2
 4078              	.L333:
 4079 008c 00004844 		.word	1145569280
 4080 0090 00000000 		.word	motor_flag
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 98


 4081              		.cfi_endproc
 4082              	.LFE150:
 4084              		.section	.text.TurnV90_Test,"ax",%progbits
 4085              		.align	1
 4086              		.global	TurnV90_Test
 4087              		.syntax unified
 4088              		.thumb
 4089              		.thumb_func
 4090              		.fpu fpv4-sp-d16
 4092              	TurnV90_Test:
 4093              	.LFB151:
1224:Src/mode.c    **** 
1225:Src/mode.c    **** void TurnV90_Test(int8_t dir)
1226:Src/mode.c    **** {
 4094              		.loc 1 1226 0
 4095              		.cfi_startproc
 4096              		@ args = 0, pretend = 0, frame = 0
 4097              		@ frame_needed = 0, uses_anonymous_args = 0
 4098              	.LVL458:
 4099 0000 10B5     		push	{r4, lr}
 4100              	.LCFI58:
 4101              		.cfi_def_cfa_offset 8
 4102              		.cfi_offset 4, -8
 4103              		.cfi_offset 14, -4
 4104 0002 2DED028B 		vpush.64	{d8}
 4105              	.LCFI59:
 4106              		.cfi_def_cfa_offset 16
 4107              		.cfi_offset 80, -16
 4108              		.cfi_offset 81, -12
 4109 0006 0446     		mov	r4, r0
1227:Src/mode.c    ****     SetRunMode(0);
 4110              		.loc 1 1227 0
 4111 0008 0020     		movs	r0, #0
 4112              	.LVL459:
 4113 000a FFF7FEFF 		bl	SetRunMode
 4114              	.LVL460:
1228:Src/mode.c    ****     Motion_DiagonalStart();
 4115              		.loc 1 1228 0
 4116 000e FFF7FEFF 		bl	Motion_DiagonalStart
 4117              	.LVL461:
1229:Src/mode.c    **** 
1230:Src/mode.c    ****     if (dir == LEFT)
 4118              		.loc 1 1230 0
 4119 0012 012C     		cmp	r4, #1
 4120 0014 1FD0     		beq	.L339
1231:Src/mode.c    ****     {
1232:Src/mode.c    ****         Motion_Adjust_L(1, VELO_F);
1233:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
1234:Src/mode.c    ****     }
1235:Src/mode.c    ****     else
1236:Src/mode.c    ****     {
1237:Src/mode.c    ****         Motion_Adjust_R(1, VELO_F);
 4121              		.loc 1 1237 0
 4122 0016 9FED168A 		vldr.32	s16, .L340
 4123 001a B0EE480A 		vmov.f32	s0, s16
 4124 001e 0120     		movs	r0, #1
 4125 0020 FFF7FEFF 		bl	Motion_Adjust_R
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 99


 4126              	.LVL462:
1238:Src/mode.c    ****         Motion_FastRightTurn(T_V90, 800.0f);
 4127              		.loc 1 1238 0
 4128 0024 B0EE480A 		vmov.f32	s0, s16
 4129 0028 0720     		movs	r0, #7
 4130 002a FFF7FEFF 		bl	Motion_FastRightTurn
 4131              	.LVL463:
 4132              	.L337:
1239:Src/mode.c    ****     }
1240:Src/mode.c    ****     Motion_DiagonalStop();
 4133              		.loc 1 1240 0
 4134 002e FFF7FEFF 		bl	Motion_DiagonalStop
 4135              	.LVL464:
1241:Src/mode.c    ****     motor_flag = FALSE;
 4136              		.loc 1 1241 0
 4137 0032 0024     		movs	r4, #0
 4138 0034 0F4B     		ldr	r3, .L340+4
 4139 0036 1C70     		strb	r4, [r3]
1242:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4140              		.loc 1 1242 0
 4141 0038 4FF49671 		mov	r1, #300
 4142 003c 4C20     		movs	r0, #76
 4143 003e FFF7FEFF 		bl	Tim_BuzzerPwm
 4144              	.LVL465:
1243:Src/mode.c    ****     HAL_Delay(200);
 4145              		.loc 1 1243 0
 4146 0042 C820     		movs	r0, #200
 4147 0044 FFF7FEFF 		bl	HAL_Delay
 4148              	.LVL466:
1244:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4149              		.loc 1 1244 0
 4150 0048 2146     		mov	r1, r4
 4151 004a 0A20     		movs	r0, #10
 4152 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 4153              	.LVL467:
1245:Src/mode.c    **** }
 4154              		.loc 1 1245 0
 4155 0050 BDEC028B 		vldm	sp!, {d8}
 4156              	.LCFI60:
 4157              		.cfi_remember_state
 4158              		.cfi_restore 80
 4159              		.cfi_restore 81
 4160              		.cfi_def_cfa_offset 8
 4161 0054 10BD     		pop	{r4, pc}
 4162              	.L339:
 4163              	.LCFI61:
 4164              		.cfi_restore_state
1232:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 4165              		.loc 1 1232 0
 4166 0056 9FED068A 		vldr.32	s16, .L340
 4167 005a B0EE480A 		vmov.f32	s0, s16
 4168 005e 0120     		movs	r0, #1
 4169 0060 FFF7FEFF 		bl	Motion_Adjust_L
 4170              	.LVL468:
1233:Src/mode.c    ****     }
 4171              		.loc 1 1233 0
 4172 0064 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 100


 4173 0068 0720     		movs	r0, #7
 4174 006a FFF7FEFF 		bl	Motion_FastLeftTurn
 4175              	.LVL469:
 4176 006e DEE7     		b	.L337
 4177              	.L341:
 4178              		.align	2
 4179              	.L340:
 4180 0070 00004844 		.word	1145569280
 4181 0074 00000000 		.word	motor_flag
 4182              		.cfi_endproc
 4183              	.LFE151:
 4185              		.section	.text.FastestTurnTest,"ax",%progbits
 4186              		.align	1
 4187              		.global	FastestTurnTest
 4188              		.syntax unified
 4189              		.thumb
 4190              		.thumb_func
 4191              		.fpu fpv4-sp-d16
 4193              	FastestTurnTest:
 4194              	.LFB152:
1246:Src/mode.c    **** 
1247:Src/mode.c    **** void FastestTurnTest(uint8_t dir, uint8_t deg)
1248:Src/mode.c    **** {
 4195              		.loc 1 1248 0
 4196              		.cfi_startproc
 4197              		@ args = 0, pretend = 0, frame = 0
 4198              		@ frame_needed = 0, uses_anonymous_args = 0
 4199              	.LVL470:
 4200 0000 38B5     		push	{r3, r4, r5, lr}
 4201              	.LCFI62:
 4202              		.cfi_def_cfa_offset 16
 4203              		.cfi_offset 3, -16
 4204              		.cfi_offset 4, -12
 4205              		.cfi_offset 5, -8
 4206              		.cfi_offset 14, -4
 4207 0002 2DED028B 		vpush.64	{d8}
 4208              	.LCFI63:
 4209              		.cfi_def_cfa_offset 24
 4210              		.cfi_offset 80, -24
 4211              		.cfi_offset 81, -20
 4212 0006 0546     		mov	r5, r0
 4213 0008 0C46     		mov	r4, r1
1249:Src/mode.c    ****     SetRunMode(1);
 4214              		.loc 1 1249 0
 4215 000a 0120     		movs	r0, #1
 4216              	.LVL471:
 4217 000c FFF7FEFF 		bl	SetRunMode
 4218              	.LVL472:
1250:Src/mode.c    ****     enc.distance = 0;
 4219              		.loc 1 1250 0
 4220 0010 714B     		ldr	r3, .L358
 4221 0012 0022     		movs	r2, #0
 4222 0014 1A60     		str	r2, [r3]	@ float
1251:Src/mode.c    ****     switch (deg)
 4223              		.loc 1 1251 0
 4224 0016 042C     		cmp	r4, #4
 4225 0018 00F2AD80 		bhi	.L343
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 101


 4226 001c DFE804F0 		tbb	[pc, r4]
 4227              	.L345:
 4228 0020 03       		.byte	(.L344-.L345)/2
 4229 0021 93       		.byte	(.L346-.L345)/2
 4230 0022 AB       		.byte	(.L343-.L345)/2
 4231 0023 33       		.byte	(.L347-.L345)/2
 4232 0024 63       		.byte	(.L348-.L345)/2
 4233 0025 00       		.p2align 1
 4234              	.L344:
1252:Src/mode.c    ****     {
1253:Src/mode.c    ****     case SEARCH:
1254:Src/mode.c    ****         if (dir == 1)
 4235              		.loc 1 1254 0
 4236 0026 012D     		cmp	r5, #1
 4237 0028 16D0     		beq	.L354
1255:Src/mode.c    ****         {
1256:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
1257:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1258:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1259:Src/mode.c    ****             motor_flag = FALSE;
1260:Src/mode.c    ****             Tim_FanPwm(0);
1261:Src/mode.c    ****         }
1262:Src/mode.c    ****         else
1263:Src/mode.c    ****         {
1264:Src/mode.c    ****             Motion_FastestStart(3, VELO_EST);
 4238              		.loc 1 1264 0
 4239 002a 9FED6C8A 		vldr.32	s16, .L358+4
 4240 002e B0EE480A 		vmov.f32	s0, s16
 4241 0032 0320     		movs	r0, #3
 4242 0034 FFF7FEFF 		bl	Motion_FastestStart
 4243              	.LVL473:
1265:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4244              		.loc 1 1265 0
 4245 0038 B0EE480A 		vmov.f32	s0, s16
 4246 003c 2046     		mov	r0, r4
 4247 003e FFF7FEFF 		bl	Motion_FastestRightTurn
 4248              	.LVL474:
1266:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4249              		.loc 1 1266 0
 4250 0042 B0EE480A 		vmov.f32	s0, s16
 4251 0046 0220     		movs	r0, #2
 4252 0048 FFF7FEFF 		bl	Motion_FastestGoal
 4253              	.LVL475:
1267:Src/mode.c    ****             motor_flag = FALSE;
 4254              		.loc 1 1267 0
 4255 004c 0020     		movs	r0, #0
 4256 004e 644B     		ldr	r3, .L358+8
 4257 0050 1870     		strb	r0, [r3]
1268:Src/mode.c    ****             Tim_FanPwm(0);
 4258              		.loc 1 1268 0
 4259 0052 FFF7FEFF 		bl	Tim_FanPwm
 4260              	.LVL476:
 4261 0056 8EE0     		b	.L343
 4262              	.L354:
1256:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4263              		.loc 1 1256 0
 4264 0058 9FED608A 		vldr.32	s16, .L358+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 102


 4265 005c B0EE480A 		vmov.f32	s0, s16
 4266 0060 0320     		movs	r0, #3
 4267 0062 FFF7FEFF 		bl	Motion_FastestStart
 4268              	.LVL477:
1257:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4269              		.loc 1 1257 0
 4270 0066 B0EE480A 		vmov.f32	s0, s16
 4271 006a 2046     		mov	r0, r4
 4272 006c FFF7FEFF 		bl	Motion_FastestLeftTurn
 4273              	.LVL478:
1258:Src/mode.c    ****             motor_flag = FALSE;
 4274              		.loc 1 1258 0
 4275 0070 B0EE480A 		vmov.f32	s0, s16
 4276 0074 0220     		movs	r0, #2
 4277 0076 FFF7FEFF 		bl	Motion_FastestGoal
 4278              	.LVL479:
1259:Src/mode.c    ****             Tim_FanPwm(0);
 4279              		.loc 1 1259 0
 4280 007a 0020     		movs	r0, #0
 4281 007c 584B     		ldr	r3, .L358+8
 4282 007e 1870     		strb	r0, [r3]
1260:Src/mode.c    ****         }
 4283              		.loc 1 1260 0
 4284 0080 FFF7FEFF 		bl	Tim_FanPwm
 4285              	.LVL480:
 4286 0084 77E0     		b	.L343
 4287              	.L347:
1269:Src/mode.c    ****         }
1270:Src/mode.c    ****         break;
1271:Src/mode.c    ****     case T_90:
1272:Src/mode.c    ****         if (dir == 1)
 4288              		.loc 1 1272 0
 4289 0086 012D     		cmp	r5, #1
 4290 0088 16D0     		beq	.L355
1273:Src/mode.c    ****         {
1274:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1275:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1276:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
1277:Src/mode.c    ****             motor_flag = FALSE;
1278:Src/mode.c    ****             Tim_FanPwm(0);
1279:Src/mode.c    ****         }
1280:Src/mode.c    ****         else
1281:Src/mode.c    ****         {
1282:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4291              		.loc 1 1282 0
 4292 008a 9FED548A 		vldr.32	s16, .L358+4
 4293 008e B0EE480A 		vmov.f32	s0, s16
 4294 0092 0420     		movs	r0, #4
 4295 0094 FFF7FEFF 		bl	Motion_FastestStart
 4296              	.LVL481:
1283:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4297              		.loc 1 1283 0
 4298 0098 B0EE480A 		vmov.f32	s0, s16
 4299 009c 2046     		mov	r0, r4
 4300 009e FFF7FEFF 		bl	Motion_FastestRightTurn
 4301              	.LVL482:
1284:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 103


 4302              		.loc 1 1284 0
 4303 00a2 B0EE480A 		vmov.f32	s0, s16
 4304 00a6 0220     		movs	r0, #2
 4305 00a8 FFF7FEFF 		bl	Motion_FastestGoal
 4306              	.LVL483:
1285:Src/mode.c    ****             motor_flag = FALSE;
 4307              		.loc 1 1285 0
 4308 00ac 0020     		movs	r0, #0
 4309 00ae 4C4B     		ldr	r3, .L358+8
 4310 00b0 1870     		strb	r0, [r3]
1286:Src/mode.c    ****             Tim_FanPwm(0);
 4311              		.loc 1 1286 0
 4312 00b2 FFF7FEFF 		bl	Tim_FanPwm
 4313              	.LVL484:
 4314 00b6 5EE0     		b	.L343
 4315              	.L355:
1274:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4316              		.loc 1 1274 0
 4317 00b8 9FED488A 		vldr.32	s16, .L358+4
 4318 00bc B0EE480A 		vmov.f32	s0, s16
 4319 00c0 0420     		movs	r0, #4
 4320 00c2 FFF7FEFF 		bl	Motion_FastestStart
 4321              	.LVL485:
1275:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4322              		.loc 1 1275 0
 4323 00c6 B0EE480A 		vmov.f32	s0, s16
 4324 00ca 2046     		mov	r0, r4
 4325 00cc FFF7FEFF 		bl	Motion_FastestLeftTurn
 4326              	.LVL486:
1276:Src/mode.c    ****             motor_flag = FALSE;
 4327              		.loc 1 1276 0
 4328 00d0 B0EE480A 		vmov.f32	s0, s16
 4329 00d4 0220     		movs	r0, #2
 4330 00d6 FFF7FEFF 		bl	Motion_FastestGoal
 4331              	.LVL487:
1277:Src/mode.c    ****             Tim_FanPwm(0);
 4332              		.loc 1 1277 0
 4333 00da 0020     		movs	r0, #0
 4334 00dc 404B     		ldr	r3, .L358+8
 4335 00de 1870     		strb	r0, [r3]
1278:Src/mode.c    ****         }
 4336              		.loc 1 1278 0
 4337 00e0 FFF7FEFF 		bl	Tim_FanPwm
 4338              	.LVL488:
 4339 00e4 47E0     		b	.L343
 4340              	.L348:
1287:Src/mode.c    ****         }
1288:Src/mode.c    ****         break;
1289:Src/mode.c    ****     case T_180:
1290:Src/mode.c    ****         if (dir == 1)
 4341              		.loc 1 1290 0
 4342 00e6 012D     		cmp	r5, #1
 4343 00e8 16D0     		beq	.L356
1291:Src/mode.c    ****         {
1292:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1293:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1294:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 104


1295:Src/mode.c    ****             motor_flag = FALSE;
1296:Src/mode.c    ****             Tim_FanPwm(0);
1297:Src/mode.c    ****         }
1298:Src/mode.c    ****         else
1299:Src/mode.c    ****         {
1300:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4344              		.loc 1 1300 0
 4345 00ea 9FED3C8A 		vldr.32	s16, .L358+4
 4346 00ee B0EE480A 		vmov.f32	s0, s16
 4347 00f2 0420     		movs	r0, #4
 4348 00f4 FFF7FEFF 		bl	Motion_FastestStart
 4349              	.LVL489:
1301:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4350              		.loc 1 1301 0
 4351 00f8 B0EE480A 		vmov.f32	s0, s16
 4352 00fc 2046     		mov	r0, r4
 4353 00fe FFF7FEFF 		bl	Motion_FastestRightTurn
 4354              	.LVL490:
1302:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4355              		.loc 1 1302 0
 4356 0102 B0EE480A 		vmov.f32	s0, s16
 4357 0106 0220     		movs	r0, #2
 4358 0108 FFF7FEFF 		bl	Motion_FastestGoal
 4359              	.LVL491:
1303:Src/mode.c    ****             motor_flag = FALSE;
 4360              		.loc 1 1303 0
 4361 010c 0020     		movs	r0, #0
 4362 010e 344B     		ldr	r3, .L358+8
 4363 0110 1870     		strb	r0, [r3]
1304:Src/mode.c    ****             Tim_FanPwm(0);
 4364              		.loc 1 1304 0
 4365 0112 FFF7FEFF 		bl	Tim_FanPwm
 4366              	.LVL492:
 4367 0116 2EE0     		b	.L343
 4368              	.L356:
1292:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4369              		.loc 1 1292 0
 4370 0118 9FED308A 		vldr.32	s16, .L358+4
 4371 011c B0EE480A 		vmov.f32	s0, s16
 4372 0120 0420     		movs	r0, #4
 4373 0122 FFF7FEFF 		bl	Motion_FastestStart
 4374              	.LVL493:
1293:Src/mode.c    ****             Motion_FastestGoal(2, VELO_EST);
 4375              		.loc 1 1293 0
 4376 0126 B0EE480A 		vmov.f32	s0, s16
 4377 012a 2046     		mov	r0, r4
 4378 012c FFF7FEFF 		bl	Motion_FastestLeftTurn
 4379              	.LVL494:
1294:Src/mode.c    ****             motor_flag = FALSE;
 4380              		.loc 1 1294 0
 4381 0130 B0EE480A 		vmov.f32	s0, s16
 4382 0134 0220     		movs	r0, #2
 4383 0136 FFF7FEFF 		bl	Motion_FastestGoal
 4384              	.LVL495:
1295:Src/mode.c    ****             Tim_FanPwm(0);
 4385              		.loc 1 1295 0
 4386 013a 0020     		movs	r0, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 105


 4387 013c 284B     		ldr	r3, .L358+8
 4388 013e 1870     		strb	r0, [r3]
1296:Src/mode.c    ****         }
 4389              		.loc 1 1296 0
 4390 0140 FFF7FEFF 		bl	Tim_FanPwm
 4391              	.LVL496:
 4392 0144 17E0     		b	.L343
 4393              	.L346:
1305:Src/mode.c    ****         }
1306:Src/mode.c    ****         break;
1307:Src/mode.c    ****     case T_45IN:
1308:Src/mode.c    ****         if (dir == 1)
 4394              		.loc 1 1308 0
 4395 0146 012D     		cmp	r5, #1
 4396 0148 2FD0     		beq	.L357
1309:Src/mode.c    ****         {
1310:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
1311:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
1312:Src/mode.c    ****             Motion_FastestGoal(1, VELO_EST);
1313:Src/mode.c    ****             motor_flag = FALSE;
1314:Src/mode.c    ****             Tim_FanPwm(0);
1315:Src/mode.c    ****         }
1316:Src/mode.c    ****         else
1317:Src/mode.c    ****         {
1318:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4397              		.loc 1 1318 0
 4398 014a 9FED248A 		vldr.32	s16, .L358+4
 4399 014e B0EE480A 		vmov.f32	s0, s16
 4400 0152 0420     		movs	r0, #4
 4401 0154 FFF7FEFF 		bl	Motion_FastestStart
 4402              	.LVL497:
1319:Src/mode.c    ****             Motion_FastestRightTurn(deg, VELO_EST);
 4403              		.loc 1 1319 0
 4404 0158 B0EE480A 		vmov.f32	s0, s16
 4405 015c 2046     		mov	r0, r4
 4406 015e FFF7FEFF 		bl	Motion_FastestRightTurn
 4407              	.LVL498:
1320:Src/mode.c    ****             Motion_FastestGoal(1, VELO_EST);
 4408              		.loc 1 1320 0
 4409 0162 B0EE480A 		vmov.f32	s0, s16
 4410 0166 0120     		movs	r0, #1
 4411 0168 FFF7FEFF 		bl	Motion_FastestGoal
 4412              	.LVL499:
1321:Src/mode.c    ****             motor_flag = FALSE;
 4413              		.loc 1 1321 0
 4414 016c 0020     		movs	r0, #0
 4415 016e 1C4B     		ldr	r3, .L358+8
 4416 0170 1870     		strb	r0, [r3]
1322:Src/mode.c    ****             Tim_FanPwm(0);
 4417              		.loc 1 1322 0
 4418 0172 FFF7FEFF 		bl	Tim_FanPwm
 4419              	.LVL500:
 4420              	.L343:
1323:Src/mode.c    ****         }
1324:Src/mode.c    ****         break;
1325:Src/mode.c    ****     default:
1326:Src/mode.c    ****     break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 106


1327:Src/mode.c    ****     }
1328:Src/mode.c    **** 
1329:Src/mode.c    ****     HAL_Delay(500);
 4421              		.loc 1 1329 0
 4422 0176 4FF4FA70 		mov	r0, #500
 4423 017a FFF7FEFF 		bl	HAL_Delay
 4424              	.LVL501:
1330:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4425              		.loc 1 1330 0
 4426 017e 49F64242 		movw	r2, #40002
 4427 0182 1849     		ldr	r1, .L358+12
 4428 0184 184B     		ldr	r3, .L358+16
 4429 0186 1868     		ldr	r0, [r3]
 4430 0188 FFF7FEFF 		bl	Flash_Write
 4431              	.LVL502:
1331:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 4432              		.loc 1 1331 0
 4433 018c 4FF49671 		mov	r1, #300
 4434 0190 4C20     		movs	r0, #76
 4435 0192 FFF7FEFF 		bl	Tim_BuzzerPwm
 4436              	.LVL503:
1332:Src/mode.c    ****     HAL_Delay(200);
 4437              		.loc 1 1332 0
 4438 0196 C820     		movs	r0, #200
 4439 0198 FFF7FEFF 		bl	HAL_Delay
 4440              	.LVL504:
1333:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 4441              		.loc 1 1333 0
 4442 019c 0021     		movs	r1, #0
 4443 019e 0A20     		movs	r0, #10
 4444 01a0 FFF7FEFF 		bl	Tim_BuzzerPwm
 4445              	.LVL505:
1334:Src/mode.c    **** }...
 4446              		.loc 1 1334 0
 4447 01a4 BDEC028B 		vldm	sp!, {d8}
 4448              	.LCFI64:
 4449              		.cfi_remember_state
 4450              		.cfi_restore 80
 4451              		.cfi_restore 81
 4452              		.cfi_def_cfa_offset 16
 4453 01a8 38BD     		pop	{r3, r4, r5, pc}
 4454              	.L357:
 4455              	.LCFI65:
 4456              		.cfi_restore_state
1310:Src/mode.c    ****             Motion_FastestStart(4, VELO_EST);
 4457              		.loc 1 1310 0
 4458 01aa 9FED0C8A 		vldr.32	s16, .L358+4
 4459 01ae B0EE480A 		vmov.f32	s0, s16
 4460 01b2 0420     		movs	r0, #4
 4461 01b4 FFF7FEFF 		bl	Motion_FastestStart
 4462              	.LVL506:
1311:Src/mode.c    ****             Motion_FastestLeftTurn(deg, VELO_EST);
 4463              		.loc 1 1311 0
 4464 01b8 B0EE480A 		vmov.f32	s0, s16
 4465 01bc 2046     		mov	r0, r4
 4466 01be FFF7FEFF 		bl	Motion_FastestLeftTurn
 4467              	.LVL507:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 107


1312:Src/mode.c    ****             Motion_FastestGoal(1, VELO_EST);
 4468              		.loc 1 1312 0
 4469 01c2 B0EE480A 		vmov.f32	s0, s16
 4470 01c6 0120     		movs	r0, #1
 4471 01c8 FFF7FEFF 		bl	Motion_FastestGoal
 4472              	.LVL508:
1313:Src/mode.c    ****             motor_flag = FALSE;
 4473              		.loc 1 1313 0
 4474 01cc 0020     		movs	r0, #0
 4475 01ce 044B     		ldr	r3, .L358+8
 4476 01d0 1870     		strb	r0, [r3]
1314:Src/mode.c    ****             Tim_FanPwm(0);
 4477              		.loc 1 1314 0
 4478 01d2 FFF7FEFF 		bl	Tim_FanPwm
 4479              	.LVL509:
 4480 01d6 CEE7     		b	.L343
 4481              	.L359:
 4482              		.align	2
 4483              	.L358:
 4484 01d8 00000000 		.word	enc
 4485 01dc 00009644 		.word	1150681088
 4486 01e0 00000000 		.word	motor_flag
 4487 01e4 00000000 		.word	loger
 4488 01e8 00000000 		.word	start_address
 4489              		.cfi_endproc
 4490              	.LFE152:
 4492              		.section	.text.Mode_Mouse,"ax",%progbits
 4493              		.align	1
 4494              		.global	Mode_Mouse
 4495              		.syntax unified
 4496              		.thumb
 4497              		.thumb_func
 4498              		.fpu fpv4-sp-d16
 4500              	Mode_Mouse:
 4501              	.LFB126:
  68:Src/mode.c    **** {
 4502              		.loc 1 68 0
 4503              		.cfi_startproc
 4504              		@ args = 0, pretend = 0, frame = 0
 4505              		@ frame_needed = 0, uses_anonymous_args = 0
 4506              	.LVL510:
 4507 0000 10B5     		push	{r4, lr}
 4508              	.LCFI66:
 4509              		.cfi_def_cfa_offset 8
 4510              		.cfi_offset 4, -8
 4511              		.cfi_offset 14, -4
  69:Src/mode.c    ****     switch (mode)
 4512              		.loc 1 69 0
 4513 0002 1328     		cmp	r0, #19
 4514 0004 0DD8     		bhi	.L360
 4515 0006 DFE800F0 		tbb	[pc, r0]
 4516              	.L363:
 4517 000a 0A       		.byte	(.L362-.L363)/2
 4518 000b 0D       		.byte	(.L364-.L363)/2
 4519 000c 15       		.byte	(.L365-.L363)/2
 4520 000d 1D       		.byte	(.L366-.L363)/2
 4521 000e 25       		.byte	(.L367-.L363)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 108


 4522 000f 28       		.byte	(.L368-.L363)/2
 4523 0010 2B       		.byte	(.L369-.L363)/2
 4524 0011 32       		.byte	(.L370-.L363)/2
 4525 0012 39       		.byte	(.L371-.L363)/2
 4526 0013 5F       		.byte	(.L372-.L363)/2
 4527 0014 85       		.byte	(.L373-.L363)/2
 4528 0015 8F       		.byte	(.L374-.L363)/2
 4529 0016 99       		.byte	(.L375-.L363)/2
 4530 0017 A2       		.byte	(.L376-.L363)/2
 4531 0018 AB       		.byte	(.L377-.L363)/2
 4532 0019 B4       		.byte	(.L378-.L363)/2
 4533 001a BC       		.byte	(.L379-.L363)/2
 4534 001b C4       		.byte	(.L380-.L363)/2
 4535 001c CC       		.byte	(.L381-.L363)/2
 4536 001d D4       		.byte	(.L382-.L363)/2
 4537              		.p2align 1
 4538              	.L362:
  73:Src/mode.c    ****         SearchRun();
 4539              		.loc 1 73 0
 4540 001e FFF7FEFF 		bl	SearchRun
 4541              	.LVL511:
 4542              	.L360:
 206:Src/mode.c    **** }
 4543              		.loc 1 206 0
 4544 0022 10BD     		pop	{r4, pc}
 4545              	.LVL512:
 4546              	.L364:
  78:Src/mode.c    ****         Mode_FastRun(TRUE, 0.0f, 7, 5);
 4547              		.loc 1 78 0
 4548 0024 0522     		movs	r2, #5
 4549 0026 0721     		movs	r1, #7
 4550 0028 9FED660A 		vldr.32	s0, .L384
 4551 002c 0120     		movs	r0, #1
 4552              	.LVL513:
 4553 002e FFF7FEFF 		bl	Mode_FastRun
 4554              	.LVL514:
  79:Src/mode.c    ****         break;
 4555              		.loc 1 79 0
 4556 0032 F6E7     		b	.L360
 4557              	.LVL515:
 4558              	.L365:
  86:Src/mode.c    ****         Mode_FastRun(TRUE, 120.0f, 7, 5);
 4559              		.loc 1 86 0
 4560 0034 0522     		movs	r2, #5
 4561 0036 0721     		movs	r1, #7
 4562 0038 9FED630A 		vldr.32	s0, .L384+4
 4563 003c 0120     		movs	r0, #1
 4564              	.LVL516:
 4565 003e FFF7FEFF 		bl	Mode_FastRun
 4566              	.LVL517:
  88:Src/mode.c    ****         break;
 4567              		.loc 1 88 0
 4568 0042 EEE7     		b	.L360
 4569              	.LVL518:
 4570              	.L366:
  90:Src/mode.c    ****         Mode_FastRun(FALSE, 120.0f, 1, 3);
 4571              		.loc 1 90 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 109


 4572 0044 0322     		movs	r2, #3
 4573 0046 0121     		movs	r1, #1
 4574 0048 9FED5F0A 		vldr.32	s0, .L384+4
 4575 004c 0020     		movs	r0, #0
 4576              	.LVL519:
 4577 004e FFF7FEFF 		bl	Mode_FastRun
 4578              	.LVL520:
  93:Src/mode.c    ****         break;
 4579              		.loc 1 93 0
 4580 0052 E6E7     		b	.L360
 4581              	.LVL521:
 4582              	.L367:
  96:Src/mode.c    ****         PrintOutPut();
 4583              		.loc 1 96 0
 4584 0054 FFF7FEFF 		bl	PrintOutPut
 4585              	.LVL522:
  97:Src/mode.c    ****         break;
 4586              		.loc 1 97 0
 4587 0058 E3E7     		b	.L360
 4588              	.LVL523:
 4589              	.L368:
  99:Src/mode.c    ****         PrintWallData();
 4590              		.loc 1 99 0
 4591 005a FFF7FEFF 		bl	PrintWallData
 4592              	.LVL524:
 100:Src/mode.c    ****         break;
 4593              		.loc 1 100 0
 4594 005e E0E7     		b	.L360
 4595              	.LVL525:
 4596              	.L369:
 106:Src/mode.c    ****         control_wall_flag = 1;
 4597              		.loc 1 106 0
 4598 0060 5A4B     		ldr	r3, .L384+8
 4599 0062 0122     		movs	r2, #1
 4600 0064 1A70     		strb	r2, [r3]
 107:Src/mode.c    ****         CheckStraight(0);
 4601              		.loc 1 107 0
 4602 0066 0020     		movs	r0, #0
 4603              	.LVL526:
 4604 0068 FFF7FEFF 		bl	CheckStraight
 4605              	.LVL527:
 116:Src/mode.c    ****         break;
 4606              		.loc 1 116 0
 4607 006c D9E7     		b	.L360
 4608              	.LVL528:
 4609              	.L370:
 120:Src/mode.c    ****         control_wall_flag = 0;
 4610              		.loc 1 120 0
 4611 006e 574B     		ldr	r3, .L384+8
 4612 0070 0022     		movs	r2, #0
 4613 0072 1A70     		strb	r2, [r3]
 121:Src/mode.c    ****         CheckTurn(1);
 4614              		.loc 1 121 0
 4615 0074 0120     		movs	r0, #1
 4616              	.LVL529:
 4617 0076 FFF7FEFF 		bl	CheckTurn
 4618              	.LVL530:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 110


 122:Src/mode.c    ****         break;
 4619              		.loc 1 122 0
 4620 007a D2E7     		b	.L360
 4621              	.LVL531:
 4622              	.L371:
 125:Src/mode.c    ****         control_wall_flag = FALSE;
 4623              		.loc 1 125 0
 4624 007c 0024     		movs	r4, #0
 4625 007e 534B     		ldr	r3, .L384+8
 4626 0080 1C70     		strb	r4, [r3]
 126:Src/mode.c    ****         SetRunMode(0);
 4627              		.loc 1 126 0
 4628 0082 2046     		mov	r0, r4
 4629              	.LVL532:
 4630 0084 FFF7FEFF 		bl	SetRunMode
 4631              	.LVL533:
 127:Src/mode.c    ****         Motion_Start();
 4632              		.loc 1 127 0
 4633 0088 FFF7FEFF 		bl	Motion_Start
 4634              	.LVL534:
 128:Src/mode.c    ****         Motion_LeftTurn();
 4635              		.loc 1 128 0
 4636 008c FFF7FEFF 		bl	Motion_LeftTurn
 4637              	.LVL535:
 129:Src/mode.c    ****         Motion_End();
 4638              		.loc 1 129 0
 4639 0090 FFF7FEFF 		bl	Motion_End
 4640              	.LVL536:
 130:Src/mode.c    ****         motor_flag = FALSE;
 4641              		.loc 1 130 0
 4642 0094 4E4B     		ldr	r3, .L384+12
 4643 0096 1C70     		strb	r4, [r3]
 131:Src/mode.c    ****         HAL_Delay(500);
 4644              		.loc 1 131 0
 4645 0098 4FF4FA70 		mov	r0, #500
 4646 009c FFF7FEFF 		bl	HAL_Delay
 4647              	.LVL537:
 132:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4648              		.loc 1 132 0
 4649 00a0 49F64242 		movw	r2, #40002
 4650 00a4 4B49     		ldr	r1, .L384+16
 4651 00a6 4C4B     		ldr	r3, .L384+20
 4652 00a8 1868     		ldr	r0, [r3]
 4653 00aa FFF7FEFF 		bl	Flash_Write
 4654              	.LVL538:
 133:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 4655              		.loc 1 133 0
 4656 00ae 4FF49671 		mov	r1, #300
 4657 00b2 4C20     		movs	r0, #76
 4658 00b4 FFF7FEFF 		bl	Tim_BuzzerPwm
 4659              	.LVL539:
 134:Src/mode.c    ****         HAL_Delay(200);
 4660              		.loc 1 134 0
 4661 00b8 C820     		movs	r0, #200
 4662 00ba FFF7FEFF 		bl	HAL_Delay
 4663              	.LVL540:
 135:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 111


 4664              		.loc 1 135 0
 4665 00be 2146     		mov	r1, r4
 4666 00c0 0A20     		movs	r0, #10
 4667 00c2 FFF7FEFF 		bl	Tim_BuzzerPwm
 4668              	.LVL541:
 138:Src/mode.c    ****         break;
 4669              		.loc 1 138 0
 4670 00c6 ACE7     		b	.L360
 4671              	.LVL542:
 4672              	.L372:
 140:Src/mode.c    ****         control_wall_flag = FALSE;
 4673              		.loc 1 140 0
 4674 00c8 0024     		movs	r4, #0
 4675 00ca 404B     		ldr	r3, .L384+8
 4676 00cc 1C70     		strb	r4, [r3]
 141:Src/mode.c    ****         SetRunMode(0);
 4677              		.loc 1 141 0
 4678 00ce 2046     		mov	r0, r4
 4679              	.LVL543:
 4680 00d0 FFF7FEFF 		bl	SetRunMode
 4681              	.LVL544:
 142:Src/mode.c    ****         Motion_Start();
 4682              		.loc 1 142 0
 4683 00d4 FFF7FEFF 		bl	Motion_Start
 4684              	.LVL545:
 143:Src/mode.c    ****         Motion_RightTurn();
 4685              		.loc 1 143 0
 4686 00d8 FFF7FEFF 		bl	Motion_RightTurn
 4687              	.LVL546:
 144:Src/mode.c    ****         Motion_End();
 4688              		.loc 1 144 0
 4689 00dc FFF7FEFF 		bl	Motion_End
 4690              	.LVL547:
 145:Src/mode.c    ****         motor_flag = FALSE;
 4691              		.loc 1 145 0
 4692 00e0 3B4B     		ldr	r3, .L384+12
 4693 00e2 1C70     		strb	r4, [r3]
 146:Src/mode.c    ****         HAL_Delay(500);
 4694              		.loc 1 146 0
 4695 00e4 4FF4FA70 		mov	r0, #500
 4696 00e8 FFF7FEFF 		bl	HAL_Delay
 4697              	.LVL548:
 147:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 4698              		.loc 1 147 0
 4699 00ec 49F64242 		movw	r2, #40002
 4700 00f0 3849     		ldr	r1, .L384+16
 4701 00f2 394B     		ldr	r3, .L384+20
 4702 00f4 1868     		ldr	r0, [r3]
 4703 00f6 FFF7FEFF 		bl	Flash_Write
 4704              	.LVL549:
 148:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 4705              		.loc 1 148 0
 4706 00fa 4FF49671 		mov	r1, #300
 4707 00fe 4C20     		movs	r0, #76
 4708 0100 FFF7FEFF 		bl	Tim_BuzzerPwm
 4709              	.LVL550:
 149:Src/mode.c    ****         HAL_Delay(200);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 112


 4710              		.loc 1 149 0
 4711 0104 C820     		movs	r0, #200
 4712 0106 FFF7FEFF 		bl	HAL_Delay
 4713              	.LVL551:
 150:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 4714              		.loc 1 150 0
 4715 010a 2146     		mov	r1, r4
 4716 010c 0A20     		movs	r0, #10
 4717 010e FFF7FEFF 		bl	Tim_BuzzerPwm
 4718              	.LVL552:
 153:Src/mode.c    ****         break;
 4719              		.loc 1 153 0
 4720 0112 86E7     		b	.L360
 4721              	.LVL553:
 4722              	.L373:
 155:Src/mode.c    ****         control_wall_flag = FALSE;
 4723              		.loc 1 155 0
 4724 0114 0020     		movs	r0, #0
 4725              	.LVL554:
 4726 0116 2D4B     		ldr	r3, .L384+8
 4727 0118 1870     		strb	r0, [r3]
 156:Src/mode.c    ****         SetRunMode(0);
 4728              		.loc 1 156 0
 4729 011a FFF7FEFF 		bl	SetRunMode
 4730              	.LVL555:
 158:Src/mode.c    ****         TestComb(6, LEFT);
 4731              		.loc 1 158 0
 4732 011e 0121     		movs	r1, #1
 4733 0120 0620     		movs	r0, #6
 4734 0122 FFF7FEFF 		bl	TestComb
 4735              	.LVL556:
 159:Src/mode.c    ****         break;
 4736              		.loc 1 159 0
 4737 0126 7CE7     		b	.L360
 4738              	.LVL557:
 4739              	.L374:
 161:Src/mode.c    ****         control_wall_flag = FALSE;
 4740              		.loc 1 161 0
 4741 0128 0020     		movs	r0, #0
 4742              	.LVL558:
 4743 012a 284B     		ldr	r3, .L384+8
 4744 012c 1870     		strb	r0, [r3]
 162:Src/mode.c    ****         SetRunMode(0);
 4745              		.loc 1 162 0
 4746 012e FFF7FEFF 		bl	SetRunMode
 4747              	.LVL559:
 164:Src/mode.c    ****         TestComb(6, RIGHT);
 4748              		.loc 1 164 0
 4749 0132 0221     		movs	r1, #2
 4750 0134 0620     		movs	r0, #6
 4751 0136 FFF7FEFF 		bl	TestComb
 4752              	.LVL560:
 165:Src/mode.c    ****         break;
 4753              		.loc 1 165 0
 4754 013a 72E7     		b	.L360
 4755              	.LVL561:
 4756              	.L375:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 113


 168:Src/mode.c    ****         control_wall_flag = 3;
 4757              		.loc 1 168 0
 4758 013c 234B     		ldr	r3, .L384+8
 4759 013e 0322     		movs	r2, #3
 4760 0140 1A70     		strb	r2, [r3]
 170:Src/mode.c    ****         Turn135_Test(FRONT, LEFT, 0);
 4761              		.loc 1 170 0
 4762 0142 0022     		movs	r2, #0
 4763 0144 0121     		movs	r1, #1
 4764 0146 1046     		mov	r0, r2
 4765              	.LVL562:
 4766 0148 FFF7FEFF 		bl	Turn135_Test
 4767              	.LVL563:
 171:Src/mode.c    ****         break;
 4768              		.loc 1 171 0
 4769 014c 69E7     		b	.L360
 4770              	.LVL564:
 4771              	.L376:
 173:Src/mode.c    ****         control_wall_flag = 3;
 4772              		.loc 1 173 0
 4773 014e 1F4B     		ldr	r3, .L384+8
 4774 0150 0322     		movs	r2, #3
 4775 0152 1A70     		strb	r2, [r3]
 175:Src/mode.c    ****         Turn135_Test(FRONT, RIGHT, 0);
 4776              		.loc 1 175 0
 4777 0154 0022     		movs	r2, #0
 4778 0156 0221     		movs	r1, #2
 4779 0158 1046     		mov	r0, r2
 4780              	.LVL565:
 4781 015a FFF7FEFF 		bl	Turn135_Test
 4782              	.LVL566:
 176:Src/mode.c    ****         break;
 4783              		.loc 1 176 0
 4784 015e 60E7     		b	.L360
 4785              	.LVL567:
 4786              	.L377:
 178:Src/mode.c    ****         control_wall_flag = 2;
 4787              		.loc 1 178 0
 4788 0160 1A4B     		ldr	r3, .L384+8
 4789 0162 0222     		movs	r2, #2
 4790 0164 1A70     		strb	r2, [r3]
 180:Src/mode.c    ****         Turn135_Test(LEFT, FRONT, 1);
 4791              		.loc 1 180 0
 4792 0166 0122     		movs	r2, #1
 4793 0168 0021     		movs	r1, #0
 4794 016a 1046     		mov	r0, r2
 4795              	.LVL568:
 4796 016c FFF7FEFF 		bl	Turn135_Test
 4797              	.LVL569:
 181:Src/mode.c    ****         break;
 4798              		.loc 1 181 0
 4799 0170 57E7     		b	.L360
 4800              	.LVL570:
 4801              	.L378:
 183:Src/mode.c    ****         control_wall_flag = 2;
 4802              		.loc 1 183 0
 4803 0172 0220     		movs	r0, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 114


 4804              	.LVL571:
 4805 0174 154B     		ldr	r3, .L384+8
 4806 0176 1870     		strb	r0, [r3]
 185:Src/mode.c    ****         Turn135_Test(RIGHT, FRONT, 1);
 4807              		.loc 1 185 0
 4808 0178 0122     		movs	r2, #1
 4809 017a 0021     		movs	r1, #0
 4810 017c FFF7FEFF 		bl	Turn135_Test
 4811              	.LVL572:
 186:Src/mode.c    ****         break;
 4812              		.loc 1 186 0
 4813 0180 4FE7     		b	.L360
 4814              	.LVL573:
 4815              	.L379:
 189:Src/mode.c    ****         Mode_FastestRun(TRUE, 0.0f, 7, 5);
 4816              		.loc 1 189 0
 4817 0182 0522     		movs	r2, #5
 4818 0184 0721     		movs	r1, #7
 4819 0186 9FED0F0A 		vldr.32	s0, .L384
 4820 018a 0120     		movs	r0, #1
 4821              	.LVL574:
 4822 018c FFF7FEFF 		bl	Mode_FastestRun
 4823              	.LVL575:
 190:Src/mode.c    ****         break;
 4824              		.loc 1 190 0
 4825 0190 47E7     		b	.L360
 4826              	.LVL576:
 4827              	.L380:
 192:Src/mode.c    ****         Mode_FastestRun(TRUE, 100.0f, 7, 5);
 4828              		.loc 1 192 0
 4829 0192 0522     		movs	r2, #5
 4830 0194 0721     		movs	r1, #7
 4831 0196 9FED110A 		vldr.32	s0, .L384+24
 4832 019a 0120     		movs	r0, #1
 4833              	.LVL577:
 4834 019c FFF7FEFF 		bl	Mode_FastestRun
 4835              	.LVL578:
 193:Src/mode.c    ****         break;
 4836              		.loc 1 193 0
 4837 01a0 3FE7     		b	.L360
 4838              	.LVL579:
 4839              	.L381:
 195:Src/mode.c    ****         Mode_FastestRun(TRUE, 180.0f, 7, 5);
 4840              		.loc 1 195 0
 4841 01a2 0522     		movs	r2, #5
 4842 01a4 0721     		movs	r1, #7
 4843 01a6 9FED0E0A 		vldr.32	s0, .L384+28
 4844 01aa 0120     		movs	r0, #1
 4845              	.LVL580:
 4846 01ac FFF7FEFF 		bl	Mode_FastestRun
 4847              	.LVL581:
 196:Src/mode.c    ****         break;
 4848              		.loc 1 196 0
 4849 01b0 37E7     		b	.L360
 4850              	.LVL582:
 4851              	.L382:
 198:Src/mode.c    ****         control_wall_flag = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 115


 4852              		.loc 1 198 0
 4853 01b2 064B     		ldr	r3, .L384+8
 4854 01b4 0022     		movs	r2, #0
 4855 01b6 1A70     		strb	r2, [r3]
 201:Src/mode.c    ****         FastestTurnTest(-1, T_180);
 4856              		.loc 1 201 0
 4857 01b8 0421     		movs	r1, #4
 4858 01ba FF20     		movs	r0, #255
 4859              	.LVL583:
 4860 01bc FFF7FEFF 		bl	FastestTurnTest
 4861              	.LVL584:
 206:Src/mode.c    **** }
 4862              		.loc 1 206 0
 4863 01c0 2FE7     		b	.L360
 4864              	.L385:
 4865 01c2 00BF     		.align	2
 4866              	.L384:
 4867 01c4 00000000 		.word	0
 4868 01c8 0000F042 		.word	1123024896
 4869 01cc 00000000 		.word	control_wall_flag
 4870 01d0 00000000 		.word	motor_flag
 4871 01d4 00000000 		.word	loger
 4872 01d8 00000000 		.word	start_address
 4873 01dc 0000C842 		.word	1120403456
 4874 01e0 00003443 		.word	1127481344
 4875              		.cfi_endproc
 4876              	.LFE126:
 4878              		.global	walledge_1200
 4879              		.global	walledge_800
 4880              		.global	walledge_search
 4881              		.global	gy
 4882              		.global	gx
 4883              		.section	.bss.gy,"aw",%nobits
 4884              		.set	.LANCHOR1,. + 0
 4887              	gy:
 4888 0000 00       		.space	1
 4889              		.section	.data.gx,"aw",%progbits
 4890              		.set	.LANCHOR2,. + 0
 4893              	gx:
 4894 0000 01       		.byte	1
 4895              		.section	.data.walledge_1200,"aw",%progbits
 4896              		.align	2
 4897              		.set	.LANCHOR4,. + 0
 4900              	walledge_1200:
 4901 0000 F5FF     		.short	-11
 4902 0002 EDFF     		.short	-19
 4903 0004 F6FF     		.short	-10
 4904 0006 F6FF     		.short	-10
 4905 0008 00003041 		.word	1093664768
 4906 000c 00009841 		.word	1100480512
 4907 0010 0000A041 		.word	1101004800
 4908 0014 0000A041 		.word	1101004800
 4909              		.section	.data.walledge_800,"aw",%progbits
 4910              		.align	2
 4911              		.set	.LANCHOR3,. + 0
 4914              	walledge_800:
 4915 0000 F6FF     		.short	-10
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 116


 4916 0002 F6FF     		.short	-10
 4917 0004 F6FF     		.short	-10
 4918 0006 F6FF     		.short	-10
 4919 0008 00005041 		.word	1095761920
 4920 000c 00005041 		.word	1095761920
 4921 0010 0000A041 		.word	1101004800
 4922 0014 0000A841 		.word	1101529088
 4923              		.section	.data.walledge_search,"aw",%progbits
 4924              		.align	2
 4925              		.set	.LANCHOR0,. + 0
 4928              	walledge_search:
 4929 0000 F8FF     		.short	-8
 4930 0002 F8FF     		.short	-8
 4931 0004 0000     		.short	0
 4932 0006 0000     		.short	0
 4933 0008 0000D642 		.word	1121320960
 4934 000c 0000DA42 		.word	1121583104
 4935 0010 00000000 		.word	0
 4936 0014 00000000 		.word	0
 4937              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 4938              		.align	2
 4939              	.LC0:
 4940 0000 25640D00 		.ascii	"%d\015\000"
 4941              		.section	.rodata.PrintMotion.str1.4,"aMS",%progbits,1
 4942              		.align	2
 4943              	.LC7:
 4944 0000 0D0A5354 		.ascii	"\015\012START:%d\011v_start:%ld\011v_end:%ld\015\012"
 4944      4152543A 
 4944      25640976 
 4944      5F737461 
 4944      72743A25 
 4945 0022 00       		.ascii	"\000"
 4946 0023 00       		.space	1
 4947              	.LC8:
 4948 0024 4C454654 		.ascii	"LEFT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 4948      3A534541 
 4948      52434809 
 4948      765F7374 
 4948      6172743A 
 4949              	.LC9:
 4950 0048 4C454654 		.ascii	"LEFT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 4950      3A545F39 
 4950      3009765F 
 4950      73746172 
 4950      743A256C 
 4951 006a 0000     		.space	2
 4952              	.LC10:
 4953 006c 4C454654 		.ascii	"LEFT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 4953      3A545F31 
 4953      38300976 
 4953      5F737461 
 4953      72743A25 
 4954 008f 00       		.space	1
 4955              	.LC11:
 4956 0090 4C454654 		.ascii	"LEFT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4956      3A545F34 
 4956      35494E09 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 117


 4956      765F7374 
 4956      6172743A 
 4957              	.LC12:
 4958 00b4 4C454654 		.ascii	"LEFT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4958      3A545F34 
 4958      354F5554 
 4958      09765F73 
 4958      74617274 
 4959 00d9 000000   		.space	3
 4960              	.LC13:
 4961 00dc 4C454654 		.ascii	"LEFT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4961      3A545F31 
 4961      3335494E 
 4961      09765F73 
 4961      74617274 
 4962 0101 000000   		.space	3
 4963              	.LC14:
 4964 0104 4C454654 		.ascii	"LEFT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4964      3A545F31 
 4964      33354F55 
 4964      5409765F 
 4964      73746172 
 4965 012a 0000     		.space	2
 4966              	.LC15:
 4967 012c 4C454654 		.ascii	"LEFT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 4967      3A545F56 
 4967      39300976 
 4967      5F737461 
 4967      72743A25 
 4968 014f 00       		.space	1
 4969              	.LC16:
 4970 0150 52494748 		.ascii	"RIGHT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 4970      543A5345 
 4970      41524348 
 4970      09765F73 
 4970      74617274 
 4971 0175 000000   		.space	3
 4972              	.LC17:
 4973 0178 52494748 		.ascii	"RIGHT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 4973      543A545F 
 4973      39300976 
 4973      5F737461 
 4973      72743A25 
 4974 019b 00       		.space	1
 4975              	.LC18:
 4976 019c 52494748 		.ascii	"RIGHT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 4976      543A545F 
 4976      31383009 
 4976      765F7374 
 4976      6172743A 
 4977              	.LC19:
 4978 01c0 52494748 		.ascii	"RIGHT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4978      543A545F 
 4978      3435494E 
 4978      09765F73 
 4978      74617274 
 4979 01e5 000000   		.space	3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 118


 4980              	.LC20:
 4981 01e8 52494748 		.ascii	"RIGHT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4981      543A545F 
 4981      34354F55 
 4981      5409765F 
 4981      73746172 
 4982 020e 0000     		.space	2
 4983              	.LC21:
 4984 0210 52494748 		.ascii	"RIGHT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 4984      543A545F 
 4984      31333549 
 4984      4E09765F 
 4984      73746172 
 4985 0236 0000     		.space	2
 4986              	.LC22:
 4987 0238 52494748 		.ascii	"RIGHT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 4987      543A545F 
 4987      3133354F 
 4987      55540976 
 4987      5F737461 
 4988 025f 00       		.space	1
 4989              	.LC23:
 4990 0260 52494748 		.ascii	"RIGHT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 4990      543A545F 
 4990      56393009 
 4990      765F7374 
 4990      6172743A 
 4991              	.LC24:
 4992 0284 46524F4E 		.ascii	"FRONT:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4992      543A2564 
 4992      09765F73 
 4992      74617274 
 4992      3A256C64 
 4993 02a5 000000   		.space	3
 4994              	.LC25:
 4995 02a8 44494147 		.ascii	"DIAGONAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4995      4F4E414C 
 4995      3A256409 
 4995      765F7374 
 4995      6172743A 
 4996              	.LC26:
 4997 02cc 474F414C 		.ascii	"GOAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4997      3A256409 
 4997      765F7374 
 4997      6172743A 
 4997      256C6409 
 4998              	.LC27:
 4999 02ec 41444A55 		.ascii	"ADJUST:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 4999      53543A25 
 4999      6409765F 
 4999      73746172 
 4999      743A256C 
 5000              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 5001              		.align	2
 5002              	.LC2:
 5003 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 5003      64092564 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 119


 5003      0925640D 
 5003      0A00
 5004              		.section	.rodata.PrintWallData.str1.4,"aMS",%progbits,1
 5005              		.align	2
 5006              	.LC3:
 5007 0000 0D00     		.ascii	"\015\000"
 5008 0002 0000     		.space	2
 5009              	.LC4:
 5010 0004 2D2D2D00 		.ascii	"---\000"
 5011              	.LC5:
 5012 0008 2B0D00   		.ascii	"+\015\000"
 5013 000b 00       		.space	1
 5014              	.LC6:
 5015 000c 20202000 		.ascii	"   \000"
 5016              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 5017              		.align	2
 5018              	.LC1:
 5019 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\012\000"
 5019      20666C3A 
 5019      25642066 
 5019      3A256420 
 5019      66723A25 
 5020              		.text
 5021              	.Letext0:
 5022              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5023              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5024              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5025              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 5026              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 5027              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5028              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5029              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 5030              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 5031              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 5032              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 5033              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 5034              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 5035              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 5036              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 5037              		.file 17 "Inc/spi.h"
 5038              		.file 18 "Inc/tim.h"
 5039              		.file 19 "Inc/adc.h"
 5040              		.file 20 "Inc/control.h"
 5041              		.file 21 "Inc/MazeCon.h"
 5042              		.file 22 "Inc/flash.h"
 5043              		.file 23 "Inc/motion.h"
 5044              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 5045              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 5046              		.file 26 "<built-in>"
 5047              		.file 27 "Inc/Maze.h"
 5048              		.file 28 "Inc/Map.h"
 5049              		.file 29 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 120


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:242    .text.Mode_Select:00000150 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:253    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:260    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:389    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:403    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:410    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:516    .text.SetRunMode:000000a0 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:524    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:531    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:549    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:553    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:650    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:657    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:664    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1015   .text.SearchRun:0000027c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1027   .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1034   .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1282   .text.Mode_FastRun:0000019c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1295   .text.Mode_FastRun:000001d0 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1434   .text.Mode_FastRun:000002cc $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1446   .text.Mode_FastestRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1453   .text.Mode_FastestRun:00000000 Mode_FastestRun
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1701   .text.Mode_FastestRun:0000019c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1714   .text.Mode_FastestRun:000001d0 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1856   .text.Mode_FastestRun:000002d0 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1867   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1874   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1959   .text.CheckStraight:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1967   .text.CheckFastStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:1974   .text.CheckFastStraight:00000000 CheckFastStraight
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2086   .text.CheckFastStraight:00000090 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2095   .text.CheckFastestStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2102   .text.CheckFastestStraight:00000000 CheckFastestStraight
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2186   .text.CheckFastestStraight:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2195   .text.CheckDiagonal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2202   .text.CheckDiagonal:00000000 CheckDiagonal
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2281   .text.CheckDiagonal:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2289   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2296   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2371   .text.CheckTurn:00000050 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2379   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2386   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2456   .text.PrintOutPut:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2463   .text.PrintWallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2470   .text.PrintWallData:00000000 PrintWallData
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2639   .text.PrintWallData:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2648   .text.PrintMotion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2655   .text.PrintMotion:00000000 PrintMotion
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2708   .text.PrintMotion:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2719   .text.PrintMotion:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2727   .text.PrintMotion:00000072 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2735   .text.PrintMotion:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2830   .text.PrintMotion:0000010c $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 121


C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2838   .text.PrintMotion:00000114 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:2984   .text.PrintMotion:000001f0 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3010   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3017   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3074   .text.AdjustStraight:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3081   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3088   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3145   .text.AdjustTurn:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3152   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3159   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3298   .text.Circuit:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3303   .text.TestComb:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3310   .text.TestComb:00000000 TestComb
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3410   .text.TestComb:00000058 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3415   .text.TestSteps:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3422   .text.TestSteps:00000000 TestSteps
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3475   .text.TestSteps:00000028 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3480   .text.Turn45_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3487   .text.Turn45_Test:00000000 Turn45_Test
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3665   .text.Turn45_Test:000000f8 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3673   .text.Turn135_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3680   .text.Turn135_Test:00000000 Turn135_Test
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3854   .text.Turn135_Test:00000100 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3862   .text.TurnBig90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3869   .text.TurnBig90_Test:00000000 TurnBig90_Test
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3964   .text.TurnBig90_Test:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3970   .text.TurnBig180_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:3977   .text.TurnBig180_Test:00000000 TurnBig180_Test
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4079   .text.TurnBig180_Test:0000008c $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4085   .text.TurnV90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4092   .text.TurnV90_Test:00000000 TurnV90_Test
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4180   .text.TurnV90_Test:00000070 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4186   .text.FastestTurnTest:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4193   .text.FastestTurnTest:00000000 FastestTurnTest
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4228   .text.FastestTurnTest:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4484   .text.FastestTurnTest:000001d8 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4493   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4500   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4517   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4537   .text.Mode_Mouse:0000001e $t
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4867   .text.Mode_Mouse:000001c4 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4900   .data.walledge_1200:00000000 walledge_1200
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4914   .data.walledge_800:00000000 walledge_800
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4928   .data.walledge_search:00000000 walledge_search
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4887   .bss.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4893   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4888   .bss.gy:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4896   .data.walledge_1200:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4910   .data.walledge_800:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4924   .data.walledge_search:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4938   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4942   .rodata.PrintMotion.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:5001   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:5005   .rodata.PrintWallData.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:5017   .rodata.SensorCheck.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4233   .text.FastestTurnTest:00000025 $d
C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s:4233   .text.FastestTurnTest:00000026 $t
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 122



UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
accel
gyro_y
enc
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
Control_SetupStraightPID
Control_SetupTurnPID
Tim_FanPwm
motor_flag
Map_Init
Map_InitFast
Control_WallEdgeSet
Motion_Start
Maze_GetStep
Maze_ResetWall
Map_addWall
Map_DelWall
Motion_End
Flash_Write
Maze_UpdatePosition
Motion_Restart
Maze_GetGoalSize
Map_AddUnknownWall
Maze_UpdateStepMap
Maze_GetNextMotion
Maze_KnownStepAccel
Motion_Switch
control_wall_flag
counter_s
start_address
Flash_Load
Maze_UpdateStepMapEx
Motion_MaxVeloSet
Maze_GetNextMotionEx
Maze_Compress
Motion_FastStart
Motion_FastLeftTurn
Motion_FastStraight
Motion_DiagonalLeft
Motion_DiagonalRight
Motion_FastRightTurn
Motion_FastGoal
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccGq18uf.s 			page 123


Motion_Adjust
Motion_Adjust_L
Motion_Adjust_R
Motion_FastestStart
Motion_FastestLeftTurn
Motion_FastestStraight
Motion_FastestDiagonalLeft
Motion_FastestDiagonalRight
Motion_FastestRightTurn
Motion_FastestGoal
Motion_FastestAdjust_L
Motion_FastestAdjust_R
Tim_MotorBrake
Motion_Straight
loger
Motion_DiagonalStart
Motion_DiagonalStop
Motion_Diagonal
Motion_TestTurn
gyro_z
puts
putchar
Tim_MotorPwm
Motion_LeftTurn
Motion_RightTurn
Motion_WallSpinTurn
Motion_InLeft45Turn
Motion_InRight45Turn
Motion_OutLeft45Turn
Motion_OutRight45Turn
Motion_Left90Turn
Motion_Right90Turn
