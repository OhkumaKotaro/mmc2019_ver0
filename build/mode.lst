ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** 
  30:Src/mode.c    **** unsigned char gx = 1, gy = 0;
  31:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 2


  32:Src/mode.c    **** //Prototype Function
  33:Src/mode.c    **** void SensorCheck(void);
  34:Src/mode.c    **** void SetRunMode(void);
  35:Src/mode.c    **** void CheckStraight(uint8_t block);
  36:Src/mode.c    **** void CheckFastStraight(uint8_t block);
  37:Src/mode.c    **** void CheckDiagonal(uint8_t block);
  38:Src/mode.c    **** void CheckTurn(uint8_t num);
  39:Src/mode.c    **** void PrintOutPut(void);
  40:Src/mode.c    **** void PrintWallData(void);
  41:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail);
  42:Src/mode.c    **** void AdjustStraight(void);
  43:Src/mode.c    **** void AdjustTurn(void);
  44:Src/mode.c    **** void SearchRun(void);
  45:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, uint8_t w_str, uint8_t w_turn);
  46:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  47:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  48:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  49:Src/mode.c    **** void TurnBig90_Test(int8_t dir);
  50:Src/mode.c    **** void TurnBig180_Test(int8_t dir);
  51:Src/mode.c    **** void TurnV90_Test(int8_t dir);
  52:Src/mode.c    **** 
  53:Src/mode.c    **** /****************************************************************************************
  54:Src/mode.c    ****  * outline  : wright mode 
  55:Src/mode.c    ****  * argument : mode nomber
  56:Src/mode.c    ****  * return   : void
  57:Src/mode.c    **** ********************************************************************************************/
  58:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  59:Src/mode.c    **** {
  60:Src/mode.c    ****     switch (mode)
  61:Src/mode.c    ****     {
  62:Src/mode.c    ****     //WHITE
  63:Src/mode.c    ****     case 0:
  64:Src/mode.c    ****         SearchRun();
  65:Src/mode.c    ****         break;
  66:Src/mode.c    ****     case 1:
  67:Src/mode.c    ****         Mode_FastRun(FALSE, 1, 3);
  68:Src/mode.c    ****         break;
  69:Src/mode.c    ****     case 2:
  70:Src/mode.c    ****         /*
  71:Src/mode.c    ****         SetRunMode();
  72:Src/mode.c    ****         control_wall_flag = FALSE;
  73:Src/mode.c    ****         Motion_enkai();
  74:Src/mode.c    ****         */
  75:Src/mode.c    ****         Mode_FastRun(TRUE, 7, 5);
  76:Src/mode.c    ****         break;
  77:Src/mode.c    ****     case 3:
  78:Src/mode.c    ****         SensorCheck();
  79:Src/mode.c    ****         break;
  80:Src/mode.c    ****     //CYAN
  81:Src/mode.c    ****     case 4:
  82:Src/mode.c    ****         PrintOutPut();
  83:Src/mode.c    ****         break;
  84:Src/mode.c    ****     case 5:
  85:Src/mode.c    ****         PrintWallData();
  86:Src/mode.c    ****         break;
  87:Src/mode.c    ****     case 6: //straight
  88:Src/mode.c    ****         CheckDiagonal(5);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 3


  89:Src/mode.c    ****         /*
  90:Src/mode.c    ****         control_wall_flag = 2;
  91:Src/mode.c    ****         CheckFastStraight(5);
  92:Src/mode.c    ****         */
  93:Src/mode.c    ****         /*
  94:Src/mode.c    ****         control_wall_flag = 1;
  95:Src/mode.c    ****         CheckStraight(6);
  96:Src/mode.c    ****         */
  97:Src/mode.c    ****         break;
  98:Src/mode.c    ****     case 7: //turn
  99:Src/mode.c    ****         control_wall_flag = FALSE;
 100:Src/mode.c    ****         CheckTurn(4);
 101:Src/mode.c    ****         break;
 102:Src/mode.c    ****     //YELLOW
 103:Src/mode.c    ****     case 8: //left turn
 104:Src/mode.c    ****         control_wall_flag = FALSE;
 105:Src/mode.c    ****         SetRunMode();
 106:Src/mode.c    ****         Motion_Start();
 107:Src/mode.c    ****         Motion_LeftTurn();
 108:Src/mode.c    ****         Motion_End();
 109:Src/mode.c    ****         motor_flag = FALSE;
 110:Src/mode.c    ****         HAL_Delay(500);
 111:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 112:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 113:Src/mode.c    ****         HAL_Delay(200);
 114:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 115:Src/mode.c    ****         break;
 116:Src/mode.c    ****     case 9: //right turn
 117:Src/mode.c    ****         control_wall_flag = FALSE;
 118:Src/mode.c    ****         SetRunMode();
 119:Src/mode.c    ****         Motion_Start();
 120:Src/mode.c    ****         Motion_RightTurn();
 121:Src/mode.c    ****         Motion_End();
 122:Src/mode.c    ****         motor_flag = FALSE;
 123:Src/mode.c    ****         HAL_Delay(500);
 124:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 125:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 126:Src/mode.c    ****         HAL_Delay(200);
 127:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 128:Src/mode.c    ****         break;
 129:Src/mode.c    ****     case 10: //circuit left
 130:Src/mode.c    ****         control_wall_flag = FALSE;
 131:Src/mode.c    ****         SetRunMode();
 132:Src/mode.c    ****         Circuit(1, 1, 3, 1);
 133:Src/mode.c    ****         break;
 134:Src/mode.c    ****     case 11: //circuit right
 135:Src/mode.c    ****         control_wall_flag = FALSE;
 136:Src/mode.c    ****         SetRunMode();
 137:Src/mode.c    ****         Circuit(1, 1, 3, -1);
 138:Src/mode.c    ****         break;
 139:Src/mode.c    ****     //GREEN
 140:Src/mode.c    ****     case 12: //left quarter turn
 141:Src/mode.c    ****         control_wall_flag = FALSE;
 142:Src/mode.c    ****         Turn45_Test(FRONT, LEFT, 0);
 143:Src/mode.c    ****         //Turn135_Test(FRONT, LEFT, 0);
 144:Src/mode.c    ****         break;
 145:Src/mode.c    ****     case 13: //right quarter turn
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 4


 146:Src/mode.c    ****         control_wall_flag = FALSE;
 147:Src/mode.c    ****         Turn45_Test(FRONT, RIGHT, 0);
 148:Src/mode.c    ****         //Turn135_Test(FRONT, RIGHT, 0);
 149:Src/mode.c    ****         break;
 150:Src/mode.c    ****     case 14:
 151:Src/mode.c    ****         control_wall_flag = FALSE;
 152:Src/mode.c    ****         Turn45_Test(LEFT, LEFT, 1);
 153:Src/mode.c    ****         //Turn135_Test(LEFT, LEFT, 1);
 154:Src/mode.c    ****         break;
 155:Src/mode.c    ****     case 15:
 156:Src/mode.c    ****         control_wall_flag = FALSE;
 157:Src/mode.c    ****         Turn45_Test(RIGHT, RIGHT, 1);
 158:Src/mode.c    ****         //Turn135_Test(RIGHT, RIGHT, 1);
 159:Src/mode.c    ****         break;
 160:Src/mode.c    ****     //MAGENTA
 161:Src/mode.c    ****     case 16:
 162:Src/mode.c    ****         control_wall_flag = FALSE;
 163:Src/mode.c    ****         TurnBig90_Test(LEFT);
 164:Src/mode.c    ****         break;
 165:Src/mode.c    ****     case 17:
 166:Src/mode.c    ****         control_wall_flag = FALSE;
 167:Src/mode.c    ****         TurnBig90_Test(RIGHT);
 168:Src/mode.c    ****         break;
 169:Src/mode.c    ****     case 18:
 170:Src/mode.c    ****         control_wall_flag = FALSE;
 171:Src/mode.c    ****         //TurnBig180_Test(LEFT);
 172:Src/mode.c    ****         TurnV90_Test(LEFT);
 173:Src/mode.c    ****         break;
 174:Src/mode.c    ****     case 19:
 175:Src/mode.c    ****         control_wall_flag = FALSE;
 176:Src/mode.c    ****         //TurnBig180_Test(RIGHT);
 177:Src/mode.c    ****         TurnV90_Test(RIGHT);
 178:Src/mode.c    ****         break;
 179:Src/mode.c    ****     default:
 180:Src/mode.c    ****         break;
 181:Src/mode.c    ****     }
 182:Src/mode.c    **** }
 183:Src/mode.c    **** 
 184:Src/mode.c    **** char Mode_Select(void)
 185:Src/mode.c    **** {
  28              		.loc 1 185 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 186:Src/mode.c    ****     int8_t mode = 0;
 187:Src/mode.c    ****     uint8_t state = 0;
 188:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 188 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 5


  42              	.LVL1:
 189:Src/mode.c    ****     accel.z = 0;
  43              		.loc 1 189 0
  44 0006 524B     		ldr	r3, .L34
  45 0008 0022     		movs	r2, #0
  46 000a 9A60     		str	r2, [r3, #8]	@ float
 187:Src/mode.c    ****     Control_ResetVelo();
  47              		.loc 1 187 0
  48 000c 0024     		movs	r4, #0
 186:Src/mode.c    ****     int8_t mode = 0;
  49              		.loc 1 186 0
  50 000e 2546     		mov	r5, r4
  51 0010 50E0     		b	.L18
  52              	.LVL2:
  53              	.L28:
 190:Src/mode.c    **** 
 191:Src/mode.c    ****     while (1)
 192:Src/mode.c    ****     {
 193:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 194:Src/mode.c    ****         {
 195:Src/mode.c    ****             if (gyro_y < -300.0f)
 196:Src/mode.c    ****             {
 197:Src/mode.c    ****                 mode++;
 198:Src/mode.c    ****             }
 199:Src/mode.c    ****             else if (gyro_y > 300.0f)
  54              		.loc 1 199 0
  55 0012 504B     		ldr	r3, .L34+4
  56 0014 93ED007A 		vldr.32	s14, [r3]
  57 0018 DFED4F7A 		vldr.32	s15, .L34+8
  58 001c B4EEE77A 		vcmpe.f32	s14, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 65DD     		ble	.L7
 200:Src/mode.c    ****             {
 201:Src/mode.c    ****                 mode--;
  61              		.loc 1 201 0
  62 0026 013D     		subs	r5, r5, #1
  63              	.LVL3:
  64 0028 6DB2     		sxtb	r5, r5
  65              	.LVL4:
  66 002a 62E0     		b	.L7
  67              	.L19:
 202:Src/mode.c    ****             }
 203:Src/mode.c    ****             if (mode > 3)
 204:Src/mode.c    ****             {
 205:Src/mode.c    ****                 mode = 0;
  68              		.loc 1 205 0
  69 002c 0025     		movs	r5, #0
  70              	.LVL5:
  71              	.L9:
 206:Src/mode.c    ****             }
 207:Src/mode.c    ****             else if (mode < 0)
 208:Src/mode.c    ****             {
 209:Src/mode.c    ****                 mode = 3;
 210:Src/mode.c    ****             }
 211:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  72              		.loc 1 211 0
  73 002e 6FF00900 		mvn	r0, #9
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 6


  74 0032 00FB05F0 		mul	r0, r0, r5
  75 0036 4FF49671 		mov	r1, #300
  76 003a AA30     		adds	r0, r0, #170
  77 003c FFF7FEFF 		bl	Tim_BuzzerPwm
  78              	.LVL6:
 212:Src/mode.c    ****             HAL_Delay(100);
  79              		.loc 1 212 0
  80 0040 6420     		movs	r0, #100
  81 0042 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL7:
 213:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  83              		.loc 1 213 0
  84 0046 0021     		movs	r1, #0
  85 0048 0A20     		movs	r0, #10
  86 004a FFF7FEFF 		bl	Tim_BuzzerPwm
  87              	.LVL8:
 214:Src/mode.c    ****             HAL_Delay(500);
  88              		.loc 1 214 0
  89 004e 4FF4FA70 		mov	r0, #500
  90 0052 FFF7FEFF 		bl	HAL_Delay
  91              	.LVL9:
  92              	.L3:
 215:Src/mode.c    ****         }
 216:Src/mode.c    ****         if (enc.offset > 20)
  93              		.loc 1 216 0
  94 0056 414B     		ldr	r3, .L34+12
  95 0058 93ED027A 		vldr.32	s14, [r3, #8]
  96 005c F3EE047A 		vmov.f32	s15, #2.0e+1
  97 0060 B4EEE77A 		vcmpe.f32	s14, s15
  98 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  99 0068 4BDD     		ble	.L29
 217:Src/mode.c    ****         {
 218:Src/mode.c    ****             if (state == 16)
 100              		.loc 1 218 0
 101 006a 102C     		cmp	r4, #16
 102 006c 47D0     		beq	.L21
 219:Src/mode.c    ****             {
 220:Src/mode.c    ****                 state = 0;
 221:Src/mode.c    ****             }
 222:Src/mode.c    ****             else
 223:Src/mode.c    ****             {
 224:Src/mode.c    ****                 state += 4;
 103              		.loc 1 224 0
 104 006e 0434     		adds	r4, r4, #4
 105              	.LVL10:
 106 0070 E4B2     		uxtb	r4, r4
 107              	.LVL11:
 108              	.L12:
 225:Src/mode.c    ****             }
 226:Src/mode.c    ****             enc.offset = 0;
 109              		.loc 1 226 0
 110 0072 3A4B     		ldr	r3, .L34+12
 111 0074 0022     		movs	r2, #0
 112 0076 9A60     		str	r2, [r3, #8]	@ float
 113              	.L13:
 227:Src/mode.c    ****         }
 228:Src/mode.c    ****         else if (enc.offset < -20)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 7


 229:Src/mode.c    ****         {
 230:Src/mode.c    ****             if (state == 0)
 231:Src/mode.c    ****             {
 232:Src/mode.c    ****                 state = 16;
 233:Src/mode.c    ****             }
 234:Src/mode.c    ****             else
 235:Src/mode.c    ****             {
 236:Src/mode.c    ****                 state -= 4;
 237:Src/mode.c    ****             }
 238:Src/mode.c    ****             enc.offset = 0;
 239:Src/mode.c    ****         }
 240:Src/mode.c    ****         if (accel.z > 30.0f)
 114              		.loc 1 240 0
 115 0078 354B     		ldr	r3, .L34
 116 007a 93ED027A 		vldr.32	s14, [r3, #8]
 117 007e F3EE0E7A 		vmov.f32	s15, #3.0e+1
 118 0082 B4EEE77A 		vcmpe.f32	s14, s15
 119 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 120 008a 4DDC     		bgt	.L32
 241:Src/mode.c    ****         {
 242:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 243:Src/mode.c    ****             HAL_Delay(100);
 244:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 245:Src/mode.c    ****             HAL_Delay(500);
 246:Src/mode.c    ****             break;
 247:Src/mode.c    ****         }
 248:Src/mode.c    ****         Gpio_FullColor(state % 7);
 121              		.loc 1 248 0
 122 008c 3448     		ldr	r0, .L34+16
 123 008e A0FB0430 		umull	r3, r0, r0, r4
 124 0092 231A     		subs	r3, r4, r0
 125 0094 00EB5300 		add	r0, r0, r3, lsr #1
 126 0098 8008     		lsrs	r0, r0, #2
 127 009a C0EBC000 		rsb	r0, r0, r0, lsl #3
 128 009e 201A     		subs	r0, r4, r0
 129 00a0 C0B2     		uxtb	r0, r0
 130 00a2 FFF7FEFF 		bl	Gpio_FullColor
 131              	.LVL12:
 249:Src/mode.c    ****         Gpio_SideLed(mode);
 132              		.loc 1 249 0
 133 00a6 E8B2     		uxtb	r0, r5
 134 00a8 FFF7FEFF 		bl	Gpio_SideLed
 135              	.LVL13:
 250:Src/mode.c    ****         printf("%d\r", mode + state);
 136              		.loc 1 250 0
 137 00ac 2919     		adds	r1, r5, r4
 138 00ae 2D48     		ldr	r0, .L34+20
 139 00b0 FFF7FEFF 		bl	printf
 140              	.LVL14:
 141              	.L18:
 193:Src/mode.c    ****         {
 142              		.loc 1 193 0
 143 00b4 274B     		ldr	r3, .L34+4
 144 00b6 93ED007A 		vldr.32	s14, [r3]
 145 00ba DFED277A 		vldr.32	s15, .L34+8
 146 00be B4EEE77A 		vcmpe.f32	s14, s15
 147 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 8


 148 00c6 08DC     		bgt	.L2
 193:Src/mode.c    ****         {
 149              		.loc 1 193 0 is_stmt 0 discriminator 1
 150 00c8 93ED007A 		vldr.32	s14, [r3]
 151 00cc DFED267A 		vldr.32	s15, .L34+24
 152 00d0 B4EEE77A 		vcmpe.f32	s14, s15
 153 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 00d8 BDD5     		bpl	.L3
 155              	.L2:
 195:Src/mode.c    ****             {
 156              		.loc 1 195 0 is_stmt 1
 157 00da 1E4B     		ldr	r3, .L34+4
 158 00dc 93ED007A 		vldr.32	s14, [r3]
 159 00e0 DFED217A 		vldr.32	s15, .L34+24
 160 00e4 B4EEE77A 		vcmpe.f32	s14, s15
 161 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 00ec 91D5     		bpl	.L28
 197:Src/mode.c    ****             }
 163              		.loc 1 197 0
 164 00ee 0135     		adds	r5, r5, #1
 165              	.LVL15:
 166 00f0 6DB2     		sxtb	r5, r5
 167              	.LVL16:
 168              	.L7:
 203:Src/mode.c    ****             {
 169              		.loc 1 203 0
 170 00f2 032D     		cmp	r5, #3
 171 00f4 9ADC     		bgt	.L19
 207:Src/mode.c    ****             {
 172              		.loc 1 207 0
 173 00f6 002D     		cmp	r5, #0
 174 00f8 99DA     		bge	.L9
 209:Src/mode.c    ****             }
 175              		.loc 1 209 0
 176 00fa 0325     		movs	r5, #3
 177              	.LVL17:
 178 00fc 97E7     		b	.L9
 179              	.LVL18:
 180              	.L21:
 220:Src/mode.c    ****             }
 181              		.loc 1 220 0
 182 00fe 0024     		movs	r4, #0
 183              	.LVL19:
 184 0100 B7E7     		b	.L12
 185              	.LVL20:
 186              	.L29:
 228:Src/mode.c    ****         {
 187              		.loc 1 228 0
 188 0102 164B     		ldr	r3, .L34+12
 189 0104 93ED027A 		vldr.32	s14, [r3, #8]
 190 0108 FBEE047A 		vmov.f32	s15, #-2.0e+1
 191 010c B4EEE77A 		vcmpe.f32	s14, s15
 192 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193 0114 B0D5     		bpl	.L13
 230:Src/mode.c    ****             {
 194              		.loc 1 230 0
 195 0116 2CB1     		cbz	r4, .L22
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 9


 236:Src/mode.c    ****             }
 196              		.loc 1 236 0
 197 0118 043C     		subs	r4, r4, #4
 198              	.LVL21:
 199 011a E4B2     		uxtb	r4, r4
 200              	.LVL22:
 201              	.L15:
 238:Src/mode.c    ****         }
 202              		.loc 1 238 0
 203 011c 0F4B     		ldr	r3, .L34+12
 204 011e 0022     		movs	r2, #0
 205 0120 9A60     		str	r2, [r3, #8]	@ float
 206 0122 A9E7     		b	.L13
 207              	.L22:
 232:Src/mode.c    ****             }
 208              		.loc 1 232 0
 209 0124 1024     		movs	r4, #16
 210              	.LVL23:
 211 0126 F9E7     		b	.L15
 212              	.LVL24:
 213              	.L32:
 242:Src/mode.c    ****             HAL_Delay(100);
 214              		.loc 1 242 0
 215 0128 4FF49671 		mov	r1, #300
 216 012c 4C20     		movs	r0, #76
 217 012e FFF7FEFF 		bl	Tim_BuzzerPwm
 218              	.LVL25:
 243:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 219              		.loc 1 243 0
 220 0132 6420     		movs	r0, #100
 221 0134 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL26:
 244:Src/mode.c    ****             HAL_Delay(500);
 223              		.loc 1 244 0
 224 0138 0021     		movs	r1, #0
 225 013a 0A20     		movs	r0, #10
 226 013c FFF7FEFF 		bl	Tim_BuzzerPwm
 227              	.LVL27:
 245:Src/mode.c    ****             break;
 228              		.loc 1 245 0
 229 0140 4FF4FA70 		mov	r0, #500
 230 0144 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL28:
 251:Src/mode.c    ****     }
 252:Src/mode.c    ****     return mode + state;
 232              		.loc 1 252 0
 233 0148 2C44     		add	r4, r4, r5
 234              	.LVL29:
 235 014a E0B2     		uxtb	r0, r4
 253:Src/mode.c    **** }
 236              		.loc 1 253 0
 237 014c 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL30:
 239              	.L35:
 240 014e 00BF     		.align	2
 241              	.L34:
 242 0150 00000000 		.word	accel
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 10


 243 0154 00000000 		.word	gyro_y
 244 0158 00009643 		.word	1133903872
 245 015c 00000000 		.word	enc
 246 0160 25499224 		.word	613566757
 247 0164 00000000 		.word	.LC0
 248 0168 000096C3 		.word	-1013579776
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.SensorCheck,"ax",%progbits
 253              		.align	1
 254              		.global	SensorCheck
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	SensorCheck:
 261              	.LFB128:
 254:Src/mode.c    **** 
 255:Src/mode.c    **** void SensorCheck(void)
 256:Src/mode.c    **** {
 262              		.loc 1 256 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 257:Src/mode.c    ****     Adc_IrSensorStart();
 274              		.loc 1 257 0
 275 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 276              	.LVL31:
 277 0008 2CE0     		b	.L43
 278              	.L48:
 258:Src/mode.c    **** 
 259:Src/mode.c    ****     while (1)
 260:Src/mode.c    ****     {
 261:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 262:Src/mode.c    ****         {
 263:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 279              		.loc 1 263 0
 280 000a 0022     		movs	r2, #0
 281 000c 8021     		movs	r1, #128
 282 000e 2D48     		ldr	r0, .L51
 283 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL32:
 285 0014 2FE0     		b	.L38
 286              	.L49:
 264:Src/mode.c    ****         }
 265:Src/mode.c    ****         else
 266:Src/mode.c    ****         {
 267:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 268:Src/mode.c    ****         }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 11


 269:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 270:Src/mode.c    ****         {
 271:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 287              		.loc 1 271 0
 288 0016 0022     		movs	r2, #0
 289 0018 1021     		movs	r1, #16
 290 001a 2B48     		ldr	r0, .L51+4
 291 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL33:
 293 0020 32E0     		b	.L40
 294              	.L50:
 272:Src/mode.c    ****         }
 273:Src/mode.c    ****         else
 274:Src/mode.c    ****         {
 275:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 276:Src/mode.c    ****         }
 277:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 278:Src/mode.c    ****         {
 279:Src/mode.c    ****             Gpio_FullColor(WHITE);
 295              		.loc 1 279 0
 296 0022 0020     		movs	r0, #0
 297 0024 FFF7FEFF 		bl	Gpio_FullColor
 298              	.LVL34:
 299              	.L42:
 280:Src/mode.c    ****         }
 281:Src/mode.c    ****         else
 282:Src/mode.c    ****         {
 283:Src/mode.c    ****             Gpio_FullColor(DARK);
 284:Src/mode.c    ****         }
 285:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now, s
 300              		.loc 1 285 0
 301 0028 284B     		ldr	r3, .L51+8
 302 002a B3F90010 		ldrsh	r1, [r3]
 303 002e 284B     		ldr	r3, .L51+12
 304 0030 B3F90020 		ldrsh	r2, [r3]
 305 0034 274B     		ldr	r3, .L51+16
 306 0036 B3F90030 		ldrsh	r3, [r3]
 307 003a 2748     		ldr	r0, .L51+20
 308 003c B0F90000 		ldrsh	r0, [r0]
 309 0040 264C     		ldr	r4, .L51+24
 310 0042 B4F90040 		ldrsh	r4, [r4]
 311 0046 0194     		str	r4, [sp, #4]
 312 0048 0090     		str	r0, [sp]
 313 004a 2548     		ldr	r0, .L51+28
 314 004c FFF7FEFF 		bl	printf
 315              	.LVL35:
 286:Src/mode.c    **** 
 287:Src/mode.c    ****         if (accel.x > 60)
 316              		.loc 1 287 0
 317 0050 244B     		ldr	r3, .L51+32
 318 0052 93ED007A 		vldr.32	s14, [r3]
 319 0056 DFED247A 		vldr.32	s15, .L51+36
 320 005a B4EEE77A 		vcmpe.f32	s14, s15
 321 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 322 0062 19DC     		bgt	.L47
 323              	.L43:
 261:Src/mode.c    ****         {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 12


 324              		.loc 1 261 0
 325 0064 1D4B     		ldr	r3, .L51+24
 326 0066 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 327 0068 012B     		cmp	r3, #1
 328 006a CED0     		beq	.L48
 267:Src/mode.c    ****         }
 329              		.loc 1 267 0
 330 006c 0122     		movs	r2, #1
 331 006e 8021     		movs	r1, #128
 332 0070 1448     		ldr	r0, .L51
 333 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL36:
 335              	.L38:
 269:Src/mode.c    ****         {
 336              		.loc 1 269 0
 337 0076 154B     		ldr	r3, .L51+8
 338 0078 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 339 007a 012B     		cmp	r3, #1
 340 007c CBD0     		beq	.L49
 275:Src/mode.c    ****         }
 341              		.loc 1 275 0
 342 007e 0122     		movs	r2, #1
 343 0080 1021     		movs	r1, #16
 344 0082 1148     		ldr	r0, .L51+4
 345 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL37:
 347              	.L40:
 277:Src/mode.c    ****         {
 348              		.loc 1 277 0
 349 0088 124B     		ldr	r3, .L51+16
 350 008a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 351 008c 012B     		cmp	r3, #1
 352 008e C8D0     		beq	.L50
 283:Src/mode.c    ****         }
 353              		.loc 1 283 0
 354 0090 0720     		movs	r0, #7
 355 0092 FFF7FEFF 		bl	Gpio_FullColor
 356              	.LVL38:
 357 0096 C7E7     		b	.L42
 358              	.L47:
 288:Src/mode.c    ****         {
 289:Src/mode.c    ****             Adc_IrSensorFinish();
 359              		.loc 1 289 0
 360 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 361              	.LVL39:
 290:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 362              		.loc 1 290 0
 363 009c 4FF49671 		mov	r1, #300
 364 00a0 4C20     		movs	r0, #76
 365 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 366              	.LVL40:
 291:Src/mode.c    ****             HAL_Delay(300);
 367              		.loc 1 291 0
 368 00a6 4FF49670 		mov	r0, #300
 369 00aa FFF7FEFF 		bl	HAL_Delay
 370              	.LVL41:
 292:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 13


 371              		.loc 1 292 0
 372 00ae 0021     		movs	r1, #0
 373 00b0 0A20     		movs	r0, #10
 374 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 375              	.LVL42:
 293:Src/mode.c    ****             HAL_Delay(500);
 376              		.loc 1 293 0
 377 00b6 4FF4FA70 		mov	r0, #500
 378 00ba FFF7FEFF 		bl	HAL_Delay
 379              	.LVL43:
 294:Src/mode.c    ****             break;
 295:Src/mode.c    ****         }
 296:Src/mode.c    ****     }
 297:Src/mode.c    **** }
 380              		.loc 1 297 0
 381 00be 02B0     		add	sp, sp, #8
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 00c0 10BD     		pop	{r4, pc}
 386              	.L52:
 387 00c2 00BF     		.align	2
 388              	.L51:
 389 00c4 00040240 		.word	1073873920
 390 00c8 00000240 		.word	1073872896
 391 00cc 00000000 		.word	sen_l
 392 00d0 00000000 		.word	sen_fl
 393 00d4 00000000 		.word	sen_front
 394 00d8 00000000 		.word	sen_fr
 395 00dc 00000000 		.word	sen_r
 396 00e0 00000000 		.word	.LC1
 397 00e4 00000000 		.word	accel
 398 00e8 00007042 		.word	1114636288
 399              		.cfi_endproc
 400              	.LFE128:
 402              		.section	.text.SetRunMode,"ax",%progbits
 403              		.align	1
 404              		.global	SetRunMode
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SetRunMode:
 411              	.LFB129:
 298:Src/mode.c    **** 
 299:Src/mode.c    **** void SetRunMode(void)
 300:Src/mode.c    **** {
 412              		.loc 1 300 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI4:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 301:Src/mode.c    ****     Adc_IrSensorStart();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 14


 421              		.loc 1 301 0
 422 0002 FFF7FEFF 		bl	Adc_IrSensorStart
 423              	.LVL44:
 424              	.L54:
 302:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 425              		.loc 1 302 0 discriminator 1
 426 0006 164B     		ldr	r3, .L56
 427 0008 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 428 000a 012B     		cmp	r3, #1
 429 000c FBD1     		bne	.L54
 303:Src/mode.c    ****     {
 304:Src/mode.c    ****     }
 305:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 430              		.loc 1 305 0
 431 000e 4FF49671 		mov	r1, #300
 432 0012 4C20     		movs	r0, #76
 433 0014 FFF7FEFF 		bl	Tim_BuzzerPwm
 434              	.LVL45:
 306:Src/mode.c    ****     HAL_Delay(100);
 435              		.loc 1 306 0
 436 0018 6420     		movs	r0, #100
 437 001a FFF7FEFF 		bl	HAL_Delay
 438              	.LVL46:
 307:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 439              		.loc 1 307 0
 440 001e 0021     		movs	r1, #0
 441 0020 0A20     		movs	r0, #10
 442 0022 FFF7FEFF 		bl	Tim_BuzzerPwm
 443              	.LVL47:
 308:Src/mode.c    ****     HAL_Delay(5000);
 444              		.loc 1 308 0
 445 0026 41F28830 		movw	r0, #5000
 446 002a FFF7FEFF 		bl	HAL_Delay
 447              	.LVL48:
 309:Src/mode.c    ****     Spi_GyroReset();
 448              		.loc 1 309 0
 449 002e FFF7FEFF 		bl	Spi_GyroReset
 450              	.LVL49:
 310:Src/mode.c    ****     HAL_Delay(1200);
 451              		.loc 1 310 0
 452 0032 4FF49660 		mov	r0, #1200
 453 0036 FFF7FEFF 		bl	HAL_Delay
 454              	.LVL50:
 311:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 455              		.loc 1 311 0
 456 003a 4FF49671 		mov	r1, #300
 457 003e 4C20     		movs	r0, #76
 458 0040 FFF7FEFF 		bl	Tim_BuzzerPwm
 459              	.LVL51:
 312:Src/mode.c    ****     HAL_Delay(100);
 460              		.loc 1 312 0
 461 0044 6420     		movs	r0, #100
 462 0046 FFF7FEFF 		bl	HAL_Delay
 463              	.LVL52:
 313:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 464              		.loc 1 313 0
 465 004a 0021     		movs	r1, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 15


 466 004c 0A20     		movs	r0, #10
 467 004e FFF7FEFF 		bl	Tim_BuzzerPwm
 468              	.LVL53:
 314:Src/mode.c    ****     Control_ResetVelo();
 469              		.loc 1 314 0
 470 0052 FFF7FEFF 		bl	Control_ResetVelo
 471              	.LVL54:
 315:Src/mode.c    ****     motor_flag = TRUE;
 472              		.loc 1 315 0
 473 0056 034B     		ldr	r3, .L56+4
 474 0058 0122     		movs	r2, #1
 475 005a 1A70     		strb	r2, [r3]
 316:Src/mode.c    **** }
 476              		.loc 1 316 0
 477 005c 08BD     		pop	{r3, pc}
 478              	.L57:
 479 005e 00BF     		.align	2
 480              	.L56:
 481 0060 00000000 		.word	sen_front
 482 0064 00000000 		.word	motor_flag
 483              		.cfi_endproc
 484              	.LFE129:
 486              		.section	.text.Get_WallData,"ax",%progbits
 487              		.align	1
 488              		.global	Get_WallData
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	Get_WallData:
 495              	.LFB130:
 317:Src/mode.c    **** 
 318:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 319:Src/mode.c    **** {
 496              		.loc 1 319 0
 497              		.cfi_startproc
 498              		@ args = 12, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL55:
 502 0000 10B4     		push	{r4}
 503              	.LCFI5:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 4, -4
 506 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 320:Src/mode.c    ****     // 方向別に壁の状態を取得
 321:Src/mode.c    ****     switch (direction)
 507              		.loc 1 321 0
 508 0006 032C     		cmp	r4, #3
 509 0008 0ED8     		bhi	.L58
 510 000a DFE804F0 		tbb	[pc, r4]
 511              	.L61:
 512 000e 02       		.byte	(.L60-.L61)/2
 513 000f 28       		.byte	(.L62-.L61)/2
 514 0010 1C       		.byte	(.L63-.L61)/2
 515 0011 10       		.byte	(.L64-.L61)/2
 516              		.p2align 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 16


 517              	.L60:
 322:Src/mode.c    ****     {
 323:Src/mode.c    ****     case NORTH:
 324:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 518              		.loc 1 324 0
 519 0012 194C     		ldr	r4, .L66
 520 0014 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 521 0016 0470     		strb	r4, [r0]
 325:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 522              		.loc 1 325 0
 523 0018 1848     		ldr	r0, .L66+4
 524              	.LVL56:
 525 001a 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 526 001c 0870     		strb	r0, [r1]
 326:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 527              		.loc 1 326 0
 528 001e 1849     		ldr	r1, .L66+8
 529              	.LVL57:
 530 0020 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 531 0022 1170     		strb	r1, [r2]
 327:Src/mode.c    ****         *s_wall = 0;
 532              		.loc 1 327 0
 533 0024 0022     		movs	r2, #0
 534              	.LVL58:
 535 0026 1A70     		strb	r2, [r3]
 536              	.LVL59:
 537              	.L58:
 328:Src/mode.c    ****         break;
 329:Src/mode.c    ****     case EAST:
 330:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 331:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 332:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 333:Src/mode.c    ****         *w_wall = 0;
 334:Src/mode.c    ****         break;
 335:Src/mode.c    ****     case SOUTH:
 336:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 337:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 338:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 339:Src/mode.c    ****         *n_wall = 0;
 340:Src/mode.c    ****         break;
 341:Src/mode.c    ****     case WEST:
 342:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 343:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 344:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 345:Src/mode.c    ****         *e_wall = 0;
 346:Src/mode.c    ****         break;
 347:Src/mode.c    ****     default:
 348:Src/mode.c    ****         break;
 349:Src/mode.c    ****     }
 350:Src/mode.c    **** }
 538              		.loc 1 350 0
 539 0028 5DF8044B 		ldr	r4, [sp], #4
 540              	.LCFI6:
 541              		.cfi_remember_state
 542              		.cfi_restore 4
 543              		.cfi_def_cfa_offset 0
 544              	.LVL60:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 17


 545 002c 7047     		bx	lr
 546              	.LVL61:
 547              	.L64:
 548              	.LCFI7:
 549              		.cfi_restore_state
 330:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 550              		.loc 1 330 0
 551 002e 124C     		ldr	r4, .L66
 552 0030 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 553 0032 0C70     		strb	r4, [r1]
 331:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 554              		.loc 1 331 0
 555 0034 1149     		ldr	r1, .L66+4
 556              	.LVL62:
 557 0036 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 558 0038 1970     		strb	r1, [r3]
 332:Src/mode.c    ****         *w_wall = 0;
 559              		.loc 1 332 0
 560 003a 114B     		ldr	r3, .L66+8
 561              	.LVL63:
 562 003c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 563 003e 0370     		strb	r3, [r0]
 333:Src/mode.c    ****         break;
 564              		.loc 1 333 0
 565 0040 0023     		movs	r3, #0
 566 0042 1370     		strb	r3, [r2]
 334:Src/mode.c    ****     case SOUTH:
 567              		.loc 1 334 0
 568 0044 F0E7     		b	.L58
 569              	.LVL64:
 570              	.L63:
 336:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 571              		.loc 1 336 0
 572 0046 0C4C     		ldr	r4, .L66
 573 0048 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 574 004a 1C70     		strb	r4, [r3]
 337:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 575              		.loc 1 337 0
 576 004c 0B4B     		ldr	r3, .L66+4
 577              	.LVL65:
 578 004e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 579 0050 1370     		strb	r3, [r2]
 338:Src/mode.c    ****         *n_wall = 0;
 580              		.loc 1 338 0
 581 0052 0B4B     		ldr	r3, .L66+8
 582 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 583 0056 0B70     		strb	r3, [r1]
 339:Src/mode.c    ****         break;
 584              		.loc 1 339 0
 585 0058 0023     		movs	r3, #0
 586 005a 0370     		strb	r3, [r0]
 340:Src/mode.c    ****     case WEST:
 587              		.loc 1 340 0
 588 005c E4E7     		b	.L58
 589              	.LVL66:
 590              	.L62:
 342:Src/mode.c    ****         *n_wall = sen_r.is_wall;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 18


 591              		.loc 1 342 0
 592 005e 064C     		ldr	r4, .L66
 593 0060 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 594 0062 1470     		strb	r4, [r2]
 343:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 595              		.loc 1 343 0
 596 0064 054A     		ldr	r2, .L66+4
 597              	.LVL67:
 598 0066 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 599 0068 0270     		strb	r2, [r0]
 344:Src/mode.c    ****         *e_wall = 0;
 600              		.loc 1 344 0
 601 006a 054A     		ldr	r2, .L66+8
 602 006c 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 603 006e 1A70     		strb	r2, [r3]
 345:Src/mode.c    ****         break;
 604              		.loc 1 345 0
 605 0070 0023     		movs	r3, #0
 606              	.LVL68:
 607 0072 0B70     		strb	r3, [r1]
 608              		.loc 1 350 0
 609 0074 D8E7     		b	.L58
 610              	.L67:
 611 0076 00BF     		.align	2
 612              	.L66:
 613 0078 00000000 		.word	sen_front
 614 007c 00000000 		.word	sen_r
 615 0080 00000000 		.word	sen_l
 616              		.cfi_endproc
 617              	.LFE130:
 619              		.section	.text.SearchRun,"ax",%progbits
 620              		.align	1
 621              		.global	SearchRun
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	SearchRun:
 628              	.LFB131:
 351:Src/mode.c    **** 
 352:Src/mode.c    **** void SearchRun(void)
 353:Src/mode.c    **** {
 629              		.loc 1 353 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 288
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633 0000 30B5     		push	{r4, r5, lr}
 634              	.LCFI8:
 635              		.cfi_def_cfa_offset 12
 636              		.cfi_offset 4, -12
 637              		.cfi_offset 5, -8
 638              		.cfi_offset 14, -4
 639 0002 CDB0     		sub	sp, sp, #308
 640              	.LCFI9:
 641              		.cfi_def_cfa_offset 320
 354:Src/mode.c    ****     //壁情報を持った構造体を定義
 355:Src/mode.c    ****     wallData_t wall_data;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 19


 356:Src/mode.c    ****     wallData_t wall_data_fast;
 357:Src/mode.c    **** 
 358:Src/mode.c    ****     //ポジションを定義、初期化
 359:Src/mode.c    ****     pos_t mypos;
 360:Src/mode.c    ****     mypos.dir = 0;
 642              		.loc 1 360 0
 643 0004 0024     		movs	r4, #0
 644 0006 8DF81E40 		strb	r4, [sp, #30]
 361:Src/mode.c    ****     mypos.x = 0;
 645              		.loc 1 361 0
 646 000a 8DF81C40 		strb	r4, [sp, #28]
 362:Src/mode.c    ****     mypos.y = 1;
 647              		.loc 1 362 0
 648 000e 0125     		movs	r5, #1
 649 0010 8DF81D50 		strb	r5, [sp, #29]
 363:Src/mode.c    **** 
 364:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 365:Src/mode.c    ****     Map_Init(&wall_data);
 650              		.loc 1 365 0
 651 0014 2AA8     		add	r0, sp, #168
 652 0016 FFF7FEFF 		bl	Map_Init
 653              	.LVL69:
 366:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 654              		.loc 1 366 0
 655 001a 08A8     		add	r0, sp, #32
 656 001c FFF7FEFF 		bl	Map_InitFast
 657              	.LVL70:
 367:Src/mode.c    **** 
 368:Src/mode.c    ****     //歩数マップの作製
 369:Src/mode.c    ****     uint16_t nextdir = FRONT;
 370:Src/mode.c    ****     //最初の区画は進んでいるものとする
 371:Src/mode.c    ****     unsigned char flag_goal = 0;
 658              		.loc 1 371 0
 659 0020 8DF81B40 		strb	r4, [sp, #27]
 372:Src/mode.c    ****     //enable control side wall
 373:Src/mode.c    ****     control_wall_flag = TRUE;
 660              		.loc 1 373 0
 661 0024 764B     		ldr	r3, .L75
 662 0026 1D70     		strb	r5, [r3]
 374:Src/mode.c    ****     SetRunMode();
 663              		.loc 1 374 0
 664 0028 FFF7FEFF 		bl	SetRunMode
 665              	.LVL71:
 375:Src/mode.c    ****     Motion_Start();
 666              		.loc 1 375 0
 667 002c FFF7FEFF 		bl	Motion_Start
 668              	.LVL72:
 669 0030 0DE0     		b	.L72
 670              	.LVL73:
 671              	.L70:
 672              	.LBB2:
 376:Src/mode.c    ****     while (1)
 377:Src/mode.c    ****     {
 378:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 379:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 380:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 381:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 20


 382:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 383:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 384:Src/mode.c    **** 
 385:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 386:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 387:Src/mode.c    ****         Maze_UpdatePosition(nextdir, &mypos);
 388:Src/mode.c    ****         Motion_Switch(nextdir);
 389:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 390:Src/mode.c    ****         {
 391:Src/mode.c    ****             if (flag_goal == 0)
 392:Src/mode.c    ****             {
 393:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 394:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 395:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 396:Src/mode.c    ****                 Motion_End();
 397:Src/mode.c    ****                 motor_flag = FALSE;
 398:Src/mode.c    ****                 flag_goal = 1;
 399:Src/mode.c    ****                 HAL_Delay(1000);
 400:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 401:Src/mode.c    ****                 HAL_Delay(2000);
 402:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 403:Src/mode.c    ****                 HAL_Delay(200);
 404:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 405:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 406:Src/mode.c    ****                 {
 407:Src/mode.c    ****                     nextdir = FRONT;
 408:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 409:Src/mode.c    ****                     motor_flag = TRUE;
 410:Src/mode.c    ****                     Motion_Restart(FALSE);
 411:Src/mode.c    ****                 }
 412:Src/mode.c    ****                 else
 413:Src/mode.c    ****                 {
 414:Src/mode.c    ****                     nextdir = PIVO_REAR;
 415:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 673              		.loc 1 415 0
 674 0032 07A9     		add	r1, sp, #28
 675 0034 0420     		movs	r0, #4
 676 0036 FFF7FEFF 		bl	Maze_UpdatePosition
 677              	.LVL74:
 416:Src/mode.c    ****                     motor_flag = TRUE;
 678              		.loc 1 416 0
 679 003a 0120     		movs	r0, #1
 680 003c 714B     		ldr	r3, .L75+4
 681 003e 1870     		strb	r0, [r3]
 417:Src/mode.c    ****                     Motion_Restart(TRUE);
 682              		.loc 1 417 0
 683 0040 FFF7FEFF 		bl	Motion_Restart
 684              	.LVL75:
 685              	.L69:
 418:Src/mode.c    ****                 }
 419:Src/mode.c    ****             }
 420:Src/mode.c    ****         }
 421:Src/mode.c    ****         if (flag_goal == 2)
 686              		.loc 1 421 0
 687 0044 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 688 0048 022B     		cmp	r3, #2
 689 004a 00F0B780 		beq	.L74
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 21


 690              	.L72:
 378:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 691              		.loc 1 378 0
 692 004e 0023     		movs	r3, #0
 693 0050 8DF81730 		strb	r3, [sp, #23]
 694 0054 8DF81830 		strb	r3, [sp, #24]
 695 0058 8DF81930 		strb	r3, [sp, #25]
 696 005c 8DF81A30 		strb	r3, [sp, #26]
 380:Src/mode.c    **** 
 697              		.loc 1 380 0
 698 0060 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 699 0064 0293     		str	r3, [sp, #8]
 700 0066 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 701 006a 0193     		str	r3, [sp, #4]
 702 006c 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 703 0070 0093     		str	r3, [sp]
 704 0072 0DF11A03 		add	r3, sp, #26
 705 0076 0DF11902 		add	r2, sp, #25
 706 007a 06A9     		add	r1, sp, #24
 707 007c 0DF11700 		add	r0, sp, #23
 708 0080 FFF7FEFF 		bl	Get_WallData
 709              	.LVL76:
 382:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 710              		.loc 1 382 0
 711 0084 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 712 0088 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 713 008c 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 714 0090 0191     		str	r1, [sp, #4]
 715 0092 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 716 0096 0091     		str	r1, [sp]
 717 0098 07A9     		add	r1, sp, #28
 718 009a 2AA8     		add	r0, sp, #168
 719 009c FFF7FEFF 		bl	Map_addWall
 720              	.LVL77:
 383:Src/mode.c    **** 
 721              		.loc 1 383 0
 722 00a0 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 723 00a4 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 724 00a8 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 725 00ac 0191     		str	r1, [sp, #4]
 726 00ae 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 727 00b2 0091     		str	r1, [sp]
 728 00b4 07A9     		add	r1, sp, #28
 729 00b6 08A8     		add	r0, sp, #32
 730 00b8 FFF7FEFF 		bl	Map_DelWall
 731              	.LVL78:
 385:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 732              		.loc 1 385 0
 733 00bc 524C     		ldr	r4, .L75+8
 734 00be 2AAB     		add	r3, sp, #168
 735 00c0 524A     		ldr	r2, .L75+12
 736 00c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 737 00c4 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 738 00c6 0DF11B00 		add	r0, sp, #27
 739 00ca FFF7FEFF 		bl	Maze_UpdateStepMap
 740              	.LVL79:
 386:Src/mode.c    ****         Maze_UpdatePosition(nextdir, &mypos);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 22


 741              		.loc 1 386 0
 742 00ce 2AA9     		add	r1, sp, #168
 743 00d0 07A8     		add	r0, sp, #28
 744 00d2 FFF7FEFF 		bl	Maze_GetNextMotion
 745              	.LVL80:
 746 00d6 0546     		mov	r5, r0
 747              	.LVL81:
 387:Src/mode.c    ****         Motion_Switch(nextdir);
 748              		.loc 1 387 0
 749 00d8 07A9     		add	r1, sp, #28
 750 00da 80B2     		uxth	r0, r0
 751 00dc FFF7FEFF 		bl	Maze_UpdatePosition
 752              	.LVL82:
 388:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 753              		.loc 1 388 0
 754 00e0 2846     		mov	r0, r5
 755 00e2 FFF7FEFF 		bl	Motion_Switch
 756              	.LVL83:
 389:Src/mode.c    ****         {
 757              		.loc 1 389 0
 758 00e6 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 759 00ea 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 760 00ec 9342     		cmp	r3, r2
 761 00ee A9D1     		bne	.L69
 389:Src/mode.c    ****         {
 762              		.loc 1 389 0 is_stmt 0 discriminator 1
 763 00f0 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 764 00f4 4549     		ldr	r1, .L75+12
 765 00f6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 766 00f8 8A42     		cmp	r2, r1
 767 00fa A3D1     		bne	.L69
 391:Src/mode.c    ****             {
 768              		.loc 1 391 0 is_stmt 1
 769 00fc 9DF81B10 		ldrb	r1, [sp, #27]	@ zero_extendqisi2
 770 0100 0029     		cmp	r1, #0
 771 0102 9FD1     		bne	.L69
 393:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 772              		.loc 1 393 0
 773 0104 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 774 0108 0291     		str	r1, [sp, #8]
 775 010a 0192     		str	r2, [sp, #4]
 776 010c 0093     		str	r3, [sp]
 777 010e 0DF11A03 		add	r3, sp, #26
 778 0112 0DF11902 		add	r2, sp, #25
 779 0116 06A9     		add	r1, sp, #24
 780 0118 0DF11700 		add	r0, sp, #23
 781 011c FFF7FEFF 		bl	Get_WallData
 782              	.LVL84:
 394:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 783              		.loc 1 394 0
 784 0120 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 785 0124 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 786 0128 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 787 012c 0191     		str	r1, [sp, #4]
 788 012e 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 789 0132 0091     		str	r1, [sp]
 790 0134 07A9     		add	r1, sp, #28
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 23


 791 0136 2AA8     		add	r0, sp, #168
 792 0138 FFF7FEFF 		bl	Map_addWall
 793              	.LVL85:
 395:Src/mode.c    ****                 Motion_End();
 794              		.loc 1 395 0
 795 013c 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 796 0140 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 797 0144 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 798 0148 0191     		str	r1, [sp, #4]
 799 014a 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 800 014e 0091     		str	r1, [sp]
 801 0150 07A9     		add	r1, sp, #28
 802 0152 08A8     		add	r0, sp, #32
 803 0154 FFF7FEFF 		bl	Map_DelWall
 804              	.LVL86:
 396:Src/mode.c    ****                 motor_flag = FALSE;
 805              		.loc 1 396 0
 806 0158 FFF7FEFF 		bl	Motion_End
 807              	.LVL87:
 397:Src/mode.c    ****                 flag_goal = 1;
 808              		.loc 1 397 0
 809 015c 0024     		movs	r4, #0
 810 015e 294B     		ldr	r3, .L75+4
 811 0160 1C70     		strb	r4, [r3]
 398:Src/mode.c    ****                 HAL_Delay(1000);
 812              		.loc 1 398 0
 813 0162 0123     		movs	r3, #1
 814 0164 8DF81B30 		strb	r3, [sp, #27]
 399:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 815              		.loc 1 399 0
 816 0168 4FF47A70 		mov	r0, #1000
 817 016c FFF7FEFF 		bl	HAL_Delay
 818              	.LVL88:
 400:Src/mode.c    ****                 HAL_Delay(2000);
 819              		.loc 1 400 0
 820 0170 8822     		movs	r2, #136
 821 0172 08A9     		add	r1, sp, #32
 822 0174 264B     		ldr	r3, .L75+16
 823 0176 1868     		ldr	r0, [r3]
 824 0178 FFF7FEFF 		bl	Flash_Write
 825              	.LVL89:
 401:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 826              		.loc 1 401 0
 827 017c 4FF4FA60 		mov	r0, #2000
 828 0180 FFF7FEFF 		bl	HAL_Delay
 829              	.LVL90:
 402:Src/mode.c    ****                 HAL_Delay(200);
 830              		.loc 1 402 0
 831 0184 4FF49671 		mov	r1, #300
 832 0188 5B20     		movs	r0, #91
 833 018a FFF7FEFF 		bl	Tim_BuzzerPwm
 834              	.LVL91:
 403:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 835              		.loc 1 403 0
 836 018e C820     		movs	r0, #200
 837 0190 FFF7FEFF 		bl	HAL_Delay
 838              	.LVL92:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 24


 404:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 839              		.loc 1 404 0
 840 0194 2146     		mov	r1, r4
 841 0196 0A20     		movs	r0, #10
 842 0198 FFF7FEFF 		bl	Tim_BuzzerPwm
 843              	.LVL93:
 405:Src/mode.c    ****                 {
 844              		.loc 1 405 0
 845 019c 1D4B     		ldr	r3, .L75+20
 846 019e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 847 01a0 002B     		cmp	r3, #0
 848 01a2 7FF446AF 		bne	.L70
 849              	.LVL94:
 408:Src/mode.c    ****                     motor_flag = TRUE;
 850              		.loc 1 408 0
 851 01a6 07A9     		add	r1, sp, #28
 852 01a8 2046     		mov	r0, r4
 853 01aa FFF7FEFF 		bl	Maze_UpdatePosition
 854              	.LVL95:
 409:Src/mode.c    ****                     Motion_Restart(FALSE);
 855              		.loc 1 409 0
 856 01ae 154B     		ldr	r3, .L75+4
 857 01b0 0122     		movs	r2, #1
 858 01b2 1A70     		strb	r2, [r3]
 410:Src/mode.c    ****                 }
 859              		.loc 1 410 0
 860 01b4 2046     		mov	r0, r4
 861 01b6 FFF7FEFF 		bl	Motion_Restart
 862              	.LVL96:
 863 01ba 43E7     		b	.L69
 864              	.LVL97:
 865              	.L74:
 422:Src/mode.c    ****         {
 423:Src/mode.c    **** 
 424:Src/mode.c    ****             Motion_End();
 866              		.loc 1 424 0
 867 01bc FFF7FEFF 		bl	Motion_End
 868              	.LVL98:
 425:Src/mode.c    ****             motor_flag = FALSE;
 869              		.loc 1 425 0
 870 01c0 0024     		movs	r4, #0
 871 01c2 104B     		ldr	r3, .L75+4
 872 01c4 1C70     		strb	r4, [r3]
 426:Src/mode.c    ****             HAL_Delay(1000);
 873              		.loc 1 426 0
 874 01c6 4FF47A70 		mov	r0, #1000
 875 01ca FFF7FEFF 		bl	HAL_Delay
 876              	.LVL99:
 427:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 877              		.loc 1 427 0
 878 01ce 8822     		movs	r2, #136
 879 01d0 08A9     		add	r1, sp, #32
 880 01d2 0F4B     		ldr	r3, .L75+16
 881 01d4 1868     		ldr	r0, [r3]
 882 01d6 FFF7FEFF 		bl	Flash_Write
 883              	.LVL100:
 428:Src/mode.c    ****             HAL_Delay(2000);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 25


 884              		.loc 1 428 0
 885 01da 4FF4FA60 		mov	r0, #2000
 886 01de FFF7FEFF 		bl	HAL_Delay
 887              	.LVL101:
 429:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 888              		.loc 1 429 0
 889 01e2 4FF49671 		mov	r1, #300
 890 01e6 5B20     		movs	r0, #91
 891 01e8 FFF7FEFF 		bl	Tim_BuzzerPwm
 892              	.LVL102:
 430:Src/mode.c    ****             HAL_Delay(200);
 893              		.loc 1 430 0
 894 01ec C820     		movs	r0, #200
 895 01ee FFF7FEFF 		bl	HAL_Delay
 896              	.LVL103:
 431:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 897              		.loc 1 431 0
 898 01f2 2146     		mov	r1, r4
 899 01f4 0A20     		movs	r0, #10
 900 01f6 FFF7FEFF 		bl	Tim_BuzzerPwm
 901              	.LVL104:
 902              	.LBE2:
 432:Src/mode.c    ****             break;
 433:Src/mode.c    ****         }
 434:Src/mode.c    ****     }
 435:Src/mode.c    **** }
 903              		.loc 1 435 0
 904 01fa 4DB0     		add	sp, sp, #308
 905              	.LCFI10:
 906              		.cfi_def_cfa_offset 12
 907              		@ sp needed
 908 01fc 30BD     		pop	{r4, r5, pc}
 909              	.L76:
 910 01fe 00BF     		.align	2
 911              	.L75:
 912 0200 00000000 		.word	control_wall_flag
 913 0204 00000000 		.word	motor_flag
 914 0208 00000000 		.word	.LANCHOR1
 915 020c 00000000 		.word	.LANCHOR0
 916 0210 00000000 		.word	start_address
 917 0214 00000000 		.word	sen_front
 918              		.cfi_endproc
 919              	.LFE131:
 921              		.section	.text.Mode_FastRun,"ax",%progbits
 922              		.align	1
 923              		.global	Mode_FastRun
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
 927              		.fpu fpv4-sp-d16
 929              	Mode_FastRun:
 930              	.LFB132:
 436:Src/mode.c    **** 
 437:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, uint8_t w_str, uint8_t w_turn)
 438:Src/mode.c    **** {
 931              		.loc 1 438 0
 932              		.cfi_startproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 26


 933              		@ args = 0, pretend = 0, frame = 1680
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              	.LVL105:
 936 0000 30B5     		push	{r4, r5, lr}
 937              	.LCFI11:
 938              		.cfi_def_cfa_offset 12
 939              		.cfi_offset 4, -12
 940              		.cfi_offset 5, -8
 941              		.cfi_offset 14, -4
 942 0002 ADF29C6D 		subw	sp, sp, #1692
 943              	.LCFI12:
 944              		.cfi_def_cfa_offset 1704
 945 0006 0446     		mov	r4, r0
 439:Src/mode.c    ****     wallData_t wallData;
 440:Src/mode.c    ****     pos_t pos;
 441:Src/mode.c    ****     uint16_t motion[255];
 442:Src/mode.c    ****     uint32_t velocity[255];
 443:Src/mode.c    ****     uint8_t tail = 0;
 946              		.loc 1 443 0
 947 0008 0025     		movs	r5, #0
 948 000a 8DF80F50 		strb	r5, [sp, #15]
 949              	.LVL106:
 444:Src/mode.c    ****     uint8_t head = 0;
 445:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 950              		.loc 1 445 0
 951 000e 8822     		movs	r2, #136
 952              	.LVL107:
 953 0010 0DF5C261 		add	r1, sp, #1552
 954              	.LVL108:
 955 0014 774B     		ldr	r3, .L94
 956 0016 1868     		ldr	r0, [r3]
 957              	.LVL109:
 958 0018 FFF7FEFF 		bl	Flash_Load
 959              	.LVL110:
 446:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, 7, 5, 4, 7);
 960              		.loc 1 446 0
 961 001c 0721     		movs	r1, #7
 962 001e 0091     		str	r1, [sp]
 963 0020 0423     		movs	r3, #4
 964 0022 0522     		movs	r2, #5
 965 0024 0DF5C260 		add	r0, sp, #1552
 966 0028 FFF7FEFF 		bl	Maze_UpdateStepMapEx
 967              	.LVL111:
 447:Src/mode.c    ****     pos.dir = NORTH;
 968              		.loc 1 447 0
 969 002c 8DF80E56 		strb	r5, [sp, #1550]
 448:Src/mode.c    ****     pos.x = 0;
 970              		.loc 1 448 0
 971 0030 8DF80C56 		strb	r5, [sp, #1548]
 449:Src/mode.c    ****     pos.y = 1;
 972              		.loc 1 449 0
 973 0034 0123     		movs	r3, #1
 974 0036 8DF80D36 		strb	r3, [sp, #1549]
 450:Src/mode.c    ****     motion[tail] = START;
 975              		.loc 1 450 0
 976 003a 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 977 003e 0DF20C42 		addw	r2, sp, #1036
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 27


 978 0042 0521     		movs	r1, #5
 979 0044 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 451:Src/mode.c    ****     tail++;
 980              		.loc 1 451 0
 981 0048 0133     		adds	r3, r3, #1
 982 004a DBB2     		uxtb	r3, r3
 452:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 983              		.loc 1 452 0
 984 004c 1021     		movs	r1, #16
 985 004e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 453:Src/mode.c    ****     tail++;
 986              		.loc 1 453 0
 987 0052 0133     		adds	r3, r3, #1
 988 0054 8DF80F30 		strb	r3, [sp, #15]
 989              	.LVL112:
 454:Src/mode.c    ****     head += 2;
 455:Src/mode.c    ****     while (pos.x != gx || pos.y != gy)
 990              		.loc 1 455 0
 991 0058 14E0     		b	.L78
 992              	.L79:
 993              	.LBB3:
 456:Src/mode.c    ****     {
 457:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 994              		.loc 1 457 0
 995 005a 0DF5C261 		add	r1, sp, #1552
 996 005e 0DF20C60 		addw	r0, sp, #1548
 997 0062 FFF7FEFF 		bl	Maze_GetNextMotionEx
 998              	.LVL113:
 458:Src/mode.c    ****         motion[tail] = buff;
 999              		.loc 1 458 0
 1000 0066 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1001 006a 0DF20C42 		addw	r2, sp, #1036
 1002 006e 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 459:Src/mode.c    ****         tail++;
 1003              		.loc 1 459 0
 1004 0072 0133     		adds	r3, r3, #1
 1005 0074 8DF80F30 		strb	r3, [sp, #15]
 460:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1006              		.loc 1 460 0
 1007 0078 0DF20C61 		addw	r1, sp, #1548
 1008 007c 00F00F00 		and	r0, r0, #15
 1009              	.LVL114:
 1010 0080 FFF7FEFF 		bl	Maze_UpdatePosition
 1011              	.LVL115:
 1012              	.L78:
 1013              	.LBE3:
 455:Src/mode.c    ****     {
 1014              		.loc 1 455 0
 1015 0084 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1016 0088 5B4B     		ldr	r3, .L94+4
 1017 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 008c 9A42     		cmp	r2, r3
 1019 008e E4D1     		bne	.L79
 455:Src/mode.c    ****     {
 1020              		.loc 1 455 0 is_stmt 0 discriminator 1
 1021 0090 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1022 0094 594B     		ldr	r3, .L94+8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 28


 1023 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 0098 9A42     		cmp	r2, r3
 1025 009a DED1     		bne	.L79
 461:Src/mode.c    ****     }
 462:Src/mode.c    ****     motion[tail] = GOAL;
 1026              		.loc 1 462 0 is_stmt 1
 1027 009c 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1028 00a0 0DF20C41 		addw	r1, sp, #1036
 1029 00a4 0622     		movs	r2, #6
 1030 00a6 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 463:Src/mode.c    ****     tail++;
 1031              		.loc 1 463 0
 1032 00aa 0133     		adds	r3, r3, #1
 1033 00ac 8DF80F30 		strb	r3, [sp, #15]
 1034              	.LVL116:
 464:Src/mode.c    ****     head = 0;
 465:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail);
 1035              		.loc 1 465 0
 1036 00b0 0DF10F03 		add	r3, sp, #15
 1037 00b4 04AA     		add	r2, sp, #16
 1038 00b6 2046     		mov	r0, r4
 1039 00b8 FFF7FEFF 		bl	Maze_Compress
 1040              	.LVL117:
 466:Src/mode.c    **** 
 467:Src/mode.c    ****     control_wall_flag = 2;
 1041              		.loc 1 467 0
 1042 00bc 504B     		ldr	r3, .L94+12
 1043 00be 0222     		movs	r2, #2
 1044 00c0 1A70     		strb	r2, [r3]
 468:Src/mode.c    ****     SetRunMode();
 1045              		.loc 1 468 0
 1046 00c2 FFF7FEFF 		bl	SetRunMode
 1047              	.LVL118:
 464:Src/mode.c    ****     head = 0;
 1048              		.loc 1 464 0
 1049 00c6 0024     		movs	r4, #0
 469:Src/mode.c    ****     while (head != tail)
 1050              		.loc 1 469 0
 1051 00c8 0CE0     		b	.L80
 1052              	.LVL119:
 1053              	.L86:
 470:Src/mode.c    ****     {
 471:Src/mode.c    ****         switch (motion[head] & 0xf)
 472:Src/mode.c    ****         {
 473:Src/mode.c    ****         case START:
 474:Src/mode.c    ****             Motion_FastStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1054              		.loc 1 474 0
 1055 00ca 04AB     		add	r3, sp, #16
 1056 00cc 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1057 00d0 00EE103A 		vmov	s0, r3	@ int
 1058 00d4 B8EE400A 		vcvt.f32.u32	s0, s0
 1059 00d8 C0F30710 		ubfx	r0, r0, #4, #8
 1060 00dc FFF7FEFF 		bl	Motion_FastStart
 1061              	.LVL120:
 1062              	.L81:
 475:Src/mode.c    ****             break;
 476:Src/mode.c    ****         case LEFT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 29


 477:Src/mode.c    ****             Motion_FastLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 478:Src/mode.c    ****             break;
 479:Src/mode.c    ****         case FRONT:
 480:Src/mode.c    ****             Motion_FastStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(velocity[
 481:Src/mode.c    ****             break;
 482:Src/mode.c    ****         case DIAGONAL_L:
 483:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 484:Src/mode.c    ****             break;
 485:Src/mode.c    ****         case DIAGONAL_R:
 486:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
 487:Src/mode.c    ****             break;
 488:Src/mode.c    ****         case RIGHT:
 489:Src/mode.c    ****             Motion_FastRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 490:Src/mode.c    ****             break;
 491:Src/mode.c    ****         case GOAL:
 492:Src/mode.c    ****             Motion_FastGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 493:Src/mode.c    ****             break;
 494:Src/mode.c    ****         case ADJUST:
 495:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 496:Src/mode.c    ****             break;
 497:Src/mode.c    ****         default:
 498:Src/mode.c    ****             break;
 499:Src/mode.c    ****         }
 500:Src/mode.c    ****         head++;
 1063              		.loc 1 500 0
 1064 00e0 0134     		adds	r4, r4, #1
 1065              	.LVL121:
 1066 00e2 E4B2     		uxtb	r4, r4
 1067              	.LVL122:
 1068              	.L80:
 469:Src/mode.c    ****     {
 1069              		.loc 1 469 0
 1070 00e4 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1071 00e8 A342     		cmp	r3, r4
 1072 00ea 6ED0     		beq	.L93
 471:Src/mode.c    ****         {
 1073              		.loc 1 471 0
 1074 00ec 0DF20C43 		addw	r3, sp, #1036
 1075 00f0 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1076 00f4 00F00F03 		and	r3, r0, #15
 1077 00f8 0A2B     		cmp	r3, #10
 1078 00fa F1D8     		bhi	.L81
 1079 00fc 01A2     		adr	r2, .L83
 1080 00fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1081 0102 00BF     		.p2align 2
 1082              	.L83:
 1083 0104 49010000 		.word	.L82+1
 1084 0108 31010000 		.word	.L84+1
 1085 010c 81010000 		.word	.L85+1
 1086 0110 E1000000 		.word	.L81+1
 1087 0114 E1000000 		.word	.L81+1
 1088 0118 CB000000 		.word	.L86+1
 1089 011c 99010000 		.word	.L87+1
 1090 0120 E1000000 		.word	.L81+1
 1091 0124 6D010000 		.word	.L88+1
 1092 0128 77010000 		.word	.L89+1
 1093 012c B3010000 		.word	.L90+1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 30


 1094              		.p2align 1
 1095              	.L84:
 477:Src/mode.c    ****             break;
 1096              		.loc 1 477 0
 1097 0130 04AB     		add	r3, sp, #16
 1098 0132 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1099 0136 00EE103A 		vmov	s0, r3	@ int
 1100 013a B8EE400A 		vcvt.f32.u32	s0, s0
 1101 013e C0F30710 		ubfx	r0, r0, #4, #8
 1102 0142 FFF7FEFF 		bl	Motion_FastLeftTurn
 1103              	.LVL123:
 478:Src/mode.c    ****         case FRONT:
 1104              		.loc 1 478 0
 1105 0146 CBE7     		b	.L81
 1106              	.L82:
 480:Src/mode.c    ****             break;
 1107              		.loc 1 480 0
 1108 0148 04AB     		add	r3, sp, #16
 1109 014a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1110 014e 1A0C     		lsrs	r2, r3, #16
 1111 0150 00EE102A 		vmov	s0, r2	@ int
 1112 0154 9BB2     		uxth	r3, r3
 1113 0156 00EE903A 		vmov	s1, r3	@ int
 1114 015a F8EE600A 		vcvt.f32.u32	s1, s1
 1115 015e B8EE400A 		vcvt.f32.u32	s0, s0
 1116 0162 C0F30710 		ubfx	r0, r0, #4, #8
 1117 0166 FFF7FEFF 		bl	Motion_FastStraight
 1118              	.LVL124:
 481:Src/mode.c    ****         case DIAGONAL_L:
 1119              		.loc 1 481 0
 1120 016a B9E7     		b	.L81
 1121              	.L88:
 483:Src/mode.c    ****             break;
 1122              		.loc 1 483 0
 1123 016c C0F30710 		ubfx	r0, r0, #4, #8
 1124 0170 FFF7FEFF 		bl	Motion_DiagonalLeft
 1125              	.LVL125:
 484:Src/mode.c    ****         case DIAGONAL_R:
 1126              		.loc 1 484 0
 1127 0174 B4E7     		b	.L81
 1128              	.L89:
 486:Src/mode.c    ****             break;
 1129              		.loc 1 486 0
 1130 0176 C0F30710 		ubfx	r0, r0, #4, #8
 1131 017a FFF7FEFF 		bl	Motion_DiagonalRight
 1132              	.LVL126:
 487:Src/mode.c    ****         case RIGHT:
 1133              		.loc 1 487 0
 1134 017e AFE7     		b	.L81
 1135              	.L85:
 489:Src/mode.c    ****             break;
 1136              		.loc 1 489 0
 1137 0180 04AB     		add	r3, sp, #16
 1138 0182 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1139 0186 00EE103A 		vmov	s0, r3	@ int
 1140 018a B8EE400A 		vcvt.f32.u32	s0, s0
 1141 018e C0F30710 		ubfx	r0, r0, #4, #8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 31


 1142 0192 FFF7FEFF 		bl	Motion_FastRightTurn
 1143              	.LVL127:
 490:Src/mode.c    ****         case GOAL:
 1144              		.loc 1 490 0
 1145 0196 A3E7     		b	.L81
 1146              	.L87:
 492:Src/mode.c    ****             break;
 1147              		.loc 1 492 0
 1148 0198 04AB     		add	r3, sp, #16
 1149 019a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1150 019e 1B0C     		lsrs	r3, r3, #16
 1151 01a0 00EE103A 		vmov	s0, r3	@ int
 1152 01a4 B8EE400A 		vcvt.f32.u32	s0, s0
 1153 01a8 C0F30710 		ubfx	r0, r0, #4, #8
 1154 01ac FFF7FEFF 		bl	Motion_FastGoal
 1155              	.LVL128:
 493:Src/mode.c    ****         case ADJUST:
 1156              		.loc 1 493 0
 1157 01b0 96E7     		b	.L81
 1158              	.L90:
 495:Src/mode.c    ****             break;
 1159              		.loc 1 495 0
 1160 01b2 04AB     		add	r3, sp, #16
 1161 01b4 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1162 01b8 1B0C     		lsrs	r3, r3, #16
 1163 01ba 00EE103A 		vmov	s0, r3	@ int
 1164 01be B8EE400A 		vcvt.f32.u32	s0, s0
 1165 01c2 0009     		lsrs	r0, r0, #4
 1166 01c4 FFF7FEFF 		bl	Motion_Adjust
 1167              	.LVL129:
 496:Src/mode.c    ****         default:
 1168              		.loc 1 496 0
 1169 01c8 8AE7     		b	.L81
 1170              	.L93:
 501:Src/mode.c    ****     }
 502:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 503:Src/mode.c    ****     Tim_MotorBrake();
 1171              		.loc 1 503 0
 1172 01ca FFF7FEFF 		bl	Tim_MotorBrake
 1173              	.LVL130:
 504:Src/mode.c    ****     motor_flag = FALSE;
 1174              		.loc 1 504 0
 1175 01ce 0024     		movs	r4, #0
 1176              	.LVL131:
 1177 01d0 0C4B     		ldr	r3, .L94+16
 1178 01d2 1C70     		strb	r4, [r3]
 505:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1179              		.loc 1 505 0
 1180 01d4 4FF49671 		mov	r1, #300
 1181 01d8 4C20     		movs	r0, #76
 1182 01da FFF7FEFF 		bl	Tim_BuzzerPwm
 1183              	.LVL132:
 506:Src/mode.c    ****     HAL_Delay(200);
 1184              		.loc 1 506 0
 1185 01de C820     		movs	r0, #200
 1186 01e0 FFF7FEFF 		bl	HAL_Delay
 1187              	.LVL133:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 32


 507:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1188              		.loc 1 507 0
 1189 01e4 2146     		mov	r1, r4
 1190 01e6 0A20     		movs	r0, #10
 1191 01e8 FFF7FEFF 		bl	Tim_BuzzerPwm
 1192              	.LVL134:
 508:Src/mode.c    **** }
 1193              		.loc 1 508 0
 1194 01ec 0DF29C6D 		addw	sp, sp, #1692
 1195              	.LCFI13:
 1196              		.cfi_def_cfa_offset 12
 1197              		@ sp needed
 1198 01f0 30BD     		pop	{r4, r5, pc}
 1199              	.L95:
 1200 01f2 00BF     		.align	2
 1201              	.L94:
 1202 01f4 00000000 		.word	start_address
 1203 01f8 00000000 		.word	.LANCHOR1
 1204 01fc 00000000 		.word	.LANCHOR0
 1205 0200 00000000 		.word	control_wall_flag
 1206 0204 00000000 		.word	motor_flag
 1207              		.cfi_endproc
 1208              	.LFE132:
 1210              		.section	.text.CheckStraight,"ax",%progbits
 1211              		.align	1
 1212              		.global	CheckStraight
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv4-sp-d16
 1218              	CheckStraight:
 1219              	.LFB133:
 509:Src/mode.c    **** 
 510:Src/mode.c    **** void CheckStraight(uint8_t block)
 511:Src/mode.c    **** {
 1220              		.loc 1 511 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              	.LVL135:
 1225 0000 38B5     		push	{r3, r4, r5, lr}
 1226              	.LCFI14:
 1227              		.cfi_def_cfa_offset 16
 1228              		.cfi_offset 3, -16
 1229              		.cfi_offset 4, -12
 1230              		.cfi_offset 5, -8
 1231              		.cfi_offset 14, -4
 1232 0002 0546     		mov	r5, r0
 512:Src/mode.c    ****     SetRunMode();
 1233              		.loc 1 512 0
 1234 0004 FFF7FEFF 		bl	SetRunMode
 1235              	.LVL136:
 513:Src/mode.c    ****     enc.distance = 0;
 1236              		.loc 1 513 0
 1237 0008 144B     		ldr	r3, .L100
 1238 000a 0022     		movs	r2, #0
 1239 000c 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 33


 514:Src/mode.c    ****     Motion_Start();
 1240              		.loc 1 514 0
 1241 000e FFF7FEFF 		bl	Motion_Start
 1242              	.LVL137:
 1243              	.LBB4:
 515:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1244              		.loc 1 515 0
 1245 0012 0024     		movs	r4, #0
 1246 0014 03E0     		b	.L97
 1247              	.LVL138:
 1248              	.L98:
 516:Src/mode.c    ****     {
 517:Src/mode.c    ****         Motion_Straight();
 1249              		.loc 1 517 0 discriminator 3
 1250 0016 FFF7FEFF 		bl	Motion_Straight
 1251              	.LVL139:
 515:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1252              		.loc 1 515 0 discriminator 3
 1253 001a 0134     		adds	r4, r4, #1
 1254              	.LVL140:
 1255 001c E4B2     		uxtb	r4, r4
 1256              	.LVL141:
 1257              	.L97:
 515:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1258              		.loc 1 515 0 is_stmt 0 discriminator 1
 1259 001e AC42     		cmp	r4, r5
 1260 0020 F9D3     		bcc	.L98
 1261              	.LBE4:
 518:Src/mode.c    ****     }
 519:Src/mode.c    ****     Motion_End();
 1262              		.loc 1 519 0 is_stmt 1
 1263 0022 FFF7FEFF 		bl	Motion_End
 1264              	.LVL142:
 520:Src/mode.c    ****     motor_flag = FALSE;
 1265              		.loc 1 520 0
 1266 0026 0024     		movs	r4, #0
 1267              	.LVL143:
 1268 0028 0D4B     		ldr	r3, .L100+4
 1269 002a 1C70     		strb	r4, [r3]
 521:Src/mode.c    ****     HAL_Delay(500);
 1270              		.loc 1 521 0
 1271 002c 4FF4FA70 		mov	r0, #500
 1272 0030 FFF7FEFF 		bl	HAL_Delay
 1273              	.LVL144:
 522:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1274              		.loc 1 522 0
 1275 0034 49F64242 		movw	r2, #40002
 1276 0038 0A49     		ldr	r1, .L100+8
 1277 003a 0B4B     		ldr	r3, .L100+12
 1278 003c 1868     		ldr	r0, [r3]
 1279 003e FFF7FEFF 		bl	Flash_Write
 1280              	.LVL145:
 523:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1281              		.loc 1 523 0
 1282 0042 4FF49671 		mov	r1, #300
 1283 0046 4C20     		movs	r0, #76
 1284 0048 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 34


 1285              	.LVL146:
 524:Src/mode.c    ****     HAL_Delay(200);
 1286              		.loc 1 524 0
 1287 004c C820     		movs	r0, #200
 1288 004e FFF7FEFF 		bl	HAL_Delay
 1289              	.LVL147:
 525:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1290              		.loc 1 525 0
 1291 0052 2146     		mov	r1, r4
 1292 0054 0A20     		movs	r0, #10
 1293 0056 FFF7FEFF 		bl	Tim_BuzzerPwm
 1294              	.LVL148:
 526:Src/mode.c    **** }
 1295              		.loc 1 526 0
 1296 005a 38BD     		pop	{r3, r4, r5, pc}
 1297              	.L101:
 1298              		.align	2
 1299              	.L100:
 1300 005c 00000000 		.word	enc
 1301 0060 00000000 		.word	motor_flag
 1302 0064 00000000 		.word	loger
 1303 0068 00000000 		.word	start_address
 1304              		.cfi_endproc
 1305              	.LFE133:
 1307              		.section	.text.CheckFastStraight,"ax",%progbits
 1308              		.align	1
 1309              		.global	CheckFastStraight
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu fpv4-sp-d16
 1315              	CheckFastStraight:
 1316              	.LFB134:
 527:Src/mode.c    **** 
 528:Src/mode.c    **** void CheckFastStraight(uint8_t block)
 529:Src/mode.c    **** {
 1317              		.loc 1 529 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              	.LVL149:
 1322 0000 38B5     		push	{r3, r4, r5, lr}
 1323              	.LCFI15:
 1324              		.cfi_def_cfa_offset 16
 1325              		.cfi_offset 3, -16
 1326              		.cfi_offset 4, -12
 1327              		.cfi_offset 5, -8
 1328              		.cfi_offset 14, -4
 1329 0002 0546     		mov	r5, r0
 530:Src/mode.c    ****     SetRunMode();
 1330              		.loc 1 530 0
 1331 0004 FFF7FEFF 		bl	SetRunMode
 1332              	.LVL150:
 531:Src/mode.c    ****     enc.distance = 0;
 1333              		.loc 1 531 0
 1334 0008 1D4B     		ldr	r3, .L106
 1335 000a 0022     		movs	r2, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 35


 1336 000c 1A60     		str	r2, [r3]	@ float
 532:Src/mode.c    ****     Motion_FastStart(0, 800.0f);
 1337              		.loc 1 532 0
 1338 000e 9FED1D0A 		vldr.32	s0, .L106+4
 1339 0012 0020     		movs	r0, #0
 1340 0014 FFF7FEFF 		bl	Motion_FastStart
 1341              	.LVL151:
 1342              	.LBB5:
 533:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1343              		.loc 1 533 0
 1344 0018 0024     		movs	r4, #0
 1345 001a 08E0     		b	.L103
 1346              	.LVL152:
 1347              	.L104:
 534:Src/mode.c    ****     {
 535:Src/mode.c    ****         Motion_FastStraight(2, 800.0f, 800.0f);
 1348              		.loc 1 535 0 discriminator 3
 1349 001c 9FED190A 		vldr.32	s0, .L106+4
 1350 0020 F0EE400A 		vmov.f32	s1, s0
 1351 0024 0220     		movs	r0, #2
 1352 0026 FFF7FEFF 		bl	Motion_FastStraight
 1353              	.LVL153:
 533:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1354              		.loc 1 533 0 discriminator 3
 1355 002a 0134     		adds	r4, r4, #1
 1356              	.LVL154:
 1357 002c E4B2     		uxtb	r4, r4
 1358              	.LVL155:
 1359              	.L103:
 533:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1360              		.loc 1 533 0 is_stmt 0 discriminator 1
 1361 002e AC42     		cmp	r4, r5
 1362 0030 F4D3     		bcc	.L104
 1363              	.LBE5:
 536:Src/mode.c    ****     }
 537:Src/mode.c    ****     Motion_Adjust(800.0f, 1);
 1364              		.loc 1 537 0 is_stmt 1
 1365 0032 B7EE000A 		vmov.f32	s0, #1.0e+0
 1366 0036 4FF44870 		mov	r0, #800
 1367 003a FFF7FEFF 		bl	Motion_Adjust
 1368              	.LVL156:
 538:Src/mode.c    ****     Motion_FastGoal(0, 800.0f);
 1369              		.loc 1 538 0
 1370 003e 9FED110A 		vldr.32	s0, .L106+4
 1371 0042 0020     		movs	r0, #0
 1372 0044 FFF7FEFF 		bl	Motion_FastGoal
 1373              	.LVL157:
 539:Src/mode.c    ****     motor_flag = FALSE;
 1374              		.loc 1 539 0
 1375 0048 0024     		movs	r4, #0
 1376              	.LVL158:
 1377 004a 0F4B     		ldr	r3, .L106+8
 1378 004c 1C70     		strb	r4, [r3]
 540:Src/mode.c    ****     HAL_Delay(500);
 1379              		.loc 1 540 0
 1380 004e 4FF4FA70 		mov	r0, #500
 1381 0052 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 36


 1382              	.LVL159:
 541:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1383              		.loc 1 541 0
 1384 0056 49F64242 		movw	r2, #40002
 1385 005a 0C49     		ldr	r1, .L106+12
 1386 005c 0C4B     		ldr	r3, .L106+16
 1387 005e 1868     		ldr	r0, [r3]
 1388 0060 FFF7FEFF 		bl	Flash_Write
 1389              	.LVL160:
 542:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1390              		.loc 1 542 0
 1391 0064 4FF49671 		mov	r1, #300
 1392 0068 4C20     		movs	r0, #76
 1393 006a FFF7FEFF 		bl	Tim_BuzzerPwm
 1394              	.LVL161:
 543:Src/mode.c    ****     HAL_Delay(200);
 1395              		.loc 1 543 0
 1396 006e C820     		movs	r0, #200
 1397 0070 FFF7FEFF 		bl	HAL_Delay
 1398              	.LVL162:
 544:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1399              		.loc 1 544 0
 1400 0074 2146     		mov	r1, r4
 1401 0076 0A20     		movs	r0, #10
 1402 0078 FFF7FEFF 		bl	Tim_BuzzerPwm
 1403              	.LVL163:
 545:Src/mode.c    **** }
 1404              		.loc 1 545 0
 1405 007c 38BD     		pop	{r3, r4, r5, pc}
 1406              	.L107:
 1407 007e 00BF     		.align	2
 1408              	.L106:
 1409 0080 00000000 		.word	enc
 1410 0084 00004844 		.word	1145569280
 1411 0088 00000000 		.word	motor_flag
 1412 008c 00000000 		.word	loger
 1413 0090 00000000 		.word	start_address
 1414              		.cfi_endproc
 1415              	.LFE134:
 1417              		.section	.text.CheckDiagonal,"ax",%progbits
 1418              		.align	1
 1419              		.global	CheckDiagonal
 1420              		.syntax unified
 1421              		.thumb
 1422              		.thumb_func
 1423              		.fpu fpv4-sp-d16
 1425              	CheckDiagonal:
 1426              	.LFB135:
 546:Src/mode.c    **** 
 547:Src/mode.c    **** void CheckDiagonal(uint8_t block)
 548:Src/mode.c    **** {
 1427              		.loc 1 548 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              	.LVL164:
 1432 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 37


 1433              	.LCFI16:
 1434              		.cfi_def_cfa_offset 8
 1435              		.cfi_offset 4, -8
 1436              		.cfi_offset 14, -4
 1437 0002 0446     		mov	r4, r0
 549:Src/mode.c    ****     SetRunMode();
 1438              		.loc 1 549 0
 1439 0004 FFF7FEFF 		bl	SetRunMode
 1440              	.LVL165:
 550:Src/mode.c    ****     enc.distance = 0;
 1441              		.loc 1 550 0
 1442 0008 124B     		ldr	r3, .L110
 1443 000a 0022     		movs	r2, #0
 1444 000c 1A60     		str	r2, [r3]	@ float
 551:Src/mode.c    ****     Motion_DiagonalStart();
 1445              		.loc 1 551 0
 1446 000e FFF7FEFF 		bl	Motion_DiagonalStart
 1447              	.LVL166:
 552:Src/mode.c    ****     Motion_DiagonalLeft(block);
 1448              		.loc 1 552 0
 1449 0012 2046     		mov	r0, r4
 1450 0014 FFF7FEFF 		bl	Motion_DiagonalLeft
 1451              	.LVL167:
 553:Src/mode.c    ****     Motion_DiagonalStop();
 1452              		.loc 1 553 0
 1453 0018 FFF7FEFF 		bl	Motion_DiagonalStop
 1454              	.LVL168:
 554:Src/mode.c    ****     motor_flag = FALSE;
 1455              		.loc 1 554 0
 1456 001c 0024     		movs	r4, #0
 1457 001e 0E4B     		ldr	r3, .L110+4
 1458 0020 1C70     		strb	r4, [r3]
 555:Src/mode.c    ****     HAL_Delay(500);
 1459              		.loc 1 555 0
 1460 0022 4FF4FA70 		mov	r0, #500
 1461 0026 FFF7FEFF 		bl	HAL_Delay
 1462              	.LVL169:
 556:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1463              		.loc 1 556 0
 1464 002a 49F64242 		movw	r2, #40002
 1465 002e 0B49     		ldr	r1, .L110+8
 1466 0030 0B4B     		ldr	r3, .L110+12
 1467 0032 1868     		ldr	r0, [r3]
 1468 0034 FFF7FEFF 		bl	Flash_Write
 1469              	.LVL170:
 557:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1470              		.loc 1 557 0
 1471 0038 4FF49671 		mov	r1, #300
 1472 003c 4C20     		movs	r0, #76
 1473 003e FFF7FEFF 		bl	Tim_BuzzerPwm
 1474              	.LVL171:
 558:Src/mode.c    ****     HAL_Delay(200);
 1475              		.loc 1 558 0
 1476 0042 C820     		movs	r0, #200
 1477 0044 FFF7FEFF 		bl	HAL_Delay
 1478              	.LVL172:
 559:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 38


 1479              		.loc 1 559 0
 1480 0048 2146     		mov	r1, r4
 1481 004a 0A20     		movs	r0, #10
 1482 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 1483              	.LVL173:
 560:Src/mode.c    **** }
 1484              		.loc 1 560 0
 1485 0050 10BD     		pop	{r4, pc}
 1486              	.L111:
 1487 0052 00BF     		.align	2
 1488              	.L110:
 1489 0054 00000000 		.word	enc
 1490 0058 00000000 		.word	motor_flag
 1491 005c 00000000 		.word	loger
 1492 0060 00000000 		.word	start_address
 1493              		.cfi_endproc
 1494              	.LFE135:
 1496              		.section	.text.CheckTurn,"ax",%progbits
 1497              		.align	1
 1498              		.global	CheckTurn
 1499              		.syntax unified
 1500              		.thumb
 1501              		.thumb_func
 1502              		.fpu fpv4-sp-d16
 1504              	CheckTurn:
 1505              	.LFB136:
 561:Src/mode.c    **** 
 562:Src/mode.c    **** void CheckTurn(uint8_t num)
 563:Src/mode.c    **** {
 1506              		.loc 1 563 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              	.LVL174:
 1511 0000 38B5     		push	{r3, r4, r5, lr}
 1512              	.LCFI17:
 1513              		.cfi_def_cfa_offset 16
 1514              		.cfi_offset 3, -16
 1515              		.cfi_offset 4, -12
 1516              		.cfi_offset 5, -8
 1517              		.cfi_offset 14, -4
 1518 0002 0546     		mov	r5, r0
 564:Src/mode.c    ****     SetRunMode();
 1519              		.loc 1 564 0
 1520 0004 FFF7FEFF 		bl	SetRunMode
 1521              	.LVL175:
 565:Src/mode.c    ****     gyro_z.degree = 0;
 1522              		.loc 1 565 0
 1523 0008 174B     		ldr	r3, .L116
 1524 000a 0022     		movs	r2, #0
 1525 000c 5A60     		str	r2, [r3, #4]	@ float
 1526              	.LVL176:
 1527              	.LBB6:
 566:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1528              		.loc 1 566 0
 1529 000e 0024     		movs	r4, #0
 1530 0010 03E0     		b	.L113
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 39


 1531              	.LVL177:
 1532              	.L114:
 567:Src/mode.c    ****     {
 568:Src/mode.c    ****         Motion_TestTurn();
 1533              		.loc 1 568 0 discriminator 3
 1534 0012 FFF7FEFF 		bl	Motion_TestTurn
 1535              	.LVL178:
 566:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1536              		.loc 1 566 0 discriminator 3
 1537 0016 0134     		adds	r4, r4, #1
 1538              	.LVL179:
 1539 0018 E4B2     		uxtb	r4, r4
 1540              	.LVL180:
 1541              	.L113:
 566:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1542              		.loc 1 566 0 is_stmt 0 discriminator 1
 1543 001a AC42     		cmp	r4, r5
 1544 001c F9D3     		bcc	.L114
 1545              	.LBE6:
 569:Src/mode.c    ****     }
 570:Src/mode.c    ****     motor_flag = FALSE;
 1546              		.loc 1 570 0 is_stmt 1
 1547 001e 0024     		movs	r4, #0
 1548              	.LVL181:
 1549 0020 124B     		ldr	r3, .L116+4
 1550 0022 1C70     		strb	r4, [r3]
 571:Src/mode.c    ****     loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 1551              		.loc 1 571 0
 1552 0024 104B     		ldr	r3, .L116
 1553 0026 D3ED017A 		vldr.32	s15, [r3, #4]
 1554 002a 1149     		ldr	r1, .L116+8
 1555 002c 0B88     		ldrh	r3, [r1]
 1556 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 1557 0032 03F56A53 		add	r3, r3, #14976
 1558 0036 1833     		adds	r3, r3, #24
 1559 0038 01EB4303 		add	r3, r1, r3, lsl #1
 1560 003c 17EE902A 		vmov	r2, s15	@ int
 1561 0040 5A80     		strh	r2, [r3, #2]	@ movhi
 572:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1562              		.loc 1 572 0
 1563 0042 49F64242 		movw	r2, #40002
 1564 0046 0B4B     		ldr	r3, .L116+12
 1565 0048 1868     		ldr	r0, [r3]
 1566 004a FFF7FEFF 		bl	Flash_Write
 1567              	.LVL182:
 573:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1568              		.loc 1 573 0
 1569 004e 4FF49671 		mov	r1, #300
 1570 0052 4C20     		movs	r0, #76
 1571 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 1572              	.LVL183:
 574:Src/mode.c    ****     HAL_Delay(200);
 1573              		.loc 1 574 0
 1574 0058 C820     		movs	r0, #200
 1575 005a FFF7FEFF 		bl	HAL_Delay
 1576              	.LVL184:
 575:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 40


 1577              		.loc 1 575 0
 1578 005e 2146     		mov	r1, r4
 1579 0060 0A20     		movs	r0, #10
 1580 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 1581              	.LVL185:
 576:Src/mode.c    **** }
 1582              		.loc 1 576 0
 1583 0066 38BD     		pop	{r3, r4, r5, pc}
 1584              	.L117:
 1585              		.align	2
 1586              	.L116:
 1587 0068 00000000 		.word	gyro_z
 1588 006c 00000000 		.word	motor_flag
 1589 0070 00000000 		.word	loger
 1590 0074 00000000 		.word	start_address
 1591              		.cfi_endproc
 1592              	.LFE136:
 1594              		.section	.text.PrintOutPut,"ax",%progbits
 1595              		.align	1
 1596              		.global	PrintOutPut
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1600              		.fpu fpv4-sp-d16
 1602              	PrintOutPut:
 1603              	.LFB137:
 577:Src/mode.c    **** 
 578:Src/mode.c    **** void PrintOutPut(void)
 579:Src/mode.c    **** {
 1604              		.loc 1 579 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608 0000 30B5     		push	{r4, r5, lr}
 1609              	.LCFI18:
 1610              		.cfi_def_cfa_offset 12
 1611              		.cfi_offset 4, -12
 1612              		.cfi_offset 5, -8
 1613              		.cfi_offset 14, -4
 1614 0002 83B0     		sub	sp, sp, #12
 1615              	.LCFI19:
 1616              		.cfi_def_cfa_offset 24
 580:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1617              		.loc 1 580 0
 1618 0004 49F64242 		movw	r2, #40002
 1619 0008 1649     		ldr	r1, .L122
 1620 000a 174B     		ldr	r3, .L122+4
 1621 000c 1868     		ldr	r0, [r3]
 1622 000e FFF7FEFF 		bl	Flash_Load
 1623              	.LVL186:
 1624              	.LBB7:
 581:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1625              		.loc 1 581 0
 1626 0012 0024     		movs	r4, #0
 1627 0014 1FE0     		b	.L119
 1628              	.LVL187:
 1629              	.L120:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 41


 582:Src/mode.c    ****     {
 583:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 584:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 585:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
 1630              		.loc 1 585 0 discriminator 3
 1631 0016 1348     		ldr	r0, .L122
 1632 0018 00EB4403 		add	r3, r0, r4, lsl #1
 1633 001c B3F90210 		ldrsh	r1, [r3, #2]
 1634 0020 04F51C53 		add	r3, r4, #9984
 1635 0024 1033     		adds	r3, r3, #16
 1636 0026 00EB4303 		add	r3, r0, r3, lsl #1
 1637 002a B3F90220 		ldrsh	r2, [r3, #2]
 1638 002e 04F59C53 		add	r3, r4, #4992
 1639 0032 0833     		adds	r3, r3, #8
 1640 0034 00EB4303 		add	r3, r0, r3, lsl #1
 1641 0038 B3F90230 		ldrsh	r3, [r3, #2]
 1642 003c 04F56A55 		add	r5, r4, #14976
 1643 0040 1835     		adds	r5, r5, #24
 1644 0042 00EB4500 		add	r0, r0, r5, lsl #1
 1645 0046 B0F90200 		ldrsh	r0, [r0, #2]
 1646 004a 0090     		str	r0, [sp]
 1647 004c 0748     		ldr	r0, .L122+8
 1648 004e FFF7FEFF 		bl	printf
 1649              	.LVL188:
 581:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1650              		.loc 1 581 0 discriminator 3
 1651 0052 0134     		adds	r4, r4, #1
 1652              	.LVL189:
 1653 0054 A4B2     		uxth	r4, r4
 1654              	.LVL190:
 1655              	.L119:
 581:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1656              		.loc 1 581 0 is_stmt 0 discriminator 1
 1657 0056 034B     		ldr	r3, .L122
 1658 0058 1B88     		ldrh	r3, [r3]
 1659 005a A342     		cmp	r3, r4
 1660 005c DBD2     		bcs	.L120
 1661              	.LBE7:
 586:Src/mode.c    ****     }
 587:Src/mode.c    **** }
 1662              		.loc 1 587 0 is_stmt 1
 1663 005e 03B0     		add	sp, sp, #12
 1664              	.LCFI20:
 1665              		.cfi_def_cfa_offset 12
 1666              		@ sp needed
 1667 0060 30BD     		pop	{r4, r5, pc}
 1668              	.LVL191:
 1669              	.L123:
 1670 0062 00BF     		.align	2
 1671              	.L122:
 1672 0064 00000000 		.word	loger
 1673 0068 00000000 		.word	start_address
 1674 006c 00000000 		.word	.LC2
 1675              		.cfi_endproc
 1676              	.LFE137:
 1678              		.section	.text.PrintWallData,"ax",%progbits
 1679              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 42


 1680              		.global	PrintWallData
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu fpv4-sp-d16
 1686              	PrintWallData:
 1687              	.LFB138:
 588:Src/mode.c    **** 
 589:Src/mode.c    **** void PrintWallData(void)
 590:Src/mode.c    **** {
 1688              		.loc 1 590 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 136
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692 0000 30B5     		push	{r4, r5, lr}
 1693              	.LCFI21:
 1694              		.cfi_def_cfa_offset 12
 1695              		.cfi_offset 4, -12
 1696              		.cfi_offset 5, -8
 1697              		.cfi_offset 14, -4
 1698 0002 A3B0     		sub	sp, sp, #140
 1699              	.LCFI22:
 1700              		.cfi_def_cfa_offset 152
 591:Src/mode.c    ****     wallData_t walldata;
 592:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&walldata, sizeof(wallData_t));
 1701              		.loc 1 592 0
 1702 0004 8822     		movs	r2, #136
 1703 0006 6946     		mov	r1, sp
 1704 0008 2C4B     		ldr	r3, .L141
 1705 000a 1868     		ldr	r0, [r3]
 1706 000c FFF7FEFF 		bl	Flash_Load
 1707              	.LVL192:
 593:Src/mode.c    ****     printf("\r\n");
 1708              		.loc 1 593 0
 1709 0010 2B48     		ldr	r0, .L141+4
 1710 0012 FFF7FEFF 		bl	puts
 1711              	.LVL193:
 1712              	.LBB8:
 594:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1713              		.loc 1 594 0
 1714 0016 0024     		movs	r4, #0
 1715 0018 07E0     		b	.L125
 1716              	.LVL194:
 1717              	.L126:
 595:Src/mode.c    ****     {
 596:Src/mode.c    ****         printf("+");
 1718              		.loc 1 596 0 discriminator 3
 1719 001a 2B20     		movs	r0, #43
 1720 001c FFF7FEFF 		bl	putchar
 1721              	.LVL195:
 597:Src/mode.c    ****         printf("---");
 1722              		.loc 1 597 0 discriminator 3
 1723 0020 2848     		ldr	r0, .L141+8
 1724 0022 FFF7FEFF 		bl	printf
 1725              	.LVL196:
 594:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1726              		.loc 1 594 0 discriminator 3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 43


 1727 0026 0134     		adds	r4, r4, #1
 1728              	.LVL197:
 1729 0028 E4B2     		uxtb	r4, r4
 1730              	.LVL198:
 1731              	.L125:
 594:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1732              		.loc 1 594 0 is_stmt 0 discriminator 1
 1733 002a 0F2C     		cmp	r4, #15
 1734 002c F5D9     		bls	.L126
 1735              	.LBE8:
 598:Src/mode.c    ****     }
 599:Src/mode.c    ****     printf("+\r\n");
 1736              		.loc 1 599 0 is_stmt 1
 1737 002e 2648     		ldr	r0, .L141+12
 1738 0030 FFF7FEFF 		bl	puts
 1739              	.LVL199:
 1740              	.LBB9:
 600:Src/mode.c    ****     for (unsigned char j = MAZE_SIZE; j > 0; j--)
 1741              		.loc 1 600 0
 1742 0034 1025     		movs	r5, #16
 1743 0036 3CE0     		b	.L127
 1744              	.LVL200:
 1745              	.L128:
 1746              	.LBB10:
 601:Src/mode.c    ****     {
 602:Src/mode.c    ****         for (unsigned char i = 0; i < MAZE_SIZE; i++)
 603:Src/mode.c    ****         {
 604:Src/mode.c    ****             if (walldata.vertical[i] & 0b1 << (j - 1))
 605:Src/mode.c    ****             {
 606:Src/mode.c    ****                 printf("|");
 607:Src/mode.c    ****             }
 608:Src/mode.c    ****             else
 609:Src/mode.c    ****             {
 610:Src/mode.c    ****                 printf(" ");
 1747              		.loc 1 610 0
 1748 0038 2020     		movs	r0, #32
 1749 003a FFF7FEFF 		bl	putchar
 1750              	.LVL201:
 1751              	.L129:
 611:Src/mode.c    ****             }
 612:Src/mode.c    ****             printf("   ");
 1752              		.loc 1 612 0 discriminator 2
 1753 003e 2348     		ldr	r0, .L141+16
 1754 0040 FFF7FEFF 		bl	printf
 1755              	.LVL202:
 602:Src/mode.c    ****         {
 1756              		.loc 1 602 0 discriminator 2
 1757 0044 0134     		adds	r4, r4, #1
 1758              	.LVL203:
 1759 0046 E4B2     		uxtb	r4, r4
 1760              	.LVL204:
 1761              	.L135:
 602:Src/mode.c    ****         {
 1762              		.loc 1 602 0 is_stmt 0 discriminator 1
 1763 0048 0F2C     		cmp	r4, #15
 1764 004a 0DD8     		bhi	.L138
 604:Src/mode.c    ****             {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 44


 1765              		.loc 1 604 0 is_stmt 1
 1766 004c 22AB     		add	r3, sp, #136
 1767 004e 03EB4403 		add	r3, r3, r4, lsl #1
 1768 0052 33F8883C 		ldrh	r3, [r3, #-136]
 1769 0056 6A1E     		subs	r2, r5, #1
 1770 0058 1341     		asrs	r3, r3, r2
 1771 005a 13F0010F 		tst	r3, #1
 1772 005e EBD0     		beq	.L128
 606:Src/mode.c    ****             }
 1773              		.loc 1 606 0
 1774 0060 7C20     		movs	r0, #124
 1775 0062 FFF7FEFF 		bl	putchar
 1776              	.LVL205:
 1777 0066 EAE7     		b	.L129
 1778              	.L138:
 1779              	.LBE10:
 613:Src/mode.c    ****         }
 614:Src/mode.c    ****         printf("|");
 1780              		.loc 1 614 0
 1781 0068 7C20     		movs	r0, #124
 1782 006a FFF7FEFF 		bl	putchar
 1783              	.LVL206:
 615:Src/mode.c    ****         printf("\r\n");
 1784              		.loc 1 615 0
 1785 006e 1448     		ldr	r0, .L141+4
 1786 0070 FFF7FEFF 		bl	puts
 1787              	.LVL207:
 1788              	.LBB11:
 616:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1789              		.loc 1 616 0
 1790 0074 0024     		movs	r4, #0
 1791              	.LVL208:
 1792 0076 03E0     		b	.L131
 1793              	.LVL209:
 1794              	.L132:
 617:Src/mode.c    ****         {
 618:Src/mode.c    ****             printf("+");
 619:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 620:Src/mode.c    ****             {
 621:Src/mode.c    ****                 printf("---");
 622:Src/mode.c    ****             }
 623:Src/mode.c    ****             else
 624:Src/mode.c    ****             {
 625:Src/mode.c    ****                 printf("   ");
 1795              		.loc 1 625 0
 1796 0078 1448     		ldr	r0, .L141+16
 1797 007a FFF7FEFF 		bl	printf
 1798              	.LVL210:
 1799              	.L133:
 616:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1800              		.loc 1 616 0 discriminator 2
 1801 007e 0134     		adds	r4, r4, #1
 1802              	.LVL211:
 1803              	.L131:
 616:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1804              		.loc 1 616 0 is_stmt 0 discriminator 1
 1805 0080 0F2C     		cmp	r4, #15
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 45


 1806 0082 11D8     		bhi	.L139
 618:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 1807              		.loc 1 618 0 is_stmt 1
 1808 0084 2B20     		movs	r0, #43
 1809 0086 FFF7FEFF 		bl	putchar
 1810              	.LVL212:
 619:Src/mode.c    ****             {
 1811              		.loc 1 619 0
 1812 008a 05F10F03 		add	r3, r5, #15
 1813 008e 22AA     		add	r2, sp, #136
 1814 0090 02EB4303 		add	r3, r2, r3, lsl #1
 1815 0094 33F8863C 		ldrh	r3, [r3, #-134]
 1816 0098 2341     		asrs	r3, r3, r4
 1817 009a 13F0010F 		tst	r3, #1
 1818 009e EBD0     		beq	.L132
 621:Src/mode.c    ****             }
 1819              		.loc 1 621 0
 1820 00a0 0848     		ldr	r0, .L141+8
 1821 00a2 FFF7FEFF 		bl	printf
 1822              	.LVL213:
 1823 00a6 EAE7     		b	.L133
 1824              	.L139:
 1825              	.LBE11:
 626:Src/mode.c    ****             }
 627:Src/mode.c    ****         }
 628:Src/mode.c    ****         printf("+\r\n");
 1826              		.loc 1 628 0 discriminator 2
 1827 00a8 0748     		ldr	r0, .L141+12
 1828 00aa FFF7FEFF 		bl	puts
 1829              	.LVL214:
 600:Src/mode.c    ****     {
 1830              		.loc 1 600 0 discriminator 2
 1831 00ae 013D     		subs	r5, r5, #1
 1832              	.LVL215:
 1833 00b0 EDB2     		uxtb	r5, r5
 1834              	.LVL216:
 1835              	.L127:
 600:Src/mode.c    ****     {
 1836              		.loc 1 600 0 is_stmt 0 discriminator 1
 1837 00b2 0DB1     		cbz	r5, .L140
 1838              	.LBB12:
 602:Src/mode.c    ****         {
 1839              		.loc 1 602 0 is_stmt 1
 1840 00b4 0024     		movs	r4, #0
 1841 00b6 C7E7     		b	.L135
 1842              	.L140:
 1843              	.LBE12:
 1844              	.LBE9:
 629:Src/mode.c    ****     }
 630:Src/mode.c    **** }
 1845              		.loc 1 630 0
 1846 00b8 23B0     		add	sp, sp, #140
 1847              	.LCFI23:
 1848              		.cfi_def_cfa_offset 12
 1849              		@ sp needed
 1850 00ba 30BD     		pop	{r4, r5, pc}
 1851              	.LVL217:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 46


 1852              	.L142:
 1853              		.align	2
 1854              	.L141:
 1855 00bc 00000000 		.word	start_address
 1856 00c0 00000000 		.word	.LC3
 1857 00c4 04000000 		.word	.LC4
 1858 00c8 08000000 		.word	.LC5
 1859 00cc 0C000000 		.word	.LC6
 1860              		.cfi_endproc
 1861              	.LFE138:
 1863              		.section	.text.PrintMotion,"ax",%progbits
 1864              		.align	1
 1865              		.global	PrintMotion
 1866              		.syntax unified
 1867              		.thumb
 1868              		.thumb_func
 1869              		.fpu fpv4-sp-d16
 1871              	PrintMotion:
 1872              	.LFB139:
 631:Src/mode.c    **** 
 632:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail)
 633:Src/mode.c    **** {
 1873              		.loc 1 633 0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 0
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877              	.LVL218:
 1878 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1879              	.LCFI24:
 1880              		.cfi_def_cfa_offset 24
 1881              		.cfi_offset 3, -24
 1882              		.cfi_offset 4, -20
 1883              		.cfi_offset 5, -16
 1884              		.cfi_offset 6, -12
 1885              		.cfi_offset 7, -8
 1886              		.cfi_offset 14, -4
 1887 0002 0646     		mov	r6, r0
 1888 0004 0F46     		mov	r7, r1
 1889 0006 1546     		mov	r5, r2
 1890              	.LVL219:
 634:Src/mode.c    ****     uint8_t head = 0;
 1891              		.loc 1 634 0
 1892 0008 0024     		movs	r4, #0
 635:Src/mode.c    ****     while (head < tail)
 1893              		.loc 1 635 0
 1894 000a 09E0     		b	.L144
 1895              	.LVL220:
 1896              	.L150:
 636:Src/mode.c    ****     {
 637:Src/mode.c    ****         switch (motion[head] & 0xf)
 638:Src/mode.c    ****         {
 639:Src/mode.c    ****         case START:
 640:Src/mode.c    ****             printf("\r\nSTART:%d\tv_start:%ld\tv_end:%ld\r\n", motion[head] >> 4, velocity[head] >>
 1897              		.loc 1 640 0
 1898 000c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 1899 0010 93B2     		uxth	r3, r2
 1900 0012 120C     		lsrs	r2, r2, #16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 47


 1901 0014 0909     		lsrs	r1, r1, #4
 1902 0016 7648     		ldr	r0, .L178
 1903 0018 FFF7FEFF 		bl	printf
 1904              	.LVL221:
 1905              	.L154:
 641:Src/mode.c    ****             break;
 642:Src/mode.c    ****         case LEFT:
 643:Src/mode.c    ****             switch (motion[head] >> 4)
 644:Src/mode.c    ****             {
 645:Src/mode.c    ****             case SEARCH:
 646:Src/mode.c    ****                 printf("LEFT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 647:Src/mode.c    ****                 break;
 648:Src/mode.c    ****             case T_90:
 649:Src/mode.c    ****                 printf("LEFT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[head
 650:Src/mode.c    ****                 break;
 651:Src/mode.c    ****             case T_180:
 652:Src/mode.c    ****                 printf("LEFT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 653:Src/mode.c    ****                 break;
 654:Src/mode.c    ****             case T_45IN:
 655:Src/mode.c    ****                 printf("LEFT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 656:Src/mode.c    ****                 break;
 657:Src/mode.c    ****             case T_45OUT:
 658:Src/mode.c    ****                 printf("LEFT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 659:Src/mode.c    ****                 break;
 660:Src/mode.c    ****             case T_135IN:
 661:Src/mode.c    ****                 printf("LEFT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 662:Src/mode.c    ****                 break;
 663:Src/mode.c    ****             case T_135OUT:
 664:Src/mode.c    ****                 printf("LEFT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 665:Src/mode.c    ****                 break;
 666:Src/mode.c    ****             case T_V90:
 667:Src/mode.c    ****                 printf("LEFT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 668:Src/mode.c    ****                 break;
 669:Src/mode.c    ****             default:
 670:Src/mode.c    ****                 printf("\r\n");
 671:Src/mode.c    ****                 break;
 672:Src/mode.c    ****             }
 673:Src/mode.c    ****             break;
 674:Src/mode.c    ****         case RIGHT:
 675:Src/mode.c    ****             switch (motion[head] >> 4)
 676:Src/mode.c    ****             {
 677:Src/mode.c    ****             case SEARCH:
 678:Src/mode.c    ****                 printf("RIGHT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 679:Src/mode.c    ****                 break;
 680:Src/mode.c    ****             case T_90:
 681:Src/mode.c    ****                 printf("RIGHT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 682:Src/mode.c    ****                 break;
 683:Src/mode.c    ****             case T_180:
 684:Src/mode.c    ****                 printf("RIGHT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 685:Src/mode.c    ****                 break;
 686:Src/mode.c    ****             case T_45IN:
 687:Src/mode.c    ****                 printf("RIGHT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 688:Src/mode.c    ****                 break;
 689:Src/mode.c    ****             case T_45OUT:
 690:Src/mode.c    ****                 printf("RIGHT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 691:Src/mode.c    ****                 break;
 692:Src/mode.c    ****             case T_135IN:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 48


 693:Src/mode.c    ****                 printf("RIGHT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 694:Src/mode.c    ****                 break;
 695:Src/mode.c    ****             case T_135OUT:
 696:Src/mode.c    ****                 printf("RIGHT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity
 697:Src/mode.c    ****                 break;
 698:Src/mode.c    ****             case T_V90:
 699:Src/mode.c    ****                 printf("RIGHT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 700:Src/mode.c    ****                 break;
 701:Src/mode.c    ****             default:
 702:Src/mode.c    ****                 printf("\r\n");
 703:Src/mode.c    ****                 break;
 704:Src/mode.c    ****             }
 705:Src/mode.c    ****             break;
 706:Src/mode.c    ****         case FRONT:
 707:Src/mode.c    ****             printf("FRONT:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16,
 708:Src/mode.c    ****             break;
 709:Src/mode.c    ****         case DIAGONAL:
 710:Src/mode.c    ****             printf("DIAGONAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 
 711:Src/mode.c    ****             break;
 712:Src/mode.c    ****         case GOAL:
 713:Src/mode.c    ****             printf("GOAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16, 
 714:Src/mode.c    ****             break;
 715:Src/mode.c    ****         case ADJUST:
 716:Src/mode.c    ****             printf("ADJUST:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16
 717:Src/mode.c    ****             break;
 718:Src/mode.c    ****         default:
 719:Src/mode.c    ****             printf("\r\n");
 720:Src/mode.c    ****             break;
 721:Src/mode.c    ****         }
 722:Src/mode.c    ****         head++;
 1906              		.loc 1 722 0
 1907 001c 0134     		adds	r4, r4, #1
 1908              	.LVL222:
 1909 001e E4B2     		uxtb	r4, r4
 1910              	.LVL223:
 1911              	.L144:
 635:Src/mode.c    ****     {
 1912              		.loc 1 635 0
 1913 0020 AC42     		cmp	r4, r5
 1914 0022 80F0E380 		bcs	.L177
 637:Src/mode.c    ****         {
 1915              		.loc 1 637 0
 1916 0026 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 1917 002a 01F00F03 		and	r3, r1, #15
 1918 002e 0A2B     		cmp	r3, #10
 1919 0030 00F2D880 		bhi	.L145
 1920 0034 01A0     		adr	r0, .L147
 1921 0036 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 1922 003a 00BF     		.p2align 2
 1923              	.L147:
 1924 003c 9D010000 		.word	.L146+1
 1925 0040 69000000 		.word	.L148+1
 1926 0044 03010000 		.word	.L149+1
 1927 0048 E5010000 		.word	.L145+1
 1928 004c E5010000 		.word	.L145+1
 1929 0050 0D000000 		.word	.L150+1
 1930 0054 C1010000 		.word	.L151+1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 49


 1931 0058 AF010000 		.word	.L152+1
 1932 005c E5010000 		.word	.L145+1
 1933 0060 E5010000 		.word	.L145+1
 1934 0064 D3010000 		.word	.L153+1
 1935              		.p2align 1
 1936              	.L148:
 643:Src/mode.c    ****             {
 1937              		.loc 1 643 0
 1938 0068 0909     		lsrs	r1, r1, #4
 1939 006a 0729     		cmp	r1, #7
 1940 006c 45D8     		bhi	.L155
 1941 006e DFE801F0 		tbb	[pc, r1]
 1942              	.L157:
 1943 0072 04       		.byte	(.L156-.L157)/2
 1944 0073 1C       		.byte	(.L158-.L157)/2
 1945 0074 2C       		.byte	(.L159-.L157)/2
 1946 0075 0C       		.byte	(.L160-.L157)/2
 1947 0076 14       		.byte	(.L161-.L157)/2
 1948 0077 24       		.byte	(.L162-.L157)/2
 1949 0078 34       		.byte	(.L163-.L157)/2
 1950 0079 3C       		.byte	(.L164-.L157)/2
 1951              		.p2align 1
 1952              	.L156:
 646:Src/mode.c    ****                 break;
 1953              		.loc 1 646 0
 1954 007a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 1955 007e 8AB2     		uxth	r2, r1
 1956 0080 090C     		lsrs	r1, r1, #16
 1957 0082 5C48     		ldr	r0, .L178+4
 1958 0084 FFF7FEFF 		bl	printf
 1959              	.LVL224:
 647:Src/mode.c    ****             case T_90:
 1960              		.loc 1 647 0
 1961 0088 C8E7     		b	.L154
 1962              	.L160:
 649:Src/mode.c    ****                 break;
 1963              		.loc 1 649 0
 1964 008a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 1965 008e 8AB2     		uxth	r2, r1
 1966 0090 090C     		lsrs	r1, r1, #16
 1967 0092 5948     		ldr	r0, .L178+8
 1968 0094 FFF7FEFF 		bl	printf
 1969              	.LVL225:
 650:Src/mode.c    ****             case T_180:
 1970              		.loc 1 650 0
 1971 0098 C0E7     		b	.L154
 1972              	.L161:
 652:Src/mode.c    ****                 break;
 1973              		.loc 1 652 0
 1974 009a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 1975 009e 8AB2     		uxth	r2, r1
 1976 00a0 090C     		lsrs	r1, r1, #16
 1977 00a2 5648     		ldr	r0, .L178+12
 1978 00a4 FFF7FEFF 		bl	printf
 1979              	.LVL226:
 653:Src/mode.c    ****             case T_45IN:
 1980              		.loc 1 653 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 50


 1981 00a8 B8E7     		b	.L154
 1982              	.L158:
 655:Src/mode.c    ****                 break;
 1983              		.loc 1 655 0
 1984 00aa 57F82410 		ldr	r1, [r7, r4, lsl #2]
 1985 00ae 8AB2     		uxth	r2, r1
 1986 00b0 090C     		lsrs	r1, r1, #16
 1987 00b2 5348     		ldr	r0, .L178+16
 1988 00b4 FFF7FEFF 		bl	printf
 1989              	.LVL227:
 656:Src/mode.c    ****             case T_45OUT:
 1990              		.loc 1 656 0
 1991 00b8 B0E7     		b	.L154
 1992              	.L162:
 658:Src/mode.c    ****                 break;
 1993              		.loc 1 658 0
 1994 00ba 57F82410 		ldr	r1, [r7, r4, lsl #2]
 1995 00be 8AB2     		uxth	r2, r1
 1996 00c0 090C     		lsrs	r1, r1, #16
 1997 00c2 5048     		ldr	r0, .L178+20
 1998 00c4 FFF7FEFF 		bl	printf
 1999              	.LVL228:
 659:Src/mode.c    ****             case T_135IN:
 2000              		.loc 1 659 0
 2001 00c8 A8E7     		b	.L154
 2002              	.L159:
 661:Src/mode.c    ****                 break;
 2003              		.loc 1 661 0
 2004 00ca 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2005 00ce 8AB2     		uxth	r2, r1
 2006 00d0 090C     		lsrs	r1, r1, #16
 2007 00d2 4D48     		ldr	r0, .L178+24
 2008 00d4 FFF7FEFF 		bl	printf
 2009              	.LVL229:
 662:Src/mode.c    ****             case T_135OUT:
 2010              		.loc 1 662 0
 2011 00d8 A0E7     		b	.L154
 2012              	.L163:
 664:Src/mode.c    ****                 break;
 2013              		.loc 1 664 0
 2014 00da 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2015 00de 8AB2     		uxth	r2, r1
 2016 00e0 090C     		lsrs	r1, r1, #16
 2017 00e2 4A48     		ldr	r0, .L178+28
 2018 00e4 FFF7FEFF 		bl	printf
 2019              	.LVL230:
 665:Src/mode.c    ****             case T_V90:
 2020              		.loc 1 665 0
 2021 00e8 98E7     		b	.L154
 2022              	.L164:
 667:Src/mode.c    ****                 break;
 2023              		.loc 1 667 0
 2024 00ea 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2025 00ee 8AB2     		uxth	r2, r1
 2026 00f0 090C     		lsrs	r1, r1, #16
 2027 00f2 4748     		ldr	r0, .L178+32
 2028 00f4 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 51


 2029              	.LVL231:
 668:Src/mode.c    ****             default:
 2030              		.loc 1 668 0
 2031 00f8 90E7     		b	.L154
 2032              	.L155:
 670:Src/mode.c    ****                 break;
 2033              		.loc 1 670 0
 2034 00fa 4648     		ldr	r0, .L178+36
 2035 00fc FFF7FEFF 		bl	puts
 2036              	.LVL232:
 671:Src/mode.c    ****             }
 2037              		.loc 1 671 0
 2038 0100 8CE7     		b	.L154
 2039              	.L149:
 675:Src/mode.c    ****             {
 2040              		.loc 1 675 0
 2041 0102 0909     		lsrs	r1, r1, #4
 2042 0104 0729     		cmp	r1, #7
 2043 0106 45D8     		bhi	.L165
 2044 0108 DFE801F0 		tbb	[pc, r1]
 2045              	.L167:
 2046 010c 04       		.byte	(.L166-.L167)/2
 2047 010d 1C       		.byte	(.L168-.L167)/2
 2048 010e 2C       		.byte	(.L169-.L167)/2
 2049 010f 0C       		.byte	(.L170-.L167)/2
 2050 0110 14       		.byte	(.L171-.L167)/2
 2051 0111 24       		.byte	(.L172-.L167)/2
 2052 0112 34       		.byte	(.L173-.L167)/2
 2053 0113 3C       		.byte	(.L174-.L167)/2
 2054              		.p2align 1
 2055              	.L166:
 678:Src/mode.c    ****                 break;
 2056              		.loc 1 678 0
 2057 0114 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2058 0118 8AB2     		uxth	r2, r1
 2059 011a 090C     		lsrs	r1, r1, #16
 2060 011c 3E48     		ldr	r0, .L178+40
 2061 011e FFF7FEFF 		bl	printf
 2062              	.LVL233:
 679:Src/mode.c    ****             case T_90:
 2063              		.loc 1 679 0
 2064 0122 7BE7     		b	.L154
 2065              	.L170:
 681:Src/mode.c    ****                 break;
 2066              		.loc 1 681 0
 2067 0124 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2068 0128 8AB2     		uxth	r2, r1
 2069 012a 090C     		lsrs	r1, r1, #16
 2070 012c 3B48     		ldr	r0, .L178+44
 2071 012e FFF7FEFF 		bl	printf
 2072              	.LVL234:
 682:Src/mode.c    ****             case T_180:
 2073              		.loc 1 682 0
 2074 0132 73E7     		b	.L154
 2075              	.L171:
 684:Src/mode.c    ****                 break;
 2076              		.loc 1 684 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 52


 2077 0134 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2078 0138 8AB2     		uxth	r2, r1
 2079 013a 090C     		lsrs	r1, r1, #16
 2080 013c 3848     		ldr	r0, .L178+48
 2081 013e FFF7FEFF 		bl	printf
 2082              	.LVL235:
 685:Src/mode.c    ****             case T_45IN:
 2083              		.loc 1 685 0
 2084 0142 6BE7     		b	.L154
 2085              	.L168:
 687:Src/mode.c    ****                 break;
 2086              		.loc 1 687 0
 2087 0144 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2088 0148 8AB2     		uxth	r2, r1
 2089 014a 090C     		lsrs	r1, r1, #16
 2090 014c 3548     		ldr	r0, .L178+52
 2091 014e FFF7FEFF 		bl	printf
 2092              	.LVL236:
 688:Src/mode.c    ****             case T_45OUT:
 2093              		.loc 1 688 0
 2094 0152 63E7     		b	.L154
 2095              	.L172:
 690:Src/mode.c    ****                 break;
 2096              		.loc 1 690 0
 2097 0154 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2098 0158 8AB2     		uxth	r2, r1
 2099 015a 090C     		lsrs	r1, r1, #16
 2100 015c 3248     		ldr	r0, .L178+56
 2101 015e FFF7FEFF 		bl	printf
 2102              	.LVL237:
 691:Src/mode.c    ****             case T_135IN:
 2103              		.loc 1 691 0
 2104 0162 5BE7     		b	.L154
 2105              	.L169:
 693:Src/mode.c    ****                 break;
 2106              		.loc 1 693 0
 2107 0164 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2108 0168 8AB2     		uxth	r2, r1
 2109 016a 090C     		lsrs	r1, r1, #16
 2110 016c 2F48     		ldr	r0, .L178+60
 2111 016e FFF7FEFF 		bl	printf
 2112              	.LVL238:
 694:Src/mode.c    ****             case T_135OUT:
 2113              		.loc 1 694 0
 2114 0172 53E7     		b	.L154
 2115              	.L173:
 696:Src/mode.c    ****                 break;
 2116              		.loc 1 696 0
 2117 0174 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2118 0178 8AB2     		uxth	r2, r1
 2119 017a 090C     		lsrs	r1, r1, #16
 2120 017c 2C48     		ldr	r0, .L178+64
 2121 017e FFF7FEFF 		bl	printf
 2122              	.LVL239:
 697:Src/mode.c    ****             case T_V90:
 2123              		.loc 1 697 0
 2124 0182 4BE7     		b	.L154
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 53


 2125              	.L174:
 699:Src/mode.c    ****                 break;
 2126              		.loc 1 699 0
 2127 0184 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2128 0188 8AB2     		uxth	r2, r1
 2129 018a 090C     		lsrs	r1, r1, #16
 2130 018c 2948     		ldr	r0, .L178+68
 2131 018e FFF7FEFF 		bl	printf
 2132              	.LVL240:
 700:Src/mode.c    ****             default:
 2133              		.loc 1 700 0
 2134 0192 43E7     		b	.L154
 2135              	.L165:
 702:Src/mode.c    ****                 break;
 2136              		.loc 1 702 0
 2137 0194 1F48     		ldr	r0, .L178+36
 2138 0196 FFF7FEFF 		bl	puts
 2139              	.LVL241:
 703:Src/mode.c    ****             }
 2140              		.loc 1 703 0
 2141 019a 3FE7     		b	.L154
 2142              	.L146:
 707:Src/mode.c    ****             break;
 2143              		.loc 1 707 0
 2144 019c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2145 01a0 93B2     		uxth	r3, r2
 2146 01a2 120C     		lsrs	r2, r2, #16
 2147 01a4 0909     		lsrs	r1, r1, #4
 2148 01a6 2448     		ldr	r0, .L178+72
 2149 01a8 FFF7FEFF 		bl	printf
 2150              	.LVL242:
 708:Src/mode.c    ****         case DIAGONAL:
 2151              		.loc 1 708 0
 2152 01ac 36E7     		b	.L154
 2153              	.L152:
 710:Src/mode.c    ****             break;
 2154              		.loc 1 710 0
 2155 01ae 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2156 01b2 93B2     		uxth	r3, r2
 2157 01b4 120C     		lsrs	r2, r2, #16
 2158 01b6 0909     		lsrs	r1, r1, #4
 2159 01b8 2048     		ldr	r0, .L178+76
 2160 01ba FFF7FEFF 		bl	printf
 2161              	.LVL243:
 711:Src/mode.c    ****         case GOAL:
 2162              		.loc 1 711 0
 2163 01be 2DE7     		b	.L154
 2164              	.L151:
 713:Src/mode.c    ****             break;
 2165              		.loc 1 713 0
 2166 01c0 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2167 01c4 93B2     		uxth	r3, r2
 2168 01c6 120C     		lsrs	r2, r2, #16
 2169 01c8 0909     		lsrs	r1, r1, #4
 2170 01ca 1D48     		ldr	r0, .L178+80
 2171 01cc FFF7FEFF 		bl	printf
 2172              	.LVL244:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 54


 714:Src/mode.c    ****         case ADJUST:
 2173              		.loc 1 714 0
 2174 01d0 24E7     		b	.L154
 2175              	.L153:
 716:Src/mode.c    ****             break;
 2176              		.loc 1 716 0
 2177 01d2 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2178 01d6 93B2     		uxth	r3, r2
 2179 01d8 120C     		lsrs	r2, r2, #16
 2180 01da 0909     		lsrs	r1, r1, #4
 2181 01dc 1948     		ldr	r0, .L178+84
 2182 01de FFF7FEFF 		bl	printf
 2183              	.LVL245:
 717:Src/mode.c    ****         default:
 2184              		.loc 1 717 0
 2185 01e2 1BE7     		b	.L154
 2186              	.L145:
 719:Src/mode.c    ****             break;
 2187              		.loc 1 719 0
 2188 01e4 0B48     		ldr	r0, .L178+36
 2189 01e6 FFF7FEFF 		bl	puts
 2190              	.LVL246:
 720:Src/mode.c    ****         }
 2191              		.loc 1 720 0
 2192 01ea 17E7     		b	.L154
 2193              	.L177:
 723:Src/mode.c    ****     }
 724:Src/mode.c    **** }
 2194              		.loc 1 724 0
 2195 01ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2196              	.LVL247:
 2197              	.L179:
 2198 01ee 00BF     		.align	2
 2199              	.L178:
 2200 01f0 00000000 		.word	.LC7
 2201 01f4 24000000 		.word	.LC8
 2202 01f8 48000000 		.word	.LC9
 2203 01fc 6C000000 		.word	.LC10
 2204 0200 90000000 		.word	.LC11
 2205 0204 B4000000 		.word	.LC12
 2206 0208 DC000000 		.word	.LC13
 2207 020c 04010000 		.word	.LC14
 2208 0210 2C010000 		.word	.LC15
 2209 0214 00000000 		.word	.LC3
 2210 0218 50010000 		.word	.LC16
 2211 021c 78010000 		.word	.LC17
 2212 0220 9C010000 		.word	.LC18
 2213 0224 C0010000 		.word	.LC19
 2214 0228 E8010000 		.word	.LC20
 2215 022c 10020000 		.word	.LC21
 2216 0230 38020000 		.word	.LC22
 2217 0234 60020000 		.word	.LC23
 2218 0238 84020000 		.word	.LC24
 2219 023c A8020000 		.word	.LC25
 2220 0240 CC020000 		.word	.LC26
 2221 0244 EC020000 		.word	.LC27
 2222              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 55


 2223              	.LFE139:
 2225              		.section	.text.AdjustStraight,"ax",%progbits
 2226              		.align	1
 2227              		.global	AdjustStraight
 2228              		.syntax unified
 2229              		.thumb
 2230              		.thumb_func
 2231              		.fpu fpv4-sp-d16
 2233              	AdjustStraight:
 2234              	.LFB140:
 725:Src/mode.c    **** 
 726:Src/mode.c    **** void AdjustStraight(void)
 727:Src/mode.c    **** {
 2235              		.loc 1 727 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239 0000 08B5     		push	{r3, lr}
 2240              	.LCFI25:
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 3, -8
 2243              		.cfi_offset 14, -4
 728:Src/mode.c    ****     SetRunMode();
 2244              		.loc 1 728 0
 2245 0002 FFF7FEFF 		bl	SetRunMode
 2246              	.LVL248:
 729:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 2247              		.loc 1 729 0
 2248 0006 6021     		movs	r1, #96
 2249 0008 0846     		mov	r0, r1
 2250 000a FFF7FEFF 		bl	Tim_MotorPwm
 2251              	.LVL249:
 2252              	.L181:
 730:Src/mode.c    ****     while (motor_flag == TRUE)
 2253              		.loc 1 730 0 discriminator 1
 2254 000e 0E4B     		ldr	r3, .L183
 2255 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2256 0012 DBB2     		uxtb	r3, r3
 2257 0014 012B     		cmp	r3, #1
 2258 0016 FAD0     		beq	.L181
 731:Src/mode.c    ****     {
 732:Src/mode.c    ****     }
 733:Src/mode.c    ****     HAL_Delay(500);
 2259              		.loc 1 733 0
 2260 0018 4FF4FA70 		mov	r0, #500
 2261 001c FFF7FEFF 		bl	HAL_Delay
 2262              	.LVL250:
 734:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2263              		.loc 1 734 0
 2264 0020 49F64242 		movw	r2, #40002
 2265 0024 0949     		ldr	r1, .L183+4
 2266 0026 0A4B     		ldr	r3, .L183+8
 2267 0028 1868     		ldr	r0, [r3]
 2268 002a FFF7FEFF 		bl	Flash_Write
 2269              	.LVL251:
 735:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2270              		.loc 1 735 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 56


 2271 002e 4FF49671 		mov	r1, #300
 2272 0032 4C20     		movs	r0, #76
 2273 0034 FFF7FEFF 		bl	Tim_BuzzerPwm
 2274              	.LVL252:
 736:Src/mode.c    ****     HAL_Delay(200);
 2275              		.loc 1 736 0
 2276 0038 C820     		movs	r0, #200
 2277 003a FFF7FEFF 		bl	HAL_Delay
 2278              	.LVL253:
 737:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2279              		.loc 1 737 0
 2280 003e 0021     		movs	r1, #0
 2281 0040 0A20     		movs	r0, #10
 2282 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 2283              	.LVL254:
 738:Src/mode.c    **** }
 2284              		.loc 1 738 0
 2285 0046 08BD     		pop	{r3, pc}
 2286              	.L184:
 2287              		.align	2
 2288              	.L183:
 2289 0048 00000000 		.word	motor_flag
 2290 004c 00000000 		.word	loger
 2291 0050 00000000 		.word	start_address
 2292              		.cfi_endproc
 2293              	.LFE140:
 2295              		.section	.text.AdjustTurn,"ax",%progbits
 2296              		.align	1
 2297              		.global	AdjustTurn
 2298              		.syntax unified
 2299              		.thumb
 2300              		.thumb_func
 2301              		.fpu fpv4-sp-d16
 2303              	AdjustTurn:
 2304              	.LFB141:
 739:Src/mode.c    **** 
 740:Src/mode.c    **** void AdjustTurn(void)
 741:Src/mode.c    **** {
 2305              		.loc 1 741 0
 2306              		.cfi_startproc
 2307              		@ args = 0, pretend = 0, frame = 0
 2308              		@ frame_needed = 0, uses_anonymous_args = 0
 2309 0000 08B5     		push	{r3, lr}
 2310              	.LCFI26:
 2311              		.cfi_def_cfa_offset 8
 2312              		.cfi_offset 3, -8
 2313              		.cfi_offset 14, -4
 742:Src/mode.c    ****     SetRunMode();
 2314              		.loc 1 742 0
 2315 0002 FFF7FEFF 		bl	SetRunMode
 2316              	.LVL255:
 743:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 2317              		.loc 1 743 0
 2318 0006 B421     		movs	r1, #180
 2319 0008 6FF0B300 		mvn	r0, #179
 2320 000c FFF7FEFF 		bl	Tim_MotorPwm
 2321              	.LVL256:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 57


 2322              	.L186:
 744:Src/mode.c    ****     while (motor_flag == TRUE)
 2323              		.loc 1 744 0 discriminator 1
 2324 0010 0E4B     		ldr	r3, .L188
 2325 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2326 0014 DBB2     		uxtb	r3, r3
 2327 0016 012B     		cmp	r3, #1
 2328 0018 FAD0     		beq	.L186
 745:Src/mode.c    ****     {
 746:Src/mode.c    ****     }
 747:Src/mode.c    ****     HAL_Delay(500);
 2329              		.loc 1 747 0
 2330 001a 4FF4FA70 		mov	r0, #500
 2331 001e FFF7FEFF 		bl	HAL_Delay
 2332              	.LVL257:
 748:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2333              		.loc 1 748 0
 2334 0022 49F64242 		movw	r2, #40002
 2335 0026 0A49     		ldr	r1, .L188+4
 2336 0028 0A4B     		ldr	r3, .L188+8
 2337 002a 1868     		ldr	r0, [r3]
 2338 002c FFF7FEFF 		bl	Flash_Write
 2339              	.LVL258:
 749:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2340              		.loc 1 749 0
 2341 0030 4FF49671 		mov	r1, #300
 2342 0034 4C20     		movs	r0, #76
 2343 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 2344              	.LVL259:
 750:Src/mode.c    ****     HAL_Delay(200);
 2345              		.loc 1 750 0
 2346 003a C820     		movs	r0, #200
 2347 003c FFF7FEFF 		bl	HAL_Delay
 2348              	.LVL260:
 751:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2349              		.loc 1 751 0
 2350 0040 0021     		movs	r1, #0
 2351 0042 0A20     		movs	r0, #10
 2352 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 2353              	.LVL261:
 752:Src/mode.c    **** }
 2354              		.loc 1 752 0
 2355 0048 08BD     		pop	{r3, pc}
 2356              	.L189:
 2357 004a 00BF     		.align	2
 2358              	.L188:
 2359 004c 00000000 		.word	motor_flag
 2360 0050 00000000 		.word	loger
 2361 0054 00000000 		.word	start_address
 2362              		.cfi_endproc
 2363              	.LFE141:
 2365              		.section	.text.Circuit,"ax",%progbits
 2366              		.align	1
 2367              		.global	Circuit
 2368              		.syntax unified
 2369              		.thumb
 2370              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 58


 2371              		.fpu fpv4-sp-d16
 2373              	Circuit:
 2374              	.LFB142:
 753:Src/mode.c    **** 
 754:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 755:Src/mode.c    **** {
 2375              		.loc 1 755 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 0
 2378              		@ frame_needed = 0, uses_anonymous_args = 0
 2379              	.LVL262:
 2380 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2381              	.LCFI27:
 2382              		.cfi_def_cfa_offset 24
 2383              		.cfi_offset 4, -24
 2384              		.cfi_offset 5, -20
 2385              		.cfi_offset 6, -16
 2386              		.cfi_offset 7, -12
 2387              		.cfi_offset 8, -8
 2388              		.cfi_offset 14, -4
 2389 0004 0746     		mov	r7, r0
 2390 0006 0E46     		mov	r6, r1
 2391 0008 9046     		mov	r8, r2
 2392 000a 1D46     		mov	r5, r3
 756:Src/mode.c    ****     Motion_Start();
 2393              		.loc 1 756 0
 2394 000c FFF7FEFF 		bl	Motion_Start
 2395              	.LVL263:
 2396              	.LBB13:
 757:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2397              		.loc 1 757 0
 2398 0010 0024     		movs	r4, #0
 2399 0012 29E0     		b	.L191
 2400              	.LVL264:
 2401              	.L208:
 758:Src/mode.c    ****     {
 759:Src/mode.c    ****         if (row > 1)
 760:Src/mode.c    ****         {
 761:Src/mode.c    ****             Motion_FastStraight(row - 1, VELO_S, VELO_S);
 2402              		.loc 1 761 0
 2403 0014 9FED290A 		vldr.32	s0, .L214
 2404 0018 781E     		subs	r0, r7, #1
 2405 001a F0EE400A 		vmov.f32	s1, s0
 2406 001e C0B2     		uxtb	r0, r0
 2407 0020 FFF7FEFF 		bl	Motion_FastStraight
 2408              	.LVL265:
 2409 0024 24E0     		b	.L192
 2410              	.L209:
 762:Src/mode.c    ****         }
 763:Src/mode.c    **** 
 764:Src/mode.c    ****         if (dir == 1)
 765:Src/mode.c    ****         {
 766:Src/mode.c    ****             Motion_LeftTurn();
 2411              		.loc 1 766 0
 2412 0026 FFF7FEFF 		bl	Motion_LeftTurn
 2413              	.LVL266:
 2414 002a 25E0     		b	.L194
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 59


 2415              	.L210:
 767:Src/mode.c    ****         }
 768:Src/mode.c    ****         else
 769:Src/mode.c    ****         {
 770:Src/mode.c    ****             Motion_RightTurn();
 771:Src/mode.c    ****         }
 772:Src/mode.c    **** 
 773:Src/mode.c    ****         if (colum > 1)
 774:Src/mode.c    ****         {
 775:Src/mode.c    ****             Motion_FastStraight(colum - 1, VELO_S, VELO_S);
 2416              		.loc 1 775 0
 2417 002c 9FED230A 		vldr.32	s0, .L214
 2418 0030 701E     		subs	r0, r6, #1
 2419 0032 F0EE400A 		vmov.f32	s1, s0
 2420 0036 C0B2     		uxtb	r0, r0
 2421 0038 FFF7FEFF 		bl	Motion_FastStraight
 2422              	.LVL267:
 2423 003c 1EE0     		b	.L195
 2424              	.L211:
 776:Src/mode.c    ****         }
 777:Src/mode.c    **** 
 778:Src/mode.c    ****         if (dir == 1)
 779:Src/mode.c    ****         {
 780:Src/mode.c    ****             Motion_LeftTurn();
 2425              		.loc 1 780 0
 2426 003e FFF7FEFF 		bl	Motion_LeftTurn
 2427              	.LVL268:
 2428 0042 1FE0     		b	.L197
 2429              	.L212:
 781:Src/mode.c    ****         }
 782:Src/mode.c    ****         else
 783:Src/mode.c    ****         {
 784:Src/mode.c    ****             Motion_RightTurn();
 785:Src/mode.c    ****         }
 786:Src/mode.c    **** 
 787:Src/mode.c    ****         if (row > 1)
 788:Src/mode.c    ****         {
 789:Src/mode.c    ****             Motion_FastStraight(row - 1, VELO_S, VELO_S);
 2430              		.loc 1 789 0
 2431 0044 9FED1D0A 		vldr.32	s0, .L214
 2432 0048 781E     		subs	r0, r7, #1
 2433 004a F0EE400A 		vmov.f32	s1, s0
 2434 004e C0B2     		uxtb	r0, r0
 2435 0050 FFF7FEFF 		bl	Motion_FastStraight
 2436              	.LVL269:
 2437 0054 18E0     		b	.L198
 2438              	.L213:
 790:Src/mode.c    ****         }
 791:Src/mode.c    **** 
 792:Src/mode.c    ****         if (dir == 1)
 793:Src/mode.c    ****         {
 794:Src/mode.c    ****             Motion_LeftTurn();
 2439              		.loc 1 794 0
 2440 0056 FFF7FEFF 		bl	Motion_LeftTurn
 2441              	.LVL270:
 2442 005a 19E0     		b	.L200
 2443              	.L201:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 60


 795:Src/mode.c    ****         }
 796:Src/mode.c    ****         else
 797:Src/mode.c    ****         {
 798:Src/mode.c    ****             Motion_RightTurn();
 799:Src/mode.c    ****         }
 800:Src/mode.c    **** 
 801:Src/mode.c    ****         if (colum > 1)
 802:Src/mode.c    ****         {
 803:Src/mode.c    ****             Motion_FastStraight(colum - 1, VELO_S, VELO_S);
 804:Src/mode.c    ****         }
 805:Src/mode.c    ****         if (dir == 1)
 2444              		.loc 1 805 0
 2445 005c 012D     		cmp	r5, #1
 2446 005e 22D0     		beq	.L206
 806:Src/mode.c    ****         {
 807:Src/mode.c    ****             Motion_LeftTurn();
 808:Src/mode.c    ****         }
 809:Src/mode.c    ****         else
 810:Src/mode.c    ****         {
 811:Src/mode.c    ****             Motion_RightTurn();
 2447              		.loc 1 811 0
 2448 0060 FFF7FEFF 		bl	Motion_RightTurn
 2449              	.LVL271:
 2450              	.L203:
 757:Src/mode.c    ****     {
 2451              		.loc 1 757 0 discriminator 2
 2452 0064 0134     		adds	r4, r4, #1
 2453              	.LVL272:
 2454 0066 E4B2     		uxtb	r4, r4
 2455              	.LVL273:
 2456              	.L191:
 757:Src/mode.c    ****     {
 2457              		.loc 1 757 0 is_stmt 0 discriminator 1
 2458 0068 4445     		cmp	r4, r8
 2459 006a 1FD2     		bcs	.L207
 759:Src/mode.c    ****         {
 2460              		.loc 1 759 0 is_stmt 1
 2461 006c 012F     		cmp	r7, #1
 2462 006e D1D8     		bhi	.L208
 2463              	.L192:
 764:Src/mode.c    ****         {
 2464              		.loc 1 764 0
 2465 0070 012D     		cmp	r5, #1
 2466 0072 D8D0     		beq	.L209
 770:Src/mode.c    ****         }
 2467              		.loc 1 770 0
 2468 0074 FFF7FEFF 		bl	Motion_RightTurn
 2469              	.LVL274:
 2470              	.L194:
 773:Src/mode.c    ****         {
 2471              		.loc 1 773 0
 2472 0078 012E     		cmp	r6, #1
 2473 007a D7D8     		bhi	.L210
 2474              	.L195:
 778:Src/mode.c    ****         {
 2475              		.loc 1 778 0
 2476 007c 012D     		cmp	r5, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 61


 2477 007e DED0     		beq	.L211
 784:Src/mode.c    ****         }
 2478              		.loc 1 784 0
 2479 0080 FFF7FEFF 		bl	Motion_RightTurn
 2480              	.LVL275:
 2481              	.L197:
 787:Src/mode.c    ****         {
 2482              		.loc 1 787 0
 2483 0084 012F     		cmp	r7, #1
 2484 0086 DDD8     		bhi	.L212
 2485              	.L198:
 792:Src/mode.c    ****         {
 2486              		.loc 1 792 0
 2487 0088 012D     		cmp	r5, #1
 2488 008a E4D0     		beq	.L213
 798:Src/mode.c    ****         }
 2489              		.loc 1 798 0
 2490 008c FFF7FEFF 		bl	Motion_RightTurn
 2491              	.LVL276:
 2492              	.L200:
 801:Src/mode.c    ****         {
 2493              		.loc 1 801 0
 2494 0090 012E     		cmp	r6, #1
 2495 0092 E3D9     		bls	.L201
 803:Src/mode.c    ****         }
 2496              		.loc 1 803 0
 2497 0094 9FED090A 		vldr.32	s0, .L214
 2498 0098 701E     		subs	r0, r6, #1
 2499 009a F0EE400A 		vmov.f32	s1, s0
 2500 009e C0B2     		uxtb	r0, r0
 2501 00a0 FFF7FEFF 		bl	Motion_FastStraight
 2502              	.LVL277:
 2503 00a4 DAE7     		b	.L201
 2504              	.L206:
 807:Src/mode.c    ****         }
 2505              		.loc 1 807 0
 2506 00a6 FFF7FEFF 		bl	Motion_LeftTurn
 2507              	.LVL278:
 2508 00aa DBE7     		b	.L203
 2509              	.L207:
 2510              	.LBE13:
 812:Src/mode.c    ****         }
 813:Src/mode.c    ****     }
 814:Src/mode.c    ****     Motion_End();
 2511              		.loc 1 814 0
 2512 00ac FFF7FEFF 		bl	Motion_End
 2513              	.LVL279:
 815:Src/mode.c    ****     motor_flag = FALSE;
 2514              		.loc 1 815 0
 2515 00b0 034B     		ldr	r3, .L214+4
 2516 00b2 0022     		movs	r2, #0
 2517 00b4 1A70     		strb	r2, [r3]
 816:Src/mode.c    **** }
 2518              		.loc 1 816 0
 2519 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2520              	.LVL280:
 2521              	.L215:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 62


 2522 00ba 00BF     		.align	2
 2523              	.L214:
 2524 00bc 0000C843 		.word	1137180672
 2525 00c0 00000000 		.word	motor_flag
 2526              		.cfi_endproc
 2527              	.LFE142:
 2529              		.section	.text.Turn45_Test,"ax",%progbits
 2530              		.align	1
 2531              		.global	Turn45_Test
 2532              		.syntax unified
 2533              		.thumb
 2534              		.thumb_func
 2535              		.fpu fpv4-sp-d16
 2537              	Turn45_Test:
 2538              	.LFB143:
 817:Src/mode.c    **** 
 818:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
 819:Src/mode.c    **** {
 2539              		.loc 1 819 0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              	.LVL281:
 2544 0000 70B5     		push	{r4, r5, r6, lr}
 2545              	.LCFI28:
 2546              		.cfi_def_cfa_offset 16
 2547              		.cfi_offset 4, -16
 2548              		.cfi_offset 5, -12
 2549              		.cfi_offset 6, -8
 2550              		.cfi_offset 14, -4
 2551 0002 2DED028B 		vpush.64	{d8}
 2552              	.LCFI29:
 2553              		.cfi_def_cfa_offset 24
 2554              		.cfi_offset 80, -24
 2555              		.cfi_offset 81, -20
 2556 0006 0546     		mov	r5, r0
 2557 0008 0C46     		mov	r4, r1
 2558 000a 1646     		mov	r6, r2
 820:Src/mode.c    ****     SetRunMode();
 2559              		.loc 1 820 0
 2560 000c FFF7FEFF 		bl	SetRunMode
 2561              	.LVL282:
 821:Src/mode.c    **** 
 822:Src/mode.c    ****     switch (in_dir)
 2562              		.loc 1 822 0
 2563 0010 012D     		cmp	r5, #1
 2564 0012 2CD0     		beq	.L218
 2565 0014 45B3     		cbz	r5, .L219
 2566 0016 022D     		cmp	r5, #2
 2567 0018 31D0     		beq	.L220
 2568              	.L217:
 823:Src/mode.c    ****     {
 824:Src/mode.c    ****     case FRONT:
 825:Src/mode.c    ****         Motion_DiagonalStart();
 826:Src/mode.c    ****         break;
 827:Src/mode.c    ****     case LEFT:
 828:Src/mode.c    ****         Motion_FastStart(2, VELO_F);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 63


 829:Src/mode.c    ****         Motion_InLeft45Turn();
 830:Src/mode.c    ****         break;
 831:Src/mode.c    ****     case RIGHT:
 832:Src/mode.c    ****         Motion_FastStart(2, VELO_F);
 833:Src/mode.c    ****         Motion_InRight45Turn();
 834:Src/mode.c    ****         break;
 835:Src/mode.c    ****     default:
 836:Src/mode.c    ****         break;
 837:Src/mode.c    ****     }
 838:Src/mode.c    **** 
 839:Src/mode.c    ****     if (step > 0)
 2569              		.loc 1 839 0
 2570 001a C6BB     		cbnz	r6, .L227
 2571              	.L221:
 840:Src/mode.c    ****     {
 841:Src/mode.c    ****         Motion_Diagonal(step);
 842:Src/mode.c    ****     }
 843:Src/mode.c    **** 
 844:Src/mode.c    ****     switch (out_dir)
 2572              		.loc 1 844 0
 2573 001c 012C     		cmp	r4, #1
 2574 001e 3DD0     		beq	.L223
 2575 0020 CCB3     		cbz	r4, .L224
 2576 0022 022C     		cmp	r4, #2
 2577 0024 46D0     		beq	.L225
 2578              	.L222:
 845:Src/mode.c    ****     {
 846:Src/mode.c    ****     case FRONT:
 847:Src/mode.c    ****         Motion_DiagonalStop();
 848:Src/mode.c    ****         break;
 849:Src/mode.c    ****     case LEFT:
 850:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 851:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 852:Src/mode.c    ****         break;
 853:Src/mode.c    ****     case RIGHT:
 854:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
 855:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 856:Src/mode.c    ****         break;
 857:Src/mode.c    ****     default:
 858:Src/mode.c    ****         break;
 859:Src/mode.c    ****     }
 860:Src/mode.c    **** 
 861:Src/mode.c    ****     motor_flag = FALSE;
 2579              		.loc 1 861 0
 2580 0026 0024     		movs	r4, #0
 2581 0028 284B     		ldr	r3, .L228
 2582 002a 1C70     		strb	r4, [r3]
 862:Src/mode.c    ****     HAL_Delay(500);
 2583              		.loc 1 862 0
 2584 002c 4FF4FA70 		mov	r0, #500
 2585 0030 FFF7FEFF 		bl	HAL_Delay
 2586              	.LVL283:
 863:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2587              		.loc 1 863 0
 2588 0034 49F64242 		movw	r2, #40002
 2589 0038 2549     		ldr	r1, .L228+4
 2590 003a 264B     		ldr	r3, .L228+8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 64


 2591 003c 1868     		ldr	r0, [r3]
 2592 003e FFF7FEFF 		bl	Flash_Write
 2593              	.LVL284:
 864:Src/mode.c    ****     HAL_Delay(300);
 2594              		.loc 1 864 0
 2595 0042 4FF49670 		mov	r0, #300
 2596 0046 FFF7FEFF 		bl	HAL_Delay
 2597              	.LVL285:
 865:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2598              		.loc 1 865 0
 2599 004a 4FF49671 		mov	r1, #300
 2600 004e 4C20     		movs	r0, #76
 2601 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 2602              	.LVL286:
 866:Src/mode.c    ****     HAL_Delay(200);
 2603              		.loc 1 866 0
 2604 0054 C820     		movs	r0, #200
 2605 0056 FFF7FEFF 		bl	HAL_Delay
 2606              	.LVL287:
 867:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2607              		.loc 1 867 0
 2608 005a 2146     		mov	r1, r4
 2609 005c 0A20     		movs	r0, #10
 2610 005e FFF7FEFF 		bl	Tim_BuzzerPwm
 2611              	.LVL288:
 868:Src/mode.c    **** }
 2612              		.loc 1 868 0
 2613 0062 BDEC028B 		vldm	sp!, {d8}
 2614              	.LCFI30:
 2615              		.cfi_remember_state
 2616              		.cfi_restore 80
 2617              		.cfi_restore 81
 2618              		.cfi_def_cfa_offset 16
 2619 0066 70BD     		pop	{r4, r5, r6, pc}
 2620              	.L219:
 2621              	.LCFI31:
 2622              		.cfi_restore_state
 825:Src/mode.c    ****         break;
 2623              		.loc 1 825 0
 2624 0068 FFF7FEFF 		bl	Motion_DiagonalStart
 2625              	.LVL289:
 826:Src/mode.c    ****     case LEFT:
 2626              		.loc 1 826 0
 2627 006c D5E7     		b	.L217
 2628              	.L218:
 828:Src/mode.c    ****         Motion_InLeft45Turn();
 2629              		.loc 1 828 0
 2630 006e 9FED1A0A 		vldr.32	s0, .L228+12
 2631 0072 0220     		movs	r0, #2
 2632 0074 FFF7FEFF 		bl	Motion_FastStart
 2633              	.LVL290:
 829:Src/mode.c    ****         break;
 2634              		.loc 1 829 0
 2635 0078 FFF7FEFF 		bl	Motion_InLeft45Turn
 2636              	.LVL291:
 830:Src/mode.c    ****     case RIGHT:
 2637              		.loc 1 830 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 65


 2638 007c CDE7     		b	.L217
 2639              	.L220:
 832:Src/mode.c    ****         Motion_InRight45Turn();
 2640              		.loc 1 832 0
 2641 007e 9FED160A 		vldr.32	s0, .L228+12
 2642 0082 0220     		movs	r0, #2
 2643 0084 FFF7FEFF 		bl	Motion_FastStart
 2644              	.LVL292:
 833:Src/mode.c    ****         break;
 2645              		.loc 1 833 0
 2646 0088 FFF7FEFF 		bl	Motion_InRight45Turn
 2647              	.LVL293:
 834:Src/mode.c    ****     default:
 2648              		.loc 1 834 0
 2649 008c C5E7     		b	.L217
 2650              	.L227:
 841:Src/mode.c    ****     }
 2651              		.loc 1 841 0
 2652 008e 3046     		mov	r0, r6
 2653 0090 FFF7FEFF 		bl	Motion_Diagonal
 2654              	.LVL294:
 2655 0094 C2E7     		b	.L221
 2656              	.L224:
 847:Src/mode.c    ****         break;
 2657              		.loc 1 847 0
 2658 0096 FFF7FEFF 		bl	Motion_DiagonalStop
 2659              	.LVL295:
 848:Src/mode.c    ****     case LEFT:
 2660              		.loc 1 848 0
 2661 009a C4E7     		b	.L222
 2662              	.L223:
 850:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2663              		.loc 1 850 0
 2664 009c 9FED0E8A 		vldr.32	s16, .L228+12
 2665 00a0 B0EE480A 		vmov.f32	s0, s16
 2666 00a4 FFF7FEFF 		bl	Motion_OutLeft45Turn
 2667              	.LVL296:
 851:Src/mode.c    ****         break;
 2668              		.loc 1 851 0
 2669 00a8 B0EE480A 		vmov.f32	s0, s16
 2670 00ac 0120     		movs	r0, #1
 2671 00ae FFF7FEFF 		bl	Motion_FastGoal
 2672              	.LVL297:
 852:Src/mode.c    ****     case RIGHT:
 2673              		.loc 1 852 0
 2674 00b2 B8E7     		b	.L222
 2675              	.L225:
 854:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2676              		.loc 1 854 0
 2677 00b4 9FED088A 		vldr.32	s16, .L228+12
 2678 00b8 B0EE480A 		vmov.f32	s0, s16
 2679 00bc FFF7FEFF 		bl	Motion_OutRight45Turn
 2680              	.LVL298:
 855:Src/mode.c    ****         break;
 2681              		.loc 1 855 0
 2682 00c0 B0EE480A 		vmov.f32	s0, s16
 2683 00c4 0120     		movs	r0, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 66


 2684 00c6 FFF7FEFF 		bl	Motion_FastGoal
 2685              	.LVL299:
 856:Src/mode.c    ****     default:
 2686              		.loc 1 856 0
 2687 00ca ACE7     		b	.L222
 2688              	.L229:
 2689              		.align	2
 2690              	.L228:
 2691 00cc 00000000 		.word	motor_flag
 2692 00d0 00000000 		.word	loger
 2693 00d4 00000000 		.word	start_address
 2694 00d8 00004844 		.word	1145569280
 2695              		.cfi_endproc
 2696              	.LFE143:
 2698              		.section	.text.Turn135_Test,"ax",%progbits
 2699              		.align	1
 2700              		.global	Turn135_Test
 2701              		.syntax unified
 2702              		.thumb
 2703              		.thumb_func
 2704              		.fpu fpv4-sp-d16
 2706              	Turn135_Test:
 2707              	.LFB144:
 869:Src/mode.c    **** 
 870:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
 871:Src/mode.c    **** {
 2708              		.loc 1 871 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 0
 2711              		@ frame_needed = 0, uses_anonymous_args = 0
 2712              	.LVL300:
 2713 0000 70B5     		push	{r4, r5, r6, lr}
 2714              	.LCFI32:
 2715              		.cfi_def_cfa_offset 16
 2716              		.cfi_offset 4, -16
 2717              		.cfi_offset 5, -12
 2718              		.cfi_offset 6, -8
 2719              		.cfi_offset 14, -4
 2720 0002 2DED028B 		vpush.64	{d8}
 2721              	.LCFI33:
 2722              		.cfi_def_cfa_offset 24
 2723              		.cfi_offset 80, -24
 2724              		.cfi_offset 81, -20
 2725 0006 0546     		mov	r5, r0
 2726 0008 0C46     		mov	r4, r1
 2727 000a 1646     		mov	r6, r2
 872:Src/mode.c    ****     SetRunMode();
 2728              		.loc 1 872 0
 2729 000c FFF7FEFF 		bl	SetRunMode
 2730              	.LVL301:
 873:Src/mode.c    **** 
 874:Src/mode.c    ****     switch (in_dir)
 2731              		.loc 1 874 0
 2732 0010 012D     		cmp	r5, #1
 2733 0012 2ED0     		beq	.L232
 2734 0014 55B3     		cbz	r5, .L233
 2735 0016 022D     		cmp	r5, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 67


 2736 0018 3ED0     		beq	.L234
 2737              	.L231:
 875:Src/mode.c    ****     {
 876:Src/mode.c    ****     case FRONT:
 877:Src/mode.c    ****         Motion_DiagonalStart();
 878:Src/mode.c    ****         break;
 879:Src/mode.c    ****     case LEFT:
 880:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
 881:Src/mode.c    ****         Motion_Adjust(VELO_F, 1);
 882:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 883:Src/mode.c    ****         break;
 884:Src/mode.c    ****     case RIGHT:
 885:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
 886:Src/mode.c    ****         Motion_Adjust(VELO_F, 1);
 887:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 888:Src/mode.c    ****         break;
 889:Src/mode.c    ****     default:
 890:Src/mode.c    ****         break;
 891:Src/mode.c    ****     }
 892:Src/mode.c    **** 
 893:Src/mode.c    ****     if (step > 0)
 2738              		.loc 1 893 0
 2739 001a 002E     		cmp	r6, #0
 2740 001c 4FD1     		bne	.L241
 2741              	.L235:
 894:Src/mode.c    ****     {
 895:Src/mode.c    ****         Motion_Diagonal(step);
 896:Src/mode.c    ****     }
 897:Src/mode.c    **** 
 898:Src/mode.c    ****     switch (out_dir)
 2742              		.loc 1 898 0
 2743 001e 012C     		cmp	r4, #1
 2744 0020 54D0     		beq	.L237
 2745 0022 002C     		cmp	r4, #0
 2746 0024 4FD0     		beq	.L238
 2747 0026 022C     		cmp	r4, #2
 2748 0028 5DD0     		beq	.L239
 2749              	.L236:
 899:Src/mode.c    ****     {
 900:Src/mode.c    ****     case FRONT:
 901:Src/mode.c    ****         Motion_DiagonalStop();
 902:Src/mode.c    ****         break;
 903:Src/mode.c    ****     case LEFT:
 904:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
 905:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 906:Src/mode.c    ****         break;
 907:Src/mode.c    ****     case RIGHT:
 908:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
 909:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 910:Src/mode.c    ****         break;
 911:Src/mode.c    ****     default:
 912:Src/mode.c    ****         break;
 913:Src/mode.c    ****     }
 914:Src/mode.c    **** 
 915:Src/mode.c    ****     motor_flag = FALSE;
 2750              		.loc 1 915 0
 2751 002a 0024     		movs	r4, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 68


 2752 002c 344B     		ldr	r3, .L242
 2753 002e 1C70     		strb	r4, [r3]
 916:Src/mode.c    ****     HAL_Delay(500);
 2754              		.loc 1 916 0
 2755 0030 4FF4FA70 		mov	r0, #500
 2756 0034 FFF7FEFF 		bl	HAL_Delay
 2757              	.LVL302:
 917:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2758              		.loc 1 917 0
 2759 0038 49F64242 		movw	r2, #40002
 2760 003c 3149     		ldr	r1, .L242+4
 2761 003e 324B     		ldr	r3, .L242+8
 2762 0040 1868     		ldr	r0, [r3]
 2763 0042 FFF7FEFF 		bl	Flash_Write
 2764              	.LVL303:
 918:Src/mode.c    ****     HAL_Delay(300);
 2765              		.loc 1 918 0
 2766 0046 4FF49670 		mov	r0, #300
 2767 004a FFF7FEFF 		bl	HAL_Delay
 2768              	.LVL304:
 919:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2769              		.loc 1 919 0
 2770 004e 4FF49671 		mov	r1, #300
 2771 0052 4C20     		movs	r0, #76
 2772 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 2773              	.LVL305:
 920:Src/mode.c    ****     HAL_Delay(200);
 2774              		.loc 1 920 0
 2775 0058 C820     		movs	r0, #200
 2776 005a FFF7FEFF 		bl	HAL_Delay
 2777              	.LVL306:
 921:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2778              		.loc 1 921 0
 2779 005e 2146     		mov	r1, r4
 2780 0060 0A20     		movs	r0, #10
 2781 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 2782              	.LVL307:
 922:Src/mode.c    **** }
 2783              		.loc 1 922 0
 2784 0066 BDEC028B 		vldm	sp!, {d8}
 2785              	.LCFI34:
 2786              		.cfi_remember_state
 2787              		.cfi_restore 80
 2788              		.cfi_restore 81
 2789              		.cfi_def_cfa_offset 16
 2790 006a 70BD     		pop	{r4, r5, r6, pc}
 2791              	.L233:
 2792              	.LCFI35:
 2793              		.cfi_restore_state
 877:Src/mode.c    ****         break;
 2794              		.loc 1 877 0
 2795 006c FFF7FEFF 		bl	Motion_DiagonalStart
 2796              	.LVL308:
 878:Src/mode.c    ****     case LEFT:
 2797              		.loc 1 878 0
 2798 0070 D3E7     		b	.L231
 2799              	.L232:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 69


 880:Src/mode.c    ****         Motion_Adjust(VELO_F, 1);
 2800              		.loc 1 880 0
 2801 0072 9FED268A 		vldr.32	s16, .L242+12
 2802 0076 B0EE480A 		vmov.f32	s0, s16
 2803 007a 0120     		movs	r0, #1
 2804 007c FFF7FEFF 		bl	Motion_FastStart
 2805              	.LVL309:
 881:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 2806              		.loc 1 881 0
 2807 0080 B7EE000A 		vmov.f32	s0, #1.0e+0
 2808 0084 4FF44870 		mov	r0, #800
 2809 0088 FFF7FEFF 		bl	Motion_Adjust
 2810              	.LVL310:
 882:Src/mode.c    ****         break;
 2811              		.loc 1 882 0
 2812 008c B0EE480A 		vmov.f32	s0, s16
 2813 0090 0220     		movs	r0, #2
 2814 0092 FFF7FEFF 		bl	Motion_FastLeftTurn
 2815              	.LVL311:
 883:Src/mode.c    ****     case RIGHT:
 2816              		.loc 1 883 0
 2817 0096 C0E7     		b	.L231
 2818              	.L234:
 885:Src/mode.c    ****         Motion_Adjust(VELO_F, 1);
 2819              		.loc 1 885 0
 2820 0098 9FED1C8A 		vldr.32	s16, .L242+12
 2821 009c B0EE480A 		vmov.f32	s0, s16
 2822 00a0 0120     		movs	r0, #1
 2823 00a2 FFF7FEFF 		bl	Motion_FastStart
 2824              	.LVL312:
 886:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 2825              		.loc 1 886 0
 2826 00a6 B7EE000A 		vmov.f32	s0, #1.0e+0
 2827 00aa 4FF44870 		mov	r0, #800
 2828 00ae FFF7FEFF 		bl	Motion_Adjust
 2829              	.LVL313:
 887:Src/mode.c    ****         break;
 2830              		.loc 1 887 0
 2831 00b2 B0EE480A 		vmov.f32	s0, s16
 2832 00b6 0220     		movs	r0, #2
 2833 00b8 FFF7FEFF 		bl	Motion_FastRightTurn
 2834              	.LVL314:
 888:Src/mode.c    ****     default:
 2835              		.loc 1 888 0
 2836 00bc ADE7     		b	.L231
 2837              	.L241:
 895:Src/mode.c    ****     }
 2838              		.loc 1 895 0
 2839 00be 3046     		mov	r0, r6
 2840 00c0 FFF7FEFF 		bl	Motion_Diagonal
 2841              	.LVL315:
 2842 00c4 ABE7     		b	.L235
 2843              	.L238:
 901:Src/mode.c    ****         break;
 2844              		.loc 1 901 0
 2845 00c6 FFF7FEFF 		bl	Motion_DiagonalStop
 2846              	.LVL316:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 70


 902:Src/mode.c    ****     case LEFT:
 2847              		.loc 1 902 0
 2848 00ca AEE7     		b	.L236
 2849              	.L237:
 904:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2850              		.loc 1 904 0
 2851 00cc 9FED0F8A 		vldr.32	s16, .L242+12
 2852 00d0 B0EE480A 		vmov.f32	s0, s16
 2853 00d4 0620     		movs	r0, #6
 2854 00d6 FFF7FEFF 		bl	Motion_FastLeftTurn
 2855              	.LVL317:
 905:Src/mode.c    ****         break;
 2856              		.loc 1 905 0
 2857 00da B0EE480A 		vmov.f32	s0, s16
 2858 00de 0120     		movs	r0, #1
 2859 00e0 FFF7FEFF 		bl	Motion_FastGoal
 2860              	.LVL318:
 906:Src/mode.c    ****     case RIGHT:
 2861              		.loc 1 906 0
 2862 00e4 A1E7     		b	.L236
 2863              	.L239:
 908:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2864              		.loc 1 908 0
 2865 00e6 9FED098A 		vldr.32	s16, .L242+12
 2866 00ea B0EE480A 		vmov.f32	s0, s16
 2867 00ee 0620     		movs	r0, #6
 2868 00f0 FFF7FEFF 		bl	Motion_FastRightTurn
 2869              	.LVL319:
 909:Src/mode.c    ****         break;
 2870              		.loc 1 909 0
 2871 00f4 B0EE480A 		vmov.f32	s0, s16
 2872 00f8 0120     		movs	r0, #1
 2873 00fa FFF7FEFF 		bl	Motion_FastGoal
 2874              	.LVL320:
 910:Src/mode.c    ****     default:
 2875              		.loc 1 910 0
 2876 00fe 94E7     		b	.L236
 2877              	.L243:
 2878              		.align	2
 2879              	.L242:
 2880 0100 00000000 		.word	motor_flag
 2881 0104 00000000 		.word	loger
 2882 0108 00000000 		.word	start_address
 2883 010c 00004844 		.word	1145569280
 2884              		.cfi_endproc
 2885              	.LFE144:
 2887              		.section	.text.TurnBig90_Test,"ax",%progbits
 2888              		.align	1
 2889              		.global	TurnBig90_Test
 2890              		.syntax unified
 2891              		.thumb
 2892              		.thumb_func
 2893              		.fpu fpv4-sp-d16
 2895              	TurnBig90_Test:
 2896              	.LFB145:
 923:Src/mode.c    **** 
 924:Src/mode.c    **** void TurnBig90_Test(int8_t dir)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 71


 925:Src/mode.c    **** {
 2897              		.loc 1 925 0
 2898              		.cfi_startproc
 2899              		@ args = 0, pretend = 0, frame = 0
 2900              		@ frame_needed = 0, uses_anonymous_args = 0
 2901              	.LVL321:
 2902 0000 10B5     		push	{r4, lr}
 2903              	.LCFI36:
 2904              		.cfi_def_cfa_offset 8
 2905              		.cfi_offset 4, -8
 2906              		.cfi_offset 14, -4
 2907 0002 0446     		mov	r4, r0
 926:Src/mode.c    ****     SetRunMode();
 2908              		.loc 1 926 0
 2909 0004 FFF7FEFF 		bl	SetRunMode
 2910              	.LVL322:
 927:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 2911              		.loc 1 927 0
 2912 0008 9FED160A 		vldr.32	s0, .L250
 2913 000c 0120     		movs	r0, #1
 2914 000e FFF7FEFF 		bl	Motion_FastStart
 2915              	.LVL323:
 928:Src/mode.c    ****     Motion_Adjust(VELO_F, 1);
 2916              		.loc 1 928 0
 2917 0012 B7EE000A 		vmov.f32	s0, #1.0e+0
 2918 0016 4FF44870 		mov	r0, #800
 2919 001a FFF7FEFF 		bl	Motion_Adjust
 2920              	.LVL324:
 929:Src/mode.c    ****     if (dir == LEFT)
 2921              		.loc 1 929 0
 2922 001e 012C     		cmp	r4, #1
 2923 0020 16D0     		beq	.L248
 930:Src/mode.c    ****     {
 931:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
 932:Src/mode.c    ****     }
 933:Src/mode.c    ****     else if (dir == RIGHT)
 2924              		.loc 1 933 0
 2925 0022 022C     		cmp	r4, #2
 2926 0024 19D0     		beq	.L249
 2927              	.L246:
 934:Src/mode.c    ****     {
 935:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
 936:Src/mode.c    ****     }
 937:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 2928              		.loc 1 937 0
 2929 0026 9FED0F0A 		vldr.32	s0, .L250
 2930 002a 0120     		movs	r0, #1
 2931 002c FFF7FEFF 		bl	Motion_FastGoal
 2932              	.LVL325:
 938:Src/mode.c    ****     motor_flag = FALSE;
 2933              		.loc 1 938 0
 2934 0030 0024     		movs	r4, #0
 2935 0032 0D4B     		ldr	r3, .L250+4
 2936 0034 1C70     		strb	r4, [r3]
 939:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2937              		.loc 1 939 0
 2938 0036 4FF49671 		mov	r1, #300
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 72


 2939 003a 4C20     		movs	r0, #76
 2940 003c FFF7FEFF 		bl	Tim_BuzzerPwm
 2941              	.LVL326:
 940:Src/mode.c    ****     HAL_Delay(200);
 2942              		.loc 1 940 0
 2943 0040 C820     		movs	r0, #200
 2944 0042 FFF7FEFF 		bl	HAL_Delay
 2945              	.LVL327:
 941:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2946              		.loc 1 941 0
 2947 0046 2146     		mov	r1, r4
 2948 0048 0A20     		movs	r0, #10
 2949 004a FFF7FEFF 		bl	Tim_BuzzerPwm
 2950              	.LVL328:
 942:Src/mode.c    **** }
 2951              		.loc 1 942 0
 2952 004e 10BD     		pop	{r4, pc}
 2953              	.L248:
 931:Src/mode.c    ****     }
 2954              		.loc 1 931 0
 2955 0050 9FED040A 		vldr.32	s0, .L250
 2956 0054 FFF7FEFF 		bl	Motion_Left90Turn
 2957              	.LVL329:
 2958 0058 E5E7     		b	.L246
 2959              	.L249:
 935:Src/mode.c    ****     }
 2960              		.loc 1 935 0
 2961 005a 9FED020A 		vldr.32	s0, .L250
 2962 005e FFF7FEFF 		bl	Motion_Right90Turn
 2963              	.LVL330:
 2964 0062 E0E7     		b	.L246
 2965              	.L251:
 2966              		.align	2
 2967              	.L250:
 2968 0064 00004844 		.word	1145569280
 2969 0068 00000000 		.word	motor_flag
 2970              		.cfi_endproc
 2971              	.LFE145:
 2973              		.section	.text.TurnBig180_Test,"ax",%progbits
 2974              		.align	1
 2975              		.global	TurnBig180_Test
 2976              		.syntax unified
 2977              		.thumb
 2978              		.thumb_func
 2979              		.fpu fpv4-sp-d16
 2981              	TurnBig180_Test:
 2982              	.LFB146:
 943:Src/mode.c    **** 
 944:Src/mode.c    **** void TurnBig180_Test(int8_t dir)
 945:Src/mode.c    **** {
 2983              		.loc 1 945 0
 2984              		.cfi_startproc
 2985              		@ args = 0, pretend = 0, frame = 0
 2986              		@ frame_needed = 0, uses_anonymous_args = 0
 2987              	.LVL331:
 2988 0000 10B5     		push	{r4, lr}
 2989              	.LCFI37:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 73


 2990              		.cfi_def_cfa_offset 8
 2991              		.cfi_offset 4, -8
 2992              		.cfi_offset 14, -4
 2993 0002 0446     		mov	r4, r0
 946:Src/mode.c    ****     SetRunMode();
 2994              		.loc 1 946 0
 2995 0004 FFF7FEFF 		bl	SetRunMode
 2996              	.LVL332:
 947:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 2997              		.loc 1 947 0
 2998 0008 9FED170A 		vldr.32	s0, .L258
 2999 000c 0120     		movs	r0, #1
 3000 000e FFF7FEFF 		bl	Motion_FastStart
 3001              	.LVL333:
 948:Src/mode.c    ****     Motion_Adjust(VELO_F, 1);
 3002              		.loc 1 948 0
 3003 0012 B7EE000A 		vmov.f32	s0, #1.0e+0
 3004 0016 4FF44870 		mov	r0, #800
 3005 001a FFF7FEFF 		bl	Motion_Adjust
 3006              	.LVL334:
 949:Src/mode.c    ****     if (dir == LEFT)
 3007              		.loc 1 949 0
 3008 001e 012C     		cmp	r4, #1
 3009 0020 16D0     		beq	.L256
 950:Src/mode.c    ****     {
 951:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
 952:Src/mode.c    ****     }
 953:Src/mode.c    ****     else if (dir == RIGHT)
 3010              		.loc 1 953 0
 3011 0022 022C     		cmp	r4, #2
 3012 0024 1AD0     		beq	.L257
 3013              	.L254:
 954:Src/mode.c    ****     {
 955:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
 956:Src/mode.c    ****     }
 957:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3014              		.loc 1 957 0
 3015 0026 9FED100A 		vldr.32	s0, .L258
 3016 002a 0120     		movs	r0, #1
 3017 002c FFF7FEFF 		bl	Motion_FastGoal
 3018              	.LVL335:
 958:Src/mode.c    ****     motor_flag = FALSE;
 3019              		.loc 1 958 0
 3020 0030 0024     		movs	r4, #0
 3021 0032 0E4B     		ldr	r3, .L258+4
 3022 0034 1C70     		strb	r4, [r3]
 959:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3023              		.loc 1 959 0
 3024 0036 4FF49671 		mov	r1, #300
 3025 003a 4C20     		movs	r0, #76
 3026 003c FFF7FEFF 		bl	Tim_BuzzerPwm
 3027              	.LVL336:
 960:Src/mode.c    ****     HAL_Delay(200);
 3028              		.loc 1 960 0
 3029 0040 C820     		movs	r0, #200
 3030 0042 FFF7FEFF 		bl	HAL_Delay
 3031              	.LVL337:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 74


 961:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3032              		.loc 1 961 0
 3033 0046 2146     		mov	r1, r4
 3034 0048 0A20     		movs	r0, #10
 3035 004a FFF7FEFF 		bl	Tim_BuzzerPwm
 3036              	.LVL338:
 962:Src/mode.c    **** }
 3037              		.loc 1 962 0
 3038 004e 10BD     		pop	{r4, pc}
 3039              	.L256:
 951:Src/mode.c    ****     }
 3040              		.loc 1 951 0
 3041 0050 9FED050A 		vldr.32	s0, .L258
 3042 0054 0420     		movs	r0, #4
 3043 0056 FFF7FEFF 		bl	Motion_FastLeftTurn
 3044              	.LVL339:
 3045 005a E4E7     		b	.L254
 3046              	.L257:
 955:Src/mode.c    ****     }
 3047              		.loc 1 955 0
 3048 005c 9FED020A 		vldr.32	s0, .L258
 3049 0060 0420     		movs	r0, #4
 3050 0062 FFF7FEFF 		bl	Motion_FastRightTurn
 3051              	.LVL340:
 3052 0066 DEE7     		b	.L254
 3053              	.L259:
 3054              		.align	2
 3055              	.L258:
 3056 0068 00004844 		.word	1145569280
 3057 006c 00000000 		.word	motor_flag
 3058              		.cfi_endproc
 3059              	.LFE146:
 3061              		.section	.text.TurnV90_Test,"ax",%progbits
 3062              		.align	1
 3063              		.global	TurnV90_Test
 3064              		.syntax unified
 3065              		.thumb
 3066              		.thumb_func
 3067              		.fpu fpv4-sp-d16
 3069              	TurnV90_Test:
 3070              	.LFB147:
 963:Src/mode.c    **** 
 964:Src/mode.c    **** void TurnV90_Test(int8_t dir)
 965:Src/mode.c    **** {
 3071              		.loc 1 965 0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              	.LVL341:
 3076 0000 10B5     		push	{r4, lr}
 3077              	.LCFI38:
 3078              		.cfi_def_cfa_offset 8
 3079              		.cfi_offset 4, -8
 3080              		.cfi_offset 14, -4
 3081 0002 2DED028B 		vpush.64	{d8}
 3082              	.LCFI39:
 3083              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 75


 3084              		.cfi_offset 80, -16
 3085              		.cfi_offset 81, -12
 3086 0006 0446     		mov	r4, r0
 966:Src/mode.c    ****     SetRunMode();
 3087              		.loc 1 966 0
 3088 0008 FFF7FEFF 		bl	SetRunMode
 3089              	.LVL342:
 967:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3090              		.loc 1 967 0
 3091 000c 9FED250A 		vldr.32	s0, .L265
 3092 0010 0120     		movs	r0, #1
 3093 0012 FFF7FEFF 		bl	Motion_FastStart
 3094              	.LVL343:
 968:Src/mode.c    ****     Motion_Adjust(VELO_F, 1);
 3095              		.loc 1 968 0
 3096 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 3097 001a 4FF44870 		mov	r0, #800
 3098 001e FFF7FEFF 		bl	Motion_Adjust
 3099              	.LVL344:
 969:Src/mode.c    ****     if (dir == LEFT)
 3100              		.loc 1 969 0
 3101 0022 012C     		cmp	r4, #1
 3102 0024 29D0     		beq	.L264
 970:Src/mode.c    ****     {
 971:Src/mode.c    ****         Motion_InLeft45Turn();
 972:Src/mode.c    ****         Motion_Diagonal(1);
 973:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 974:Src/mode.c    ****         Motion_Diagonal(1);
 975:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 976:Src/mode.c    ****     }
 977:Src/mode.c    ****     else
 978:Src/mode.c    ****     {
 979:Src/mode.c    ****         Motion_InRight45Turn();
 3103              		.loc 1 979 0
 3104 0026 FFF7FEFF 		bl	Motion_InRight45Turn
 3105              	.LVL345:
 980:Src/mode.c    ****         Motion_Diagonal(1);
 3106              		.loc 1 980 0
 3107 002a 0120     		movs	r0, #1
 3108 002c FFF7FEFF 		bl	Motion_Diagonal
 3109              	.LVL346:
 981:Src/mode.c    ****         Motion_FastRightTurn(T_V90, 800.0f);
 3110              		.loc 1 981 0
 3111 0030 9FED1C8A 		vldr.32	s16, .L265
 3112 0034 B0EE480A 		vmov.f32	s0, s16
 3113 0038 0720     		movs	r0, #7
 3114 003a FFF7FEFF 		bl	Motion_FastRightTurn
 3115              	.LVL347:
 982:Src/mode.c    ****         Motion_Diagonal(1);
 3116              		.loc 1 982 0
 3117 003e 0120     		movs	r0, #1
 3118 0040 FFF7FEFF 		bl	Motion_Diagonal
 3119              	.LVL348:
 983:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
 3120              		.loc 1 983 0
 3121 0044 B0EE480A 		vmov.f32	s0, s16
 3122 0048 FFF7FEFF 		bl	Motion_OutRight45Turn
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 76


 3123              	.LVL349:
 3124              	.L262:
 984:Src/mode.c    ****     }
 985:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3125              		.loc 1 985 0
 3126 004c 9FED150A 		vldr.32	s0, .L265
 3127 0050 0120     		movs	r0, #1
 3128 0052 FFF7FEFF 		bl	Motion_FastGoal
 3129              	.LVL350:
 986:Src/mode.c    ****     motor_flag = FALSE;
 3130              		.loc 1 986 0
 3131 0056 0024     		movs	r4, #0
 3132 0058 134B     		ldr	r3, .L265+4
 3133 005a 1C70     		strb	r4, [r3]
 987:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3134              		.loc 1 987 0
 3135 005c 4FF49671 		mov	r1, #300
 3136 0060 4C20     		movs	r0, #76
 3137 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 3138              	.LVL351:
 988:Src/mode.c    ****     HAL_Delay(200);
 3139              		.loc 1 988 0
 3140 0066 C820     		movs	r0, #200
 3141 0068 FFF7FEFF 		bl	HAL_Delay
 3142              	.LVL352:
 989:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3143              		.loc 1 989 0
 3144 006c 2146     		mov	r1, r4
 3145 006e 0A20     		movs	r0, #10
 3146 0070 FFF7FEFF 		bl	Tim_BuzzerPwm
 3147              	.LVL353:
 990:Src/mode.c    **** }...
 3148              		.loc 1 990 0
 3149 0074 BDEC028B 		vldm	sp!, {d8}
 3150              	.LCFI40:
 3151              		.cfi_remember_state
 3152              		.cfi_restore 80
 3153              		.cfi_restore 81
 3154              		.cfi_def_cfa_offset 8
 3155 0078 10BD     		pop	{r4, pc}
 3156              	.L264:
 3157              	.LCFI41:
 3158              		.cfi_restore_state
 971:Src/mode.c    ****         Motion_InLeft45Turn();
 3159              		.loc 1 971 0
 3160 007a FFF7FEFF 		bl	Motion_InLeft45Turn
 3161              	.LVL354:
 972:Src/mode.c    ****         Motion_Diagonal(1);
 3162              		.loc 1 972 0
 3163 007e 0120     		movs	r0, #1
 3164 0080 FFF7FEFF 		bl	Motion_Diagonal
 3165              	.LVL355:
 973:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 3166              		.loc 1 973 0
 3167 0084 9FED078A 		vldr.32	s16, .L265
 3168 0088 B0EE480A 		vmov.f32	s0, s16
 3169 008c 0720     		movs	r0, #7
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 77


 3170 008e FFF7FEFF 		bl	Motion_FastLeftTurn
 3171              	.LVL356:
 974:Src/mode.c    ****         Motion_Diagonal(1);
 3172              		.loc 1 974 0
 3173 0092 0120     		movs	r0, #1
 3174 0094 FFF7FEFF 		bl	Motion_Diagonal
 3175              	.LVL357:
 975:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 3176              		.loc 1 975 0
 3177 0098 B0EE480A 		vmov.f32	s0, s16
 3178 009c FFF7FEFF 		bl	Motion_OutLeft45Turn
 3179              	.LVL358:
 3180 00a0 D4E7     		b	.L262
 3181              	.L266:
 3182 00a2 00BF     		.align	2
 3183              	.L265:
 3184 00a4 00004844 		.word	1145569280
 3185 00a8 00000000 		.word	motor_flag
 3186              		.cfi_endproc
 3187              	.LFE147:
 3189              		.section	.text.Mode_Mouse,"ax",%progbits
 3190              		.align	1
 3191              		.global	Mode_Mouse
 3192              		.syntax unified
 3193              		.thumb
 3194              		.thumb_func
 3195              		.fpu fpv4-sp-d16
 3197              	Mode_Mouse:
 3198              	.LFB126:
  59:Src/mode.c    **** {
 3199              		.loc 1 59 0
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 0
 3202              		@ frame_needed = 0, uses_anonymous_args = 0
 3203              	.LVL359:
 3204 0000 10B5     		push	{r4, lr}
 3205              	.LCFI42:
 3206              		.cfi_def_cfa_offset 8
 3207              		.cfi_offset 4, -8
 3208              		.cfi_offset 14, -4
  60:Src/mode.c    ****     switch (mode)
 3209              		.loc 1 60 0
 3210 0002 1328     		cmp	r0, #19
 3211 0004 0DD8     		bhi	.L267
 3212 0006 DFE800F0 		tbb	[pc, r0]
 3213              	.L270:
 3214 000a 0A       		.byte	(.L269-.L270)/2
 3215 000b 0D       		.byte	(.L271-.L270)/2
 3216 000c 13       		.byte	(.L272-.L270)/2
 3217 000d 19       		.byte	(.L273-.L270)/2
 3218 000e 1C       		.byte	(.L274-.L270)/2
 3219 000f 1F       		.byte	(.L275-.L270)/2
 3220 0010 22       		.byte	(.L276-.L270)/2
 3221 0011 26       		.byte	(.L277-.L270)/2
 3222 0012 2D       		.byte	(.L278-.L270)/2
 3223 0013 52       		.byte	(.L279-.L270)/2
 3224 0014 77       		.byte	(.L280-.L270)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 78


 3225 0015 83       		.byte	(.L281-.L270)/2
 3226 0016 8F       		.byte	(.L282-.L270)/2
 3227 0017 97       		.byte	(.L283-.L270)/2
 3228 0018 9F       		.byte	(.L284-.L270)/2
 3229 0019 A8       		.byte	(.L285-.L270)/2
 3230 001a B1       		.byte	(.L286-.L270)/2
 3231 001b B8       		.byte	(.L287-.L270)/2
 3232 001c BF       		.byte	(.L288-.L270)/2
 3233 001d C6       		.byte	(.L289-.L270)/2
 3234              		.p2align 1
 3235              	.L269:
  64:Src/mode.c    ****         SearchRun();
 3236              		.loc 1 64 0
 3237 001e FFF7FEFF 		bl	SearchRun
 3238              	.LVL360:
 3239              	.L267:
 182:Src/mode.c    **** }
 3240              		.loc 1 182 0
 3241 0022 10BD     		pop	{r4, pc}
 3242              	.LVL361:
 3243              	.L271:
  67:Src/mode.c    ****         Mode_FastRun(FALSE, 1, 3);
 3244              		.loc 1 67 0
 3245 0024 0322     		movs	r2, #3
 3246 0026 0121     		movs	r1, #1
 3247 0028 0020     		movs	r0, #0
 3248              	.LVL362:
 3249 002a FFF7FEFF 		bl	Mode_FastRun
 3250              	.LVL363:
  68:Src/mode.c    ****         break;
 3251              		.loc 1 68 0
 3252 002e F8E7     		b	.L267
 3253              	.LVL364:
 3254              	.L272:
  75:Src/mode.c    ****         Mode_FastRun(TRUE, 7, 5);
 3255              		.loc 1 75 0
 3256 0030 0522     		movs	r2, #5
 3257 0032 0721     		movs	r1, #7
 3258 0034 0120     		movs	r0, #1
 3259              	.LVL365:
 3260 0036 FFF7FEFF 		bl	Mode_FastRun
 3261              	.LVL366:
  76:Src/mode.c    ****         break;
 3262              		.loc 1 76 0
 3263 003a F2E7     		b	.L267
 3264              	.LVL367:
 3265              	.L273:
  78:Src/mode.c    ****         SensorCheck();
 3266              		.loc 1 78 0
 3267 003c FFF7FEFF 		bl	SensorCheck
 3268              	.LVL368:
  79:Src/mode.c    ****         break;
 3269              		.loc 1 79 0
 3270 0040 EFE7     		b	.L267
 3271              	.LVL369:
 3272              	.L274:
  82:Src/mode.c    ****         PrintOutPut();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 79


 3273              		.loc 1 82 0
 3274 0042 FFF7FEFF 		bl	PrintOutPut
 3275              	.LVL370:
  83:Src/mode.c    ****         break;
 3276              		.loc 1 83 0
 3277 0046 ECE7     		b	.L267
 3278              	.LVL371:
 3279              	.L275:
  85:Src/mode.c    ****         PrintWallData();
 3280              		.loc 1 85 0
 3281 0048 FFF7FEFF 		bl	PrintWallData
 3282              	.LVL372:
  86:Src/mode.c    ****         break;
 3283              		.loc 1 86 0
 3284 004c E9E7     		b	.L267
 3285              	.LVL373:
 3286              	.L276:
  88:Src/mode.c    ****         CheckDiagonal(5);
 3287              		.loc 1 88 0
 3288 004e 0520     		movs	r0, #5
 3289              	.LVL374:
 3290 0050 FFF7FEFF 		bl	CheckDiagonal
 3291              	.LVL375:
  97:Src/mode.c    ****         break;
 3292              		.loc 1 97 0
 3293 0054 E5E7     		b	.L267
 3294              	.LVL376:
 3295              	.L277:
  99:Src/mode.c    ****         control_wall_flag = FALSE;
 3296              		.loc 1 99 0
 3297 0056 534B     		ldr	r3, .L291
 3298 0058 0022     		movs	r2, #0
 3299 005a 1A70     		strb	r2, [r3]
 100:Src/mode.c    ****         CheckTurn(4);
 3300              		.loc 1 100 0
 3301 005c 0420     		movs	r0, #4
 3302              	.LVL377:
 3303 005e FFF7FEFF 		bl	CheckTurn
 3304              	.LVL378:
 101:Src/mode.c    ****         break;
 3305              		.loc 1 101 0
 3306 0062 DEE7     		b	.L267
 3307              	.LVL379:
 3308              	.L278:
 104:Src/mode.c    ****         control_wall_flag = FALSE;
 3309              		.loc 1 104 0
 3310 0064 0024     		movs	r4, #0
 3311 0066 4F4B     		ldr	r3, .L291
 3312 0068 1C70     		strb	r4, [r3]
 105:Src/mode.c    ****         SetRunMode();
 3313              		.loc 1 105 0
 3314 006a FFF7FEFF 		bl	SetRunMode
 3315              	.LVL380:
 106:Src/mode.c    ****         Motion_Start();
 3316              		.loc 1 106 0
 3317 006e FFF7FEFF 		bl	Motion_Start
 3318              	.LVL381:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 80


 107:Src/mode.c    ****         Motion_LeftTurn();
 3319              		.loc 1 107 0
 3320 0072 FFF7FEFF 		bl	Motion_LeftTurn
 3321              	.LVL382:
 108:Src/mode.c    ****         Motion_End();
 3322              		.loc 1 108 0
 3323 0076 FFF7FEFF 		bl	Motion_End
 3324              	.LVL383:
 109:Src/mode.c    ****         motor_flag = FALSE;
 3325              		.loc 1 109 0
 3326 007a 4B4B     		ldr	r3, .L291+4
 3327 007c 1C70     		strb	r4, [r3]
 110:Src/mode.c    ****         HAL_Delay(500);
 3328              		.loc 1 110 0
 3329 007e 4FF4FA70 		mov	r0, #500
 3330 0082 FFF7FEFF 		bl	HAL_Delay
 3331              	.LVL384:
 111:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3332              		.loc 1 111 0
 3333 0086 49F64242 		movw	r2, #40002
 3334 008a 4849     		ldr	r1, .L291+8
 3335 008c 484B     		ldr	r3, .L291+12
 3336 008e 1868     		ldr	r0, [r3]
 3337 0090 FFF7FEFF 		bl	Flash_Write
 3338              	.LVL385:
 112:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 3339              		.loc 1 112 0
 3340 0094 4FF49671 		mov	r1, #300
 3341 0098 4C20     		movs	r0, #76
 3342 009a FFF7FEFF 		bl	Tim_BuzzerPwm
 3343              	.LVL386:
 113:Src/mode.c    ****         HAL_Delay(200);
 3344              		.loc 1 113 0
 3345 009e C820     		movs	r0, #200
 3346 00a0 FFF7FEFF 		bl	HAL_Delay
 3347              	.LVL387:
 114:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 3348              		.loc 1 114 0
 3349 00a4 2146     		mov	r1, r4
 3350 00a6 0A20     		movs	r0, #10
 3351 00a8 FFF7FEFF 		bl	Tim_BuzzerPwm
 3352              	.LVL388:
 115:Src/mode.c    ****         break;
 3353              		.loc 1 115 0
 3354 00ac B9E7     		b	.L267
 3355              	.LVL389:
 3356              	.L279:
 117:Src/mode.c    ****         control_wall_flag = FALSE;
 3357              		.loc 1 117 0
 3358 00ae 0024     		movs	r4, #0
 3359 00b0 3C4B     		ldr	r3, .L291
 3360 00b2 1C70     		strb	r4, [r3]
 118:Src/mode.c    ****         SetRunMode();
 3361              		.loc 1 118 0
 3362 00b4 FFF7FEFF 		bl	SetRunMode
 3363              	.LVL390:
 119:Src/mode.c    ****         Motion_Start();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 81


 3364              		.loc 1 119 0
 3365 00b8 FFF7FEFF 		bl	Motion_Start
 3366              	.LVL391:
 120:Src/mode.c    ****         Motion_RightTurn();
 3367              		.loc 1 120 0
 3368 00bc FFF7FEFF 		bl	Motion_RightTurn
 3369              	.LVL392:
 121:Src/mode.c    ****         Motion_End();
 3370              		.loc 1 121 0
 3371 00c0 FFF7FEFF 		bl	Motion_End
 3372              	.LVL393:
 122:Src/mode.c    ****         motor_flag = FALSE;
 3373              		.loc 1 122 0
 3374 00c4 384B     		ldr	r3, .L291+4
 3375 00c6 1C70     		strb	r4, [r3]
 123:Src/mode.c    ****         HAL_Delay(500);
 3376              		.loc 1 123 0
 3377 00c8 4FF4FA70 		mov	r0, #500
 3378 00cc FFF7FEFF 		bl	HAL_Delay
 3379              	.LVL394:
 124:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3380              		.loc 1 124 0
 3381 00d0 49F64242 		movw	r2, #40002
 3382 00d4 3549     		ldr	r1, .L291+8
 3383 00d6 364B     		ldr	r3, .L291+12
 3384 00d8 1868     		ldr	r0, [r3]
 3385 00da FFF7FEFF 		bl	Flash_Write
 3386              	.LVL395:
 125:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 3387              		.loc 1 125 0
 3388 00de 4FF49671 		mov	r1, #300
 3389 00e2 4C20     		movs	r0, #76
 3390 00e4 FFF7FEFF 		bl	Tim_BuzzerPwm
 3391              	.LVL396:
 126:Src/mode.c    ****         HAL_Delay(200);
 3392              		.loc 1 126 0
 3393 00e8 C820     		movs	r0, #200
 3394 00ea FFF7FEFF 		bl	HAL_Delay
 3395              	.LVL397:
 127:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 3396              		.loc 1 127 0
 3397 00ee 2146     		mov	r1, r4
 3398 00f0 0A20     		movs	r0, #10
 3399 00f2 FFF7FEFF 		bl	Tim_BuzzerPwm
 3400              	.LVL398:
 128:Src/mode.c    ****         break;
 3401              		.loc 1 128 0
 3402 00f6 94E7     		b	.L267
 3403              	.LVL399:
 3404              	.L280:
 130:Src/mode.c    ****         control_wall_flag = FALSE;
 3405              		.loc 1 130 0
 3406 00f8 2A4B     		ldr	r3, .L291
 3407 00fa 0022     		movs	r2, #0
 3408 00fc 1A70     		strb	r2, [r3]
 131:Src/mode.c    ****         SetRunMode();
 3409              		.loc 1 131 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 82


 3410 00fe FFF7FEFF 		bl	SetRunMode
 3411              	.LVL400:
 132:Src/mode.c    ****         Circuit(1, 1, 3, 1);
 3412              		.loc 1 132 0
 3413 0102 0123     		movs	r3, #1
 3414 0104 0322     		movs	r2, #3
 3415 0106 1946     		mov	r1, r3
 3416 0108 1846     		mov	r0, r3
 3417 010a FFF7FEFF 		bl	Circuit
 3418              	.LVL401:
 133:Src/mode.c    ****         break;
 3419              		.loc 1 133 0
 3420 010e 88E7     		b	.L267
 3421              	.LVL402:
 3422              	.L281:
 135:Src/mode.c    ****         control_wall_flag = FALSE;
 3423              		.loc 1 135 0
 3424 0110 244B     		ldr	r3, .L291
 3425 0112 0022     		movs	r2, #0
 3426 0114 1A70     		strb	r2, [r3]
 136:Src/mode.c    ****         SetRunMode();
 3427              		.loc 1 136 0
 3428 0116 FFF7FEFF 		bl	SetRunMode
 3429              	.LVL403:
 137:Src/mode.c    ****         Circuit(1, 1, 3, -1);
 3430              		.loc 1 137 0
 3431 011a FF23     		movs	r3, #255
 3432 011c 0322     		movs	r2, #3
 3433 011e 0121     		movs	r1, #1
 3434 0120 0846     		mov	r0, r1
 3435 0122 FFF7FEFF 		bl	Circuit
 3436              	.LVL404:
 138:Src/mode.c    ****         break;
 3437              		.loc 1 138 0
 3438 0126 7CE7     		b	.L267
 3439              	.LVL405:
 3440              	.L282:
 141:Src/mode.c    ****         control_wall_flag = FALSE;
 3441              		.loc 1 141 0
 3442 0128 0020     		movs	r0, #0
 3443              	.LVL406:
 3444 012a 1E4B     		ldr	r3, .L291
 3445 012c 1870     		strb	r0, [r3]
 142:Src/mode.c    ****         Turn45_Test(FRONT, LEFT, 0);
 3446              		.loc 1 142 0
 3447 012e 0246     		mov	r2, r0
 3448 0130 0121     		movs	r1, #1
 3449 0132 FFF7FEFF 		bl	Turn45_Test
 3450              	.LVL407:
 144:Src/mode.c    ****         break;
 3451              		.loc 1 144 0
 3452 0136 74E7     		b	.L267
 3453              	.LVL408:
 3454              	.L283:
 146:Src/mode.c    ****         control_wall_flag = FALSE;
 3455              		.loc 1 146 0
 3456 0138 0020     		movs	r0, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 83


 3457              	.LVL409:
 3458 013a 1A4B     		ldr	r3, .L291
 3459 013c 1870     		strb	r0, [r3]
 147:Src/mode.c    ****         Turn45_Test(FRONT, RIGHT, 0);
 3460              		.loc 1 147 0
 3461 013e 0246     		mov	r2, r0
 3462 0140 0221     		movs	r1, #2
 3463 0142 FFF7FEFF 		bl	Turn45_Test
 3464              	.LVL410:
 149:Src/mode.c    ****         break;
 3465              		.loc 1 149 0
 3466 0146 6CE7     		b	.L267
 3467              	.LVL411:
 3468              	.L284:
 151:Src/mode.c    ****         control_wall_flag = FALSE;
 3469              		.loc 1 151 0
 3470 0148 164B     		ldr	r3, .L291
 3471 014a 0022     		movs	r2, #0
 3472 014c 1A70     		strb	r2, [r3]
 152:Src/mode.c    ****         Turn45_Test(LEFT, LEFT, 1);
 3473              		.loc 1 152 0
 3474 014e 0122     		movs	r2, #1
 3475 0150 1146     		mov	r1, r2
 3476 0152 1046     		mov	r0, r2
 3477              	.LVL412:
 3478 0154 FFF7FEFF 		bl	Turn45_Test
 3479              	.LVL413:
 154:Src/mode.c    ****         break;
 3480              		.loc 1 154 0
 3481 0158 63E7     		b	.L267
 3482              	.LVL414:
 3483              	.L285:
 156:Src/mode.c    ****         control_wall_flag = FALSE;
 3484              		.loc 1 156 0
 3485 015a 124B     		ldr	r3, .L291
 3486 015c 0022     		movs	r2, #0
 3487 015e 1A70     		strb	r2, [r3]
 157:Src/mode.c    ****         Turn45_Test(RIGHT, RIGHT, 1);
 3488              		.loc 1 157 0
 3489 0160 0122     		movs	r2, #1
 3490 0162 0221     		movs	r1, #2
 3491 0164 0846     		mov	r0, r1
 3492              	.LVL415:
 3493 0166 FFF7FEFF 		bl	Turn45_Test
 3494              	.LVL416:
 159:Src/mode.c    ****         break;
 3495              		.loc 1 159 0
 3496 016a 5AE7     		b	.L267
 3497              	.LVL417:
 3498              	.L286:
 162:Src/mode.c    ****         control_wall_flag = FALSE;
 3499              		.loc 1 162 0
 3500 016c 0D4B     		ldr	r3, .L291
 3501 016e 0022     		movs	r2, #0
 3502 0170 1A70     		strb	r2, [r3]
 163:Src/mode.c    ****         TurnBig90_Test(LEFT);
 3503              		.loc 1 163 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 84


 3504 0172 0120     		movs	r0, #1
 3505              	.LVL418:
 3506 0174 FFF7FEFF 		bl	TurnBig90_Test
 3507              	.LVL419:
 164:Src/mode.c    ****         break;
 3508              		.loc 1 164 0
 3509 0178 53E7     		b	.L267
 3510              	.LVL420:
 3511              	.L287:
 166:Src/mode.c    ****         control_wall_flag = FALSE;
 3512              		.loc 1 166 0
 3513 017a 0A4B     		ldr	r3, .L291
 3514 017c 0022     		movs	r2, #0
 3515 017e 1A70     		strb	r2, [r3]
 167:Src/mode.c    ****         TurnBig90_Test(RIGHT);
 3516              		.loc 1 167 0
 3517 0180 0220     		movs	r0, #2
 3518              	.LVL421:
 3519 0182 FFF7FEFF 		bl	TurnBig90_Test
 3520              	.LVL422:
 168:Src/mode.c    ****         break;
 3521              		.loc 1 168 0
 3522 0186 4CE7     		b	.L267
 3523              	.LVL423:
 3524              	.L288:
 170:Src/mode.c    ****         control_wall_flag = FALSE;
 3525              		.loc 1 170 0
 3526 0188 064B     		ldr	r3, .L291
 3527 018a 0022     		movs	r2, #0
 3528 018c 1A70     		strb	r2, [r3]
 172:Src/mode.c    ****         TurnV90_Test(LEFT);
 3529              		.loc 1 172 0
 3530 018e 0120     		movs	r0, #1
 3531              	.LVL424:
 3532 0190 FFF7FEFF 		bl	TurnV90_Test
 3533              	.LVL425:
 173:Src/mode.c    ****         break;
 3534              		.loc 1 173 0
 3535 0194 45E7     		b	.L267
 3536              	.LVL426:
 3537              	.L289:
 175:Src/mode.c    ****         control_wall_flag = FALSE;
 3538              		.loc 1 175 0
 3539 0196 034B     		ldr	r3, .L291
 3540 0198 0022     		movs	r2, #0
 3541 019a 1A70     		strb	r2, [r3]
 177:Src/mode.c    ****         TurnV90_Test(RIGHT);
 3542              		.loc 1 177 0
 3543 019c 0220     		movs	r0, #2
 3544              	.LVL427:
 3545 019e FFF7FEFF 		bl	TurnV90_Test
 3546              	.LVL428:
 182:Src/mode.c    **** }
 3547              		.loc 1 182 0
 3548 01a2 3EE7     		b	.L267
 3549              	.L292:
 3550              		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 85


 3551              	.L291:
 3552 01a4 00000000 		.word	control_wall_flag
 3553 01a8 00000000 		.word	motor_flag
 3554 01ac 00000000 		.word	loger
 3555 01b0 00000000 		.word	start_address
 3556              		.cfi_endproc
 3557              	.LFE126:
 3559              		.global	gy
 3560              		.global	gx
 3561              		.section	.bss.gy,"aw",%nobits
 3562              		.set	.LANCHOR0,. + 0
 3565              	gy:
 3566 0000 00       		.space	1
 3567              		.section	.data.gx,"aw",%progbits
 3568              		.set	.LANCHOR1,. + 0
 3571              	gx:
 3572 0000 01       		.byte	1
 3573              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 3574              		.align	2
 3575              	.LC0:
 3576 0000 25640D00 		.ascii	"%d\015\000"
 3577              		.section	.rodata.PrintMotion.str1.4,"aMS",%progbits,1
 3578              		.align	2
 3579              	.LC7:
 3580 0000 0D0A5354 		.ascii	"\015\012START:%d\011v_start:%ld\011v_end:%ld\015\012"
 3580      4152543A 
 3580      25640976 
 3580      5F737461 
 3580      72743A25 
 3581 0022 00       		.ascii	"\000"
 3582 0023 00       		.space	1
 3583              	.LC8:
 3584 0024 4C454654 		.ascii	"LEFT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 3584      3A534541 
 3584      52434809 
 3584      765F7374 
 3584      6172743A 
 3585              	.LC9:
 3586 0048 4C454654 		.ascii	"LEFT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 3586      3A545F39 
 3586      3009765F 
 3586      73746172 
 3586      743A256C 
 3587 006a 0000     		.space	2
 3588              	.LC10:
 3589 006c 4C454654 		.ascii	"LEFT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 3589      3A545F31 
 3589      38300976 
 3589      5F737461 
 3589      72743A25 
 3590 008f 00       		.space	1
 3591              	.LC11:
 3592 0090 4C454654 		.ascii	"LEFT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3592      3A545F34 
 3592      35494E09 
 3592      765F7374 
 3592      6172743A 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 86


 3593              	.LC12:
 3594 00b4 4C454654 		.ascii	"LEFT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3594      3A545F34 
 3594      354F5554 
 3594      09765F73 
 3594      74617274 
 3595 00d9 000000   		.space	3
 3596              	.LC13:
 3597 00dc 4C454654 		.ascii	"LEFT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3597      3A545F31 
 3597      3335494E 
 3597      09765F73 
 3597      74617274 
 3598 0101 000000   		.space	3
 3599              	.LC14:
 3600 0104 4C454654 		.ascii	"LEFT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3600      3A545F31 
 3600      33354F55 
 3600      5409765F 
 3600      73746172 
 3601 012a 0000     		.space	2
 3602              	.LC15:
 3603 012c 4C454654 		.ascii	"LEFT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 3603      3A545F56 
 3603      39300976 
 3603      5F737461 
 3603      72743A25 
 3604 014f 00       		.space	1
 3605              	.LC16:
 3606 0150 52494748 		.ascii	"RIGHT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 3606      543A5345 
 3606      41524348 
 3606      09765F73 
 3606      74617274 
 3607 0175 000000   		.space	3
 3608              	.LC17:
 3609 0178 52494748 		.ascii	"RIGHT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 3609      543A545F 
 3609      39300976 
 3609      5F737461 
 3609      72743A25 
 3610 019b 00       		.space	1
 3611              	.LC18:
 3612 019c 52494748 		.ascii	"RIGHT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 3612      543A545F 
 3612      31383009 
 3612      765F7374 
 3612      6172743A 
 3613              	.LC19:
 3614 01c0 52494748 		.ascii	"RIGHT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3614      543A545F 
 3614      3435494E 
 3614      09765F73 
 3614      74617274 
 3615 01e5 000000   		.space	3
 3616              	.LC20:
 3617 01e8 52494748 		.ascii	"RIGHT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 87


 3617      543A545F 
 3617      34354F55 
 3617      5409765F 
 3617      73746172 
 3618 020e 0000     		.space	2
 3619              	.LC21:
 3620 0210 52494748 		.ascii	"RIGHT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3620      543A545F 
 3620      31333549 
 3620      4E09765F 
 3620      73746172 
 3621 0236 0000     		.space	2
 3622              	.LC22:
 3623 0238 52494748 		.ascii	"RIGHT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3623      543A545F 
 3623      3133354F 
 3623      55540976 
 3623      5F737461 
 3624 025f 00       		.space	1
 3625              	.LC23:
 3626 0260 52494748 		.ascii	"RIGHT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 3626      543A545F 
 3626      56393009 
 3626      765F7374 
 3626      6172743A 
 3627              	.LC24:
 3628 0284 46524F4E 		.ascii	"FRONT:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3628      543A2564 
 3628      09765F73 
 3628      74617274 
 3628      3A256C64 
 3629 02a5 000000   		.space	3
 3630              	.LC25:
 3631 02a8 44494147 		.ascii	"DIAGONAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3631      4F4E414C 
 3631      3A256409 
 3631      765F7374 
 3631      6172743A 
 3632              	.LC26:
 3633 02cc 474F414C 		.ascii	"GOAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3633      3A256409 
 3633      765F7374 
 3633      6172743A 
 3633      256C6409 
 3634              	.LC27:
 3635 02ec 41444A55 		.ascii	"ADJUST:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3635      53543A25 
 3635      6409765F 
 3635      73746172 
 3635      743A256C 
 3636              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 3637              		.align	2
 3638              	.LC2:
 3639 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 3639      64092564 
 3639      0925640D 
 3639      0A00
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 88


 3640              		.section	.rodata.PrintWallData.str1.4,"aMS",%progbits,1
 3641              		.align	2
 3642              	.LC3:
 3643 0000 0D00     		.ascii	"\015\000"
 3644 0002 0000     		.space	2
 3645              	.LC4:
 3646 0004 2D2D2D00 		.ascii	"---\000"
 3647              	.LC5:
 3648 0008 2B0D00   		.ascii	"+\015\000"
 3649 000b 00       		.space	1
 3650              	.LC6:
 3651 000c 20202000 		.ascii	"   \000"
 3652              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 3653              		.align	2
 3654              	.LC1:
 3655 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\000"
 3655      20666C3A 
 3655      25642066 
 3655      3A256420 
 3655      66723A25 
 3656              		.text
 3657              	.Letext0:
 3658              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3659              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3660              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3661              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3662              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 3663              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3664              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3665              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 3666              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 3667              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3668              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3669              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3670              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3671              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 3672              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3673              		.file 17 "Inc/spi.h"
 3674              		.file 18 "Inc/tim.h"
 3675              		.file 19 "Inc/adc.h"
 3676              		.file 20 "Inc/MazeCon.h"
 3677              		.file 21 "Inc/flash.h"
 3678              		.file 22 "Inc/motion.h"
 3679              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3680              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 3681              		.file 25 "<built-in>"
 3682              		.file 26 "Inc/Maze.h"
 3683              		.file 27 "Inc/Map.h"
 3684              		.file 28 "Inc/control.h"
 3685              		.file 29 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 89


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:242    .text.Mode_Select:00000150 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:253    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:260    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:389    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:403    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:410    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:481    .text.SetRunMode:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:487    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:494    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:512    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:516    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:613    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:620    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:627    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:912    .text.SearchRun:00000200 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:922    .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:929    .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1083   .text.Mode_FastRun:00000104 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1094   .text.Mode_FastRun:00000130 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1202   .text.Mode_FastRun:000001f4 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1211   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1218   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1300   .text.CheckStraight:0000005c $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1308   .text.CheckFastStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1315   .text.CheckFastStraight:00000000 CheckFastStraight
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1409   .text.CheckFastStraight:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1418   .text.CheckDiagonal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1425   .text.CheckDiagonal:00000000 CheckDiagonal
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1489   .text.CheckDiagonal:00000054 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1497   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1504   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1587   .text.CheckTurn:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1595   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1602   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1672   .text.PrintOutPut:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1679   .text.PrintWallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1686   .text.PrintWallData:00000000 PrintWallData
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1855   .text.PrintWallData:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1864   .text.PrintMotion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1871   .text.PrintMotion:00000000 PrintMotion
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1924   .text.PrintMotion:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1935   .text.PrintMotion:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1943   .text.PrintMotion:00000072 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:1951   .text.PrintMotion:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2046   .text.PrintMotion:0000010c $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2054   .text.PrintMotion:00000114 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2200   .text.PrintMotion:000001f0 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2226   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2233   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2289   .text.AdjustStraight:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2296   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2303   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2359   .text.AdjustTurn:0000004c $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 90


C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2366   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2373   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2524   .text.Circuit:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2530   .text.Turn45_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2537   .text.Turn45_Test:00000000 Turn45_Test
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2691   .text.Turn45_Test:000000cc $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2699   .text.Turn135_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2706   .text.Turn135_Test:00000000 Turn135_Test
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2880   .text.Turn135_Test:00000100 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2888   .text.TurnBig90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2895   .text.TurnBig90_Test:00000000 TurnBig90_Test
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2968   .text.TurnBig90_Test:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2974   .text.TurnBig180_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:2981   .text.TurnBig180_Test:00000000 TurnBig180_Test
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3056   .text.TurnBig180_Test:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3062   .text.TurnV90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3069   .text.TurnV90_Test:00000000 TurnV90_Test
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3184   .text.TurnV90_Test:000000a4 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3190   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3197   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3214   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3234   .text.Mode_Mouse:0000001e $t
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3552   .text.Mode_Mouse:000001a4 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3565   .bss.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3571   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3566   .bss.gy:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3574   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3578   .rodata.PrintMotion.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3637   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3641   .rodata.PrintWallData.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s:3653   .rodata.SensorCheck.str1.4:00000000 $d

UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
accel
gyro_y
enc
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
motor_flag
Map_Init
Map_InitFast
Motion_Start
Maze_UpdatePosition
Motion_Restart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxXwH1H.s 			page 91


Map_addWall
Map_DelWall
Maze_UpdateStepMap
Maze_GetNextMotion
Motion_Switch
Motion_End
Flash_Write
control_wall_flag
start_address
Flash_Load
Maze_UpdateStepMapEx
Maze_GetNextMotionEx
Maze_Compress
Motion_FastStart
Motion_FastLeftTurn
Motion_FastStraight
Motion_DiagonalLeft
Motion_DiagonalRight
Motion_FastRightTurn
Motion_FastGoal
Motion_Adjust
Tim_MotorBrake
Motion_Straight
loger
Motion_DiagonalStart
Motion_DiagonalStop
Motion_TestTurn
gyro_z
puts
putchar
Tim_MotorPwm
Motion_LeftTurn
Motion_RightTurn
Motion_InLeft45Turn
Motion_InRight45Turn
Motion_Diagonal
Motion_OutLeft45Turn
Motion_OutRight45Turn
Motion_Left90Turn
Motion_Right90Turn
