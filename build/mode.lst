ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** extern uint8_t counter_s; 
  30:Src/mode.c    **** 
  31:Src/mode.c    **** unsigned char gx = 2, gy = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 2


  32:Src/mode.c    **** 
  33:Src/mode.c    **** //Prototype Function
  34:Src/mode.c    **** void SensorCheck(void);
  35:Src/mode.c    **** void SetRunMode(void);
  36:Src/mode.c    **** void CheckStraight(uint8_t block);
  37:Src/mode.c    **** void CheckFastStraight(uint8_t block);
  38:Src/mode.c    **** void CheckDiagonal(uint8_t block);
  39:Src/mode.c    **** void CheckTurn(uint8_t num);
  40:Src/mode.c    **** void PrintOutPut(void);
  41:Src/mode.c    **** void PrintWallData(void);
  42:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail);
  43:Src/mode.c    **** void AdjustStraight(void);
  44:Src/mode.c    **** void AdjustTurn(void);
  45:Src/mode.c    **** void SearchRun(void);
  46:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain,uint8_t w_str, uint8_t w_turn);
  47:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  48:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  49:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  50:Src/mode.c    **** void TurnBig90_Test(int8_t dir);
  51:Src/mode.c    **** void TurnBig180_Test(int8_t dir);
  52:Src/mode.c    **** void TurnV90_Test(int8_t dir);
  53:Src/mode.c    **** 
  54:Src/mode.c    **** /****************************************************************************************
  55:Src/mode.c    ****  * outline  : wright mode 
  56:Src/mode.c    ****  * argument : mode nomber
  57:Src/mode.c    ****  * return   : void
  58:Src/mode.c    **** ********************************************************************************************/
  59:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  60:Src/mode.c    **** {
  61:Src/mode.c    ****     switch (mode)
  62:Src/mode.c    ****     {
  63:Src/mode.c    ****     //WHITE
  64:Src/mode.c    ****     case 0:
  65:Src/mode.c    ****         SearchRun();
  66:Src/mode.c    ****         break;
  67:Src/mode.c    ****     case 1:
  68:Src/mode.c    ****         Mode_FastRun(FALSE,160.0f, 1, 3);
  69:Src/mode.c    ****         break;
  70:Src/mode.c    ****     case 2:
  71:Src/mode.c    ****         /*
  72:Src/mode.c    ****         SetRunMode();
  73:Src/mode.c    ****         control_wall_flag = FALSE;
  74:Src/mode.c    ****         Motion_enkai();
  75:Src/mode.c    ****         */
  76:Src/mode.c    ****         Mode_FastRun(TRUE, 160.0f, 7, 5);
  77:Src/mode.c    ****         break;
  78:Src/mode.c    ****     case 3:
  79:Src/mode.c    ****         SensorCheck();
  80:Src/mode.c    ****         break;
  81:Src/mode.c    ****     //CYAN
  82:Src/mode.c    ****     case 4:
  83:Src/mode.c    ****         PrintOutPut();
  84:Src/mode.c    ****         break;
  85:Src/mode.c    ****     case 5:
  86:Src/mode.c    ****         PrintWallData();
  87:Src/mode.c    ****         break;
  88:Src/mode.c    ****     case 6: //straight
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 3


  89:Src/mode.c    ****         //CheckDiagonal(5);
  90:Src/mode.c    ****         /*
  91:Src/mode.c    ****         control_wall_flag = 2;
  92:Src/mode.c    ****         CheckFastStraight(5);
  93:Src/mode.c    ****         */
  94:Src/mode.c    ****         control_wall_flag = 1;
  95:Src/mode.c    ****         CheckStraight(6);
  96:Src/mode.c    ****         break;
  97:Src/mode.c    ****     case 7: //turn
  98:Src/mode.c    ****         control_wall_flag = FALSE;
  99:Src/mode.c    ****         CheckTurn(4);
 100:Src/mode.c    ****         break;
 101:Src/mode.c    ****     //YELLOW
 102:Src/mode.c    ****     case 8: //left turn
 103:Src/mode.c    ****         control_wall_flag = FALSE;
 104:Src/mode.c    ****         SetRunMode();
 105:Src/mode.c    ****         Motion_Start();
 106:Src/mode.c    ****         Motion_LeftTurn();
 107:Src/mode.c    ****         Motion_End();
 108:Src/mode.c    ****         motor_flag = FALSE;
 109:Src/mode.c    ****         HAL_Delay(500);
 110:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 111:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 112:Src/mode.c    ****         HAL_Delay(200);
 113:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 114:Src/mode.c    ****         break;
 115:Src/mode.c    ****     case 9: //right turn
 116:Src/mode.c    ****         control_wall_flag = FALSE;
 117:Src/mode.c    ****         SetRunMode();
 118:Src/mode.c    ****         Motion_Start();
 119:Src/mode.c    ****         Motion_RightTurn();
 120:Src/mode.c    ****         Motion_End();
 121:Src/mode.c    ****         motor_flag = FALSE;
 122:Src/mode.c    ****         HAL_Delay(500);
 123:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 124:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 125:Src/mode.c    ****         HAL_Delay(200);
 126:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 127:Src/mode.c    ****         break;
 128:Src/mode.c    ****     case 10: //circuit left
 129:Src/mode.c    ****         control_wall_flag = FALSE;
 130:Src/mode.c    ****         SetRunMode();
 131:Src/mode.c    ****         Circuit(2, 2, 3, 1);
 132:Src/mode.c    ****         break;
 133:Src/mode.c    ****     case 11: //circuit right
 134:Src/mode.c    ****         control_wall_flag = FALSE;
 135:Src/mode.c    ****         SetRunMode();
 136:Src/mode.c    ****         Circuit(2, 2, 3, -1);
 137:Src/mode.c    ****         break;
 138:Src/mode.c    ****     //GREEN
 139:Src/mode.c    ****     case 12: //left quarter turn
 140:Src/mode.c    ****         control_wall_flag = FALSE;
 141:Src/mode.c    ****         Turn45_Test(FRONT, LEFT, 0);
 142:Src/mode.c    ****         //Turn135_Test(FRONT, LEFT, 0);
 143:Src/mode.c    ****         break;
 144:Src/mode.c    ****     case 13: //right quarter turn
 145:Src/mode.c    ****         control_wall_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 4


 146:Src/mode.c    ****         Turn45_Test(FRONT, RIGHT, 0);
 147:Src/mode.c    ****         //Turn135_Test(FRONT, RIGHT, 0);
 148:Src/mode.c    ****         break;
 149:Src/mode.c    ****     case 14:
 150:Src/mode.c    ****         control_wall_flag = FALSE;
 151:Src/mode.c    ****         Turn45_Test(LEFT, LEFT, 1);
 152:Src/mode.c    ****         //Turn135_Test(LEFT, LEFT, 1);
 153:Src/mode.c    ****         break;
 154:Src/mode.c    ****     case 15:
 155:Src/mode.c    ****         control_wall_flag = FALSE;
 156:Src/mode.c    ****         Turn45_Test(RIGHT, RIGHT, 1);
 157:Src/mode.c    ****         //Turn135_Test(RIGHT, RIGHT, 1);
 158:Src/mode.c    ****         break;
 159:Src/mode.c    ****     //MAGENTA
 160:Src/mode.c    ****     case 16:
 161:Src/mode.c    ****         control_wall_flag = FALSE;
 162:Src/mode.c    ****         TurnBig90_Test(LEFT);
 163:Src/mode.c    ****         break;
 164:Src/mode.c    ****     case 17:
 165:Src/mode.c    ****         control_wall_flag = FALSE;
 166:Src/mode.c    ****         TurnBig90_Test(RIGHT);
 167:Src/mode.c    ****         break;
 168:Src/mode.c    ****     case 18:
 169:Src/mode.c    ****         control_wall_flag = FALSE;
 170:Src/mode.c    ****         TurnBig180_Test(LEFT);
 171:Src/mode.c    ****         //TurnV90_Test(LEFT);
 172:Src/mode.c    ****         break;
 173:Src/mode.c    ****     case 19:
 174:Src/mode.c    ****         control_wall_flag = FALSE;
 175:Src/mode.c    ****         TurnBig180_Test(RIGHT);
 176:Src/mode.c    ****         //TurnV90_Test(RIGHT);
 177:Src/mode.c    ****         break;
 178:Src/mode.c    ****     default:
 179:Src/mode.c    ****         break;
 180:Src/mode.c    ****     }
 181:Src/mode.c    **** }
 182:Src/mode.c    **** 
 183:Src/mode.c    **** char Mode_Select(void)
 184:Src/mode.c    **** {
  28              		.loc 1 184 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 185:Src/mode.c    ****     int8_t mode = 0;
 186:Src/mode.c    ****     uint8_t state = 0;
 187:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 187 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
  42              	.LVL1:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 5


 188:Src/mode.c    ****     accel.z = 0;
  43              		.loc 1 188 0
  44 0006 524B     		ldr	r3, .L34
  45 0008 0022     		movs	r2, #0
  46 000a 9A60     		str	r2, [r3, #8]	@ float
 186:Src/mode.c    ****     Control_ResetVelo();
  47              		.loc 1 186 0
  48 000c 0024     		movs	r4, #0
 185:Src/mode.c    ****     int8_t mode = 0;
  49              		.loc 1 185 0
  50 000e 2546     		mov	r5, r4
  51 0010 50E0     		b	.L18
  52              	.LVL2:
  53              	.L28:
 189:Src/mode.c    **** 
 190:Src/mode.c    ****     while (1)
 191:Src/mode.c    ****     {
 192:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 193:Src/mode.c    ****         {
 194:Src/mode.c    ****             if (gyro_y < -300.0f)
 195:Src/mode.c    ****             {
 196:Src/mode.c    ****                 mode++;
 197:Src/mode.c    ****             }
 198:Src/mode.c    ****             else if (gyro_y > 300.0f)
  54              		.loc 1 198 0
  55 0012 504B     		ldr	r3, .L34+4
  56 0014 93ED007A 		vldr.32	s14, [r3]
  57 0018 DFED4F7A 		vldr.32	s15, .L34+8
  58 001c B4EEE77A 		vcmpe.f32	s14, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 65DD     		ble	.L7
 199:Src/mode.c    ****             {
 200:Src/mode.c    ****                 mode--;
  61              		.loc 1 200 0
  62 0026 013D     		subs	r5, r5, #1
  63              	.LVL3:
  64 0028 6DB2     		sxtb	r5, r5
  65              	.LVL4:
  66 002a 62E0     		b	.L7
  67              	.L19:
 201:Src/mode.c    ****             }
 202:Src/mode.c    ****             if (mode > 3)
 203:Src/mode.c    ****             {
 204:Src/mode.c    ****                 mode = 0;
  68              		.loc 1 204 0
  69 002c 0025     		movs	r5, #0
  70              	.LVL5:
  71              	.L9:
 205:Src/mode.c    ****             }
 206:Src/mode.c    ****             else if (mode < 0)
 207:Src/mode.c    ****             {
 208:Src/mode.c    ****                 mode = 3;
 209:Src/mode.c    ****             }
 210:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  72              		.loc 1 210 0
  73 002e 6FF00900 		mvn	r0, #9
  74 0032 00FB05F0 		mul	r0, r0, r5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 6


  75 0036 4FF49671 		mov	r1, #300
  76 003a AA30     		adds	r0, r0, #170
  77 003c FFF7FEFF 		bl	Tim_BuzzerPwm
  78              	.LVL6:
 211:Src/mode.c    ****             HAL_Delay(100);
  79              		.loc 1 211 0
  80 0040 6420     		movs	r0, #100
  81 0042 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL7:
 212:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  83              		.loc 1 212 0
  84 0046 0021     		movs	r1, #0
  85 0048 0A20     		movs	r0, #10
  86 004a FFF7FEFF 		bl	Tim_BuzzerPwm
  87              	.LVL8:
 213:Src/mode.c    ****             HAL_Delay(500);
  88              		.loc 1 213 0
  89 004e 4FF4FA70 		mov	r0, #500
  90 0052 FFF7FEFF 		bl	HAL_Delay
  91              	.LVL9:
  92              	.L3:
 214:Src/mode.c    ****         }
 215:Src/mode.c    ****         if (enc.offset > 20)
  93              		.loc 1 215 0
  94 0056 414B     		ldr	r3, .L34+12
  95 0058 93ED027A 		vldr.32	s14, [r3, #8]
  96 005c F3EE047A 		vmov.f32	s15, #2.0e+1
  97 0060 B4EEE77A 		vcmpe.f32	s14, s15
  98 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  99 0068 4BDD     		ble	.L29
 216:Src/mode.c    ****         {
 217:Src/mode.c    ****             if (state == 16)
 100              		.loc 1 217 0
 101 006a 102C     		cmp	r4, #16
 102 006c 47D0     		beq	.L21
 218:Src/mode.c    ****             {
 219:Src/mode.c    ****                 state = 0;
 220:Src/mode.c    ****             }
 221:Src/mode.c    ****             else
 222:Src/mode.c    ****             {
 223:Src/mode.c    ****                 state += 4;
 103              		.loc 1 223 0
 104 006e 0434     		adds	r4, r4, #4
 105              	.LVL10:
 106 0070 E4B2     		uxtb	r4, r4
 107              	.LVL11:
 108              	.L12:
 224:Src/mode.c    ****             }
 225:Src/mode.c    ****             enc.offset = 0;
 109              		.loc 1 225 0
 110 0072 3A4B     		ldr	r3, .L34+12
 111 0074 0022     		movs	r2, #0
 112 0076 9A60     		str	r2, [r3, #8]	@ float
 113              	.L13:
 226:Src/mode.c    ****         }
 227:Src/mode.c    ****         else if (enc.offset < -20)
 228:Src/mode.c    ****         {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 7


 229:Src/mode.c    ****             if (state == 0)
 230:Src/mode.c    ****             {
 231:Src/mode.c    ****                 state = 16;
 232:Src/mode.c    ****             }
 233:Src/mode.c    ****             else
 234:Src/mode.c    ****             {
 235:Src/mode.c    ****                 state -= 4;
 236:Src/mode.c    ****             }
 237:Src/mode.c    ****             enc.offset = 0;
 238:Src/mode.c    ****         }
 239:Src/mode.c    ****         if (accel.z > 30.0f)
 114              		.loc 1 239 0
 115 0078 354B     		ldr	r3, .L34
 116 007a 93ED027A 		vldr.32	s14, [r3, #8]
 117 007e F3EE0E7A 		vmov.f32	s15, #3.0e+1
 118 0082 B4EEE77A 		vcmpe.f32	s14, s15
 119 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 120 008a 4DDC     		bgt	.L32
 240:Src/mode.c    ****         {
 241:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 242:Src/mode.c    ****             HAL_Delay(100);
 243:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 244:Src/mode.c    ****             HAL_Delay(500);
 245:Src/mode.c    ****             break;
 246:Src/mode.c    ****         }
 247:Src/mode.c    ****         Gpio_FullColor(state % 7);
 121              		.loc 1 247 0
 122 008c 3448     		ldr	r0, .L34+16
 123 008e A0FB0430 		umull	r3, r0, r0, r4
 124 0092 231A     		subs	r3, r4, r0
 125 0094 00EB5300 		add	r0, r0, r3, lsr #1
 126 0098 8008     		lsrs	r0, r0, #2
 127 009a C0EBC000 		rsb	r0, r0, r0, lsl #3
 128 009e 201A     		subs	r0, r4, r0
 129 00a0 C0B2     		uxtb	r0, r0
 130 00a2 FFF7FEFF 		bl	Gpio_FullColor
 131              	.LVL12:
 248:Src/mode.c    ****         Gpio_SideLed(mode);
 132              		.loc 1 248 0
 133 00a6 E8B2     		uxtb	r0, r5
 134 00a8 FFF7FEFF 		bl	Gpio_SideLed
 135              	.LVL13:
 249:Src/mode.c    ****         printf("%d\r", mode + state);
 136              		.loc 1 249 0
 137 00ac 2919     		adds	r1, r5, r4
 138 00ae 2D48     		ldr	r0, .L34+20
 139 00b0 FFF7FEFF 		bl	printf
 140              	.LVL14:
 141              	.L18:
 192:Src/mode.c    ****         {
 142              		.loc 1 192 0
 143 00b4 274B     		ldr	r3, .L34+4
 144 00b6 93ED007A 		vldr.32	s14, [r3]
 145 00ba DFED277A 		vldr.32	s15, .L34+8
 146 00be B4EEE77A 		vcmpe.f32	s14, s15
 147 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 148 00c6 08DC     		bgt	.L2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 8


 192:Src/mode.c    ****         {
 149              		.loc 1 192 0 is_stmt 0 discriminator 1
 150 00c8 93ED007A 		vldr.32	s14, [r3]
 151 00cc DFED267A 		vldr.32	s15, .L34+24
 152 00d0 B4EEE77A 		vcmpe.f32	s14, s15
 153 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 00d8 BDD5     		bpl	.L3
 155              	.L2:
 194:Src/mode.c    ****             {
 156              		.loc 1 194 0 is_stmt 1
 157 00da 1E4B     		ldr	r3, .L34+4
 158 00dc 93ED007A 		vldr.32	s14, [r3]
 159 00e0 DFED217A 		vldr.32	s15, .L34+24
 160 00e4 B4EEE77A 		vcmpe.f32	s14, s15
 161 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 00ec 91D5     		bpl	.L28
 196:Src/mode.c    ****             }
 163              		.loc 1 196 0
 164 00ee 0135     		adds	r5, r5, #1
 165              	.LVL15:
 166 00f0 6DB2     		sxtb	r5, r5
 167              	.LVL16:
 168              	.L7:
 202:Src/mode.c    ****             {
 169              		.loc 1 202 0
 170 00f2 032D     		cmp	r5, #3
 171 00f4 9ADC     		bgt	.L19
 206:Src/mode.c    ****             {
 172              		.loc 1 206 0
 173 00f6 002D     		cmp	r5, #0
 174 00f8 99DA     		bge	.L9
 208:Src/mode.c    ****             }
 175              		.loc 1 208 0
 176 00fa 0325     		movs	r5, #3
 177              	.LVL17:
 178 00fc 97E7     		b	.L9
 179              	.LVL18:
 180              	.L21:
 219:Src/mode.c    ****             }
 181              		.loc 1 219 0
 182 00fe 0024     		movs	r4, #0
 183              	.LVL19:
 184 0100 B7E7     		b	.L12
 185              	.LVL20:
 186              	.L29:
 227:Src/mode.c    ****         {
 187              		.loc 1 227 0
 188 0102 164B     		ldr	r3, .L34+12
 189 0104 93ED027A 		vldr.32	s14, [r3, #8]
 190 0108 FBEE047A 		vmov.f32	s15, #-2.0e+1
 191 010c B4EEE77A 		vcmpe.f32	s14, s15
 192 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193 0114 B0D5     		bpl	.L13
 229:Src/mode.c    ****             {
 194              		.loc 1 229 0
 195 0116 2CB1     		cbz	r4, .L22
 235:Src/mode.c    ****             }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 9


 196              		.loc 1 235 0
 197 0118 043C     		subs	r4, r4, #4
 198              	.LVL21:
 199 011a E4B2     		uxtb	r4, r4
 200              	.LVL22:
 201              	.L15:
 237:Src/mode.c    ****         }
 202              		.loc 1 237 0
 203 011c 0F4B     		ldr	r3, .L34+12
 204 011e 0022     		movs	r2, #0
 205 0120 9A60     		str	r2, [r3, #8]	@ float
 206 0122 A9E7     		b	.L13
 207              	.L22:
 231:Src/mode.c    ****             }
 208              		.loc 1 231 0
 209 0124 1024     		movs	r4, #16
 210              	.LVL23:
 211 0126 F9E7     		b	.L15
 212              	.LVL24:
 213              	.L32:
 241:Src/mode.c    ****             HAL_Delay(100);
 214              		.loc 1 241 0
 215 0128 4FF49671 		mov	r1, #300
 216 012c 4C20     		movs	r0, #76
 217 012e FFF7FEFF 		bl	Tim_BuzzerPwm
 218              	.LVL25:
 242:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 219              		.loc 1 242 0
 220 0132 6420     		movs	r0, #100
 221 0134 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL26:
 243:Src/mode.c    ****             HAL_Delay(500);
 223              		.loc 1 243 0
 224 0138 0021     		movs	r1, #0
 225 013a 0A20     		movs	r0, #10
 226 013c FFF7FEFF 		bl	Tim_BuzzerPwm
 227              	.LVL27:
 244:Src/mode.c    ****             break;
 228              		.loc 1 244 0
 229 0140 4FF4FA70 		mov	r0, #500
 230 0144 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL28:
 250:Src/mode.c    ****     }
 251:Src/mode.c    ****     return mode + state;
 232              		.loc 1 251 0
 233 0148 2C44     		add	r4, r4, r5
 234              	.LVL29:
 235 014a E0B2     		uxtb	r0, r4
 252:Src/mode.c    **** }
 236              		.loc 1 252 0
 237 014c 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL30:
 239              	.L35:
 240 014e 00BF     		.align	2
 241              	.L34:
 242 0150 00000000 		.word	accel
 243 0154 00000000 		.word	gyro_y
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 10


 244 0158 00009643 		.word	1133903872
 245 015c 00000000 		.word	enc
 246 0160 25499224 		.word	613566757
 247 0164 00000000 		.word	.LC0
 248 0168 000096C3 		.word	-1013579776
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.SensorCheck,"ax",%progbits
 253              		.align	1
 254              		.global	SensorCheck
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	SensorCheck:
 261              	.LFB128:
 253:Src/mode.c    **** 
 254:Src/mode.c    **** void SensorCheck(void)
 255:Src/mode.c    **** {
 262              		.loc 1 255 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 256:Src/mode.c    ****     Adc_IrSensorStart();
 274              		.loc 1 256 0
 275 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 276              	.LVL31:
 277 0008 2CE0     		b	.L43
 278              	.L48:
 257:Src/mode.c    **** 
 258:Src/mode.c    ****     while (1)
 259:Src/mode.c    ****     {
 260:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 261:Src/mode.c    ****         {
 262:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 279              		.loc 1 262 0
 280 000a 0022     		movs	r2, #0
 281 000c 8021     		movs	r1, #128
 282 000e 2D48     		ldr	r0, .L51
 283 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL32:
 285 0014 2FE0     		b	.L38
 286              	.L49:
 263:Src/mode.c    ****         }
 264:Src/mode.c    ****         else
 265:Src/mode.c    ****         {
 266:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 267:Src/mode.c    ****         }
 268:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 11


 269:Src/mode.c    ****         {
 270:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 287              		.loc 1 270 0
 288 0016 0022     		movs	r2, #0
 289 0018 1021     		movs	r1, #16
 290 001a 2B48     		ldr	r0, .L51+4
 291 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL33:
 293 0020 32E0     		b	.L40
 294              	.L50:
 271:Src/mode.c    ****         }
 272:Src/mode.c    ****         else
 273:Src/mode.c    ****         {
 274:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 275:Src/mode.c    ****         }
 276:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 277:Src/mode.c    ****         {
 278:Src/mode.c    ****             Gpio_FullColor(WHITE);
 295              		.loc 1 278 0
 296 0022 0020     		movs	r0, #0
 297 0024 FFF7FEFF 		bl	Gpio_FullColor
 298              	.LVL34:
 299              	.L42:
 279:Src/mode.c    ****         }
 280:Src/mode.c    ****         else
 281:Src/mode.c    ****         {
 282:Src/mode.c    ****             Gpio_FullColor(DARK);
 283:Src/mode.c    ****         }
 284:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now, s
 300              		.loc 1 284 0
 301 0028 284B     		ldr	r3, .L51+8
 302 002a B3F90010 		ldrsh	r1, [r3]
 303 002e 284B     		ldr	r3, .L51+12
 304 0030 B3F90020 		ldrsh	r2, [r3]
 305 0034 274B     		ldr	r3, .L51+16
 306 0036 B3F90030 		ldrsh	r3, [r3]
 307 003a 2748     		ldr	r0, .L51+20
 308 003c B0F90000 		ldrsh	r0, [r0]
 309 0040 264C     		ldr	r4, .L51+24
 310 0042 B4F90040 		ldrsh	r4, [r4]
 311 0046 0194     		str	r4, [sp, #4]
 312 0048 0090     		str	r0, [sp]
 313 004a 2548     		ldr	r0, .L51+28
 314 004c FFF7FEFF 		bl	printf
 315              	.LVL35:
 285:Src/mode.c    **** 
 286:Src/mode.c    ****         if (accel.x > 60)
 316              		.loc 1 286 0
 317 0050 244B     		ldr	r3, .L51+32
 318 0052 93ED007A 		vldr.32	s14, [r3]
 319 0056 DFED247A 		vldr.32	s15, .L51+36
 320 005a B4EEE77A 		vcmpe.f32	s14, s15
 321 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 322 0062 19DC     		bgt	.L47
 323              	.L43:
 260:Src/mode.c    ****         {
 324              		.loc 1 260 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 12


 325 0064 1D4B     		ldr	r3, .L51+24
 326 0066 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 327 0068 012B     		cmp	r3, #1
 328 006a CED0     		beq	.L48
 266:Src/mode.c    ****         }
 329              		.loc 1 266 0
 330 006c 0122     		movs	r2, #1
 331 006e 8021     		movs	r1, #128
 332 0070 1448     		ldr	r0, .L51
 333 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL36:
 335              	.L38:
 268:Src/mode.c    ****         {
 336              		.loc 1 268 0
 337 0076 154B     		ldr	r3, .L51+8
 338 0078 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 339 007a 012B     		cmp	r3, #1
 340 007c CBD0     		beq	.L49
 274:Src/mode.c    ****         }
 341              		.loc 1 274 0
 342 007e 0122     		movs	r2, #1
 343 0080 1021     		movs	r1, #16
 344 0082 1148     		ldr	r0, .L51+4
 345 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL37:
 347              	.L40:
 276:Src/mode.c    ****         {
 348              		.loc 1 276 0
 349 0088 124B     		ldr	r3, .L51+16
 350 008a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 351 008c 012B     		cmp	r3, #1
 352 008e C8D0     		beq	.L50
 282:Src/mode.c    ****         }
 353              		.loc 1 282 0
 354 0090 0720     		movs	r0, #7
 355 0092 FFF7FEFF 		bl	Gpio_FullColor
 356              	.LVL38:
 357 0096 C7E7     		b	.L42
 358              	.L47:
 287:Src/mode.c    ****         {
 288:Src/mode.c    ****             Adc_IrSensorFinish();
 359              		.loc 1 288 0
 360 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 361              	.LVL39:
 289:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 362              		.loc 1 289 0
 363 009c 4FF49671 		mov	r1, #300
 364 00a0 4C20     		movs	r0, #76
 365 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 366              	.LVL40:
 290:Src/mode.c    ****             HAL_Delay(300);
 367              		.loc 1 290 0
 368 00a6 4FF49670 		mov	r0, #300
 369 00aa FFF7FEFF 		bl	HAL_Delay
 370              	.LVL41:
 291:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 371              		.loc 1 291 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 13


 372 00ae 0021     		movs	r1, #0
 373 00b0 0A20     		movs	r0, #10
 374 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 375              	.LVL42:
 292:Src/mode.c    ****             HAL_Delay(500);
 376              		.loc 1 292 0
 377 00b6 4FF4FA70 		mov	r0, #500
 378 00ba FFF7FEFF 		bl	HAL_Delay
 379              	.LVL43:
 293:Src/mode.c    ****             break;
 294:Src/mode.c    ****         }
 295:Src/mode.c    ****     }
 296:Src/mode.c    **** }
 380              		.loc 1 296 0
 381 00be 02B0     		add	sp, sp, #8
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 00c0 10BD     		pop	{r4, pc}
 386              	.L52:
 387 00c2 00BF     		.align	2
 388              	.L51:
 389 00c4 00040240 		.word	1073873920
 390 00c8 00000240 		.word	1073872896
 391 00cc 00000000 		.word	sen_l
 392 00d0 00000000 		.word	sen_fl
 393 00d4 00000000 		.word	sen_front
 394 00d8 00000000 		.word	sen_fr
 395 00dc 00000000 		.word	sen_r
 396 00e0 00000000 		.word	.LC1
 397 00e4 00000000 		.word	accel
 398 00e8 00007042 		.word	1114636288
 399              		.cfi_endproc
 400              	.LFE128:
 402              		.section	.text.SetRunMode,"ax",%progbits
 403              		.align	1
 404              		.global	SetRunMode
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SetRunMode:
 411              	.LFB129:
 297:Src/mode.c    **** 
 298:Src/mode.c    **** void SetRunMode(void)
 299:Src/mode.c    **** {
 412              		.loc 1 299 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI4:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 300:Src/mode.c    ****     Adc_IrSensorStart();
 421              		.loc 1 300 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 14


 422 0002 FFF7FEFF 		bl	Adc_IrSensorStart
 423              	.LVL44:
 424              	.L54:
 301:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 425              		.loc 1 301 0 discriminator 1
 426 0006 164B     		ldr	r3, .L56
 427 0008 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 428 000a 012B     		cmp	r3, #1
 429 000c FBD1     		bne	.L54
 302:Src/mode.c    ****     {
 303:Src/mode.c    ****     }
 304:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 430              		.loc 1 304 0
 431 000e 4FF49671 		mov	r1, #300
 432 0012 4C20     		movs	r0, #76
 433 0014 FFF7FEFF 		bl	Tim_BuzzerPwm
 434              	.LVL45:
 305:Src/mode.c    ****     HAL_Delay(100);
 435              		.loc 1 305 0
 436 0018 6420     		movs	r0, #100
 437 001a FFF7FEFF 		bl	HAL_Delay
 438              	.LVL46:
 306:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 439              		.loc 1 306 0
 440 001e 0021     		movs	r1, #0
 441 0020 0A20     		movs	r0, #10
 442 0022 FFF7FEFF 		bl	Tim_BuzzerPwm
 443              	.LVL47:
 307:Src/mode.c    ****     HAL_Delay(5000);
 444              		.loc 1 307 0
 445 0026 41F28830 		movw	r0, #5000
 446 002a FFF7FEFF 		bl	HAL_Delay
 447              	.LVL48:
 308:Src/mode.c    ****     Spi_GyroReset();
 448              		.loc 1 308 0
 449 002e FFF7FEFF 		bl	Spi_GyroReset
 450              	.LVL49:
 309:Src/mode.c    ****     HAL_Delay(1200);
 451              		.loc 1 309 0
 452 0032 4FF49660 		mov	r0, #1200
 453 0036 FFF7FEFF 		bl	HAL_Delay
 454              	.LVL50:
 310:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 455              		.loc 1 310 0
 456 003a 4FF49671 		mov	r1, #300
 457 003e 4C20     		movs	r0, #76
 458 0040 FFF7FEFF 		bl	Tim_BuzzerPwm
 459              	.LVL51:
 311:Src/mode.c    ****     HAL_Delay(100);
 460              		.loc 1 311 0
 461 0044 6420     		movs	r0, #100
 462 0046 FFF7FEFF 		bl	HAL_Delay
 463              	.LVL52:
 312:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 464              		.loc 1 312 0
 465 004a 0021     		movs	r1, #0
 466 004c 0A20     		movs	r0, #10
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 15


 467 004e FFF7FEFF 		bl	Tim_BuzzerPwm
 468              	.LVL53:
 313:Src/mode.c    ****     Control_ResetVelo();
 469              		.loc 1 313 0
 470 0052 FFF7FEFF 		bl	Control_ResetVelo
 471              	.LVL54:
 314:Src/mode.c    ****     motor_flag = TRUE;
 472              		.loc 1 314 0
 473 0056 034B     		ldr	r3, .L56+4
 474 0058 0122     		movs	r2, #1
 475 005a 1A70     		strb	r2, [r3]
 315:Src/mode.c    **** }
 476              		.loc 1 315 0
 477 005c 08BD     		pop	{r3, pc}
 478              	.L57:
 479 005e 00BF     		.align	2
 480              	.L56:
 481 0060 00000000 		.word	sen_front
 482 0064 00000000 		.word	motor_flag
 483              		.cfi_endproc
 484              	.LFE129:
 486              		.section	.text.Get_WallData,"ax",%progbits
 487              		.align	1
 488              		.global	Get_WallData
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	Get_WallData:
 495              	.LFB130:
 316:Src/mode.c    **** 
 317:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 318:Src/mode.c    **** {
 496              		.loc 1 318 0
 497              		.cfi_startproc
 498              		@ args = 12, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL55:
 502 0000 10B4     		push	{r4}
 503              	.LCFI5:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 4, -4
 506 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 319:Src/mode.c    ****     // 方向別に壁の状態を取得
 320:Src/mode.c    ****     switch (direction)
 507              		.loc 1 320 0
 508 0006 032C     		cmp	r4, #3
 509 0008 0ED8     		bhi	.L58
 510 000a DFE804F0 		tbb	[pc, r4]
 511              	.L61:
 512 000e 02       		.byte	(.L60-.L61)/2
 513 000f 28       		.byte	(.L62-.L61)/2
 514 0010 1C       		.byte	(.L63-.L61)/2
 515 0011 10       		.byte	(.L64-.L61)/2
 516              		.p2align 1
 517              	.L60:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 16


 321:Src/mode.c    ****     {
 322:Src/mode.c    ****     case NORTH:
 323:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 518              		.loc 1 323 0
 519 0012 194C     		ldr	r4, .L66
 520 0014 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 521 0016 0470     		strb	r4, [r0]
 324:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 522              		.loc 1 324 0
 523 0018 1848     		ldr	r0, .L66+4
 524              	.LVL56:
 525 001a 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 526 001c 0870     		strb	r0, [r1]
 325:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 527              		.loc 1 325 0
 528 001e 1849     		ldr	r1, .L66+8
 529              	.LVL57:
 530 0020 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 531 0022 1170     		strb	r1, [r2]
 326:Src/mode.c    ****         *s_wall = 0;
 532              		.loc 1 326 0
 533 0024 0022     		movs	r2, #0
 534              	.LVL58:
 535 0026 1A70     		strb	r2, [r3]
 536              	.LVL59:
 537              	.L58:
 327:Src/mode.c    ****         break;
 328:Src/mode.c    ****     case EAST:
 329:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 330:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 331:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 332:Src/mode.c    ****         *w_wall = 0;
 333:Src/mode.c    ****         break;
 334:Src/mode.c    ****     case SOUTH:
 335:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 336:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 337:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 338:Src/mode.c    ****         *n_wall = 0;
 339:Src/mode.c    ****         break;
 340:Src/mode.c    ****     case WEST:
 341:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 342:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 343:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 344:Src/mode.c    ****         *e_wall = 0;
 345:Src/mode.c    ****         break;
 346:Src/mode.c    ****     default:
 347:Src/mode.c    ****         break;
 348:Src/mode.c    ****     }
 349:Src/mode.c    **** }
 538              		.loc 1 349 0
 539 0028 5DF8044B 		ldr	r4, [sp], #4
 540              	.LCFI6:
 541              		.cfi_remember_state
 542              		.cfi_restore 4
 543              		.cfi_def_cfa_offset 0
 544              	.LVL60:
 545 002c 7047     		bx	lr
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 17


 546              	.LVL61:
 547              	.L64:
 548              	.LCFI7:
 549              		.cfi_restore_state
 329:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 550              		.loc 1 329 0
 551 002e 124C     		ldr	r4, .L66
 552 0030 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 553 0032 0C70     		strb	r4, [r1]
 330:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 554              		.loc 1 330 0
 555 0034 1149     		ldr	r1, .L66+4
 556              	.LVL62:
 557 0036 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 558 0038 1970     		strb	r1, [r3]
 331:Src/mode.c    ****         *w_wall = 0;
 559              		.loc 1 331 0
 560 003a 114B     		ldr	r3, .L66+8
 561              	.LVL63:
 562 003c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 563 003e 0370     		strb	r3, [r0]
 332:Src/mode.c    ****         break;
 564              		.loc 1 332 0
 565 0040 0023     		movs	r3, #0
 566 0042 1370     		strb	r3, [r2]
 333:Src/mode.c    ****     case SOUTH:
 567              		.loc 1 333 0
 568 0044 F0E7     		b	.L58
 569              	.LVL64:
 570              	.L63:
 335:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 571              		.loc 1 335 0
 572 0046 0C4C     		ldr	r4, .L66
 573 0048 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 574 004a 1C70     		strb	r4, [r3]
 336:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 575              		.loc 1 336 0
 576 004c 0B4B     		ldr	r3, .L66+4
 577              	.LVL65:
 578 004e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 579 0050 1370     		strb	r3, [r2]
 337:Src/mode.c    ****         *n_wall = 0;
 580              		.loc 1 337 0
 581 0052 0B4B     		ldr	r3, .L66+8
 582 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 583 0056 0B70     		strb	r3, [r1]
 338:Src/mode.c    ****         break;
 584              		.loc 1 338 0
 585 0058 0023     		movs	r3, #0
 586 005a 0370     		strb	r3, [r0]
 339:Src/mode.c    ****     case WEST:
 587              		.loc 1 339 0
 588 005c E4E7     		b	.L58
 589              	.LVL66:
 590              	.L62:
 341:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 591              		.loc 1 341 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 18


 592 005e 064C     		ldr	r4, .L66
 593 0060 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 594 0062 1470     		strb	r4, [r2]
 342:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 595              		.loc 1 342 0
 596 0064 054A     		ldr	r2, .L66+4
 597              	.LVL67:
 598 0066 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 599 0068 0270     		strb	r2, [r0]
 343:Src/mode.c    ****         *e_wall = 0;
 600              		.loc 1 343 0
 601 006a 054A     		ldr	r2, .L66+8
 602 006c 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 603 006e 1A70     		strb	r2, [r3]
 344:Src/mode.c    ****         break;
 604              		.loc 1 344 0
 605 0070 0023     		movs	r3, #0
 606              	.LVL68:
 607 0072 0B70     		strb	r3, [r1]
 608              		.loc 1 349 0
 609 0074 D8E7     		b	.L58
 610              	.L67:
 611 0076 00BF     		.align	2
 612              	.L66:
 613 0078 00000000 		.word	sen_front
 614 007c 00000000 		.word	sen_r
 615 0080 00000000 		.word	sen_l
 616              		.cfi_endproc
 617              	.LFE130:
 619              		.section	.text.SearchRun,"ax",%progbits
 620              		.align	1
 621              		.global	SearchRun
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	SearchRun:
 628              	.LFB131:
 350:Src/mode.c    **** 
 351:Src/mode.c    **** void SearchRun(void)
 352:Src/mode.c    **** {
 629              		.loc 1 352 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 288
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633 0000 30B5     		push	{r4, r5, lr}
 634              	.LCFI8:
 635              		.cfi_def_cfa_offset 12
 636              		.cfi_offset 4, -12
 637              		.cfi_offset 5, -8
 638              		.cfi_offset 14, -4
 639 0002 CDB0     		sub	sp, sp, #308
 640              	.LCFI9:
 641              		.cfi_def_cfa_offset 320
 353:Src/mode.c    ****     //壁情報を持った構造体を定義
 354:Src/mode.c    ****     wallData_t wall_data;
 355:Src/mode.c    ****     wallData_t wall_data_fast;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 19


 356:Src/mode.c    **** 
 357:Src/mode.c    ****     //ポジションを定義、初期化
 358:Src/mode.c    ****     pos_t mypos;
 359:Src/mode.c    ****     mypos.dir = 0;
 642              		.loc 1 359 0
 643 0004 0024     		movs	r4, #0
 644 0006 8DF81E40 		strb	r4, [sp, #30]
 360:Src/mode.c    ****     mypos.x = 0;
 645              		.loc 1 360 0
 646 000a 8DF81C40 		strb	r4, [sp, #28]
 361:Src/mode.c    ****     mypos.y = 1;
 647              		.loc 1 361 0
 648 000e 0125     		movs	r5, #1
 649 0010 8DF81D50 		strb	r5, [sp, #29]
 362:Src/mode.c    **** 
 363:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 364:Src/mode.c    ****     Map_Init(&wall_data);
 650              		.loc 1 364 0
 651 0014 2AA8     		add	r0, sp, #168
 652 0016 FFF7FEFF 		bl	Map_Init
 653              	.LVL69:
 365:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 654              		.loc 1 365 0
 655 001a 08A8     		add	r0, sp, #32
 656 001c FFF7FEFF 		bl	Map_InitFast
 657              	.LVL70:
 366:Src/mode.c    **** 
 367:Src/mode.c    ****     //歩数マップの作製
 368:Src/mode.c    ****     uint16_t nextdir = FRONT;
 369:Src/mode.c    ****     //最初の区画は進んでいるものとする
 370:Src/mode.c    ****     unsigned char flag_goal = 0;
 658              		.loc 1 370 0
 659 0020 8DF81B40 		strb	r4, [sp, #27]
 371:Src/mode.c    ****     //enable control side wall
 372:Src/mode.c    ****     control_wall_flag = TRUE;
 660              		.loc 1 372 0
 661 0024 7D4B     		ldr	r3, .L77
 662 0026 1D70     		strb	r5, [r3]
 373:Src/mode.c    ****     //counter set
 374:Src/mode.c    ****     counter_s=0;
 663              		.loc 1 374 0
 664 0028 7D4B     		ldr	r3, .L77+4
 665 002a 1C70     		strb	r4, [r3]
 375:Src/mode.c    ****     SetRunMode();
 666              		.loc 1 375 0
 667 002c FFF7FEFF 		bl	SetRunMode
 668              	.LVL71:
 376:Src/mode.c    ****     Motion_Start();
 669              		.loc 1 376 0
 670 0030 FFF7FEFF 		bl	Motion_Start
 671              	.LVL72:
 672 0034 73E0     		b	.L73
 673              	.LVL73:
 674              	.L76:
 675              	.LBB2:
 377:Src/mode.c    ****     while (1)
 378:Src/mode.c    ****     {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 20


 379:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 380:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 381:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 382:Src/mode.c    **** 
 383:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 384:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 385:Src/mode.c    **** 
 386:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 387:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 388:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 389:Src/mode.c    ****         Motion_Switch(nextdir);
 390:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 676              		.loc 1 390 0 discriminator 1
 677 0036 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 678 003a 7A49     		ldr	r1, .L77+8
 679 003c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 680 003e 8A42     		cmp	r2, r1
 681 0040 40F0BF80 		bne	.L69
 391:Src/mode.c    ****         {
 392:Src/mode.c    ****             if (flag_goal == 0)
 682              		.loc 1 392 0
 683 0044 9DF81B10 		ldrb	r1, [sp, #27]	@ zero_extendqisi2
 684 0048 0029     		cmp	r1, #0
 685 004a 40F0BA80 		bne	.L69
 393:Src/mode.c    ****             {
 394:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 686              		.loc 1 394 0
 687 004e 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 688 0052 0291     		str	r1, [sp, #8]
 689 0054 0192     		str	r2, [sp, #4]
 690 0056 0093     		str	r3, [sp]
 691 0058 0DF11A03 		add	r3, sp, #26
 692 005c 0DF11902 		add	r2, sp, #25
 693 0060 06A9     		add	r1, sp, #24
 694 0062 0DF11700 		add	r0, sp, #23
 695 0066 FFF7FEFF 		bl	Get_WallData
 696              	.LVL74:
 395:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 697              		.loc 1 395 0
 698 006a 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 699 006e 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 700 0072 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 701 0076 0191     		str	r1, [sp, #4]
 702 0078 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 703 007c 0091     		str	r1, [sp]
 704 007e 07A9     		add	r1, sp, #28
 705 0080 2AA8     		add	r0, sp, #168
 706 0082 FFF7FEFF 		bl	Map_addWall
 707              	.LVL75:
 396:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 708              		.loc 1 396 0
 709 0086 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 710 008a 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 711 008e 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 712 0092 0191     		str	r1, [sp, #4]
 713 0094 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 714 0098 0091     		str	r1, [sp]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 21


 715 009a 07A9     		add	r1, sp, #28
 716 009c 08A8     		add	r0, sp, #32
 717 009e FFF7FEFF 		bl	Map_DelWall
 718              	.LVL76:
 397:Src/mode.c    ****                 Motion_End();
 719              		.loc 1 397 0
 720 00a2 FFF7FEFF 		bl	Motion_End
 721              	.LVL77:
 398:Src/mode.c    ****                 motor_flag = FALSE;
 722              		.loc 1 398 0
 723 00a6 0024     		movs	r4, #0
 724 00a8 5F4B     		ldr	r3, .L77+12
 725 00aa 1C70     		strb	r4, [r3]
 399:Src/mode.c    ****                 flag_goal = 1;
 726              		.loc 1 399 0
 727 00ac 0123     		movs	r3, #1
 728 00ae 8DF81B30 		strb	r3, [sp, #27]
 400:Src/mode.c    ****                 HAL_Delay(1000);
 729              		.loc 1 400 0
 730 00b2 4FF47A70 		mov	r0, #1000
 731 00b6 FFF7FEFF 		bl	HAL_Delay
 732              	.LVL78:
 401:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 733              		.loc 1 401 0
 734 00ba 8822     		movs	r2, #136
 735 00bc 08A9     		add	r1, sp, #32
 736 00be 5B4B     		ldr	r3, .L77+16
 737 00c0 1868     		ldr	r0, [r3]
 738 00c2 FFF7FEFF 		bl	Flash_Write
 739              	.LVL79:
 402:Src/mode.c    ****                 HAL_Delay(2000);
 740              		.loc 1 402 0
 741 00c6 4FF4FA60 		mov	r0, #2000
 742 00ca FFF7FEFF 		bl	HAL_Delay
 743              	.LVL80:
 403:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 744              		.loc 1 403 0
 745 00ce 4FF49671 		mov	r1, #300
 746 00d2 5B20     		movs	r0, #91
 747 00d4 FFF7FEFF 		bl	Tim_BuzzerPwm
 748              	.LVL81:
 404:Src/mode.c    ****                 HAL_Delay(200);
 749              		.loc 1 404 0
 750 00d8 C820     		movs	r0, #200
 751 00da FFF7FEFF 		bl	HAL_Delay
 752              	.LVL82:
 405:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 753              		.loc 1 405 0
 754 00de 2146     		mov	r1, r4
 755 00e0 0A20     		movs	r0, #10
 756 00e2 FFF7FEFF 		bl	Tim_BuzzerPwm
 757              	.LVL83:
 406:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 758              		.loc 1 406 0
 759 00e6 524B     		ldr	r3, .L77+20
 760 00e8 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 761 00ea 53B9     		cbnz	r3, .L70
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 22


 762              	.LVL84:
 407:Src/mode.c    ****                 {
 408:Src/mode.c    ****                     nextdir = FRONT;
 409:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 763              		.loc 1 409 0
 764 00ec 07A9     		add	r1, sp, #28
 765 00ee 2046     		mov	r0, r4
 766 00f0 FFF7FEFF 		bl	Maze_UpdatePosition
 767              	.LVL85:
 410:Src/mode.c    ****                     motor_flag = TRUE;
 768              		.loc 1 410 0
 769 00f4 4C4B     		ldr	r3, .L77+12
 770 00f6 0122     		movs	r2, #1
 771 00f8 1A70     		strb	r2, [r3]
 411:Src/mode.c    ****                     Motion_Restart(FALSE);
 772              		.loc 1 411 0
 773 00fa 2046     		mov	r0, r4
 774 00fc FFF7FEFF 		bl	Motion_Restart
 775              	.LVL86:
 776 0100 5FE0     		b	.L69
 777              	.LVL87:
 778              	.L70:
 412:Src/mode.c    ****                 }
 413:Src/mode.c    ****                 else
 414:Src/mode.c    ****                 {
 415:Src/mode.c    ****                     nextdir = PIVO_REAR;
 416:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 779              		.loc 1 416 0
 780 0102 07A9     		add	r1, sp, #28
 781 0104 0420     		movs	r0, #4
 782 0106 FFF7FEFF 		bl	Maze_UpdatePosition
 783              	.LVL88:
 417:Src/mode.c    ****                     motor_flag = TRUE;
 784              		.loc 1 417 0
 785 010a 0120     		movs	r0, #1
 786 010c 464B     		ldr	r3, .L77+12
 787 010e 1870     		strb	r0, [r3]
 418:Src/mode.c    ****                     Motion_Restart(TRUE);
 788              		.loc 1 418 0
 789 0110 FFF7FEFF 		bl	Motion_Restart
 790              	.LVL89:
 791 0114 55E0     		b	.L69
 792              	.LVL90:
 793              	.L71:
 419:Src/mode.c    ****                 }
 420:Src/mode.c    ****             }
 421:Src/mode.c    ****         }
 422:Src/mode.c    ****         if(counter_s > 150 && flag_goal==1){
 423:Src/mode.c    ****             flag_goal=2;
 424:Src/mode.c    ****         }
 425:Src/mode.c    ****         if (flag_goal == 2)
 794              		.loc 1 425 0
 795 0116 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 796 011a 022B     		cmp	r3, #2
 797 011c 5DD0     		beq	.L75
 798              	.L73:
 379:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 23


 799              		.loc 1 379 0
 800 011e 0023     		movs	r3, #0
 801 0120 8DF81730 		strb	r3, [sp, #23]
 802 0124 8DF81830 		strb	r3, [sp, #24]
 803 0128 8DF81930 		strb	r3, [sp, #25]
 804 012c 8DF81A30 		strb	r3, [sp, #26]
 381:Src/mode.c    **** 
 805              		.loc 1 381 0
 806 0130 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 807 0134 0293     		str	r3, [sp, #8]
 808 0136 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 809 013a 0193     		str	r3, [sp, #4]
 810 013c 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 811 0140 0093     		str	r3, [sp]
 812 0142 0DF11A03 		add	r3, sp, #26
 813 0146 0DF11902 		add	r2, sp, #25
 814 014a 06A9     		add	r1, sp, #24
 815 014c 0DF11700 		add	r0, sp, #23
 816 0150 FFF7FEFF 		bl	Get_WallData
 817              	.LVL91:
 383:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 818              		.loc 1 383 0
 819 0154 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 820 0158 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 821 015c 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 822 0160 0191     		str	r1, [sp, #4]
 823 0162 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 824 0166 0091     		str	r1, [sp]
 825 0168 07A9     		add	r1, sp, #28
 826 016a 2AA8     		add	r0, sp, #168
 827 016c FFF7FEFF 		bl	Map_addWall
 828              	.LVL92:
 384:Src/mode.c    **** 
 829              		.loc 1 384 0
 830 0170 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 831 0174 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 832 0178 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 833 017c 0191     		str	r1, [sp, #4]
 834 017e 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 835 0182 0091     		str	r1, [sp]
 836 0184 07A9     		add	r1, sp, #28
 837 0186 08A8     		add	r0, sp, #32
 838 0188 FFF7FEFF 		bl	Map_DelWall
 839              	.LVL93:
 386:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 840              		.loc 1 386 0
 841 018c 294C     		ldr	r4, .L77+24
 842 018e 2AAB     		add	r3, sp, #168
 843 0190 244A     		ldr	r2, .L77+8
 844 0192 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 845 0194 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 846 0196 0DF11B00 		add	r0, sp, #27
 847 019a FFF7FEFF 		bl	Maze_UpdateStepMap
 848              	.LVL94:
 387:Src/mode.c    ****         nextdir = Maze_KnownStepAccel(&mypos, &wall_data, nextdir);
 849              		.loc 1 387 0
 850 019e 2AA9     		add	r1, sp, #168
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 24


 851 01a0 07A8     		add	r0, sp, #28
 852 01a2 FFF7FEFF 		bl	Maze_GetNextMotion
 853              	.LVL95:
 388:Src/mode.c    ****         Motion_Switch(nextdir);
 854              		.loc 1 388 0
 855 01a6 82B2     		uxth	r2, r0
 856 01a8 2AA9     		add	r1, sp, #168
 857 01aa 07A8     		add	r0, sp, #28
 858              	.LVL96:
 859 01ac FFF7FEFF 		bl	Maze_KnownStepAccel
 860              	.LVL97:
 389:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 861              		.loc 1 389 0
 862 01b0 C0B2     		uxtb	r0, r0
 863              	.LVL98:
 864 01b2 FFF7FEFF 		bl	Motion_Switch
 865              	.LVL99:
 390:Src/mode.c    ****         {
 866              		.loc 1 390 0
 867 01b6 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 868 01ba 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 869 01bc 9342     		cmp	r3, r2
 870 01be 3FF43AAF 		beq	.L76
 871              	.L69:
 422:Src/mode.c    ****             flag_goal=2;
 872              		.loc 1 422 0
 873 01c2 174B     		ldr	r3, .L77+4
 874 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 875 01c6 962B     		cmp	r3, #150
 876 01c8 A5D9     		bls	.L71
 422:Src/mode.c    ****             flag_goal=2;
 877              		.loc 1 422 0 is_stmt 0 discriminator 1
 878 01ca 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 879 01ce 012B     		cmp	r3, #1
 880 01d0 A1D1     		bne	.L71
 423:Src/mode.c    ****         }
 881              		.loc 1 423 0 is_stmt 1
 882 01d2 0223     		movs	r3, #2
 883 01d4 8DF81B30 		strb	r3, [sp, #27]
 884 01d8 9DE7     		b	.L71
 885              	.L75:
 426:Src/mode.c    ****         {
 427:Src/mode.c    ****             Motion_End();
 886              		.loc 1 427 0
 887 01da FFF7FEFF 		bl	Motion_End
 888              	.LVL100:
 428:Src/mode.c    ****             motor_flag = FALSE;
 889              		.loc 1 428 0
 890 01de 0024     		movs	r4, #0
 891 01e0 114B     		ldr	r3, .L77+12
 892 01e2 1C70     		strb	r4, [r3]
 429:Src/mode.c    ****             HAL_Delay(1000);
 893              		.loc 1 429 0
 894 01e4 4FF47A70 		mov	r0, #1000
 895 01e8 FFF7FEFF 		bl	HAL_Delay
 896              	.LVL101:
 430:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 25


 897              		.loc 1 430 0
 898 01ec 8822     		movs	r2, #136
 899 01ee 08A9     		add	r1, sp, #32
 900 01f0 0E4B     		ldr	r3, .L77+16
 901 01f2 1868     		ldr	r0, [r3]
 902 01f4 FFF7FEFF 		bl	Flash_Write
 903              	.LVL102:
 431:Src/mode.c    ****             HAL_Delay(2000);
 904              		.loc 1 431 0
 905 01f8 4FF4FA60 		mov	r0, #2000
 906 01fc FFF7FEFF 		bl	HAL_Delay
 907              	.LVL103:
 432:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 908              		.loc 1 432 0
 909 0200 4FF49671 		mov	r1, #300
 910 0204 5B20     		movs	r0, #91
 911 0206 FFF7FEFF 		bl	Tim_BuzzerPwm
 912              	.LVL104:
 433:Src/mode.c    ****             HAL_Delay(200);
 913              		.loc 1 433 0
 914 020a C820     		movs	r0, #200
 915 020c FFF7FEFF 		bl	HAL_Delay
 916              	.LVL105:
 434:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 917              		.loc 1 434 0
 918 0210 2146     		mov	r1, r4
 919 0212 0A20     		movs	r0, #10
 920 0214 FFF7FEFF 		bl	Tim_BuzzerPwm
 921              	.LVL106:
 922              	.LBE2:
 435:Src/mode.c    ****             break;
 436:Src/mode.c    ****         }
 437:Src/mode.c    ****     }
 438:Src/mode.c    **** }
 923              		.loc 1 438 0
 924 0218 4DB0     		add	sp, sp, #308
 925              	.LCFI10:
 926              		.cfi_def_cfa_offset 12
 927              		@ sp needed
 928 021a 30BD     		pop	{r4, r5, pc}
 929              	.L78:
 930              		.align	2
 931              	.L77:
 932 021c 00000000 		.word	control_wall_flag
 933 0220 00000000 		.word	counter_s
 934 0224 00000000 		.word	.LANCHOR0
 935 0228 00000000 		.word	motor_flag
 936 022c 00000000 		.word	start_address
 937 0230 00000000 		.word	sen_front
 938 0234 00000000 		.word	.LANCHOR1
 939              		.cfi_endproc
 940              	.LFE131:
 942              		.section	.text.Mode_FastRun,"ax",%progbits
 943              		.align	1
 944              		.global	Mode_FastRun
 945              		.syntax unified
 946              		.thumb
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 26


 947              		.thumb_func
 948              		.fpu fpv4-sp-d16
 950              	Mode_FastRun:
 951              	.LFB132:
 439:Src/mode.c    **** 
 440:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain,uint8_t w_str, uint8_t w_turn)
 441:Src/mode.c    **** {
 952              		.loc 1 441 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 1680
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL107:
 957 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 958              	.LCFI11:
 959              		.cfi_def_cfa_offset 20
 960              		.cfi_offset 4, -20
 961              		.cfi_offset 5, -16
 962              		.cfi_offset 6, -12
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 2DED028B 		vpush.64	{d8}
 966              	.LCFI12:
 967              		.cfi_def_cfa_offset 28
 968              		.cfi_offset 80, -28
 969              		.cfi_offset 81, -24
 970 0006 ADF29C6D 		subw	sp, sp, #1692
 971              	.LCFI13:
 972              		.cfi_def_cfa_offset 1720
 973 000a 0446     		mov	r4, r0
 974 000c B0EE408A 		vmov.f32	s16, s0
 975 0010 0E46     		mov	r6, r1
 976 0012 1746     		mov	r7, r2
 442:Src/mode.c    ****     wallData_t wallData;
 443:Src/mode.c    ****     pos_t pos;
 444:Src/mode.c    ****     uint16_t motion[255];
 445:Src/mode.c    ****     uint32_t velocity[255];
 446:Src/mode.c    ****     uint8_t tail = 0;
 977              		.loc 1 446 0
 978 0014 0025     		movs	r5, #0
 979 0016 8DF80F50 		strb	r5, [sp, #15]
 980              	.LVL108:
 447:Src/mode.c    ****     uint8_t head = 0;
 448:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 981              		.loc 1 448 0
 982 001a 8822     		movs	r2, #136
 983              	.LVL109:
 984 001c 0DF5C261 		add	r1, sp, #1552
 985              	.LVL110:
 986 0020 7D4B     		ldr	r3, .L96
 987 0022 1868     		ldr	r0, [r3]
 988              	.LVL111:
 989 0024 FFF7FEFF 		bl	Flash_Load
 990              	.LVL112:
 449:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
 991              		.loc 1 449 0
 992 0028 7C4B     		ldr	r3, .L96+4
 993 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 27


 994 002c 7C4A     		ldr	r2, .L96+8
 995 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 996 0030 0092     		str	r2, [sp]
 997 0032 3A46     		mov	r2, r7
 998 0034 3146     		mov	r1, r6
 999 0036 0DF5C260 		add	r0, sp, #1552
 1000 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1001              	.LVL113:
 450:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1002              		.loc 1 450 0
 1003 003e B0EE480A 		vmov.f32	s0, s16
 1004 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1005              	.LVL114:
 451:Src/mode.c    ****     pos.dir = NORTH;
 1006              		.loc 1 451 0
 1007 0046 8DF80E56 		strb	r5, [sp, #1550]
 452:Src/mode.c    ****     pos.x = 0;
 1008              		.loc 1 452 0
 1009 004a 8DF80C56 		strb	r5, [sp, #1548]
 453:Src/mode.c    ****     pos.y = 1;
 1010              		.loc 1 453 0
 1011 004e 0123     		movs	r3, #1
 1012 0050 8DF80D36 		strb	r3, [sp, #1549]
 454:Src/mode.c    ****     motion[tail] = START;
 1013              		.loc 1 454 0
 1014 0054 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1015 0058 0DF20C42 		addw	r2, sp, #1036
 1016 005c 0521     		movs	r1, #5
 1017 005e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 455:Src/mode.c    ****     tail++;
 1018              		.loc 1 455 0
 1019 0062 0133     		adds	r3, r3, #1
 1020 0064 DBB2     		uxtb	r3, r3
 456:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1021              		.loc 1 456 0
 1022 0066 1021     		movs	r1, #16
 1023 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 457:Src/mode.c    ****     tail++;
 1024              		.loc 1 457 0
 1025 006c 0133     		adds	r3, r3, #1
 1026 006e 8DF80F30 		strb	r3, [sp, #15]
 1027              	.LVL115:
 458:Src/mode.c    ****     head += 2;
 459:Src/mode.c    ****     while (pos.x != gx || pos.y != gy)
 1028              		.loc 1 459 0
 1029 0072 14E0     		b	.L80
 1030              	.L81:
 1031              	.LBB3:
 460:Src/mode.c    ****     {
 461:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1032              		.loc 1 461 0
 1033 0074 0DF5C261 		add	r1, sp, #1552
 1034 0078 0DF20C60 		addw	r0, sp, #1548
 1035 007c FFF7FEFF 		bl	Maze_GetNextMotionEx
 1036              	.LVL116:
 462:Src/mode.c    ****         motion[tail] = buff;
 1037              		.loc 1 462 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 28


 1038 0080 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1039 0084 0DF20C42 		addw	r2, sp, #1036
 1040 0088 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 463:Src/mode.c    ****         tail++;
 1041              		.loc 1 463 0
 1042 008c 0133     		adds	r3, r3, #1
 1043 008e 8DF80F30 		strb	r3, [sp, #15]
 464:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1044              		.loc 1 464 0
 1045 0092 0DF20C61 		addw	r1, sp, #1548
 1046 0096 00F00F00 		and	r0, r0, #15
 1047              	.LVL117:
 1048 009a FFF7FEFF 		bl	Maze_UpdatePosition
 1049              	.LVL118:
 1050              	.L80:
 1051              	.LBE3:
 459:Src/mode.c    ****     {
 1052              		.loc 1 459 0
 1053 009e 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1054 00a2 5E4B     		ldr	r3, .L96+4
 1055 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1056 00a6 9A42     		cmp	r2, r3
 1057 00a8 E4D1     		bne	.L81
 459:Src/mode.c    ****     {
 1058              		.loc 1 459 0 is_stmt 0 discriminator 1
 1059 00aa 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1060 00ae 5C4B     		ldr	r3, .L96+8
 1061 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 00b2 9A42     		cmp	r2, r3
 1063 00b4 DED1     		bne	.L81
 465:Src/mode.c    ****     }
 466:Src/mode.c    ****     motion[tail] = GOAL;
 1064              		.loc 1 466 0 is_stmt 1
 1065 00b6 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1066 00ba 0DF20C41 		addw	r1, sp, #1036
 1067 00be 0622     		movs	r2, #6
 1068 00c0 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 467:Src/mode.c    ****     tail++;
 1069              		.loc 1 467 0
 1070 00c4 0133     		adds	r3, r3, #1
 1071 00c6 8DF80F30 		strb	r3, [sp, #15]
 1072              	.LVL119:
 468:Src/mode.c    ****     head = 0;
 469:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail);
 1073              		.loc 1 469 0
 1074 00ca 0DF10F03 		add	r3, sp, #15
 1075 00ce 04AA     		add	r2, sp, #16
 1076 00d0 2046     		mov	r0, r4
 1077 00d2 FFF7FEFF 		bl	Maze_Compress
 1078              	.LVL120:
 470:Src/mode.c    **** 
 471:Src/mode.c    ****     control_wall_flag = 2;
 1079              		.loc 1 471 0
 1080 00d6 534B     		ldr	r3, .L96+12
 1081 00d8 0222     		movs	r2, #2
 1082 00da 1A70     		strb	r2, [r3]
 472:Src/mode.c    ****     SetRunMode();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 29


 1083              		.loc 1 472 0
 1084 00dc FFF7FEFF 		bl	SetRunMode
 1085              	.LVL121:
 468:Src/mode.c    ****     head = 0;
 1086              		.loc 1 468 0
 1087 00e0 0024     		movs	r4, #0
 473:Src/mode.c    ****     while (head != tail)
 1088              		.loc 1 473 0
 1089 00e2 0CE0     		b	.L82
 1090              	.LVL122:
 1091              	.L88:
 474:Src/mode.c    ****     {
 475:Src/mode.c    ****         switch (motion[head] & 0xf)
 476:Src/mode.c    ****         {
 477:Src/mode.c    ****         case START:
 478:Src/mode.c    ****             Motion_FastStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1092              		.loc 1 478 0
 1093 00e4 04AB     		add	r3, sp, #16
 1094 00e6 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1095 00ea 00EE103A 		vmov	s0, r3	@ int
 1096 00ee B8EE400A 		vcvt.f32.u32	s0, s0
 1097 00f2 C0F30710 		ubfx	r0, r0, #4, #8
 1098 00f6 FFF7FEFF 		bl	Motion_FastStart
 1099              	.LVL123:
 1100              	.L83:
 479:Src/mode.c    ****             break;
 480:Src/mode.c    ****         case LEFT:
 481:Src/mode.c    ****             Motion_FastLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 482:Src/mode.c    ****             break;
 483:Src/mode.c    ****         case FRONT:
 484:Src/mode.c    ****             Motion_FastStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(velocity[
 485:Src/mode.c    ****             break;
 486:Src/mode.c    ****         case DIAGONAL_L:
 487:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 488:Src/mode.c    ****             break;
 489:Src/mode.c    ****         case DIAGONAL_R:
 490:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
 491:Src/mode.c    ****             break;
 492:Src/mode.c    ****         case RIGHT:
 493:Src/mode.c    ****             Motion_FastRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 494:Src/mode.c    ****             break;
 495:Src/mode.c    ****         case GOAL:
 496:Src/mode.c    ****             Motion_FastGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 497:Src/mode.c    ****             break;
 498:Src/mode.c    ****         case ADJUST:
 499:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 500:Src/mode.c    ****             break;
 501:Src/mode.c    ****         default:
 502:Src/mode.c    ****             break;
 503:Src/mode.c    ****         }
 504:Src/mode.c    ****         head++;
 1101              		.loc 1 504 0
 1102 00fa 0134     		adds	r4, r4, #1
 1103              	.LVL124:
 1104 00fc E4B2     		uxtb	r4, r4
 1105              	.LVL125:
 1106              	.L82:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 30


 473:Src/mode.c    ****     {
 1107              		.loc 1 473 0
 1108 00fe 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1109 0102 A342     		cmp	r3, r4
 1110 0104 6DD0     		beq	.L95
 475:Src/mode.c    ****         {
 1111              		.loc 1 475 0
 1112 0106 0DF20C43 		addw	r3, sp, #1036
 1113 010a 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1114 010e 00F00F03 		and	r3, r0, #15
 1115 0112 0A2B     		cmp	r3, #10
 1116 0114 F1D8     		bhi	.L83
 1117 0116 01A2     		adr	r2, .L85
 1118 0118 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1119              		.p2align 2
 1120              	.L85:
 1121 011c 61010000 		.word	.L84+1
 1122 0120 49010000 		.word	.L86+1
 1123 0124 99010000 		.word	.L87+1
 1124 0128 FB000000 		.word	.L83+1
 1125 012c FB000000 		.word	.L83+1
 1126 0130 E5000000 		.word	.L88+1
 1127 0134 B1010000 		.word	.L89+1
 1128 0138 FB000000 		.word	.L83+1
 1129 013c 85010000 		.word	.L90+1
 1130 0140 8F010000 		.word	.L91+1
 1131 0144 CB010000 		.word	.L92+1
 1132              		.p2align 1
 1133              	.L86:
 481:Src/mode.c    ****             break;
 1134              		.loc 1 481 0
 1135 0148 04AB     		add	r3, sp, #16
 1136 014a 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1137 014e 00EE103A 		vmov	s0, r3	@ int
 1138 0152 B8EE400A 		vcvt.f32.u32	s0, s0
 1139 0156 C0F30710 		ubfx	r0, r0, #4, #8
 1140 015a FFF7FEFF 		bl	Motion_FastLeftTurn
 1141              	.LVL126:
 482:Src/mode.c    ****         case FRONT:
 1142              		.loc 1 482 0
 1143 015e CCE7     		b	.L83
 1144              	.L84:
 484:Src/mode.c    ****             break;
 1145              		.loc 1 484 0
 1146 0160 04AB     		add	r3, sp, #16
 1147 0162 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1148 0166 1A0C     		lsrs	r2, r3, #16
 1149 0168 00EE102A 		vmov	s0, r2	@ int
 1150 016c 9BB2     		uxth	r3, r3
 1151 016e 00EE903A 		vmov	s1, r3	@ int
 1152 0172 F8EE600A 		vcvt.f32.u32	s1, s1
 1153 0176 B8EE400A 		vcvt.f32.u32	s0, s0
 1154 017a C0F30710 		ubfx	r0, r0, #4, #8
 1155 017e FFF7FEFF 		bl	Motion_FastStraight
 1156              	.LVL127:
 485:Src/mode.c    ****         case DIAGONAL_L:
 1157              		.loc 1 485 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 31


 1158 0182 BAE7     		b	.L83
 1159              	.L90:
 487:Src/mode.c    ****             break;
 1160              		.loc 1 487 0
 1161 0184 C0F30710 		ubfx	r0, r0, #4, #8
 1162 0188 FFF7FEFF 		bl	Motion_DiagonalLeft
 1163              	.LVL128:
 488:Src/mode.c    ****         case DIAGONAL_R:
 1164              		.loc 1 488 0
 1165 018c B5E7     		b	.L83
 1166              	.L91:
 490:Src/mode.c    ****             break;
 1167              		.loc 1 490 0
 1168 018e C0F30710 		ubfx	r0, r0, #4, #8
 1169 0192 FFF7FEFF 		bl	Motion_DiagonalRight
 1170              	.LVL129:
 491:Src/mode.c    ****         case RIGHT:
 1171              		.loc 1 491 0
 1172 0196 B0E7     		b	.L83
 1173              	.L87:
 493:Src/mode.c    ****             break;
 1174              		.loc 1 493 0
 1175 0198 04AB     		add	r3, sp, #16
 1176 019a 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1177 019e 00EE103A 		vmov	s0, r3	@ int
 1178 01a2 B8EE400A 		vcvt.f32.u32	s0, s0
 1179 01a6 C0F30710 		ubfx	r0, r0, #4, #8
 1180 01aa FFF7FEFF 		bl	Motion_FastRightTurn
 1181              	.LVL130:
 494:Src/mode.c    ****         case GOAL:
 1182              		.loc 1 494 0
 1183 01ae A4E7     		b	.L83
 1184              	.L89:
 496:Src/mode.c    ****             break;
 1185              		.loc 1 496 0
 1186 01b0 04AB     		add	r3, sp, #16
 1187 01b2 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1188 01b6 1B0C     		lsrs	r3, r3, #16
 1189 01b8 00EE103A 		vmov	s0, r3	@ int
 1190 01bc B8EE400A 		vcvt.f32.u32	s0, s0
 1191 01c0 C0F30710 		ubfx	r0, r0, #4, #8
 1192 01c4 FFF7FEFF 		bl	Motion_FastGoal
 1193              	.LVL131:
 497:Src/mode.c    ****         case ADJUST:
 1194              		.loc 1 497 0
 1195 01c8 97E7     		b	.L83
 1196              	.L92:
 499:Src/mode.c    ****             break;
 1197              		.loc 1 499 0
 1198 01ca 04AB     		add	r3, sp, #16
 1199 01cc 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1200 01d0 1B0C     		lsrs	r3, r3, #16
 1201 01d2 00EE103A 		vmov	s0, r3	@ int
 1202 01d6 B8EE400A 		vcvt.f32.u32	s0, s0
 1203 01da 0009     		lsrs	r0, r0, #4
 1204 01dc FFF7FEFF 		bl	Motion_Adjust
 1205              	.LVL132:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 32


 500:Src/mode.c    ****         default:
 1206              		.loc 1 500 0
 1207 01e0 8BE7     		b	.L83
 1208              	.L95:
 505:Src/mode.c    ****     }
 506:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 507:Src/mode.c    ****     Tim_MotorBrake();
 1209              		.loc 1 507 0
 1210 01e2 FFF7FEFF 		bl	Tim_MotorBrake
 1211              	.LVL133:
 508:Src/mode.c    ****     HAL_Delay(500);
 1212              		.loc 1 508 0
 1213 01e6 4FF4FA70 		mov	r0, #500
 1214 01ea FFF7FEFF 		bl	HAL_Delay
 1215              	.LVL134:
 509:Src/mode.c    ****     motor_flag = FALSE;
 1216              		.loc 1 509 0
 1217 01ee 0024     		movs	r4, #0
 1218              	.LVL135:
 1219 01f0 0D4B     		ldr	r3, .L96+16
 1220 01f2 1C70     		strb	r4, [r3]
 510:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1221              		.loc 1 510 0
 1222 01f4 4FF49671 		mov	r1, #300
 1223 01f8 4C20     		movs	r0, #76
 1224 01fa FFF7FEFF 		bl	Tim_BuzzerPwm
 1225              	.LVL136:
 511:Src/mode.c    ****     HAL_Delay(200);
 1226              		.loc 1 511 0
 1227 01fe C820     		movs	r0, #200
 1228 0200 FFF7FEFF 		bl	HAL_Delay
 1229              	.LVL137:
 512:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1230              		.loc 1 512 0
 1231 0204 2146     		mov	r1, r4
 1232 0206 0A20     		movs	r0, #10
 1233 0208 FFF7FEFF 		bl	Tim_BuzzerPwm
 1234              	.LVL138:
 513:Src/mode.c    **** }
 1235              		.loc 1 513 0
 1236 020c 0DF29C6D 		addw	sp, sp, #1692
 1237              	.LCFI14:
 1238              		.cfi_def_cfa_offset 28
 1239              		@ sp needed
 1240 0210 BDEC028B 		vldm	sp!, {d8}
 1241              	.LCFI15:
 1242              		.cfi_restore 80
 1243              		.cfi_restore 81
 1244              		.cfi_def_cfa_offset 20
 1245              	.LVL139:
 1246 0214 F0BD     		pop	{r4, r5, r6, r7, pc}
 1247              	.L97:
 1248 0216 00BF     		.align	2
 1249              	.L96:
 1250 0218 00000000 		.word	start_address
 1251 021c 00000000 		.word	.LANCHOR1
 1252 0220 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 33


 1253 0224 00000000 		.word	control_wall_flag
 1254 0228 00000000 		.word	motor_flag
 1255              		.cfi_endproc
 1256              	.LFE132:
 1258              		.section	.text.CheckStraight,"ax",%progbits
 1259              		.align	1
 1260              		.global	CheckStraight
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1264              		.fpu fpv4-sp-d16
 1266              	CheckStraight:
 1267              	.LFB133:
 514:Src/mode.c    **** 
 515:Src/mode.c    **** void CheckStraight(uint8_t block)
 516:Src/mode.c    **** {
 1268              		.loc 1 516 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              	.LVL140:
 1273 0000 38B5     		push	{r3, r4, r5, lr}
 1274              	.LCFI16:
 1275              		.cfi_def_cfa_offset 16
 1276              		.cfi_offset 3, -16
 1277              		.cfi_offset 4, -12
 1278              		.cfi_offset 5, -8
 1279              		.cfi_offset 14, -4
 1280 0002 0546     		mov	r5, r0
 517:Src/mode.c    ****     SetRunMode();
 1281              		.loc 1 517 0
 1282 0004 FFF7FEFF 		bl	SetRunMode
 1283              	.LVL141:
 518:Src/mode.c    ****     enc.distance = 0;
 1284              		.loc 1 518 0
 1285 0008 154B     		ldr	r3, .L102
 1286 000a 0022     		movs	r2, #0
 1287 000c 1A60     		str	r2, [r3]	@ float
 519:Src/mode.c    ****     Motion_Start();
 1288              		.loc 1 519 0
 1289 000e FFF7FEFF 		bl	Motion_Start
 1290              	.LVL142:
 1291              	.LBB4:
 520:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1292              		.loc 1 520 0
 1293 0012 0024     		movs	r4, #0
 1294 0014 04E0     		b	.L99
 1295              	.LVL143:
 1296              	.L100:
 521:Src/mode.c    ****     {
 522:Src/mode.c    ****         Motion_Straight(0);
 1297              		.loc 1 522 0 discriminator 3
 1298 0016 0020     		movs	r0, #0
 1299 0018 FFF7FEFF 		bl	Motion_Straight
 1300              	.LVL144:
 520:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1301              		.loc 1 520 0 discriminator 3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 34


 1302 001c 0134     		adds	r4, r4, #1
 1303              	.LVL145:
 1304 001e E4B2     		uxtb	r4, r4
 1305              	.LVL146:
 1306              	.L99:
 520:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1307              		.loc 1 520 0 is_stmt 0 discriminator 1
 1308 0020 AC42     		cmp	r4, r5
 1309 0022 F8D3     		bcc	.L100
 1310              	.LBE4:
 523:Src/mode.c    ****     }
 524:Src/mode.c    ****     Motion_End();
 1311              		.loc 1 524 0 is_stmt 1
 1312 0024 FFF7FEFF 		bl	Motion_End
 1313              	.LVL147:
 525:Src/mode.c    ****     motor_flag = FALSE;
 1314              		.loc 1 525 0
 1315 0028 0024     		movs	r4, #0
 1316              	.LVL148:
 1317 002a 0E4B     		ldr	r3, .L102+4
 1318 002c 1C70     		strb	r4, [r3]
 526:Src/mode.c    ****     HAL_Delay(500);
 1319              		.loc 1 526 0
 1320 002e 4FF4FA70 		mov	r0, #500
 1321 0032 FFF7FEFF 		bl	HAL_Delay
 1322              	.LVL149:
 527:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1323              		.loc 1 527 0
 1324 0036 49F64242 		movw	r2, #40002
 1325 003a 0B49     		ldr	r1, .L102+8
 1326 003c 0B4B     		ldr	r3, .L102+12
 1327 003e 1868     		ldr	r0, [r3]
 1328 0040 FFF7FEFF 		bl	Flash_Write
 1329              	.LVL150:
 528:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1330              		.loc 1 528 0
 1331 0044 4FF49671 		mov	r1, #300
 1332 0048 4C20     		movs	r0, #76
 1333 004a FFF7FEFF 		bl	Tim_BuzzerPwm
 1334              	.LVL151:
 529:Src/mode.c    ****     HAL_Delay(200);
 1335              		.loc 1 529 0
 1336 004e C820     		movs	r0, #200
 1337 0050 FFF7FEFF 		bl	HAL_Delay
 1338              	.LVL152:
 530:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1339              		.loc 1 530 0
 1340 0054 2146     		mov	r1, r4
 1341 0056 0A20     		movs	r0, #10
 1342 0058 FFF7FEFF 		bl	Tim_BuzzerPwm
 1343              	.LVL153:
 531:Src/mode.c    **** }
 1344              		.loc 1 531 0
 1345 005c 38BD     		pop	{r3, r4, r5, pc}
 1346              	.L103:
 1347 005e 00BF     		.align	2
 1348              	.L102:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 35


 1349 0060 00000000 		.word	enc
 1350 0064 00000000 		.word	motor_flag
 1351 0068 00000000 		.word	loger
 1352 006c 00000000 		.word	start_address
 1353              		.cfi_endproc
 1354              	.LFE133:
 1356              		.section	.text.CheckFastStraight,"ax",%progbits
 1357              		.align	1
 1358              		.global	CheckFastStraight
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1362              		.fpu fpv4-sp-d16
 1364              	CheckFastStraight:
 1365              	.LFB134:
 532:Src/mode.c    **** 
 533:Src/mode.c    **** void CheckFastStraight(uint8_t block)
 534:Src/mode.c    **** {
 1366              		.loc 1 534 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              	.LVL154:
 1371 0000 38B5     		push	{r3, r4, r5, lr}
 1372              	.LCFI17:
 1373              		.cfi_def_cfa_offset 16
 1374              		.cfi_offset 3, -16
 1375              		.cfi_offset 4, -12
 1376              		.cfi_offset 5, -8
 1377              		.cfi_offset 14, -4
 1378 0002 0546     		mov	r5, r0
 535:Src/mode.c    ****     SetRunMode();
 1379              		.loc 1 535 0
 1380 0004 FFF7FEFF 		bl	SetRunMode
 1381              	.LVL155:
 536:Src/mode.c    ****     enc.distance = 0;
 1382              		.loc 1 536 0
 1383 0008 1D4B     		ldr	r3, .L108
 1384 000a 0022     		movs	r2, #0
 1385 000c 1A60     		str	r2, [r3]	@ float
 537:Src/mode.c    ****     Motion_FastStart(0, 800.0f);
 1386              		.loc 1 537 0
 1387 000e 9FED1D0A 		vldr.32	s0, .L108+4
 1388 0012 0020     		movs	r0, #0
 1389 0014 FFF7FEFF 		bl	Motion_FastStart
 1390              	.LVL156:
 1391              	.LBB5:
 538:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1392              		.loc 1 538 0
 1393 0018 0024     		movs	r4, #0
 1394 001a 08E0     		b	.L105
 1395              	.LVL157:
 1396              	.L106:
 539:Src/mode.c    ****     {
 540:Src/mode.c    ****         Motion_FastStraight(2, 800.0f, 800.0f);
 1397              		.loc 1 540 0 discriminator 3
 1398 001c 9FED190A 		vldr.32	s0, .L108+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 36


 1399 0020 F0EE400A 		vmov.f32	s1, s0
 1400 0024 0220     		movs	r0, #2
 1401 0026 FFF7FEFF 		bl	Motion_FastStraight
 1402              	.LVL158:
 538:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1403              		.loc 1 538 0 discriminator 3
 1404 002a 0134     		adds	r4, r4, #1
 1405              	.LVL159:
 1406 002c E4B2     		uxtb	r4, r4
 1407              	.LVL160:
 1408              	.L105:
 538:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1409              		.loc 1 538 0 is_stmt 0 discriminator 1
 1410 002e AC42     		cmp	r4, r5
 1411 0030 F4D3     		bcc	.L106
 1412              	.LBE5:
 541:Src/mode.c    ****     }
 542:Src/mode.c    ****     Motion_Adjust(800.0f, 1);
 1413              		.loc 1 542 0 is_stmt 1
 1414 0032 B7EE000A 		vmov.f32	s0, #1.0e+0
 1415 0036 4FF44870 		mov	r0, #800
 1416 003a FFF7FEFF 		bl	Motion_Adjust
 1417              	.LVL161:
 543:Src/mode.c    ****     Motion_FastGoal(0, 800.0f);
 1418              		.loc 1 543 0
 1419 003e 9FED110A 		vldr.32	s0, .L108+4
 1420 0042 0020     		movs	r0, #0
 1421 0044 FFF7FEFF 		bl	Motion_FastGoal
 1422              	.LVL162:
 544:Src/mode.c    ****     motor_flag = FALSE;
 1423              		.loc 1 544 0
 1424 0048 0024     		movs	r4, #0
 1425              	.LVL163:
 1426 004a 0F4B     		ldr	r3, .L108+8
 1427 004c 1C70     		strb	r4, [r3]
 545:Src/mode.c    ****     HAL_Delay(500);
 1428              		.loc 1 545 0
 1429 004e 4FF4FA70 		mov	r0, #500
 1430 0052 FFF7FEFF 		bl	HAL_Delay
 1431              	.LVL164:
 546:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1432              		.loc 1 546 0
 1433 0056 49F64242 		movw	r2, #40002
 1434 005a 0C49     		ldr	r1, .L108+12
 1435 005c 0C4B     		ldr	r3, .L108+16
 1436 005e 1868     		ldr	r0, [r3]
 1437 0060 FFF7FEFF 		bl	Flash_Write
 1438              	.LVL165:
 547:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1439              		.loc 1 547 0
 1440 0064 4FF49671 		mov	r1, #300
 1441 0068 4C20     		movs	r0, #76
 1442 006a FFF7FEFF 		bl	Tim_BuzzerPwm
 1443              	.LVL166:
 548:Src/mode.c    ****     HAL_Delay(200);
 1444              		.loc 1 548 0
 1445 006e C820     		movs	r0, #200
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 37


 1446 0070 FFF7FEFF 		bl	HAL_Delay
 1447              	.LVL167:
 549:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1448              		.loc 1 549 0
 1449 0074 2146     		mov	r1, r4
 1450 0076 0A20     		movs	r0, #10
 1451 0078 FFF7FEFF 		bl	Tim_BuzzerPwm
 1452              	.LVL168:
 550:Src/mode.c    **** }
 1453              		.loc 1 550 0
 1454 007c 38BD     		pop	{r3, r4, r5, pc}
 1455              	.L109:
 1456 007e 00BF     		.align	2
 1457              	.L108:
 1458 0080 00000000 		.word	enc
 1459 0084 00004844 		.word	1145569280
 1460 0088 00000000 		.word	motor_flag
 1461 008c 00000000 		.word	loger
 1462 0090 00000000 		.word	start_address
 1463              		.cfi_endproc
 1464              	.LFE134:
 1466              		.section	.text.CheckDiagonal,"ax",%progbits
 1467              		.align	1
 1468              		.global	CheckDiagonal
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1472              		.fpu fpv4-sp-d16
 1474              	CheckDiagonal:
 1475              	.LFB135:
 551:Src/mode.c    **** 
 552:Src/mode.c    **** void CheckDiagonal(uint8_t block)
 553:Src/mode.c    **** {
 1476              		.loc 1 553 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480              	.LVL169:
 1481 0000 10B5     		push	{r4, lr}
 1482              	.LCFI18:
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 4, -8
 1485              		.cfi_offset 14, -4
 1486 0002 0446     		mov	r4, r0
 554:Src/mode.c    ****     SetRunMode();
 1487              		.loc 1 554 0
 1488 0004 FFF7FEFF 		bl	SetRunMode
 1489              	.LVL170:
 555:Src/mode.c    ****     enc.distance = 0;
 1490              		.loc 1 555 0
 1491 0008 124B     		ldr	r3, .L112
 1492 000a 0022     		movs	r2, #0
 1493 000c 1A60     		str	r2, [r3]	@ float
 556:Src/mode.c    ****     Motion_DiagonalStart();
 1494              		.loc 1 556 0
 1495 000e FFF7FEFF 		bl	Motion_DiagonalStart
 1496              	.LVL171:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 38


 557:Src/mode.c    ****     Motion_DiagonalLeft(block);
 1497              		.loc 1 557 0
 1498 0012 2046     		mov	r0, r4
 1499 0014 FFF7FEFF 		bl	Motion_DiagonalLeft
 1500              	.LVL172:
 558:Src/mode.c    ****     Motion_DiagonalStop();
 1501              		.loc 1 558 0
 1502 0018 FFF7FEFF 		bl	Motion_DiagonalStop
 1503              	.LVL173:
 559:Src/mode.c    ****     motor_flag = FALSE;
 1504              		.loc 1 559 0
 1505 001c 0024     		movs	r4, #0
 1506 001e 0E4B     		ldr	r3, .L112+4
 1507 0020 1C70     		strb	r4, [r3]
 560:Src/mode.c    ****     HAL_Delay(500);
 1508              		.loc 1 560 0
 1509 0022 4FF4FA70 		mov	r0, #500
 1510 0026 FFF7FEFF 		bl	HAL_Delay
 1511              	.LVL174:
 561:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1512              		.loc 1 561 0
 1513 002a 49F64242 		movw	r2, #40002
 1514 002e 0B49     		ldr	r1, .L112+8
 1515 0030 0B4B     		ldr	r3, .L112+12
 1516 0032 1868     		ldr	r0, [r3]
 1517 0034 FFF7FEFF 		bl	Flash_Write
 1518              	.LVL175:
 562:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1519              		.loc 1 562 0
 1520 0038 4FF49671 		mov	r1, #300
 1521 003c 4C20     		movs	r0, #76
 1522 003e FFF7FEFF 		bl	Tim_BuzzerPwm
 1523              	.LVL176:
 563:Src/mode.c    ****     HAL_Delay(200);
 1524              		.loc 1 563 0
 1525 0042 C820     		movs	r0, #200
 1526 0044 FFF7FEFF 		bl	HAL_Delay
 1527              	.LVL177:
 564:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1528              		.loc 1 564 0
 1529 0048 2146     		mov	r1, r4
 1530 004a 0A20     		movs	r0, #10
 1531 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 1532              	.LVL178:
 565:Src/mode.c    **** }
 1533              		.loc 1 565 0
 1534 0050 10BD     		pop	{r4, pc}
 1535              	.L113:
 1536 0052 00BF     		.align	2
 1537              	.L112:
 1538 0054 00000000 		.word	enc
 1539 0058 00000000 		.word	motor_flag
 1540 005c 00000000 		.word	loger
 1541 0060 00000000 		.word	start_address
 1542              		.cfi_endproc
 1543              	.LFE135:
 1545              		.section	.text.CheckTurn,"ax",%progbits
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 39


 1546              		.align	1
 1547              		.global	CheckTurn
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1551              		.fpu fpv4-sp-d16
 1553              	CheckTurn:
 1554              	.LFB136:
 566:Src/mode.c    **** 
 567:Src/mode.c    **** void CheckTurn(uint8_t num)
 568:Src/mode.c    **** {
 1555              		.loc 1 568 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              	.LVL179:
 1560 0000 38B5     		push	{r3, r4, r5, lr}
 1561              	.LCFI19:
 1562              		.cfi_def_cfa_offset 16
 1563              		.cfi_offset 3, -16
 1564              		.cfi_offset 4, -12
 1565              		.cfi_offset 5, -8
 1566              		.cfi_offset 14, -4
 1567 0002 0546     		mov	r5, r0
 569:Src/mode.c    ****     SetRunMode();
 1568              		.loc 1 569 0
 1569 0004 FFF7FEFF 		bl	SetRunMode
 1570              	.LVL180:
 570:Src/mode.c    ****     gyro_z.degree = 0;
 1571              		.loc 1 570 0
 1572 0008 174B     		ldr	r3, .L118
 1573 000a 0022     		movs	r2, #0
 1574 000c 5A60     		str	r2, [r3, #4]	@ float
 1575              	.LVL181:
 1576              	.LBB6:
 571:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1577              		.loc 1 571 0
 1578 000e 0024     		movs	r4, #0
 1579 0010 03E0     		b	.L115
 1580              	.LVL182:
 1581              	.L116:
 572:Src/mode.c    ****     {
 573:Src/mode.c    ****         Motion_TestTurn();
 1582              		.loc 1 573 0 discriminator 3
 1583 0012 FFF7FEFF 		bl	Motion_TestTurn
 1584              	.LVL183:
 571:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1585              		.loc 1 571 0 discriminator 3
 1586 0016 0134     		adds	r4, r4, #1
 1587              	.LVL184:
 1588 0018 E4B2     		uxtb	r4, r4
 1589              	.LVL185:
 1590              	.L115:
 571:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1591              		.loc 1 571 0 is_stmt 0 discriminator 1
 1592 001a AC42     		cmp	r4, r5
 1593 001c F9D3     		bcc	.L116
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 40


 1594              	.LBE6:
 574:Src/mode.c    ****     }
 575:Src/mode.c    ****     motor_flag = FALSE;
 1595              		.loc 1 575 0 is_stmt 1
 1596 001e 0024     		movs	r4, #0
 1597              	.LVL186:
 1598 0020 124B     		ldr	r3, .L118+4
 1599 0022 1C70     		strb	r4, [r3]
 576:Src/mode.c    ****     loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 1600              		.loc 1 576 0
 1601 0024 104B     		ldr	r3, .L118
 1602 0026 D3ED017A 		vldr.32	s15, [r3, #4]
 1603 002a 1149     		ldr	r1, .L118+8
 1604 002c 0B88     		ldrh	r3, [r1]
 1605 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 1606 0032 03F56A53 		add	r3, r3, #14976
 1607 0036 1833     		adds	r3, r3, #24
 1608 0038 01EB4303 		add	r3, r1, r3, lsl #1
 1609 003c 17EE902A 		vmov	r2, s15	@ int
 1610 0040 5A80     		strh	r2, [r3, #2]	@ movhi
 577:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1611              		.loc 1 577 0
 1612 0042 49F64242 		movw	r2, #40002
 1613 0046 0B4B     		ldr	r3, .L118+12
 1614 0048 1868     		ldr	r0, [r3]
 1615 004a FFF7FEFF 		bl	Flash_Write
 1616              	.LVL187:
 578:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1617              		.loc 1 578 0
 1618 004e 4FF49671 		mov	r1, #300
 1619 0052 4C20     		movs	r0, #76
 1620 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 1621              	.LVL188:
 579:Src/mode.c    ****     HAL_Delay(200);
 1622              		.loc 1 579 0
 1623 0058 C820     		movs	r0, #200
 1624 005a FFF7FEFF 		bl	HAL_Delay
 1625              	.LVL189:
 580:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1626              		.loc 1 580 0
 1627 005e 2146     		mov	r1, r4
 1628 0060 0A20     		movs	r0, #10
 1629 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 1630              	.LVL190:
 581:Src/mode.c    **** }
 1631              		.loc 1 581 0
 1632 0066 38BD     		pop	{r3, r4, r5, pc}
 1633              	.L119:
 1634              		.align	2
 1635              	.L118:
 1636 0068 00000000 		.word	gyro_z
 1637 006c 00000000 		.word	motor_flag
 1638 0070 00000000 		.word	loger
 1639 0074 00000000 		.word	start_address
 1640              		.cfi_endproc
 1641              	.LFE136:
 1643              		.section	.text.PrintOutPut,"ax",%progbits
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 41


 1644              		.align	1
 1645              		.global	PrintOutPut
 1646              		.syntax unified
 1647              		.thumb
 1648              		.thumb_func
 1649              		.fpu fpv4-sp-d16
 1651              	PrintOutPut:
 1652              	.LFB137:
 582:Src/mode.c    **** 
 583:Src/mode.c    **** void PrintOutPut(void)
 584:Src/mode.c    **** {
 1653              		.loc 1 584 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 1657 0000 30B5     		push	{r4, r5, lr}
 1658              	.LCFI20:
 1659              		.cfi_def_cfa_offset 12
 1660              		.cfi_offset 4, -12
 1661              		.cfi_offset 5, -8
 1662              		.cfi_offset 14, -4
 1663 0002 83B0     		sub	sp, sp, #12
 1664              	.LCFI21:
 1665              		.cfi_def_cfa_offset 24
 585:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1666              		.loc 1 585 0
 1667 0004 49F64242 		movw	r2, #40002
 1668 0008 1649     		ldr	r1, .L124
 1669 000a 174B     		ldr	r3, .L124+4
 1670 000c 1868     		ldr	r0, [r3]
 1671 000e FFF7FEFF 		bl	Flash_Load
 1672              	.LVL191:
 1673              	.LBB7:
 586:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1674              		.loc 1 586 0
 1675 0012 0024     		movs	r4, #0
 1676 0014 1FE0     		b	.L121
 1677              	.LVL192:
 1678              	.L122:
 587:Src/mode.c    ****     {
 588:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 589:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 590:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
 1679              		.loc 1 590 0 discriminator 3
 1680 0016 1348     		ldr	r0, .L124
 1681 0018 00EB4403 		add	r3, r0, r4, lsl #1
 1682 001c B3F90210 		ldrsh	r1, [r3, #2]
 1683 0020 04F51C53 		add	r3, r4, #9984
 1684 0024 1033     		adds	r3, r3, #16
 1685 0026 00EB4303 		add	r3, r0, r3, lsl #1
 1686 002a B3F90220 		ldrsh	r2, [r3, #2]
 1687 002e 04F59C53 		add	r3, r4, #4992
 1688 0032 0833     		adds	r3, r3, #8
 1689 0034 00EB4303 		add	r3, r0, r3, lsl #1
 1690 0038 B3F90230 		ldrsh	r3, [r3, #2]
 1691 003c 04F56A55 		add	r5, r4, #14976
 1692 0040 1835     		adds	r5, r5, #24
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 42


 1693 0042 00EB4500 		add	r0, r0, r5, lsl #1
 1694 0046 B0F90200 		ldrsh	r0, [r0, #2]
 1695 004a 0090     		str	r0, [sp]
 1696 004c 0748     		ldr	r0, .L124+8
 1697 004e FFF7FEFF 		bl	printf
 1698              	.LVL193:
 586:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1699              		.loc 1 586 0 discriminator 3
 1700 0052 0134     		adds	r4, r4, #1
 1701              	.LVL194:
 1702 0054 A4B2     		uxth	r4, r4
 1703              	.LVL195:
 1704              	.L121:
 586:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1705              		.loc 1 586 0 is_stmt 0 discriminator 1
 1706 0056 034B     		ldr	r3, .L124
 1707 0058 1B88     		ldrh	r3, [r3]
 1708 005a A342     		cmp	r3, r4
 1709 005c DBD2     		bcs	.L122
 1710              	.LBE7:
 591:Src/mode.c    ****     }
 592:Src/mode.c    **** }
 1711              		.loc 1 592 0 is_stmt 1
 1712 005e 03B0     		add	sp, sp, #12
 1713              	.LCFI22:
 1714              		.cfi_def_cfa_offset 12
 1715              		@ sp needed
 1716 0060 30BD     		pop	{r4, r5, pc}
 1717              	.LVL196:
 1718              	.L125:
 1719 0062 00BF     		.align	2
 1720              	.L124:
 1721 0064 00000000 		.word	loger
 1722 0068 00000000 		.word	start_address
 1723 006c 00000000 		.word	.LC2
 1724              		.cfi_endproc
 1725              	.LFE137:
 1727              		.section	.text.PrintWallData,"ax",%progbits
 1728              		.align	1
 1729              		.global	PrintWallData
 1730              		.syntax unified
 1731              		.thumb
 1732              		.thumb_func
 1733              		.fpu fpv4-sp-d16
 1735              	PrintWallData:
 1736              	.LFB138:
 593:Src/mode.c    **** 
 594:Src/mode.c    **** void PrintWallData(void)
 595:Src/mode.c    **** {
 1737              		.loc 1 595 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 136
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 1741 0000 30B5     		push	{r4, r5, lr}
 1742              	.LCFI23:
 1743              		.cfi_def_cfa_offset 12
 1744              		.cfi_offset 4, -12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 43


 1745              		.cfi_offset 5, -8
 1746              		.cfi_offset 14, -4
 1747 0002 A3B0     		sub	sp, sp, #140
 1748              	.LCFI24:
 1749              		.cfi_def_cfa_offset 152
 596:Src/mode.c    ****     wallData_t walldata;
 597:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&walldata, sizeof(wallData_t));
 1750              		.loc 1 597 0
 1751 0004 8822     		movs	r2, #136
 1752 0006 6946     		mov	r1, sp
 1753 0008 2C4B     		ldr	r3, .L143
 1754 000a 1868     		ldr	r0, [r3]
 1755 000c FFF7FEFF 		bl	Flash_Load
 1756              	.LVL197:
 598:Src/mode.c    ****     printf("\r\n");
 1757              		.loc 1 598 0
 1758 0010 2B48     		ldr	r0, .L143+4
 1759 0012 FFF7FEFF 		bl	puts
 1760              	.LVL198:
 1761              	.LBB8:
 599:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1762              		.loc 1 599 0
 1763 0016 0024     		movs	r4, #0
 1764 0018 07E0     		b	.L127
 1765              	.LVL199:
 1766              	.L128:
 600:Src/mode.c    ****     {
 601:Src/mode.c    ****         printf("+");
 1767              		.loc 1 601 0 discriminator 3
 1768 001a 2B20     		movs	r0, #43
 1769 001c FFF7FEFF 		bl	putchar
 1770              	.LVL200:
 602:Src/mode.c    ****         printf("---");
 1771              		.loc 1 602 0 discriminator 3
 1772 0020 2848     		ldr	r0, .L143+8
 1773 0022 FFF7FEFF 		bl	printf
 1774              	.LVL201:
 599:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1775              		.loc 1 599 0 discriminator 3
 1776 0026 0134     		adds	r4, r4, #1
 1777              	.LVL202:
 1778 0028 E4B2     		uxtb	r4, r4
 1779              	.LVL203:
 1780              	.L127:
 599:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1781              		.loc 1 599 0 is_stmt 0 discriminator 1
 1782 002a 0F2C     		cmp	r4, #15
 1783 002c F5D9     		bls	.L128
 1784              	.LBE8:
 603:Src/mode.c    ****     }
 604:Src/mode.c    ****     printf("+\r\n");
 1785              		.loc 1 604 0 is_stmt 1
 1786 002e 2648     		ldr	r0, .L143+12
 1787 0030 FFF7FEFF 		bl	puts
 1788              	.LVL204:
 1789              	.LBB9:
 605:Src/mode.c    ****     for (unsigned char j = MAZE_SIZE; j > 0; j--)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 44


 1790              		.loc 1 605 0
 1791 0034 1025     		movs	r5, #16
 1792 0036 3CE0     		b	.L129
 1793              	.LVL205:
 1794              	.L130:
 1795              	.LBB10:
 606:Src/mode.c    ****     {
 607:Src/mode.c    ****         for (unsigned char i = 0; i < MAZE_SIZE; i++)
 608:Src/mode.c    ****         {
 609:Src/mode.c    ****             if (walldata.vertical[i] & 0b1 << (j - 1))
 610:Src/mode.c    ****             {
 611:Src/mode.c    ****                 printf("|");
 612:Src/mode.c    ****             }
 613:Src/mode.c    ****             else
 614:Src/mode.c    ****             {
 615:Src/mode.c    ****                 printf(" ");
 1796              		.loc 1 615 0
 1797 0038 2020     		movs	r0, #32
 1798 003a FFF7FEFF 		bl	putchar
 1799              	.LVL206:
 1800              	.L131:
 616:Src/mode.c    ****             }
 617:Src/mode.c    ****             printf("   ");
 1801              		.loc 1 617 0 discriminator 2
 1802 003e 2348     		ldr	r0, .L143+16
 1803 0040 FFF7FEFF 		bl	printf
 1804              	.LVL207:
 607:Src/mode.c    ****         {
 1805              		.loc 1 607 0 discriminator 2
 1806 0044 0134     		adds	r4, r4, #1
 1807              	.LVL208:
 1808 0046 E4B2     		uxtb	r4, r4
 1809              	.LVL209:
 1810              	.L137:
 607:Src/mode.c    ****         {
 1811              		.loc 1 607 0 is_stmt 0 discriminator 1
 1812 0048 0F2C     		cmp	r4, #15
 1813 004a 0DD8     		bhi	.L140
 609:Src/mode.c    ****             {
 1814              		.loc 1 609 0 is_stmt 1
 1815 004c 22AB     		add	r3, sp, #136
 1816 004e 03EB4403 		add	r3, r3, r4, lsl #1
 1817 0052 33F8883C 		ldrh	r3, [r3, #-136]
 1818 0056 6A1E     		subs	r2, r5, #1
 1819 0058 1341     		asrs	r3, r3, r2
 1820 005a 13F0010F 		tst	r3, #1
 1821 005e EBD0     		beq	.L130
 611:Src/mode.c    ****             }
 1822              		.loc 1 611 0
 1823 0060 7C20     		movs	r0, #124
 1824 0062 FFF7FEFF 		bl	putchar
 1825              	.LVL210:
 1826 0066 EAE7     		b	.L131
 1827              	.L140:
 1828              	.LBE10:
 618:Src/mode.c    ****         }
 619:Src/mode.c    ****         printf("|");
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 45


 1829              		.loc 1 619 0
 1830 0068 7C20     		movs	r0, #124
 1831 006a FFF7FEFF 		bl	putchar
 1832              	.LVL211:
 620:Src/mode.c    ****         printf("\r\n");
 1833              		.loc 1 620 0
 1834 006e 1448     		ldr	r0, .L143+4
 1835 0070 FFF7FEFF 		bl	puts
 1836              	.LVL212:
 1837              	.LBB11:
 621:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1838              		.loc 1 621 0
 1839 0074 0024     		movs	r4, #0
 1840              	.LVL213:
 1841 0076 03E0     		b	.L133
 1842              	.LVL214:
 1843              	.L134:
 622:Src/mode.c    ****         {
 623:Src/mode.c    ****             printf("+");
 624:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 625:Src/mode.c    ****             {
 626:Src/mode.c    ****                 printf("---");
 627:Src/mode.c    ****             }
 628:Src/mode.c    ****             else
 629:Src/mode.c    ****             {
 630:Src/mode.c    ****                 printf("   ");
 1844              		.loc 1 630 0
 1845 0078 1448     		ldr	r0, .L143+16
 1846 007a FFF7FEFF 		bl	printf
 1847              	.LVL215:
 1848              	.L135:
 621:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1849              		.loc 1 621 0 discriminator 2
 1850 007e 0134     		adds	r4, r4, #1
 1851              	.LVL216:
 1852              	.L133:
 621:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1853              		.loc 1 621 0 is_stmt 0 discriminator 1
 1854 0080 0F2C     		cmp	r4, #15
 1855 0082 11D8     		bhi	.L141
 623:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 1856              		.loc 1 623 0 is_stmt 1
 1857 0084 2B20     		movs	r0, #43
 1858 0086 FFF7FEFF 		bl	putchar
 1859              	.LVL217:
 624:Src/mode.c    ****             {
 1860              		.loc 1 624 0
 1861 008a 05F10F03 		add	r3, r5, #15
 1862 008e 22AA     		add	r2, sp, #136
 1863 0090 02EB4303 		add	r3, r2, r3, lsl #1
 1864 0094 33F8863C 		ldrh	r3, [r3, #-134]
 1865 0098 2341     		asrs	r3, r3, r4
 1866 009a 13F0010F 		tst	r3, #1
 1867 009e EBD0     		beq	.L134
 626:Src/mode.c    ****             }
 1868              		.loc 1 626 0
 1869 00a0 0848     		ldr	r0, .L143+8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 46


 1870 00a2 FFF7FEFF 		bl	printf
 1871              	.LVL218:
 1872 00a6 EAE7     		b	.L135
 1873              	.L141:
 1874              	.LBE11:
 631:Src/mode.c    ****             }
 632:Src/mode.c    ****         }
 633:Src/mode.c    ****         printf("+\r\n");
 1875              		.loc 1 633 0 discriminator 2
 1876 00a8 0748     		ldr	r0, .L143+12
 1877 00aa FFF7FEFF 		bl	puts
 1878              	.LVL219:
 605:Src/mode.c    ****     {
 1879              		.loc 1 605 0 discriminator 2
 1880 00ae 013D     		subs	r5, r5, #1
 1881              	.LVL220:
 1882 00b0 EDB2     		uxtb	r5, r5
 1883              	.LVL221:
 1884              	.L129:
 605:Src/mode.c    ****     {
 1885              		.loc 1 605 0 is_stmt 0 discriminator 1
 1886 00b2 0DB1     		cbz	r5, .L142
 1887              	.LBB12:
 607:Src/mode.c    ****         {
 1888              		.loc 1 607 0 is_stmt 1
 1889 00b4 0024     		movs	r4, #0
 1890 00b6 C7E7     		b	.L137
 1891              	.L142:
 1892              	.LBE12:
 1893              	.LBE9:
 634:Src/mode.c    ****     }
 635:Src/mode.c    **** }
 1894              		.loc 1 635 0
 1895 00b8 23B0     		add	sp, sp, #140
 1896              	.LCFI25:
 1897              		.cfi_def_cfa_offset 12
 1898              		@ sp needed
 1899 00ba 30BD     		pop	{r4, r5, pc}
 1900              	.LVL222:
 1901              	.L144:
 1902              		.align	2
 1903              	.L143:
 1904 00bc 00000000 		.word	start_address
 1905 00c0 00000000 		.word	.LC3
 1906 00c4 04000000 		.word	.LC4
 1907 00c8 08000000 		.word	.LC5
 1908 00cc 0C000000 		.word	.LC6
 1909              		.cfi_endproc
 1910              	.LFE138:
 1912              		.section	.text.PrintMotion,"ax",%progbits
 1913              		.align	1
 1914              		.global	PrintMotion
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu fpv4-sp-d16
 1920              	PrintMotion:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 47


 1921              	.LFB139:
 636:Src/mode.c    **** 
 637:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail)
 638:Src/mode.c    **** {
 1922              		.loc 1 638 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 0
 1925              		@ frame_needed = 0, uses_anonymous_args = 0
 1926              	.LVL223:
 1927 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1928              	.LCFI26:
 1929              		.cfi_def_cfa_offset 24
 1930              		.cfi_offset 3, -24
 1931              		.cfi_offset 4, -20
 1932              		.cfi_offset 5, -16
 1933              		.cfi_offset 6, -12
 1934              		.cfi_offset 7, -8
 1935              		.cfi_offset 14, -4
 1936 0002 0646     		mov	r6, r0
 1937 0004 0F46     		mov	r7, r1
 1938 0006 1546     		mov	r5, r2
 1939              	.LVL224:
 639:Src/mode.c    ****     uint8_t head = 0;
 1940              		.loc 1 639 0
 1941 0008 0024     		movs	r4, #0
 640:Src/mode.c    ****     while (head < tail)
 1942              		.loc 1 640 0
 1943 000a 09E0     		b	.L146
 1944              	.LVL225:
 1945              	.L152:
 641:Src/mode.c    ****     {
 642:Src/mode.c    ****         switch (motion[head] & 0xf)
 643:Src/mode.c    ****         {
 644:Src/mode.c    ****         case START:
 645:Src/mode.c    ****             printf("\r\nSTART:%d\tv_start:%ld\tv_end:%ld\r\n", motion[head] >> 4, velocity[head] >>
 1946              		.loc 1 645 0
 1947 000c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 1948 0010 93B2     		uxth	r3, r2
 1949 0012 120C     		lsrs	r2, r2, #16
 1950 0014 0909     		lsrs	r1, r1, #4
 1951 0016 7648     		ldr	r0, .L180
 1952 0018 FFF7FEFF 		bl	printf
 1953              	.LVL226:
 1954              	.L156:
 646:Src/mode.c    ****             break;
 647:Src/mode.c    ****         case LEFT:
 648:Src/mode.c    ****             switch (motion[head] >> 4)
 649:Src/mode.c    ****             {
 650:Src/mode.c    ****             case SEARCH:
 651:Src/mode.c    ****                 printf("LEFT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 652:Src/mode.c    ****                 break;
 653:Src/mode.c    ****             case T_90:
 654:Src/mode.c    ****                 printf("LEFT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[head
 655:Src/mode.c    ****                 break;
 656:Src/mode.c    ****             case T_180:
 657:Src/mode.c    ****                 printf("LEFT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 658:Src/mode.c    ****                 break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 48


 659:Src/mode.c    ****             case T_45IN:
 660:Src/mode.c    ****                 printf("LEFT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 661:Src/mode.c    ****                 break;
 662:Src/mode.c    ****             case T_45OUT:
 663:Src/mode.c    ****                 printf("LEFT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 664:Src/mode.c    ****                 break;
 665:Src/mode.c    ****             case T_135IN:
 666:Src/mode.c    ****                 printf("LEFT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 667:Src/mode.c    ****                 break;
 668:Src/mode.c    ****             case T_135OUT:
 669:Src/mode.c    ****                 printf("LEFT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 670:Src/mode.c    ****                 break;
 671:Src/mode.c    ****             case T_V90:
 672:Src/mode.c    ****                 printf("LEFT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 673:Src/mode.c    ****                 break;
 674:Src/mode.c    ****             default:
 675:Src/mode.c    ****                 printf("\r\n");
 676:Src/mode.c    ****                 break;
 677:Src/mode.c    ****             }
 678:Src/mode.c    ****             break;
 679:Src/mode.c    ****         case RIGHT:
 680:Src/mode.c    ****             switch (motion[head] >> 4)
 681:Src/mode.c    ****             {
 682:Src/mode.c    ****             case SEARCH:
 683:Src/mode.c    ****                 printf("RIGHT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 684:Src/mode.c    ****                 break;
 685:Src/mode.c    ****             case T_90:
 686:Src/mode.c    ****                 printf("RIGHT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 687:Src/mode.c    ****                 break;
 688:Src/mode.c    ****             case T_180:
 689:Src/mode.c    ****                 printf("RIGHT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 690:Src/mode.c    ****                 break;
 691:Src/mode.c    ****             case T_45IN:
 692:Src/mode.c    ****                 printf("RIGHT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 693:Src/mode.c    ****                 break;
 694:Src/mode.c    ****             case T_45OUT:
 695:Src/mode.c    ****                 printf("RIGHT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 696:Src/mode.c    ****                 break;
 697:Src/mode.c    ****             case T_135IN:
 698:Src/mode.c    ****                 printf("RIGHT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 699:Src/mode.c    ****                 break;
 700:Src/mode.c    ****             case T_135OUT:
 701:Src/mode.c    ****                 printf("RIGHT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity
 702:Src/mode.c    ****                 break;
 703:Src/mode.c    ****             case T_V90:
 704:Src/mode.c    ****                 printf("RIGHT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 705:Src/mode.c    ****                 break;
 706:Src/mode.c    ****             default:
 707:Src/mode.c    ****                 printf("\r\n");
 708:Src/mode.c    ****                 break;
 709:Src/mode.c    ****             }
 710:Src/mode.c    ****             break;
 711:Src/mode.c    ****         case FRONT:
 712:Src/mode.c    ****             printf("FRONT:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16,
 713:Src/mode.c    ****             break;
 714:Src/mode.c    ****         case DIAGONAL:
 715:Src/mode.c    ****             printf("DIAGONAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 49


 716:Src/mode.c    ****             break;
 717:Src/mode.c    ****         case GOAL:
 718:Src/mode.c    ****             printf("GOAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16, 
 719:Src/mode.c    ****             break;
 720:Src/mode.c    ****         case ADJUST:
 721:Src/mode.c    ****             printf("ADJUST:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16
 722:Src/mode.c    ****             break;
 723:Src/mode.c    ****         default:
 724:Src/mode.c    ****             printf("\r\n");
 725:Src/mode.c    ****             break;
 726:Src/mode.c    ****         }
 727:Src/mode.c    ****         head++;
 1955              		.loc 1 727 0
 1956 001c 0134     		adds	r4, r4, #1
 1957              	.LVL227:
 1958 001e E4B2     		uxtb	r4, r4
 1959              	.LVL228:
 1960              	.L146:
 640:Src/mode.c    ****     {
 1961              		.loc 1 640 0
 1962 0020 AC42     		cmp	r4, r5
 1963 0022 80F0E380 		bcs	.L179
 642:Src/mode.c    ****         {
 1964              		.loc 1 642 0
 1965 0026 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 1966 002a 01F00F03 		and	r3, r1, #15
 1967 002e 0A2B     		cmp	r3, #10
 1968 0030 00F2D880 		bhi	.L147
 1969 0034 01A0     		adr	r0, .L149
 1970 0036 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 1971 003a 00BF     		.p2align 2
 1972              	.L149:
 1973 003c 9D010000 		.word	.L148+1
 1974 0040 69000000 		.word	.L150+1
 1975 0044 03010000 		.word	.L151+1
 1976 0048 E5010000 		.word	.L147+1
 1977 004c E5010000 		.word	.L147+1
 1978 0050 0D000000 		.word	.L152+1
 1979 0054 C1010000 		.word	.L153+1
 1980 0058 AF010000 		.word	.L154+1
 1981 005c E5010000 		.word	.L147+1
 1982 0060 E5010000 		.word	.L147+1
 1983 0064 D3010000 		.word	.L155+1
 1984              		.p2align 1
 1985              	.L150:
 648:Src/mode.c    ****             {
 1986              		.loc 1 648 0
 1987 0068 0909     		lsrs	r1, r1, #4
 1988 006a 0729     		cmp	r1, #7
 1989 006c 45D8     		bhi	.L157
 1990 006e DFE801F0 		tbb	[pc, r1]
 1991              	.L159:
 1992 0072 04       		.byte	(.L158-.L159)/2
 1993 0073 1C       		.byte	(.L160-.L159)/2
 1994 0074 2C       		.byte	(.L161-.L159)/2
 1995 0075 0C       		.byte	(.L162-.L159)/2
 1996 0076 14       		.byte	(.L163-.L159)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 50


 1997 0077 24       		.byte	(.L164-.L159)/2
 1998 0078 34       		.byte	(.L165-.L159)/2
 1999 0079 3C       		.byte	(.L166-.L159)/2
 2000              		.p2align 1
 2001              	.L158:
 651:Src/mode.c    ****                 break;
 2002              		.loc 1 651 0
 2003 007a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2004 007e 8AB2     		uxth	r2, r1
 2005 0080 090C     		lsrs	r1, r1, #16
 2006 0082 5C48     		ldr	r0, .L180+4
 2007 0084 FFF7FEFF 		bl	printf
 2008              	.LVL229:
 652:Src/mode.c    ****             case T_90:
 2009              		.loc 1 652 0
 2010 0088 C8E7     		b	.L156
 2011              	.L162:
 654:Src/mode.c    ****                 break;
 2012              		.loc 1 654 0
 2013 008a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2014 008e 8AB2     		uxth	r2, r1
 2015 0090 090C     		lsrs	r1, r1, #16
 2016 0092 5948     		ldr	r0, .L180+8
 2017 0094 FFF7FEFF 		bl	printf
 2018              	.LVL230:
 655:Src/mode.c    ****             case T_180:
 2019              		.loc 1 655 0
 2020 0098 C0E7     		b	.L156
 2021              	.L163:
 657:Src/mode.c    ****                 break;
 2022              		.loc 1 657 0
 2023 009a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2024 009e 8AB2     		uxth	r2, r1
 2025 00a0 090C     		lsrs	r1, r1, #16
 2026 00a2 5648     		ldr	r0, .L180+12
 2027 00a4 FFF7FEFF 		bl	printf
 2028              	.LVL231:
 658:Src/mode.c    ****             case T_45IN:
 2029              		.loc 1 658 0
 2030 00a8 B8E7     		b	.L156
 2031              	.L160:
 660:Src/mode.c    ****                 break;
 2032              		.loc 1 660 0
 2033 00aa 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2034 00ae 8AB2     		uxth	r2, r1
 2035 00b0 090C     		lsrs	r1, r1, #16
 2036 00b2 5348     		ldr	r0, .L180+16
 2037 00b4 FFF7FEFF 		bl	printf
 2038              	.LVL232:
 661:Src/mode.c    ****             case T_45OUT:
 2039              		.loc 1 661 0
 2040 00b8 B0E7     		b	.L156
 2041              	.L164:
 663:Src/mode.c    ****                 break;
 2042              		.loc 1 663 0
 2043 00ba 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2044 00be 8AB2     		uxth	r2, r1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 51


 2045 00c0 090C     		lsrs	r1, r1, #16
 2046 00c2 5048     		ldr	r0, .L180+20
 2047 00c4 FFF7FEFF 		bl	printf
 2048              	.LVL233:
 664:Src/mode.c    ****             case T_135IN:
 2049              		.loc 1 664 0
 2050 00c8 A8E7     		b	.L156
 2051              	.L161:
 666:Src/mode.c    ****                 break;
 2052              		.loc 1 666 0
 2053 00ca 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2054 00ce 8AB2     		uxth	r2, r1
 2055 00d0 090C     		lsrs	r1, r1, #16
 2056 00d2 4D48     		ldr	r0, .L180+24
 2057 00d4 FFF7FEFF 		bl	printf
 2058              	.LVL234:
 667:Src/mode.c    ****             case T_135OUT:
 2059              		.loc 1 667 0
 2060 00d8 A0E7     		b	.L156
 2061              	.L165:
 669:Src/mode.c    ****                 break;
 2062              		.loc 1 669 0
 2063 00da 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2064 00de 8AB2     		uxth	r2, r1
 2065 00e0 090C     		lsrs	r1, r1, #16
 2066 00e2 4A48     		ldr	r0, .L180+28
 2067 00e4 FFF7FEFF 		bl	printf
 2068              	.LVL235:
 670:Src/mode.c    ****             case T_V90:
 2069              		.loc 1 670 0
 2070 00e8 98E7     		b	.L156
 2071              	.L166:
 672:Src/mode.c    ****                 break;
 2072              		.loc 1 672 0
 2073 00ea 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2074 00ee 8AB2     		uxth	r2, r1
 2075 00f0 090C     		lsrs	r1, r1, #16
 2076 00f2 4748     		ldr	r0, .L180+32
 2077 00f4 FFF7FEFF 		bl	printf
 2078              	.LVL236:
 673:Src/mode.c    ****             default:
 2079              		.loc 1 673 0
 2080 00f8 90E7     		b	.L156
 2081              	.L157:
 675:Src/mode.c    ****                 break;
 2082              		.loc 1 675 0
 2083 00fa 4648     		ldr	r0, .L180+36
 2084 00fc FFF7FEFF 		bl	puts
 2085              	.LVL237:
 676:Src/mode.c    ****             }
 2086              		.loc 1 676 0
 2087 0100 8CE7     		b	.L156
 2088              	.L151:
 680:Src/mode.c    ****             {
 2089              		.loc 1 680 0
 2090 0102 0909     		lsrs	r1, r1, #4
 2091 0104 0729     		cmp	r1, #7
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 52


 2092 0106 45D8     		bhi	.L167
 2093 0108 DFE801F0 		tbb	[pc, r1]
 2094              	.L169:
 2095 010c 04       		.byte	(.L168-.L169)/2
 2096 010d 1C       		.byte	(.L170-.L169)/2
 2097 010e 2C       		.byte	(.L171-.L169)/2
 2098 010f 0C       		.byte	(.L172-.L169)/2
 2099 0110 14       		.byte	(.L173-.L169)/2
 2100 0111 24       		.byte	(.L174-.L169)/2
 2101 0112 34       		.byte	(.L175-.L169)/2
 2102 0113 3C       		.byte	(.L176-.L169)/2
 2103              		.p2align 1
 2104              	.L168:
 683:Src/mode.c    ****                 break;
 2105              		.loc 1 683 0
 2106 0114 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2107 0118 8AB2     		uxth	r2, r1
 2108 011a 090C     		lsrs	r1, r1, #16
 2109 011c 3E48     		ldr	r0, .L180+40
 2110 011e FFF7FEFF 		bl	printf
 2111              	.LVL238:
 684:Src/mode.c    ****             case T_90:
 2112              		.loc 1 684 0
 2113 0122 7BE7     		b	.L156
 2114              	.L172:
 686:Src/mode.c    ****                 break;
 2115              		.loc 1 686 0
 2116 0124 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2117 0128 8AB2     		uxth	r2, r1
 2118 012a 090C     		lsrs	r1, r1, #16
 2119 012c 3B48     		ldr	r0, .L180+44
 2120 012e FFF7FEFF 		bl	printf
 2121              	.LVL239:
 687:Src/mode.c    ****             case T_180:
 2122              		.loc 1 687 0
 2123 0132 73E7     		b	.L156
 2124              	.L173:
 689:Src/mode.c    ****                 break;
 2125              		.loc 1 689 0
 2126 0134 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2127 0138 8AB2     		uxth	r2, r1
 2128 013a 090C     		lsrs	r1, r1, #16
 2129 013c 3848     		ldr	r0, .L180+48
 2130 013e FFF7FEFF 		bl	printf
 2131              	.LVL240:
 690:Src/mode.c    ****             case T_45IN:
 2132              		.loc 1 690 0
 2133 0142 6BE7     		b	.L156
 2134              	.L170:
 692:Src/mode.c    ****                 break;
 2135              		.loc 1 692 0
 2136 0144 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2137 0148 8AB2     		uxth	r2, r1
 2138 014a 090C     		lsrs	r1, r1, #16
 2139 014c 3548     		ldr	r0, .L180+52
 2140 014e FFF7FEFF 		bl	printf
 2141              	.LVL241:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 53


 693:Src/mode.c    ****             case T_45OUT:
 2142              		.loc 1 693 0
 2143 0152 63E7     		b	.L156
 2144              	.L174:
 695:Src/mode.c    ****                 break;
 2145              		.loc 1 695 0
 2146 0154 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2147 0158 8AB2     		uxth	r2, r1
 2148 015a 090C     		lsrs	r1, r1, #16
 2149 015c 3248     		ldr	r0, .L180+56
 2150 015e FFF7FEFF 		bl	printf
 2151              	.LVL242:
 696:Src/mode.c    ****             case T_135IN:
 2152              		.loc 1 696 0
 2153 0162 5BE7     		b	.L156
 2154              	.L171:
 698:Src/mode.c    ****                 break;
 2155              		.loc 1 698 0
 2156 0164 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2157 0168 8AB2     		uxth	r2, r1
 2158 016a 090C     		lsrs	r1, r1, #16
 2159 016c 2F48     		ldr	r0, .L180+60
 2160 016e FFF7FEFF 		bl	printf
 2161              	.LVL243:
 699:Src/mode.c    ****             case T_135OUT:
 2162              		.loc 1 699 0
 2163 0172 53E7     		b	.L156
 2164              	.L175:
 701:Src/mode.c    ****                 break;
 2165              		.loc 1 701 0
 2166 0174 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2167 0178 8AB2     		uxth	r2, r1
 2168 017a 090C     		lsrs	r1, r1, #16
 2169 017c 2C48     		ldr	r0, .L180+64
 2170 017e FFF7FEFF 		bl	printf
 2171              	.LVL244:
 702:Src/mode.c    ****             case T_V90:
 2172              		.loc 1 702 0
 2173 0182 4BE7     		b	.L156
 2174              	.L176:
 704:Src/mode.c    ****                 break;
 2175              		.loc 1 704 0
 2176 0184 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2177 0188 8AB2     		uxth	r2, r1
 2178 018a 090C     		lsrs	r1, r1, #16
 2179 018c 2948     		ldr	r0, .L180+68
 2180 018e FFF7FEFF 		bl	printf
 2181              	.LVL245:
 705:Src/mode.c    ****             default:
 2182              		.loc 1 705 0
 2183 0192 43E7     		b	.L156
 2184              	.L167:
 707:Src/mode.c    ****                 break;
 2185              		.loc 1 707 0
 2186 0194 1F48     		ldr	r0, .L180+36
 2187 0196 FFF7FEFF 		bl	puts
 2188              	.LVL246:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 54


 708:Src/mode.c    ****             }
 2189              		.loc 1 708 0
 2190 019a 3FE7     		b	.L156
 2191              	.L148:
 712:Src/mode.c    ****             break;
 2192              		.loc 1 712 0
 2193 019c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2194 01a0 93B2     		uxth	r3, r2
 2195 01a2 120C     		lsrs	r2, r2, #16
 2196 01a4 0909     		lsrs	r1, r1, #4
 2197 01a6 2448     		ldr	r0, .L180+72
 2198 01a8 FFF7FEFF 		bl	printf
 2199              	.LVL247:
 713:Src/mode.c    ****         case DIAGONAL:
 2200              		.loc 1 713 0
 2201 01ac 36E7     		b	.L156
 2202              	.L154:
 715:Src/mode.c    ****             break;
 2203              		.loc 1 715 0
 2204 01ae 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2205 01b2 93B2     		uxth	r3, r2
 2206 01b4 120C     		lsrs	r2, r2, #16
 2207 01b6 0909     		lsrs	r1, r1, #4
 2208 01b8 2048     		ldr	r0, .L180+76
 2209 01ba FFF7FEFF 		bl	printf
 2210              	.LVL248:
 716:Src/mode.c    ****         case GOAL:
 2211              		.loc 1 716 0
 2212 01be 2DE7     		b	.L156
 2213              	.L153:
 718:Src/mode.c    ****             break;
 2214              		.loc 1 718 0
 2215 01c0 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2216 01c4 93B2     		uxth	r3, r2
 2217 01c6 120C     		lsrs	r2, r2, #16
 2218 01c8 0909     		lsrs	r1, r1, #4
 2219 01ca 1D48     		ldr	r0, .L180+80
 2220 01cc FFF7FEFF 		bl	printf
 2221              	.LVL249:
 719:Src/mode.c    ****         case ADJUST:
 2222              		.loc 1 719 0
 2223 01d0 24E7     		b	.L156
 2224              	.L155:
 721:Src/mode.c    ****             break;
 2225              		.loc 1 721 0
 2226 01d2 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2227 01d6 93B2     		uxth	r3, r2
 2228 01d8 120C     		lsrs	r2, r2, #16
 2229 01da 0909     		lsrs	r1, r1, #4
 2230 01dc 1948     		ldr	r0, .L180+84
 2231 01de FFF7FEFF 		bl	printf
 2232              	.LVL250:
 722:Src/mode.c    ****         default:
 2233              		.loc 1 722 0
 2234 01e2 1BE7     		b	.L156
 2235              	.L147:
 724:Src/mode.c    ****             break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 55


 2236              		.loc 1 724 0
 2237 01e4 0B48     		ldr	r0, .L180+36
 2238 01e6 FFF7FEFF 		bl	puts
 2239              	.LVL251:
 725:Src/mode.c    ****         }
 2240              		.loc 1 725 0
 2241 01ea 17E7     		b	.L156
 2242              	.L179:
 728:Src/mode.c    ****     }
 729:Src/mode.c    **** }
 2243              		.loc 1 729 0
 2244 01ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2245              	.LVL252:
 2246              	.L181:
 2247 01ee 00BF     		.align	2
 2248              	.L180:
 2249 01f0 00000000 		.word	.LC7
 2250 01f4 24000000 		.word	.LC8
 2251 01f8 48000000 		.word	.LC9
 2252 01fc 6C000000 		.word	.LC10
 2253 0200 90000000 		.word	.LC11
 2254 0204 B4000000 		.word	.LC12
 2255 0208 DC000000 		.word	.LC13
 2256 020c 04010000 		.word	.LC14
 2257 0210 2C010000 		.word	.LC15
 2258 0214 00000000 		.word	.LC3
 2259 0218 50010000 		.word	.LC16
 2260 021c 78010000 		.word	.LC17
 2261 0220 9C010000 		.word	.LC18
 2262 0224 C0010000 		.word	.LC19
 2263 0228 E8010000 		.word	.LC20
 2264 022c 10020000 		.word	.LC21
 2265 0230 38020000 		.word	.LC22
 2266 0234 60020000 		.word	.LC23
 2267 0238 84020000 		.word	.LC24
 2268 023c A8020000 		.word	.LC25
 2269 0240 CC020000 		.word	.LC26
 2270 0244 EC020000 		.word	.LC27
 2271              		.cfi_endproc
 2272              	.LFE139:
 2274              		.section	.text.AdjustStraight,"ax",%progbits
 2275              		.align	1
 2276              		.global	AdjustStraight
 2277              		.syntax unified
 2278              		.thumb
 2279              		.thumb_func
 2280              		.fpu fpv4-sp-d16
 2282              	AdjustStraight:
 2283              	.LFB140:
 730:Src/mode.c    **** 
 731:Src/mode.c    **** void AdjustStraight(void)
 732:Src/mode.c    **** {
 2284              		.loc 1 732 0
 2285              		.cfi_startproc
 2286              		@ args = 0, pretend = 0, frame = 0
 2287              		@ frame_needed = 0, uses_anonymous_args = 0
 2288 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 56


 2289              	.LCFI27:
 2290              		.cfi_def_cfa_offset 8
 2291              		.cfi_offset 3, -8
 2292              		.cfi_offset 14, -4
 733:Src/mode.c    ****     SetRunMode();
 2293              		.loc 1 733 0
 2294 0002 FFF7FEFF 		bl	SetRunMode
 2295              	.LVL253:
 734:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 2296              		.loc 1 734 0
 2297 0006 6021     		movs	r1, #96
 2298 0008 0846     		mov	r0, r1
 2299 000a FFF7FEFF 		bl	Tim_MotorPwm
 2300              	.LVL254:
 2301              	.L183:
 735:Src/mode.c    ****     while (motor_flag == TRUE)
 2302              		.loc 1 735 0 discriminator 1
 2303 000e 0E4B     		ldr	r3, .L185
 2304 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0012 DBB2     		uxtb	r3, r3
 2306 0014 012B     		cmp	r3, #1
 2307 0016 FAD0     		beq	.L183
 736:Src/mode.c    ****     {
 737:Src/mode.c    ****     }
 738:Src/mode.c    ****     HAL_Delay(500);
 2308              		.loc 1 738 0
 2309 0018 4FF4FA70 		mov	r0, #500
 2310 001c FFF7FEFF 		bl	HAL_Delay
 2311              	.LVL255:
 739:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2312              		.loc 1 739 0
 2313 0020 49F64242 		movw	r2, #40002
 2314 0024 0949     		ldr	r1, .L185+4
 2315 0026 0A4B     		ldr	r3, .L185+8
 2316 0028 1868     		ldr	r0, [r3]
 2317 002a FFF7FEFF 		bl	Flash_Write
 2318              	.LVL256:
 740:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2319              		.loc 1 740 0
 2320 002e 4FF49671 		mov	r1, #300
 2321 0032 4C20     		movs	r0, #76
 2322 0034 FFF7FEFF 		bl	Tim_BuzzerPwm
 2323              	.LVL257:
 741:Src/mode.c    ****     HAL_Delay(200);
 2324              		.loc 1 741 0
 2325 0038 C820     		movs	r0, #200
 2326 003a FFF7FEFF 		bl	HAL_Delay
 2327              	.LVL258:
 742:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2328              		.loc 1 742 0
 2329 003e 0021     		movs	r1, #0
 2330 0040 0A20     		movs	r0, #10
 2331 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 2332              	.LVL259:
 743:Src/mode.c    **** }
 2333              		.loc 1 743 0
 2334 0046 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 57


 2335              	.L186:
 2336              		.align	2
 2337              	.L185:
 2338 0048 00000000 		.word	motor_flag
 2339 004c 00000000 		.word	loger
 2340 0050 00000000 		.word	start_address
 2341              		.cfi_endproc
 2342              	.LFE140:
 2344              		.section	.text.AdjustTurn,"ax",%progbits
 2345              		.align	1
 2346              		.global	AdjustTurn
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2350              		.fpu fpv4-sp-d16
 2352              	AdjustTurn:
 2353              	.LFB141:
 744:Src/mode.c    **** 
 745:Src/mode.c    **** void AdjustTurn(void)
 746:Src/mode.c    **** {
 2354              		.loc 1 746 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 0
 2357              		@ frame_needed = 0, uses_anonymous_args = 0
 2358 0000 08B5     		push	{r3, lr}
 2359              	.LCFI28:
 2360              		.cfi_def_cfa_offset 8
 2361              		.cfi_offset 3, -8
 2362              		.cfi_offset 14, -4
 747:Src/mode.c    ****     SetRunMode();
 2363              		.loc 1 747 0
 2364 0002 FFF7FEFF 		bl	SetRunMode
 2365              	.LVL260:
 748:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 2366              		.loc 1 748 0
 2367 0006 B421     		movs	r1, #180
 2368 0008 6FF0B300 		mvn	r0, #179
 2369 000c FFF7FEFF 		bl	Tim_MotorPwm
 2370              	.LVL261:
 2371              	.L188:
 749:Src/mode.c    ****     while (motor_flag == TRUE)
 2372              		.loc 1 749 0 discriminator 1
 2373 0010 0E4B     		ldr	r3, .L190
 2374 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2375 0014 DBB2     		uxtb	r3, r3
 2376 0016 012B     		cmp	r3, #1
 2377 0018 FAD0     		beq	.L188
 750:Src/mode.c    ****     {
 751:Src/mode.c    ****     }
 752:Src/mode.c    ****     HAL_Delay(500);
 2378              		.loc 1 752 0
 2379 001a 4FF4FA70 		mov	r0, #500
 2380 001e FFF7FEFF 		bl	HAL_Delay
 2381              	.LVL262:
 753:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2382              		.loc 1 753 0
 2383 0022 49F64242 		movw	r2, #40002
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 58


 2384 0026 0A49     		ldr	r1, .L190+4
 2385 0028 0A4B     		ldr	r3, .L190+8
 2386 002a 1868     		ldr	r0, [r3]
 2387 002c FFF7FEFF 		bl	Flash_Write
 2388              	.LVL263:
 754:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2389              		.loc 1 754 0
 2390 0030 4FF49671 		mov	r1, #300
 2391 0034 4C20     		movs	r0, #76
 2392 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 2393              	.LVL264:
 755:Src/mode.c    ****     HAL_Delay(200);
 2394              		.loc 1 755 0
 2395 003a C820     		movs	r0, #200
 2396 003c FFF7FEFF 		bl	HAL_Delay
 2397              	.LVL265:
 756:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2398              		.loc 1 756 0
 2399 0040 0021     		movs	r1, #0
 2400 0042 0A20     		movs	r0, #10
 2401 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 2402              	.LVL266:
 757:Src/mode.c    **** }
 2403              		.loc 1 757 0
 2404 0048 08BD     		pop	{r3, pc}
 2405              	.L191:
 2406 004a 00BF     		.align	2
 2407              	.L190:
 2408 004c 00000000 		.word	motor_flag
 2409 0050 00000000 		.word	loger
 2410 0054 00000000 		.word	start_address
 2411              		.cfi_endproc
 2412              	.LFE141:
 2414              		.section	.text.Circuit,"ax",%progbits
 2415              		.align	1
 2416              		.global	Circuit
 2417              		.syntax unified
 2418              		.thumb
 2419              		.thumb_func
 2420              		.fpu fpv4-sp-d16
 2422              	Circuit:
 2423              	.LFB142:
 758:Src/mode.c    **** 
 759:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 760:Src/mode.c    **** {
 2424              		.loc 1 760 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 0
 2427              		@ frame_needed = 0, uses_anonymous_args = 0
 2428              	.LVL267:
 2429 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2430              	.LCFI29:
 2431              		.cfi_def_cfa_offset 24
 2432              		.cfi_offset 4, -24
 2433              		.cfi_offset 5, -20
 2434              		.cfi_offset 6, -16
 2435              		.cfi_offset 7, -12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 59


 2436              		.cfi_offset 8, -8
 2437              		.cfi_offset 14, -4
 2438 0004 0746     		mov	r7, r0
 2439 0006 0E46     		mov	r6, r1
 2440 0008 9046     		mov	r8, r2
 2441 000a 1D46     		mov	r5, r3
 761:Src/mode.c    ****     Motion_Start();
 2442              		.loc 1 761 0
 2443 000c FFF7FEFF 		bl	Motion_Start
 2444              	.LVL268:
 2445              	.LBB13:
 762:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2446              		.loc 1 762 0
 2447 0010 0024     		movs	r4, #0
 2448 0012 1AE0     		b	.L193
 2449              	.LVL269:
 2450              	.L210:
 763:Src/mode.c    ****     {
 764:Src/mode.c    ****         if (row > 1)
 765:Src/mode.c    ****         {
 766:Src/mode.c    ****             Motion_Straight(1);
 2451              		.loc 1 766 0
 2452 0014 0120     		movs	r0, #1
 2453 0016 FFF7FEFF 		bl	Motion_Straight
 2454              	.LVL270:
 2455 001a 1AE0     		b	.L194
 2456              	.L211:
 767:Src/mode.c    ****         }
 768:Src/mode.c    **** 
 769:Src/mode.c    ****         if (dir == 1)
 770:Src/mode.c    ****         {
 771:Src/mode.c    ****             Motion_LeftTurn();
 2457              		.loc 1 771 0
 2458 001c FFF7FEFF 		bl	Motion_LeftTurn
 2459              	.LVL271:
 2460 0020 1BE0     		b	.L196
 2461              	.L212:
 772:Src/mode.c    ****         }
 773:Src/mode.c    ****         else
 774:Src/mode.c    ****         {
 775:Src/mode.c    ****             Motion_RightTurn();
 776:Src/mode.c    ****         }
 777:Src/mode.c    **** 
 778:Src/mode.c    ****         if (colum > 1)
 779:Src/mode.c    ****         {
 780:Src/mode.c    ****             Motion_Straight(1);
 2462              		.loc 1 780 0
 2463 0022 0120     		movs	r0, #1
 2464 0024 FFF7FEFF 		bl	Motion_Straight
 2465              	.LVL272:
 2466 0028 19E0     		b	.L197
 2467              	.L213:
 781:Src/mode.c    ****         }
 782:Src/mode.c    **** 
 783:Src/mode.c    ****         if (dir == 1)
 784:Src/mode.c    ****         {
 785:Src/mode.c    ****             Motion_LeftTurn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 60


 2468              		.loc 1 785 0
 2469 002a FFF7FEFF 		bl	Motion_LeftTurn
 2470              	.LVL273:
 2471 002e 1AE0     		b	.L199
 2472              	.L214:
 786:Src/mode.c    ****         }
 787:Src/mode.c    ****         else
 788:Src/mode.c    ****         {
 789:Src/mode.c    ****             Motion_RightTurn();
 790:Src/mode.c    ****         }
 791:Src/mode.c    **** 
 792:Src/mode.c    ****         if (row > 1)
 793:Src/mode.c    ****         {
 794:Src/mode.c    ****             Motion_Straight(1);
 2473              		.loc 1 794 0
 2474 0030 0120     		movs	r0, #1
 2475 0032 FFF7FEFF 		bl	Motion_Straight
 2476              	.LVL274:
 2477 0036 18E0     		b	.L200
 2478              	.L215:
 795:Src/mode.c    ****         }
 796:Src/mode.c    **** 
 797:Src/mode.c    ****         if (dir == 1)
 798:Src/mode.c    ****         {
 799:Src/mode.c    ****             Motion_LeftTurn();
 2479              		.loc 1 799 0
 2480 0038 FFF7FEFF 		bl	Motion_LeftTurn
 2481              	.LVL275:
 2482 003c 19E0     		b	.L202
 2483              	.L203:
 800:Src/mode.c    ****         }
 801:Src/mode.c    ****         else
 802:Src/mode.c    ****         {
 803:Src/mode.c    ****             Motion_RightTurn();
 804:Src/mode.c    ****         }
 805:Src/mode.c    **** 
 806:Src/mode.c    ****         if (colum > 1)
 807:Src/mode.c    ****         {
 808:Src/mode.c    ****             Motion_Straight(1);
 809:Src/mode.c    ****         }
 810:Src/mode.c    ****         if (dir == 1)
 2484              		.loc 1 810 0
 2485 003e 012D     		cmp	r5, #1
 2486 0040 1DD0     		beq	.L208
 811:Src/mode.c    ****         {
 812:Src/mode.c    ****             Motion_LeftTurn();
 813:Src/mode.c    ****         }
 814:Src/mode.c    ****         else
 815:Src/mode.c    ****         {
 816:Src/mode.c    ****             Motion_RightTurn();
 2487              		.loc 1 816 0
 2488 0042 FFF7FEFF 		bl	Motion_RightTurn
 2489              	.LVL276:
 2490              	.L205:
 762:Src/mode.c    ****     {
 2491              		.loc 1 762 0 discriminator 2
 2492 0046 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 61


 2493              	.LVL277:
 2494 0048 E4B2     		uxtb	r4, r4
 2495              	.LVL278:
 2496              	.L193:
 762:Src/mode.c    ****     {
 2497              		.loc 1 762 0 is_stmt 0 discriminator 1
 2498 004a 4445     		cmp	r4, r8
 2499 004c 1AD2     		bcs	.L209
 764:Src/mode.c    ****         {
 2500              		.loc 1 764 0 is_stmt 1
 2501 004e 012F     		cmp	r7, #1
 2502 0050 E0D8     		bhi	.L210
 2503              	.L194:
 769:Src/mode.c    ****         {
 2504              		.loc 1 769 0
 2505 0052 012D     		cmp	r5, #1
 2506 0054 E2D0     		beq	.L211
 775:Src/mode.c    ****         }
 2507              		.loc 1 775 0
 2508 0056 FFF7FEFF 		bl	Motion_RightTurn
 2509              	.LVL279:
 2510              	.L196:
 778:Src/mode.c    ****         {
 2511              		.loc 1 778 0
 2512 005a 012E     		cmp	r6, #1
 2513 005c E1D8     		bhi	.L212
 2514              	.L197:
 783:Src/mode.c    ****         {
 2515              		.loc 1 783 0
 2516 005e 012D     		cmp	r5, #1
 2517 0060 E3D0     		beq	.L213
 789:Src/mode.c    ****         }
 2518              		.loc 1 789 0
 2519 0062 FFF7FEFF 		bl	Motion_RightTurn
 2520              	.LVL280:
 2521              	.L199:
 792:Src/mode.c    ****         {
 2522              		.loc 1 792 0
 2523 0066 012F     		cmp	r7, #1
 2524 0068 E2D8     		bhi	.L214
 2525              	.L200:
 797:Src/mode.c    ****         {
 2526              		.loc 1 797 0
 2527 006a 012D     		cmp	r5, #1
 2528 006c E4D0     		beq	.L215
 803:Src/mode.c    ****         }
 2529              		.loc 1 803 0
 2530 006e FFF7FEFF 		bl	Motion_RightTurn
 2531              	.LVL281:
 2532              	.L202:
 806:Src/mode.c    ****         {
 2533              		.loc 1 806 0
 2534 0072 012E     		cmp	r6, #1
 2535 0074 E3D9     		bls	.L203
 808:Src/mode.c    ****         }
 2536              		.loc 1 808 0
 2537 0076 0120     		movs	r0, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 62


 2538 0078 FFF7FEFF 		bl	Motion_Straight
 2539              	.LVL282:
 2540 007c DFE7     		b	.L203
 2541              	.L208:
 812:Src/mode.c    ****         }
 2542              		.loc 1 812 0
 2543 007e FFF7FEFF 		bl	Motion_LeftTurn
 2544              	.LVL283:
 2545 0082 E0E7     		b	.L205
 2546              	.L209:
 2547              	.LBE13:
 817:Src/mode.c    ****         }
 818:Src/mode.c    ****     }
 819:Src/mode.c    ****     Motion_End();
 2548              		.loc 1 819 0
 2549 0084 FFF7FEFF 		bl	Motion_End
 2550              	.LVL284:
 820:Src/mode.c    ****     motor_flag = FALSE;
 2551              		.loc 1 820 0
 2552 0088 024B     		ldr	r3, .L216
 2553 008a 0022     		movs	r2, #0
 2554 008c 1A70     		strb	r2, [r3]
 821:Src/mode.c    **** }
 2555              		.loc 1 821 0
 2556 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2557              	.LVL285:
 2558              	.L217:
 2559 0092 00BF     		.align	2
 2560              	.L216:
 2561 0094 00000000 		.word	motor_flag
 2562              		.cfi_endproc
 2563              	.LFE142:
 2565              		.section	.text.Turn45_Test,"ax",%progbits
 2566              		.align	1
 2567              		.global	Turn45_Test
 2568              		.syntax unified
 2569              		.thumb
 2570              		.thumb_func
 2571              		.fpu fpv4-sp-d16
 2573              	Turn45_Test:
 2574              	.LFB143:
 822:Src/mode.c    **** 
 823:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
 824:Src/mode.c    **** {
 2575              		.loc 1 824 0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 0
 2578              		@ frame_needed = 0, uses_anonymous_args = 0
 2579              	.LVL286:
 2580 0000 70B5     		push	{r4, r5, r6, lr}
 2581              	.LCFI30:
 2582              		.cfi_def_cfa_offset 16
 2583              		.cfi_offset 4, -16
 2584              		.cfi_offset 5, -12
 2585              		.cfi_offset 6, -8
 2586              		.cfi_offset 14, -4
 2587 0002 2DED028B 		vpush.64	{d8}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 63


 2588              	.LCFI31:
 2589              		.cfi_def_cfa_offset 24
 2590              		.cfi_offset 80, -24
 2591              		.cfi_offset 81, -20
 2592 0006 0546     		mov	r5, r0
 2593 0008 0C46     		mov	r4, r1
 2594 000a 1646     		mov	r6, r2
 825:Src/mode.c    ****     SetRunMode();
 2595              		.loc 1 825 0
 2596 000c FFF7FEFF 		bl	SetRunMode
 2597              	.LVL287:
 826:Src/mode.c    **** 
 827:Src/mode.c    ****     switch (in_dir)
 2598              		.loc 1 827 0
 2599 0010 012D     		cmp	r5, #1
 2600 0012 2CD0     		beq	.L220
 2601 0014 45B3     		cbz	r5, .L221
 2602 0016 022D     		cmp	r5, #2
 2603 0018 31D0     		beq	.L222
 2604              	.L219:
 828:Src/mode.c    ****     {
 829:Src/mode.c    ****     case FRONT:
 830:Src/mode.c    ****         Motion_DiagonalStart();
 831:Src/mode.c    ****         break;
 832:Src/mode.c    ****     case LEFT:
 833:Src/mode.c    ****         Motion_FastStart(2, VELO_F);
 834:Src/mode.c    ****         Motion_InLeft45Turn();
 835:Src/mode.c    ****         break;
 836:Src/mode.c    ****     case RIGHT:
 837:Src/mode.c    ****         Motion_FastStart(2, VELO_F);
 838:Src/mode.c    ****         Motion_InRight45Turn();
 839:Src/mode.c    ****         break;
 840:Src/mode.c    ****     default:
 841:Src/mode.c    ****         break;
 842:Src/mode.c    ****     }
 843:Src/mode.c    **** 
 844:Src/mode.c    ****     if (step > 0)
 2605              		.loc 1 844 0
 2606 001a C6BB     		cbnz	r6, .L229
 2607              	.L223:
 845:Src/mode.c    ****     {
 846:Src/mode.c    ****         Motion_Diagonal(step);
 847:Src/mode.c    ****     }
 848:Src/mode.c    **** 
 849:Src/mode.c    ****     switch (out_dir)
 2608              		.loc 1 849 0
 2609 001c 012C     		cmp	r4, #1
 2610 001e 3DD0     		beq	.L225
 2611 0020 CCB3     		cbz	r4, .L226
 2612 0022 022C     		cmp	r4, #2
 2613 0024 46D0     		beq	.L227
 2614              	.L224:
 850:Src/mode.c    ****     {
 851:Src/mode.c    ****     case FRONT:
 852:Src/mode.c    ****         Motion_DiagonalStop();
 853:Src/mode.c    ****         break;
 854:Src/mode.c    ****     case LEFT:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 64


 855:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 856:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 857:Src/mode.c    ****         break;
 858:Src/mode.c    ****     case RIGHT:
 859:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
 860:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 861:Src/mode.c    ****         break;
 862:Src/mode.c    ****     default:
 863:Src/mode.c    ****         break;
 864:Src/mode.c    ****     }
 865:Src/mode.c    **** 
 866:Src/mode.c    ****     motor_flag = FALSE;
 2615              		.loc 1 866 0
 2616 0026 0024     		movs	r4, #0
 2617 0028 284B     		ldr	r3, .L230
 2618 002a 1C70     		strb	r4, [r3]
 867:Src/mode.c    ****     HAL_Delay(500);
 2619              		.loc 1 867 0
 2620 002c 4FF4FA70 		mov	r0, #500
 2621 0030 FFF7FEFF 		bl	HAL_Delay
 2622              	.LVL288:
 868:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2623              		.loc 1 868 0
 2624 0034 49F64242 		movw	r2, #40002
 2625 0038 2549     		ldr	r1, .L230+4
 2626 003a 264B     		ldr	r3, .L230+8
 2627 003c 1868     		ldr	r0, [r3]
 2628 003e FFF7FEFF 		bl	Flash_Write
 2629              	.LVL289:
 869:Src/mode.c    ****     HAL_Delay(300);
 2630              		.loc 1 869 0
 2631 0042 4FF49670 		mov	r0, #300
 2632 0046 FFF7FEFF 		bl	HAL_Delay
 2633              	.LVL290:
 870:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2634              		.loc 1 870 0
 2635 004a 4FF49671 		mov	r1, #300
 2636 004e 4C20     		movs	r0, #76
 2637 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 2638              	.LVL291:
 871:Src/mode.c    ****     HAL_Delay(200);
 2639              		.loc 1 871 0
 2640 0054 C820     		movs	r0, #200
 2641 0056 FFF7FEFF 		bl	HAL_Delay
 2642              	.LVL292:
 872:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2643              		.loc 1 872 0
 2644 005a 2146     		mov	r1, r4
 2645 005c 0A20     		movs	r0, #10
 2646 005e FFF7FEFF 		bl	Tim_BuzzerPwm
 2647              	.LVL293:
 873:Src/mode.c    **** }
 2648              		.loc 1 873 0
 2649 0062 BDEC028B 		vldm	sp!, {d8}
 2650              	.LCFI32:
 2651              		.cfi_remember_state
 2652              		.cfi_restore 80
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 65


 2653              		.cfi_restore 81
 2654              		.cfi_def_cfa_offset 16
 2655 0066 70BD     		pop	{r4, r5, r6, pc}
 2656              	.L221:
 2657              	.LCFI33:
 2658              		.cfi_restore_state
 830:Src/mode.c    ****         break;
 2659              		.loc 1 830 0
 2660 0068 FFF7FEFF 		bl	Motion_DiagonalStart
 2661              	.LVL294:
 831:Src/mode.c    ****     case LEFT:
 2662              		.loc 1 831 0
 2663 006c D5E7     		b	.L219
 2664              	.L220:
 833:Src/mode.c    ****         Motion_InLeft45Turn();
 2665              		.loc 1 833 0
 2666 006e 9FED1A0A 		vldr.32	s0, .L230+12
 2667 0072 0220     		movs	r0, #2
 2668 0074 FFF7FEFF 		bl	Motion_FastStart
 2669              	.LVL295:
 834:Src/mode.c    ****         break;
 2670              		.loc 1 834 0
 2671 0078 FFF7FEFF 		bl	Motion_InLeft45Turn
 2672              	.LVL296:
 835:Src/mode.c    ****     case RIGHT:
 2673              		.loc 1 835 0
 2674 007c CDE7     		b	.L219
 2675              	.L222:
 837:Src/mode.c    ****         Motion_InRight45Turn();
 2676              		.loc 1 837 0
 2677 007e 9FED160A 		vldr.32	s0, .L230+12
 2678 0082 0220     		movs	r0, #2
 2679 0084 FFF7FEFF 		bl	Motion_FastStart
 2680              	.LVL297:
 838:Src/mode.c    ****         break;
 2681              		.loc 1 838 0
 2682 0088 FFF7FEFF 		bl	Motion_InRight45Turn
 2683              	.LVL298:
 839:Src/mode.c    ****     default:
 2684              		.loc 1 839 0
 2685 008c C5E7     		b	.L219
 2686              	.L229:
 846:Src/mode.c    ****     }
 2687              		.loc 1 846 0
 2688 008e 3046     		mov	r0, r6
 2689 0090 FFF7FEFF 		bl	Motion_Diagonal
 2690              	.LVL299:
 2691 0094 C2E7     		b	.L223
 2692              	.L226:
 852:Src/mode.c    ****         break;
 2693              		.loc 1 852 0
 2694 0096 FFF7FEFF 		bl	Motion_DiagonalStop
 2695              	.LVL300:
 853:Src/mode.c    ****     case LEFT:
 2696              		.loc 1 853 0
 2697 009a C4E7     		b	.L224
 2698              	.L225:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 66


 855:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2699              		.loc 1 855 0
 2700 009c 9FED0E8A 		vldr.32	s16, .L230+12
 2701 00a0 B0EE480A 		vmov.f32	s0, s16
 2702 00a4 FFF7FEFF 		bl	Motion_OutLeft45Turn
 2703              	.LVL301:
 856:Src/mode.c    ****         break;
 2704              		.loc 1 856 0
 2705 00a8 B0EE480A 		vmov.f32	s0, s16
 2706 00ac 0120     		movs	r0, #1
 2707 00ae FFF7FEFF 		bl	Motion_FastGoal
 2708              	.LVL302:
 857:Src/mode.c    ****     case RIGHT:
 2709              		.loc 1 857 0
 2710 00b2 B8E7     		b	.L224
 2711              	.L227:
 859:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2712              		.loc 1 859 0
 2713 00b4 9FED088A 		vldr.32	s16, .L230+12
 2714 00b8 B0EE480A 		vmov.f32	s0, s16
 2715 00bc FFF7FEFF 		bl	Motion_OutRight45Turn
 2716              	.LVL303:
 860:Src/mode.c    ****         break;
 2717              		.loc 1 860 0
 2718 00c0 B0EE480A 		vmov.f32	s0, s16
 2719 00c4 0120     		movs	r0, #1
 2720 00c6 FFF7FEFF 		bl	Motion_FastGoal
 2721              	.LVL304:
 861:Src/mode.c    ****     default:
 2722              		.loc 1 861 0
 2723 00ca ACE7     		b	.L224
 2724              	.L231:
 2725              		.align	2
 2726              	.L230:
 2727 00cc 00000000 		.word	motor_flag
 2728 00d0 00000000 		.word	loger
 2729 00d4 00000000 		.word	start_address
 2730 00d8 00004844 		.word	1145569280
 2731              		.cfi_endproc
 2732              	.LFE143:
 2734              		.section	.text.Turn135_Test,"ax",%progbits
 2735              		.align	1
 2736              		.global	Turn135_Test
 2737              		.syntax unified
 2738              		.thumb
 2739              		.thumb_func
 2740              		.fpu fpv4-sp-d16
 2742              	Turn135_Test:
 2743              	.LFB144:
 874:Src/mode.c    **** 
 875:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
 876:Src/mode.c    **** {
 2744              		.loc 1 876 0
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 0
 2747              		@ frame_needed = 0, uses_anonymous_args = 0
 2748              	.LVL305:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 67


 2749 0000 70B5     		push	{r4, r5, r6, lr}
 2750              	.LCFI34:
 2751              		.cfi_def_cfa_offset 16
 2752              		.cfi_offset 4, -16
 2753              		.cfi_offset 5, -12
 2754              		.cfi_offset 6, -8
 2755              		.cfi_offset 14, -4
 2756 0002 2DED028B 		vpush.64	{d8}
 2757              	.LCFI35:
 2758              		.cfi_def_cfa_offset 24
 2759              		.cfi_offset 80, -24
 2760              		.cfi_offset 81, -20
 2761 0006 0546     		mov	r5, r0
 2762 0008 0C46     		mov	r4, r1
 2763 000a 1646     		mov	r6, r2
 877:Src/mode.c    ****     SetRunMode();
 2764              		.loc 1 877 0
 2765 000c FFF7FEFF 		bl	SetRunMode
 2766              	.LVL306:
 878:Src/mode.c    **** 
 879:Src/mode.c    ****     switch (in_dir)
 2767              		.loc 1 879 0
 2768 0010 012D     		cmp	r5, #1
 2769 0012 2ED0     		beq	.L234
 2770 0014 55B3     		cbz	r5, .L235
 2771 0016 022D     		cmp	r5, #2
 2772 0018 3DD0     		beq	.L236
 2773              	.L233:
 880:Src/mode.c    ****     {
 881:Src/mode.c    ****     case FRONT:
 882:Src/mode.c    ****         Motion_DiagonalStart();
 883:Src/mode.c    ****         break;
 884:Src/mode.c    ****     case LEFT:
 885:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
 886:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 887:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 888:Src/mode.c    ****         break;
 889:Src/mode.c    ****     case RIGHT:
 890:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
 891:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 892:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 893:Src/mode.c    ****         break;
 894:Src/mode.c    ****     default:
 895:Src/mode.c    ****         break;
 896:Src/mode.c    ****     }
 897:Src/mode.c    **** 
 898:Src/mode.c    ****     if (step > 0)
 2774              		.loc 1 898 0
 2775 001a 002E     		cmp	r6, #0
 2776 001c 4DD1     		bne	.L243
 2777              	.L237:
 899:Src/mode.c    ****     {
 900:Src/mode.c    ****         Motion_Diagonal(step);
 901:Src/mode.c    ****     }
 902:Src/mode.c    **** 
 903:Src/mode.c    ****     switch (out_dir)
 2778              		.loc 1 903 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 68


 2779 001e 012C     		cmp	r4, #1
 2780 0020 52D0     		beq	.L239
 2781 0022 002C     		cmp	r4, #0
 2782 0024 4DD0     		beq	.L240
 2783 0026 022C     		cmp	r4, #2
 2784 0028 5BD0     		beq	.L241
 2785              	.L238:
 904:Src/mode.c    ****     {
 905:Src/mode.c    ****     case FRONT:
 906:Src/mode.c    ****         Motion_DiagonalStop();
 907:Src/mode.c    ****         break;
 908:Src/mode.c    ****     case LEFT:
 909:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
 910:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 911:Src/mode.c    ****         break;
 912:Src/mode.c    ****     case RIGHT:
 913:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
 914:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 915:Src/mode.c    ****         break;
 916:Src/mode.c    ****     default:
 917:Src/mode.c    ****         break;
 918:Src/mode.c    ****     }
 919:Src/mode.c    **** 
 920:Src/mode.c    ****     motor_flag = FALSE;
 2786              		.loc 1 920 0
 2787 002a 0024     		movs	r4, #0
 2788 002c 334B     		ldr	r3, .L244
 2789 002e 1C70     		strb	r4, [r3]
 921:Src/mode.c    ****     HAL_Delay(500);
 2790              		.loc 1 921 0
 2791 0030 4FF4FA70 		mov	r0, #500
 2792 0034 FFF7FEFF 		bl	HAL_Delay
 2793              	.LVL307:
 922:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2794              		.loc 1 922 0
 2795 0038 49F64242 		movw	r2, #40002
 2796 003c 3049     		ldr	r1, .L244+4
 2797 003e 314B     		ldr	r3, .L244+8
 2798 0040 1868     		ldr	r0, [r3]
 2799 0042 FFF7FEFF 		bl	Flash_Write
 2800              	.LVL308:
 923:Src/mode.c    ****     HAL_Delay(300);
 2801              		.loc 1 923 0
 2802 0046 4FF49670 		mov	r0, #300
 2803 004a FFF7FEFF 		bl	HAL_Delay
 2804              	.LVL309:
 924:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2805              		.loc 1 924 0
 2806 004e 4FF49671 		mov	r1, #300
 2807 0052 4C20     		movs	r0, #76
 2808 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 2809              	.LVL310:
 925:Src/mode.c    ****     HAL_Delay(200);
 2810              		.loc 1 925 0
 2811 0058 C820     		movs	r0, #200
 2812 005a FFF7FEFF 		bl	HAL_Delay
 2813              	.LVL311:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 69


 926:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2814              		.loc 1 926 0
 2815 005e 2146     		mov	r1, r4
 2816 0060 0A20     		movs	r0, #10
 2817 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 2818              	.LVL312:
 927:Src/mode.c    **** }
 2819              		.loc 1 927 0
 2820 0066 BDEC028B 		vldm	sp!, {d8}
 2821              	.LCFI36:
 2822              		.cfi_remember_state
 2823              		.cfi_restore 80
 2824              		.cfi_restore 81
 2825              		.cfi_def_cfa_offset 16
 2826 006a 70BD     		pop	{r4, r5, r6, pc}
 2827              	.L235:
 2828              	.LCFI37:
 2829              		.cfi_restore_state
 882:Src/mode.c    ****         break;
 2830              		.loc 1 882 0
 2831 006c FFF7FEFF 		bl	Motion_DiagonalStart
 2832              	.LVL313:
 883:Src/mode.c    ****     case LEFT:
 2833              		.loc 1 883 0
 2834 0070 D3E7     		b	.L233
 2835              	.L234:
 885:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 2836              		.loc 1 885 0
 2837 0072 9FED258A 		vldr.32	s16, .L244+12
 2838 0076 B0EE480A 		vmov.f32	s0, s16
 2839 007a 0120     		movs	r0, #1
 2840 007c FFF7FEFF 		bl	Motion_FastStart
 2841              	.LVL314:
 886:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 2842              		.loc 1 886 0
 2843 0080 B0EE480A 		vmov.f32	s0, s16
 2844 0084 0120     		movs	r0, #1
 2845 0086 FFF7FEFF 		bl	Motion_Adjust
 2846              	.LVL315:
 887:Src/mode.c    ****         break;
 2847              		.loc 1 887 0
 2848 008a B0EE480A 		vmov.f32	s0, s16
 2849 008e 0220     		movs	r0, #2
 2850 0090 FFF7FEFF 		bl	Motion_FastLeftTurn
 2851              	.LVL316:
 888:Src/mode.c    ****     case RIGHT:
 2852              		.loc 1 888 0
 2853 0094 C1E7     		b	.L233
 2854              	.L236:
 890:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 2855              		.loc 1 890 0
 2856 0096 9FED1C8A 		vldr.32	s16, .L244+12
 2857 009a B0EE480A 		vmov.f32	s0, s16
 2858 009e 0120     		movs	r0, #1
 2859 00a0 FFF7FEFF 		bl	Motion_FastStart
 2860              	.LVL317:
 891:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 70


 2861              		.loc 1 891 0
 2862 00a4 B0EE480A 		vmov.f32	s0, s16
 2863 00a8 0120     		movs	r0, #1
 2864 00aa FFF7FEFF 		bl	Motion_Adjust
 2865              	.LVL318:
 892:Src/mode.c    ****         break;
 2866              		.loc 1 892 0
 2867 00ae B0EE480A 		vmov.f32	s0, s16
 2868 00b2 0220     		movs	r0, #2
 2869 00b4 FFF7FEFF 		bl	Motion_FastRightTurn
 2870              	.LVL319:
 893:Src/mode.c    ****     default:
 2871              		.loc 1 893 0
 2872 00b8 AFE7     		b	.L233
 2873              	.L243:
 900:Src/mode.c    ****     }
 2874              		.loc 1 900 0
 2875 00ba 3046     		mov	r0, r6
 2876 00bc FFF7FEFF 		bl	Motion_Diagonal
 2877              	.LVL320:
 2878 00c0 ADE7     		b	.L237
 2879              	.L240:
 906:Src/mode.c    ****         break;
 2880              		.loc 1 906 0
 2881 00c2 FFF7FEFF 		bl	Motion_DiagonalStop
 2882              	.LVL321:
 907:Src/mode.c    ****     case LEFT:
 2883              		.loc 1 907 0
 2884 00c6 B0E7     		b	.L238
 2885              	.L239:
 909:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2886              		.loc 1 909 0
 2887 00c8 9FED0F8A 		vldr.32	s16, .L244+12
 2888 00cc B0EE480A 		vmov.f32	s0, s16
 2889 00d0 0620     		movs	r0, #6
 2890 00d2 FFF7FEFF 		bl	Motion_FastLeftTurn
 2891              	.LVL322:
 910:Src/mode.c    ****         break;
 2892              		.loc 1 910 0
 2893 00d6 B0EE480A 		vmov.f32	s0, s16
 2894 00da 0120     		movs	r0, #1
 2895 00dc FFF7FEFF 		bl	Motion_FastGoal
 2896              	.LVL323:
 911:Src/mode.c    ****     case RIGHT:
 2897              		.loc 1 911 0
 2898 00e0 A3E7     		b	.L238
 2899              	.L241:
 913:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2900              		.loc 1 913 0
 2901 00e2 9FED098A 		vldr.32	s16, .L244+12
 2902 00e6 B0EE480A 		vmov.f32	s0, s16
 2903 00ea 0620     		movs	r0, #6
 2904 00ec FFF7FEFF 		bl	Motion_FastRightTurn
 2905              	.LVL324:
 914:Src/mode.c    ****         break;
 2906              		.loc 1 914 0
 2907 00f0 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 71


 2908 00f4 0120     		movs	r0, #1
 2909 00f6 FFF7FEFF 		bl	Motion_FastGoal
 2910              	.LVL325:
 915:Src/mode.c    ****     default:
 2911              		.loc 1 915 0
 2912 00fa 96E7     		b	.L238
 2913              	.L245:
 2914              		.align	2
 2915              	.L244:
 2916 00fc 00000000 		.word	motor_flag
 2917 0100 00000000 		.word	loger
 2918 0104 00000000 		.word	start_address
 2919 0108 00004844 		.word	1145569280
 2920              		.cfi_endproc
 2921              	.LFE144:
 2923              		.section	.text.TurnBig90_Test,"ax",%progbits
 2924              		.align	1
 2925              		.global	TurnBig90_Test
 2926              		.syntax unified
 2927              		.thumb
 2928              		.thumb_func
 2929              		.fpu fpv4-sp-d16
 2931              	TurnBig90_Test:
 2932              	.LFB145:
 928:Src/mode.c    **** 
 929:Src/mode.c    **** void TurnBig90_Test(int8_t dir)
 930:Src/mode.c    **** {
 2933              		.loc 1 930 0
 2934              		.cfi_startproc
 2935              		@ args = 0, pretend = 0, frame = 0
 2936              		@ frame_needed = 0, uses_anonymous_args = 0
 2937              	.LVL326:
 2938 0000 10B5     		push	{r4, lr}
 2939              	.LCFI38:
 2940              		.cfi_def_cfa_offset 8
 2941              		.cfi_offset 4, -8
 2942              		.cfi_offset 14, -4
 2943 0002 2DED028B 		vpush.64	{d8}
 2944              	.LCFI39:
 2945              		.cfi_def_cfa_offset 16
 2946              		.cfi_offset 80, -16
 2947              		.cfi_offset 81, -12
 2948 0006 0446     		mov	r4, r0
 931:Src/mode.c    ****     SetRunMode();
 2949              		.loc 1 931 0
 2950 0008 FFF7FEFF 		bl	SetRunMode
 2951              	.LVL327:
 932:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 2952              		.loc 1 932 0
 2953 000c 9FED188A 		vldr.32	s16, .L252
 2954 0010 B0EE480A 		vmov.f32	s0, s16
 2955 0014 0120     		movs	r0, #1
 2956 0016 FFF7FEFF 		bl	Motion_FastStart
 2957              	.LVL328:
 933:Src/mode.c    ****     Motion_Adjust(1,VELO_F);
 2958              		.loc 1 933 0
 2959 001a B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 72


 2960 001e 0120     		movs	r0, #1
 2961 0020 FFF7FEFF 		bl	Motion_Adjust
 2962              	.LVL329:
 934:Src/mode.c    ****     if (dir == LEFT)
 2963              		.loc 1 934 0
 2964 0024 012C     		cmp	r4, #1
 2965 0026 18D0     		beq	.L250
 935:Src/mode.c    ****     {
 936:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
 937:Src/mode.c    ****     }
 938:Src/mode.c    ****     else if (dir == RIGHT)
 2966              		.loc 1 938 0
 2967 0028 022C     		cmp	r4, #2
 2968 002a 1BD0     		beq	.L251
 2969              	.L248:
 939:Src/mode.c    ****     {
 940:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
 941:Src/mode.c    ****     }
 942:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 2970              		.loc 1 942 0
 2971 002c 9FED100A 		vldr.32	s0, .L252
 2972 0030 0120     		movs	r0, #1
 2973 0032 FFF7FEFF 		bl	Motion_FastGoal
 2974              	.LVL330:
 943:Src/mode.c    ****     motor_flag = FALSE;
 2975              		.loc 1 943 0
 2976 0036 0024     		movs	r4, #0
 2977 0038 0E4B     		ldr	r3, .L252+4
 2978 003a 1C70     		strb	r4, [r3]
 944:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2979              		.loc 1 944 0
 2980 003c 4FF49671 		mov	r1, #300
 2981 0040 4C20     		movs	r0, #76
 2982 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 2983              	.LVL331:
 945:Src/mode.c    ****     HAL_Delay(200);
 2984              		.loc 1 945 0
 2985 0046 C820     		movs	r0, #200
 2986 0048 FFF7FEFF 		bl	HAL_Delay
 2987              	.LVL332:
 946:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2988              		.loc 1 946 0
 2989 004c 2146     		mov	r1, r4
 2990 004e 0A20     		movs	r0, #10
 2991 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 2992              	.LVL333:
 947:Src/mode.c    **** }
 2993              		.loc 1 947 0
 2994 0054 BDEC028B 		vldm	sp!, {d8}
 2995              	.LCFI40:
 2996              		.cfi_remember_state
 2997              		.cfi_restore 80
 2998              		.cfi_restore 81
 2999              		.cfi_def_cfa_offset 8
 3000 0058 10BD     		pop	{r4, pc}
 3001              	.L250:
 3002              	.LCFI41:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 73


 3003              		.cfi_restore_state
 936:Src/mode.c    ****     }
 3004              		.loc 1 936 0
 3005 005a B0EE480A 		vmov.f32	s0, s16
 3006 005e FFF7FEFF 		bl	Motion_Left90Turn
 3007              	.LVL334:
 3008 0062 E3E7     		b	.L248
 3009              	.L251:
 940:Src/mode.c    ****     }
 3010              		.loc 1 940 0
 3011 0064 9FED020A 		vldr.32	s0, .L252
 3012 0068 FFF7FEFF 		bl	Motion_Right90Turn
 3013              	.LVL335:
 3014 006c DEE7     		b	.L248
 3015              	.L253:
 3016 006e 00BF     		.align	2
 3017              	.L252:
 3018 0070 00004844 		.word	1145569280
 3019 0074 00000000 		.word	motor_flag
 3020              		.cfi_endproc
 3021              	.LFE145:
 3023              		.section	.text.TurnBig180_Test,"ax",%progbits
 3024              		.align	1
 3025              		.global	TurnBig180_Test
 3026              		.syntax unified
 3027              		.thumb
 3028              		.thumb_func
 3029              		.fpu fpv4-sp-d16
 3031              	TurnBig180_Test:
 3032              	.LFB146:
 948:Src/mode.c    **** 
 949:Src/mode.c    **** void TurnBig180_Test(int8_t dir)
 950:Src/mode.c    **** {
 3033              		.loc 1 950 0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 0
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
 3037              	.LVL336:
 3038 0000 10B5     		push	{r4, lr}
 3039              	.LCFI42:
 3040              		.cfi_def_cfa_offset 8
 3041              		.cfi_offset 4, -8
 3042              		.cfi_offset 14, -4
 3043 0002 2DED028B 		vpush.64	{d8}
 3044              	.LCFI43:
 3045              		.cfi_def_cfa_offset 16
 3046              		.cfi_offset 80, -16
 3047              		.cfi_offset 81, -12
 3048 0006 0446     		mov	r4, r0
 951:Src/mode.c    ****     SetRunMode();
 3049              		.loc 1 951 0
 3050 0008 FFF7FEFF 		bl	SetRunMode
 3051              	.LVL337:
 952:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3052              		.loc 1 952 0
 3053 000c 9FED198A 		vldr.32	s16, .L260
 3054 0010 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 74


 3055 0014 0120     		movs	r0, #1
 3056 0016 FFF7FEFF 		bl	Motion_FastStart
 3057              	.LVL338:
 953:Src/mode.c    ****     Motion_Adjust(1, VELO_F);
 3058              		.loc 1 953 0
 3059 001a B0EE480A 		vmov.f32	s0, s16
 3060 001e 0120     		movs	r0, #1
 3061 0020 FFF7FEFF 		bl	Motion_Adjust
 3062              	.LVL339:
 954:Src/mode.c    ****     if (dir == LEFT)
 3063              		.loc 1 954 0
 3064 0024 012C     		cmp	r4, #1
 3065 0026 18D0     		beq	.L258
 955:Src/mode.c    ****     {
 956:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
 957:Src/mode.c    ****     }
 958:Src/mode.c    ****     else if (dir == RIGHT)
 3066              		.loc 1 958 0
 3067 0028 022C     		cmp	r4, #2
 3068 002a 1CD0     		beq	.L259
 3069              	.L256:
 959:Src/mode.c    ****     {
 960:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
 961:Src/mode.c    ****     }
 962:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3070              		.loc 1 962 0
 3071 002c 9FED110A 		vldr.32	s0, .L260
 3072 0030 0120     		movs	r0, #1
 3073 0032 FFF7FEFF 		bl	Motion_FastGoal
 3074              	.LVL340:
 963:Src/mode.c    ****     motor_flag = FALSE;
 3075              		.loc 1 963 0
 3076 0036 0024     		movs	r4, #0
 3077 0038 0F4B     		ldr	r3, .L260+4
 3078 003a 1C70     		strb	r4, [r3]
 964:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3079              		.loc 1 964 0
 3080 003c 4FF49671 		mov	r1, #300
 3081 0040 4C20     		movs	r0, #76
 3082 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 3083              	.LVL341:
 965:Src/mode.c    ****     HAL_Delay(200);
 3084              		.loc 1 965 0
 3085 0046 C820     		movs	r0, #200
 3086 0048 FFF7FEFF 		bl	HAL_Delay
 3087              	.LVL342:
 966:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3088              		.loc 1 966 0
 3089 004c 2146     		mov	r1, r4
 3090 004e 0A20     		movs	r0, #10
 3091 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 3092              	.LVL343:
 967:Src/mode.c    **** }
 3093              		.loc 1 967 0
 3094 0054 BDEC028B 		vldm	sp!, {d8}
 3095              	.LCFI44:
 3096              		.cfi_remember_state
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 75


 3097              		.cfi_restore 80
 3098              		.cfi_restore 81
 3099              		.cfi_def_cfa_offset 8
 3100 0058 10BD     		pop	{r4, pc}
 3101              	.L258:
 3102              	.LCFI45:
 3103              		.cfi_restore_state
 956:Src/mode.c    ****     }
 3104              		.loc 1 956 0
 3105 005a B0EE480A 		vmov.f32	s0, s16
 3106 005e 0420     		movs	r0, #4
 3107 0060 FFF7FEFF 		bl	Motion_FastLeftTurn
 3108              	.LVL344:
 3109 0064 E2E7     		b	.L256
 3110              	.L259:
 960:Src/mode.c    ****     }
 3111              		.loc 1 960 0
 3112 0066 9FED030A 		vldr.32	s0, .L260
 3113 006a 0420     		movs	r0, #4
 3114 006c FFF7FEFF 		bl	Motion_FastRightTurn
 3115              	.LVL345:
 3116 0070 DCE7     		b	.L256
 3117              	.L261:
 3118 0072 00BF     		.align	2
 3119              	.L260:
 3120 0074 00004844 		.word	1145569280
 3121 0078 00000000 		.word	motor_flag
 3122              		.cfi_endproc
 3123              	.LFE146:
 3125              		.section	.text.Mode_Mouse,"ax",%progbits
 3126              		.align	1
 3127              		.global	Mode_Mouse
 3128              		.syntax unified
 3129              		.thumb
 3130              		.thumb_func
 3131              		.fpu fpv4-sp-d16
 3133              	Mode_Mouse:
 3134              	.LFB126:
  60:Src/mode.c    ****     switch (mode)
 3135              		.loc 1 60 0
 3136              		.cfi_startproc
 3137              		@ args = 0, pretend = 0, frame = 0
 3138              		@ frame_needed = 0, uses_anonymous_args = 0
 3139              	.LVL346:
 3140 0000 10B5     		push	{r4, lr}
 3141              	.LCFI46:
 3142              		.cfi_def_cfa_offset 8
 3143              		.cfi_offset 4, -8
 3144              		.cfi_offset 14, -4
  61:Src/mode.c    ****     {
 3145              		.loc 1 61 0
 3146 0002 1328     		cmp	r0, #19
 3147 0004 0DD8     		bhi	.L262
 3148 0006 DFE800F0 		tbb	[pc, r0]
 3149              	.L265:
 3150 000a 0A       		.byte	(.L264-.L265)/2
 3151 000b 0D       		.byte	(.L266-.L265)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 76


 3152 000c 15       		.byte	(.L267-.L265)/2
 3153 000d 1D       		.byte	(.L268-.L265)/2
 3154 000e 20       		.byte	(.L269-.L265)/2
 3155 000f 23       		.byte	(.L270-.L265)/2
 3156 0010 26       		.byte	(.L271-.L265)/2
 3157 0011 2D       		.byte	(.L272-.L265)/2
 3158 0012 34       		.byte	(.L273-.L265)/2
 3159 0013 59       		.byte	(.L274-.L265)/2
 3160 0014 7E       		.byte	(.L275-.L265)/2
 3161 0015 8A       		.byte	(.L276-.L265)/2
 3162 0016 96       		.byte	(.L277-.L265)/2
 3163 0017 9E       		.byte	(.L278-.L265)/2
 3164 0018 A6       		.byte	(.L279-.L265)/2
 3165 0019 AF       		.byte	(.L280-.L265)/2
 3166 001a B8       		.byte	(.L281-.L265)/2
 3167 001b BF       		.byte	(.L282-.L265)/2
 3168 001c C6       		.byte	(.L283-.L265)/2
 3169 001d CD       		.byte	(.L284-.L265)/2
 3170              		.p2align 1
 3171              	.L264:
  65:Src/mode.c    ****         break;
 3172              		.loc 1 65 0
 3173 001e FFF7FEFF 		bl	SearchRun
 3174              	.LVL347:
 3175              	.L262:
 181:Src/mode.c    **** 
 3176              		.loc 1 181 0
 3177 0022 10BD     		pop	{r4, pc}
 3178              	.LVL348:
 3179              	.L266:
  68:Src/mode.c    ****         break;
 3180              		.loc 1 68 0
 3181 0024 0322     		movs	r2, #3
 3182 0026 0121     		movs	r1, #1
 3183 0028 9FED620A 		vldr.32	s0, .L286
 3184 002c 0020     		movs	r0, #0
 3185              	.LVL349:
 3186 002e FFF7FEFF 		bl	Mode_FastRun
 3187              	.LVL350:
  69:Src/mode.c    ****     case 2:
 3188              		.loc 1 69 0
 3189 0032 F6E7     		b	.L262
 3190              	.LVL351:
 3191              	.L267:
  76:Src/mode.c    ****         break;
 3192              		.loc 1 76 0
 3193 0034 0522     		movs	r2, #5
 3194 0036 0721     		movs	r1, #7
 3195 0038 9FED5E0A 		vldr.32	s0, .L286
 3196 003c 0120     		movs	r0, #1
 3197              	.LVL352:
 3198 003e FFF7FEFF 		bl	Mode_FastRun
 3199              	.LVL353:
  77:Src/mode.c    ****     case 3:
 3200              		.loc 1 77 0
 3201 0042 EEE7     		b	.L262
 3202              	.LVL354:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 77


 3203              	.L268:
  79:Src/mode.c    ****         break;
 3204              		.loc 1 79 0
 3205 0044 FFF7FEFF 		bl	SensorCheck
 3206              	.LVL355:
  80:Src/mode.c    ****     //CYAN
 3207              		.loc 1 80 0
 3208 0048 EBE7     		b	.L262
 3209              	.LVL356:
 3210              	.L269:
  83:Src/mode.c    ****         break;
 3211              		.loc 1 83 0
 3212 004a FFF7FEFF 		bl	PrintOutPut
 3213              	.LVL357:
  84:Src/mode.c    ****     case 5:
 3214              		.loc 1 84 0
 3215 004e E8E7     		b	.L262
 3216              	.LVL358:
 3217              	.L270:
  86:Src/mode.c    ****         break;
 3218              		.loc 1 86 0
 3219 0050 FFF7FEFF 		bl	PrintWallData
 3220              	.LVL359:
  87:Src/mode.c    ****     case 6: //straight
 3221              		.loc 1 87 0
 3222 0054 E5E7     		b	.L262
 3223              	.LVL360:
 3224              	.L271:
  94:Src/mode.c    ****         CheckStraight(6);
 3225              		.loc 1 94 0
 3226 0056 584B     		ldr	r3, .L286+4
 3227 0058 0122     		movs	r2, #1
 3228 005a 1A70     		strb	r2, [r3]
  95:Src/mode.c    ****         break;
 3229              		.loc 1 95 0
 3230 005c 0620     		movs	r0, #6
 3231              	.LVL361:
 3232 005e FFF7FEFF 		bl	CheckStraight
 3233              	.LVL362:
  96:Src/mode.c    ****     case 7: //turn
 3234              		.loc 1 96 0
 3235 0062 DEE7     		b	.L262
 3236              	.LVL363:
 3237              	.L272:
  98:Src/mode.c    ****         CheckTurn(4);
 3238              		.loc 1 98 0
 3239 0064 544B     		ldr	r3, .L286+4
 3240 0066 0022     		movs	r2, #0
 3241 0068 1A70     		strb	r2, [r3]
  99:Src/mode.c    ****         break;
 3242              		.loc 1 99 0
 3243 006a 0420     		movs	r0, #4
 3244              	.LVL364:
 3245 006c FFF7FEFF 		bl	CheckTurn
 3246              	.LVL365:
 100:Src/mode.c    ****     //YELLOW
 3247              		.loc 1 100 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 78


 3248 0070 D7E7     		b	.L262
 3249              	.LVL366:
 3250              	.L273:
 103:Src/mode.c    ****         SetRunMode();
 3251              		.loc 1 103 0
 3252 0072 0024     		movs	r4, #0
 3253 0074 504B     		ldr	r3, .L286+4
 3254 0076 1C70     		strb	r4, [r3]
 104:Src/mode.c    ****         Motion_Start();
 3255              		.loc 1 104 0
 3256 0078 FFF7FEFF 		bl	SetRunMode
 3257              	.LVL367:
 105:Src/mode.c    ****         Motion_LeftTurn();
 3258              		.loc 1 105 0
 3259 007c FFF7FEFF 		bl	Motion_Start
 3260              	.LVL368:
 106:Src/mode.c    ****         Motion_End();
 3261              		.loc 1 106 0
 3262 0080 FFF7FEFF 		bl	Motion_LeftTurn
 3263              	.LVL369:
 107:Src/mode.c    ****         motor_flag = FALSE;
 3264              		.loc 1 107 0
 3265 0084 FFF7FEFF 		bl	Motion_End
 3266              	.LVL370:
 108:Src/mode.c    ****         HAL_Delay(500);
 3267              		.loc 1 108 0
 3268 0088 4C4B     		ldr	r3, .L286+8
 3269 008a 1C70     		strb	r4, [r3]
 109:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3270              		.loc 1 109 0
 3271 008c 4FF4FA70 		mov	r0, #500
 3272 0090 FFF7FEFF 		bl	HAL_Delay
 3273              	.LVL371:
 110:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 3274              		.loc 1 110 0
 3275 0094 49F64242 		movw	r2, #40002
 3276 0098 4949     		ldr	r1, .L286+12
 3277 009a 4A4B     		ldr	r3, .L286+16
 3278 009c 1868     		ldr	r0, [r3]
 3279 009e FFF7FEFF 		bl	Flash_Write
 3280              	.LVL372:
 111:Src/mode.c    ****         HAL_Delay(200);
 3281              		.loc 1 111 0
 3282 00a2 4FF49671 		mov	r1, #300
 3283 00a6 4C20     		movs	r0, #76
 3284 00a8 FFF7FEFF 		bl	Tim_BuzzerPwm
 3285              	.LVL373:
 112:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 3286              		.loc 1 112 0
 3287 00ac C820     		movs	r0, #200
 3288 00ae FFF7FEFF 		bl	HAL_Delay
 3289              	.LVL374:
 113:Src/mode.c    ****         break;
 3290              		.loc 1 113 0
 3291 00b2 2146     		mov	r1, r4
 3292 00b4 0A20     		movs	r0, #10
 3293 00b6 FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 79


 3294              	.LVL375:
 114:Src/mode.c    ****     case 9: //right turn
 3295              		.loc 1 114 0
 3296 00ba B2E7     		b	.L262
 3297              	.LVL376:
 3298              	.L274:
 116:Src/mode.c    ****         SetRunMode();
 3299              		.loc 1 116 0
 3300 00bc 0024     		movs	r4, #0
 3301 00be 3E4B     		ldr	r3, .L286+4
 3302 00c0 1C70     		strb	r4, [r3]
 117:Src/mode.c    ****         Motion_Start();
 3303              		.loc 1 117 0
 3304 00c2 FFF7FEFF 		bl	SetRunMode
 3305              	.LVL377:
 118:Src/mode.c    ****         Motion_RightTurn();
 3306              		.loc 1 118 0
 3307 00c6 FFF7FEFF 		bl	Motion_Start
 3308              	.LVL378:
 119:Src/mode.c    ****         Motion_End();
 3309              		.loc 1 119 0
 3310 00ca FFF7FEFF 		bl	Motion_RightTurn
 3311              	.LVL379:
 120:Src/mode.c    ****         motor_flag = FALSE;
 3312              		.loc 1 120 0
 3313 00ce FFF7FEFF 		bl	Motion_End
 3314              	.LVL380:
 121:Src/mode.c    ****         HAL_Delay(500);
 3315              		.loc 1 121 0
 3316 00d2 3A4B     		ldr	r3, .L286+8
 3317 00d4 1C70     		strb	r4, [r3]
 122:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3318              		.loc 1 122 0
 3319 00d6 4FF4FA70 		mov	r0, #500
 3320 00da FFF7FEFF 		bl	HAL_Delay
 3321              	.LVL381:
 123:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 3322              		.loc 1 123 0
 3323 00de 49F64242 		movw	r2, #40002
 3324 00e2 3749     		ldr	r1, .L286+12
 3325 00e4 374B     		ldr	r3, .L286+16
 3326 00e6 1868     		ldr	r0, [r3]
 3327 00e8 FFF7FEFF 		bl	Flash_Write
 3328              	.LVL382:
 124:Src/mode.c    ****         HAL_Delay(200);
 3329              		.loc 1 124 0
 3330 00ec 4FF49671 		mov	r1, #300
 3331 00f0 4C20     		movs	r0, #76
 3332 00f2 FFF7FEFF 		bl	Tim_BuzzerPwm
 3333              	.LVL383:
 125:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 3334              		.loc 1 125 0
 3335 00f6 C820     		movs	r0, #200
 3336 00f8 FFF7FEFF 		bl	HAL_Delay
 3337              	.LVL384:
 126:Src/mode.c    ****         break;
 3338              		.loc 1 126 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 80


 3339 00fc 2146     		mov	r1, r4
 3340 00fe 0A20     		movs	r0, #10
 3341 0100 FFF7FEFF 		bl	Tim_BuzzerPwm
 3342              	.LVL385:
 127:Src/mode.c    ****     case 10: //circuit left
 3343              		.loc 1 127 0
 3344 0104 8DE7     		b	.L262
 3345              	.LVL386:
 3346              	.L275:
 129:Src/mode.c    ****         SetRunMode();
 3347              		.loc 1 129 0
 3348 0106 2C4B     		ldr	r3, .L286+4
 3349 0108 0022     		movs	r2, #0
 3350 010a 1A70     		strb	r2, [r3]
 130:Src/mode.c    ****         Circuit(2, 2, 3, 1);
 3351              		.loc 1 130 0
 3352 010c FFF7FEFF 		bl	SetRunMode
 3353              	.LVL387:
 131:Src/mode.c    ****         break;
 3354              		.loc 1 131 0
 3355 0110 0123     		movs	r3, #1
 3356 0112 0322     		movs	r2, #3
 3357 0114 0221     		movs	r1, #2
 3358 0116 0846     		mov	r0, r1
 3359 0118 FFF7FEFF 		bl	Circuit
 3360              	.LVL388:
 132:Src/mode.c    ****     case 11: //circuit right
 3361              		.loc 1 132 0
 3362 011c 81E7     		b	.L262
 3363              	.LVL389:
 3364              	.L276:
 134:Src/mode.c    ****         SetRunMode();
 3365              		.loc 1 134 0
 3366 011e 264B     		ldr	r3, .L286+4
 3367 0120 0022     		movs	r2, #0
 3368 0122 1A70     		strb	r2, [r3]
 135:Src/mode.c    ****         Circuit(2, 2, 3, -1);
 3369              		.loc 1 135 0
 3370 0124 FFF7FEFF 		bl	SetRunMode
 3371              	.LVL390:
 136:Src/mode.c    ****         break;
 3372              		.loc 1 136 0
 3373 0128 FF23     		movs	r3, #255
 3374 012a 0322     		movs	r2, #3
 3375 012c 0221     		movs	r1, #2
 3376 012e 0846     		mov	r0, r1
 3377 0130 FFF7FEFF 		bl	Circuit
 3378              	.LVL391:
 137:Src/mode.c    ****     //GREEN
 3379              		.loc 1 137 0
 3380 0134 75E7     		b	.L262
 3381              	.LVL392:
 3382              	.L277:
 140:Src/mode.c    ****         Turn45_Test(FRONT, LEFT, 0);
 3383              		.loc 1 140 0
 3384 0136 0020     		movs	r0, #0
 3385              	.LVL393:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 81


 3386 0138 1F4B     		ldr	r3, .L286+4
 3387 013a 1870     		strb	r0, [r3]
 141:Src/mode.c    ****         //Turn135_Test(FRONT, LEFT, 0);
 3388              		.loc 1 141 0
 3389 013c 0246     		mov	r2, r0
 3390 013e 0121     		movs	r1, #1
 3391 0140 FFF7FEFF 		bl	Turn45_Test
 3392              	.LVL394:
 143:Src/mode.c    ****     case 13: //right quarter turn
 3393              		.loc 1 143 0
 3394 0144 6DE7     		b	.L262
 3395              	.LVL395:
 3396              	.L278:
 145:Src/mode.c    ****         Turn45_Test(FRONT, RIGHT, 0);
 3397              		.loc 1 145 0
 3398 0146 0020     		movs	r0, #0
 3399              	.LVL396:
 3400 0148 1B4B     		ldr	r3, .L286+4
 3401 014a 1870     		strb	r0, [r3]
 146:Src/mode.c    ****         //Turn135_Test(FRONT, RIGHT, 0);
 3402              		.loc 1 146 0
 3403 014c 0246     		mov	r2, r0
 3404 014e 0221     		movs	r1, #2
 3405 0150 FFF7FEFF 		bl	Turn45_Test
 3406              	.LVL397:
 148:Src/mode.c    ****     case 14:
 3407              		.loc 1 148 0
 3408 0154 65E7     		b	.L262
 3409              	.LVL398:
 3410              	.L279:
 150:Src/mode.c    ****         Turn45_Test(LEFT, LEFT, 1);
 3411              		.loc 1 150 0
 3412 0156 184B     		ldr	r3, .L286+4
 3413 0158 0022     		movs	r2, #0
 3414 015a 1A70     		strb	r2, [r3]
 151:Src/mode.c    ****         //Turn135_Test(LEFT, LEFT, 1);
 3415              		.loc 1 151 0
 3416 015c 0122     		movs	r2, #1
 3417 015e 1146     		mov	r1, r2
 3418 0160 1046     		mov	r0, r2
 3419              	.LVL399:
 3420 0162 FFF7FEFF 		bl	Turn45_Test
 3421              	.LVL400:
 153:Src/mode.c    ****     case 15:
 3422              		.loc 1 153 0
 3423 0166 5CE7     		b	.L262
 3424              	.LVL401:
 3425              	.L280:
 155:Src/mode.c    ****         Turn45_Test(RIGHT, RIGHT, 1);
 3426              		.loc 1 155 0
 3427 0168 134B     		ldr	r3, .L286+4
 3428 016a 0022     		movs	r2, #0
 3429 016c 1A70     		strb	r2, [r3]
 156:Src/mode.c    ****         //Turn135_Test(RIGHT, RIGHT, 1);
 3430              		.loc 1 156 0
 3431 016e 0122     		movs	r2, #1
 3432 0170 0221     		movs	r1, #2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 82


 3433 0172 0846     		mov	r0, r1
 3434              	.LVL402:
 3435 0174 FFF7FEFF 		bl	Turn45_Test
 3436              	.LVL403:
 158:Src/mode.c    ****     //MAGENTA
 3437              		.loc 1 158 0
 3438 0178 53E7     		b	.L262
 3439              	.LVL404:
 3440              	.L281:
 161:Src/mode.c    ****         TurnBig90_Test(LEFT);
 3441              		.loc 1 161 0
 3442 017a 0F4B     		ldr	r3, .L286+4
 3443 017c 0022     		movs	r2, #0
 3444 017e 1A70     		strb	r2, [r3]
 162:Src/mode.c    ****         break;
 3445              		.loc 1 162 0
 3446 0180 0120     		movs	r0, #1
 3447              	.LVL405:
 3448 0182 FFF7FEFF 		bl	TurnBig90_Test
 3449              	.LVL406:
 163:Src/mode.c    ****     case 17:
 3450              		.loc 1 163 0
 3451 0186 4CE7     		b	.L262
 3452              	.LVL407:
 3453              	.L282:
 165:Src/mode.c    ****         TurnBig90_Test(RIGHT);
 3454              		.loc 1 165 0
 3455 0188 0B4B     		ldr	r3, .L286+4
 3456 018a 0022     		movs	r2, #0
 3457 018c 1A70     		strb	r2, [r3]
 166:Src/mode.c    ****         break;
 3458              		.loc 1 166 0
 3459 018e 0220     		movs	r0, #2
 3460              	.LVL408:
 3461 0190 FFF7FEFF 		bl	TurnBig90_Test
 3462              	.LVL409:
 167:Src/mode.c    ****     case 18:
 3463              		.loc 1 167 0
 3464 0194 45E7     		b	.L262
 3465              	.LVL410:
 3466              	.L283:
 169:Src/mode.c    ****         TurnBig180_Test(LEFT);
 3467              		.loc 1 169 0
 3468 0196 084B     		ldr	r3, .L286+4
 3469 0198 0022     		movs	r2, #0
 3470 019a 1A70     		strb	r2, [r3]
 170:Src/mode.c    ****         //TurnV90_Test(LEFT);
 3471              		.loc 1 170 0
 3472 019c 0120     		movs	r0, #1
 3473              	.LVL411:
 3474 019e FFF7FEFF 		bl	TurnBig180_Test
 3475              	.LVL412:
 172:Src/mode.c    ****     case 19:
 3476              		.loc 1 172 0
 3477 01a2 3EE7     		b	.L262
 3478              	.LVL413:
 3479              	.L284:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 83


 174:Src/mode.c    ****         TurnBig180_Test(RIGHT);
 3480              		.loc 1 174 0
 3481 01a4 044B     		ldr	r3, .L286+4
 3482 01a6 0022     		movs	r2, #0
 3483 01a8 1A70     		strb	r2, [r3]
 175:Src/mode.c    ****         //TurnV90_Test(RIGHT);
 3484              		.loc 1 175 0
 3485 01aa 0220     		movs	r0, #2
 3486              	.LVL414:
 3487 01ac FFF7FEFF 		bl	TurnBig180_Test
 3488              	.LVL415:
 181:Src/mode.c    **** 
 3489              		.loc 1 181 0
 3490 01b0 37E7     		b	.L262
 3491              	.L287:
 3492 01b2 00BF     		.align	2
 3493              	.L286:
 3494 01b4 00002043 		.word	1126170624
 3495 01b8 00000000 		.word	control_wall_flag
 3496 01bc 00000000 		.word	motor_flag
 3497 01c0 00000000 		.word	loger
 3498 01c4 00000000 		.word	start_address
 3499              		.cfi_endproc
 3500              	.LFE126:
 3502              		.section	.text.TurnV90_Test,"ax",%progbits
 3503              		.align	1
 3504              		.global	TurnV90_Test
 3505              		.syntax unified
 3506              		.thumb
 3507              		.thumb_func
 3508              		.fpu fpv4-sp-d16
 3510              	TurnV90_Test:
 3511              	.LFB147:
 968:Src/mode.c    **** 
 969:Src/mode.c    **** void TurnV90_Test(int8_t dir)
 970:Src/mode.c    **** {
 3512              		.loc 1 970 0
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 0
 3515              		@ frame_needed = 0, uses_anonymous_args = 0
 3516              	.LVL416:
 3517 0000 10B5     		push	{r4, lr}
 3518              	.LCFI47:
 3519              		.cfi_def_cfa_offset 8
 3520              		.cfi_offset 4, -8
 3521              		.cfi_offset 14, -4
 3522 0002 2DED028B 		vpush.64	{d8}
 3523              	.LCFI48:
 3524              		.cfi_def_cfa_offset 16
 3525              		.cfi_offset 80, -16
 3526              		.cfi_offset 81, -12
 3527 0006 0446     		mov	r4, r0
 971:Src/mode.c    ****     SetRunMode();
 3528              		.loc 1 971 0
 3529 0008 FFF7FEFF 		bl	SetRunMode
 3530              	.LVL417:
 972:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 84


 3531              		.loc 1 972 0
 3532 000c 9FED248A 		vldr.32	s16, .L293
 3533 0010 B0EE480A 		vmov.f32	s0, s16
 3534 0014 0120     		movs	r0, #1
 3535 0016 FFF7FEFF 		bl	Motion_FastStart
 3536              	.LVL418:
 973:Src/mode.c    ****     Motion_Adjust(1,VELO_F);
 3537              		.loc 1 973 0
 3538 001a B0EE480A 		vmov.f32	s0, s16
 3539 001e 0120     		movs	r0, #1
 3540 0020 FFF7FEFF 		bl	Motion_Adjust
 3541              	.LVL419:
 974:Src/mode.c    ****     if (dir == LEFT)
 3542              		.loc 1 974 0
 3543 0024 012C     		cmp	r4, #1
 3544 0026 29D0     		beq	.L292
 975:Src/mode.c    ****     {
 976:Src/mode.c    ****         Motion_InLeft45Turn();
 977:Src/mode.c    ****         Motion_Diagonal(1);
 978:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 979:Src/mode.c    ****         Motion_Diagonal(1);
 980:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 981:Src/mode.c    ****     }
 982:Src/mode.c    ****     else
 983:Src/mode.c    ****     {
 984:Src/mode.c    ****         Motion_InRight45Turn();
 3545              		.loc 1 984 0
 3546 0028 FFF7FEFF 		bl	Motion_InRight45Turn
 3547              	.LVL420:
 985:Src/mode.c    ****         Motion_Diagonal(1);
 3548              		.loc 1 985 0
 3549 002c 0120     		movs	r0, #1
 3550 002e FFF7FEFF 		bl	Motion_Diagonal
 3551              	.LVL421:
 986:Src/mode.c    ****         Motion_FastRightTurn(T_V90, 800.0f);
 3552              		.loc 1 986 0
 3553 0032 9FED1B8A 		vldr.32	s16, .L293
 3554 0036 B0EE480A 		vmov.f32	s0, s16
 3555 003a 0720     		movs	r0, #7
 3556 003c FFF7FEFF 		bl	Motion_FastRightTurn
 3557              	.LVL422:
 987:Src/mode.c    ****         Motion_Diagonal(1);
 3558              		.loc 1 987 0
 3559 0040 0120     		movs	r0, #1
 3560 0042 FFF7FEFF 		bl	Motion_Diagonal
 3561              	.LVL423:
 988:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
 3562              		.loc 1 988 0
 3563 0046 B0EE480A 		vmov.f32	s0, s16
 3564 004a FFF7FEFF 		bl	Motion_OutRight45Turn
 3565              	.LVL424:
 3566              	.L290:
 989:Src/mode.c    ****     }
 990:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3567              		.loc 1 990 0
 3568 004e 9FED140A 		vldr.32	s0, .L293
 3569 0052 0120     		movs	r0, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 85


 3570 0054 FFF7FEFF 		bl	Motion_FastGoal
 3571              	.LVL425:
 991:Src/mode.c    ****     motor_flag = FALSE;
 3572              		.loc 1 991 0
 3573 0058 0024     		movs	r4, #0
 3574 005a 124B     		ldr	r3, .L293+4
 3575 005c 1C70     		strb	r4, [r3]
 992:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3576              		.loc 1 992 0
 3577 005e 4FF49671 		mov	r1, #300
 3578 0062 4C20     		movs	r0, #76
 3579 0064 FFF7FEFF 		bl	Tim_BuzzerPwm
 3580              	.LVL426:
 993:Src/mode.c    ****     HAL_Delay(200);
 3581              		.loc 1 993 0
 3582 0068 C820     		movs	r0, #200
 3583 006a FFF7FEFF 		bl	HAL_Delay
 3584              	.LVL427:
 994:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3585              		.loc 1 994 0
 3586 006e 2146     		mov	r1, r4
 3587 0070 0A20     		movs	r0, #10
 3588 0072 FFF7FEFF 		bl	Tim_BuzzerPwm
 3589              	.LVL428:
 995:Src/mode.c    **** }...
 3590              		.loc 1 995 0
 3591 0076 BDEC028B 		vldm	sp!, {d8}
 3592              	.LCFI49:
 3593              		.cfi_remember_state
 3594              		.cfi_restore 80
 3595              		.cfi_restore 81
 3596              		.cfi_def_cfa_offset 8
 3597 007a 10BD     		pop	{r4, pc}
 3598              	.L292:
 3599              	.LCFI50:
 3600              		.cfi_restore_state
 976:Src/mode.c    ****         Motion_InLeft45Turn();
 3601              		.loc 1 976 0
 3602 007c FFF7FEFF 		bl	Motion_InLeft45Turn
 3603              	.LVL429:
 977:Src/mode.c    ****         Motion_Diagonal(1);
 3604              		.loc 1 977 0
 3605 0080 0120     		movs	r0, #1
 3606 0082 FFF7FEFF 		bl	Motion_Diagonal
 3607              	.LVL430:
 978:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 3608              		.loc 1 978 0
 3609 0086 B0EE480A 		vmov.f32	s0, s16
 3610 008a 0720     		movs	r0, #7
 3611 008c FFF7FEFF 		bl	Motion_FastLeftTurn
 3612              	.LVL431:
 979:Src/mode.c    ****         Motion_Diagonal(1);
 3613              		.loc 1 979 0
 3614 0090 0120     		movs	r0, #1
 3615 0092 FFF7FEFF 		bl	Motion_Diagonal
 3616              	.LVL432:
 980:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 86


 3617              		.loc 1 980 0
 3618 0096 B0EE480A 		vmov.f32	s0, s16
 3619 009a FFF7FEFF 		bl	Motion_OutLeft45Turn
 3620              	.LVL433:
 3621 009e D6E7     		b	.L290
 3622              	.L294:
 3623              		.align	2
 3624              	.L293:
 3625 00a0 00004844 		.word	1145569280
 3626 00a4 00000000 		.word	motor_flag
 3627              		.cfi_endproc
 3628              	.LFE147:
 3630              		.global	gy
 3631              		.global	gx
 3632              		.section	.bss.gy,"aw",%nobits
 3633              		.set	.LANCHOR0,. + 0
 3636              	gy:
 3637 0000 00       		.space	1
 3638              		.section	.data.gx,"aw",%progbits
 3639              		.set	.LANCHOR1,. + 0
 3642              	gx:
 3643 0000 02       		.byte	2
 3644              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 3645              		.align	2
 3646              	.LC0:
 3647 0000 25640D00 		.ascii	"%d\015\000"
 3648              		.section	.rodata.PrintMotion.str1.4,"aMS",%progbits,1
 3649              		.align	2
 3650              	.LC7:
 3651 0000 0D0A5354 		.ascii	"\015\012START:%d\011v_start:%ld\011v_end:%ld\015\012"
 3651      4152543A 
 3651      25640976 
 3651      5F737461 
 3651      72743A25 
 3652 0022 00       		.ascii	"\000"
 3653 0023 00       		.space	1
 3654              	.LC8:
 3655 0024 4C454654 		.ascii	"LEFT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 3655      3A534541 
 3655      52434809 
 3655      765F7374 
 3655      6172743A 
 3656              	.LC9:
 3657 0048 4C454654 		.ascii	"LEFT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 3657      3A545F39 
 3657      3009765F 
 3657      73746172 
 3657      743A256C 
 3658 006a 0000     		.space	2
 3659              	.LC10:
 3660 006c 4C454654 		.ascii	"LEFT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 3660      3A545F31 
 3660      38300976 
 3660      5F737461 
 3660      72743A25 
 3661 008f 00       		.space	1
 3662              	.LC11:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 87


 3663 0090 4C454654 		.ascii	"LEFT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3663      3A545F34 
 3663      35494E09 
 3663      765F7374 
 3663      6172743A 
 3664              	.LC12:
 3665 00b4 4C454654 		.ascii	"LEFT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3665      3A545F34 
 3665      354F5554 
 3665      09765F73 
 3665      74617274 
 3666 00d9 000000   		.space	3
 3667              	.LC13:
 3668 00dc 4C454654 		.ascii	"LEFT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3668      3A545F31 
 3668      3335494E 
 3668      09765F73 
 3668      74617274 
 3669 0101 000000   		.space	3
 3670              	.LC14:
 3671 0104 4C454654 		.ascii	"LEFT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3671      3A545F31 
 3671      33354F55 
 3671      5409765F 
 3671      73746172 
 3672 012a 0000     		.space	2
 3673              	.LC15:
 3674 012c 4C454654 		.ascii	"LEFT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 3674      3A545F56 
 3674      39300976 
 3674      5F737461 
 3674      72743A25 
 3675 014f 00       		.space	1
 3676              	.LC16:
 3677 0150 52494748 		.ascii	"RIGHT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 3677      543A5345 
 3677      41524348 
 3677      09765F73 
 3677      74617274 
 3678 0175 000000   		.space	3
 3679              	.LC17:
 3680 0178 52494748 		.ascii	"RIGHT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 3680      543A545F 
 3680      39300976 
 3680      5F737461 
 3680      72743A25 
 3681 019b 00       		.space	1
 3682              	.LC18:
 3683 019c 52494748 		.ascii	"RIGHT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 3683      543A545F 
 3683      31383009 
 3683      765F7374 
 3683      6172743A 
 3684              	.LC19:
 3685 01c0 52494748 		.ascii	"RIGHT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3685      543A545F 
 3685      3435494E 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 88


 3685      09765F73 
 3685      74617274 
 3686 01e5 000000   		.space	3
 3687              	.LC20:
 3688 01e8 52494748 		.ascii	"RIGHT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3688      543A545F 
 3688      34354F55 
 3688      5409765F 
 3688      73746172 
 3689 020e 0000     		.space	2
 3690              	.LC21:
 3691 0210 52494748 		.ascii	"RIGHT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3691      543A545F 
 3691      31333549 
 3691      4E09765F 
 3691      73746172 
 3692 0236 0000     		.space	2
 3693              	.LC22:
 3694 0238 52494748 		.ascii	"RIGHT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3694      543A545F 
 3694      3133354F 
 3694      55540976 
 3694      5F737461 
 3695 025f 00       		.space	1
 3696              	.LC23:
 3697 0260 52494748 		.ascii	"RIGHT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 3697      543A545F 
 3697      56393009 
 3697      765F7374 
 3697      6172743A 
 3698              	.LC24:
 3699 0284 46524F4E 		.ascii	"FRONT:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3699      543A2564 
 3699      09765F73 
 3699      74617274 
 3699      3A256C64 
 3700 02a5 000000   		.space	3
 3701              	.LC25:
 3702 02a8 44494147 		.ascii	"DIAGONAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3702      4F4E414C 
 3702      3A256409 
 3702      765F7374 
 3702      6172743A 
 3703              	.LC26:
 3704 02cc 474F414C 		.ascii	"GOAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3704      3A256409 
 3704      765F7374 
 3704      6172743A 
 3704      256C6409 
 3705              	.LC27:
 3706 02ec 41444A55 		.ascii	"ADJUST:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3706      53543A25 
 3706      6409765F 
 3706      73746172 
 3706      743A256C 
 3707              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 3708              		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 89


 3709              	.LC2:
 3710 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 3710      64092564 
 3710      0925640D 
 3710      0A00
 3711              		.section	.rodata.PrintWallData.str1.4,"aMS",%progbits,1
 3712              		.align	2
 3713              	.LC3:
 3714 0000 0D00     		.ascii	"\015\000"
 3715 0002 0000     		.space	2
 3716              	.LC4:
 3717 0004 2D2D2D00 		.ascii	"---\000"
 3718              	.LC5:
 3719 0008 2B0D00   		.ascii	"+\015\000"
 3720 000b 00       		.space	1
 3721              	.LC6:
 3722 000c 20202000 		.ascii	"   \000"
 3723              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 3724              		.align	2
 3725              	.LC1:
 3726 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\000"
 3726      20666C3A 
 3726      25642066 
 3726      3A256420 
 3726      66723A25 
 3727              		.text
 3728              	.Letext0:
 3729              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3730              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3731              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3732              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3733              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 3734              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3735              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3736              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 3737              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 3738              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3739              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3740              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3741              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3742              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 3743              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3744              		.file 17 "Inc/spi.h"
 3745              		.file 18 "Inc/tim.h"
 3746              		.file 19 "Inc/adc.h"
 3747              		.file 20 "Inc/MazeCon.h"
 3748              		.file 21 "Inc/flash.h"
 3749              		.file 22 "Inc/motion.h"
 3750              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3751              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 3752              		.file 25 "<built-in>"
 3753              		.file 26 "Inc/Maze.h"
 3754              		.file 27 "Inc/Map.h"
 3755              		.file 28 "Inc/control.h"
 3756              		.file 29 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 90


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:242    .text.Mode_Select:00000150 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:253    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:260    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:389    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:403    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:410    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:481    .text.SetRunMode:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:487    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:494    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:512    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:516    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:613    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:620    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:627    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:932    .text.SearchRun:0000021c $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:943    .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:950    .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1121   .text.Mode_FastRun:0000011c $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1132   .text.Mode_FastRun:00000148 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1250   .text.Mode_FastRun:00000218 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1259   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1266   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1349   .text.CheckStraight:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1357   .text.CheckFastStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1364   .text.CheckFastStraight:00000000 CheckFastStraight
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1458   .text.CheckFastStraight:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1467   .text.CheckDiagonal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1474   .text.CheckDiagonal:00000000 CheckDiagonal
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1538   .text.CheckDiagonal:00000054 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1546   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1553   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1636   .text.CheckTurn:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1644   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1651   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1721   .text.PrintOutPut:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1728   .text.PrintWallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1735   .text.PrintWallData:00000000 PrintWallData
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1904   .text.PrintWallData:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1913   .text.PrintMotion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1920   .text.PrintMotion:00000000 PrintMotion
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1973   .text.PrintMotion:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1984   .text.PrintMotion:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:1992   .text.PrintMotion:00000072 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2000   .text.PrintMotion:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2095   .text.PrintMotion:0000010c $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2103   .text.PrintMotion:00000114 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2249   .text.PrintMotion:000001f0 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2275   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2282   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2338   .text.AdjustStraight:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2345   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2352   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2408   .text.AdjustTurn:0000004c $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 91


C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2415   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2422   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2561   .text.Circuit:00000094 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2566   .text.Turn45_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2573   .text.Turn45_Test:00000000 Turn45_Test
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2727   .text.Turn45_Test:000000cc $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2735   .text.Turn135_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2742   .text.Turn135_Test:00000000 Turn135_Test
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2916   .text.Turn135_Test:000000fc $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2924   .text.TurnBig90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:2931   .text.TurnBig90_Test:00000000 TurnBig90_Test
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3018   .text.TurnBig90_Test:00000070 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3024   .text.TurnBig180_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3031   .text.TurnBig180_Test:00000000 TurnBig180_Test
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3120   .text.TurnBig180_Test:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3126   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3133   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3150   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3170   .text.Mode_Mouse:0000001e $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3494   .text.Mode_Mouse:000001b4 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3503   .text.TurnV90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3510   .text.TurnV90_Test:00000000 TurnV90_Test
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3625   .text.TurnV90_Test:000000a0 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3636   .bss.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3642   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3637   .bss.gy:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3645   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3649   .rodata.PrintMotion.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3708   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3712   .rodata.PrintWallData.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s:3724   .rodata.SensorCheck.str1.4:00000000 $d

UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
accel
gyro_y
enc
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
motor_flag
Map_Init
Map_InitFast
Motion_Start
Map_addWall
Map_DelWall
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccdgETJM.s 			page 92


Motion_End
Flash_Write
Maze_UpdatePosition
Motion_Restart
Maze_UpdateStepMap
Maze_GetNextMotion
Maze_KnownStepAccel
Motion_Switch
control_wall_flag
counter_s
start_address
Flash_Load
Maze_UpdateStepMapEx
Motion_MaxVeloSet
Maze_GetNextMotionEx
Maze_Compress
Motion_FastStart
Motion_FastLeftTurn
Motion_FastStraight
Motion_DiagonalLeft
Motion_DiagonalRight
Motion_FastRightTurn
Motion_FastGoal
Motion_Adjust
Tim_MotorBrake
Motion_Straight
loger
Motion_DiagonalStart
Motion_DiagonalStop
Motion_TestTurn
gyro_z
puts
putchar
Tim_MotorPwm
Motion_LeftTurn
Motion_RightTurn
Motion_InLeft45Turn
Motion_InRight45Turn
Motion_Diagonal
Motion_OutLeft45Turn
Motion_OutRight45Turn
Motion_Left90Turn
Motion_Right90Turn
