ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** 
  30:Src/mode.c    **** unsigned char gx = 1, gy = 0;
  31:Src/mode.c    **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 2


  32:Src/mode.c    **** //Prototype Function
  33:Src/mode.c    **** void SensorCheck(void);
  34:Src/mode.c    **** void SetRunMode(void);
  35:Src/mode.c    **** void CheckStraight(uint8_t block);
  36:Src/mode.c    **** void CheckTurn(void);
  37:Src/mode.c    **** void PrintOutPut(void);
  38:Src/mode.c    **** void AdjustStraight(void);
  39:Src/mode.c    **** void AdjustTurn(void);
  40:Src/mode.c    **** void SearchRun(void);
  41:Src/mode.c    **** void Mode_FastRun(void);
  42:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  43:Src/mode.c    **** 
  44:Src/mode.c    **** /****************************************************************************************
  45:Src/mode.c    ****  * outline  : wright mode 
  46:Src/mode.c    ****  * argument : mode nomber
  47:Src/mode.c    ****  * return   : void
  48:Src/mode.c    **** ********************************************************************************************/
  49:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  50:Src/mode.c    **** {
  51:Src/mode.c    ****     switch (mode)
  52:Src/mode.c    ****     {
  53:Src/mode.c    ****     case 0:
  54:Src/mode.c    ****         /*
  55:Src/mode.c    ****         control_wall_flag = TRUE;
  56:Src/mode.c    ****         CheckStraight(6);
  57:Src/mode.c    ****         break;
  58:Src/mode.c    ****         */
  59:Src/mode.c    ****         SearchRun();
  60:Src/mode.c    ****         //AdjustStraight();
  61:Src/mode.c    ****         //CheckStraight(1);
  62:Src/mode.c    ****         break;
  63:Src/mode.c    ****     case 1:
  64:Src/mode.c    ****         Mode_FastRun();
  65:Src/mode.c    ****         //AdjustTurn();
  66:Src/mode.c    ****         /*
  67:Src/mode.c    ****         control_wall_flag = FALSE;
  68:Src/mode.c    ****         CheckTurn();
  69:Src/mode.c    ****         */
  70:Src/mode.c    ****         break;
  71:Src/mode.c    ****     case 2:
  72:Src/mode.c    ****         /*
  73:Src/mode.c    ****         SetRunMode();
  74:Src/mode.c    ****         Motion_enkai();
  75:Src/mode.c    ****         */
  76:Src/mode.c    ****         control_wall_flag = FALSE;
  77:Src/mode.c    ****         SetRunMode();
  78:Src/mode.c    ****         Motion_Start();
  79:Src/mode.c    ****         Motion_LeftTurn();
  80:Src/mode.c    ****         Motion_End();
  81:Src/mode.c    ****         motor_flag = FALSE;
  82:Src/mode.c    ****         HAL_Delay(500);
  83:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
  84:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
  85:Src/mode.c    ****         HAL_Delay(200);
  86:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
  87:Src/mode.c    ****         break;
  88:Src/mode.c    ****     case 3:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 3


  89:Src/mode.c    ****         control_wall_flag = FALSE;
  90:Src/mode.c    ****         SetRunMode();
  91:Src/mode.c    ****         Motion_Start();
  92:Src/mode.c    ****         Motion_RightTurn();
  93:Src/mode.c    ****         Motion_End();
  94:Src/mode.c    ****         motor_flag = FALSE;
  95:Src/mode.c    ****         HAL_Delay(500);
  96:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
  97:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
  98:Src/mode.c    ****         HAL_Delay(200);
  99:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 100:Src/mode.c    ****         break;
 101:Src/mode.c    **** 
 102:Src/mode.c    ****     //adjust
 103:Src/mode.c    ****     case 4:
 104:Src/mode.c    ****         //SensorCheck();
 105:Src/mode.c    ****         control_wall_flag = TRUE;
 106:Src/mode.c    ****         CheckStraight(6);
 107:Src/mode.c    ****         break;
 108:Src/mode.c    ****     case 5:
 109:Src/mode.c    ****         control_wall_flag = FALSE;
 110:Src/mode.c    ****         SetRunMode();
 111:Src/mode.c    ****         Circuit(1, 1, 3, 1);
 112:Src/mode.c    ****         break;
 113:Src/mode.c    ****     case 6:
 114:Src/mode.c    ****         control_wall_flag = FALSE;
 115:Src/mode.c    ****         SetRunMode();
 116:Src/mode.c    ****         Circuit(1, 1, 3, -1);
 117:Src/mode.c    ****         break;
 118:Src/mode.c    ****     case 7:
 119:Src/mode.c    ****         //PrintOutPut();
 120:Src/mode.c    ****         Maze_Printf();
 121:Src/mode.c    ****         break;
 122:Src/mode.c    ****     default:
 123:Src/mode.c    ****         break;
 124:Src/mode.c    ****     }
 125:Src/mode.c    **** }
 126:Src/mode.c    **** 
 127:Src/mode.c    **** char Mode_Select(void)
 128:Src/mode.c    **** {
  28              		.loc 1 128 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 129:Src/mode.c    ****     int8_t mode = 0;
 130:Src/mode.c    ****     uint8_t state = 0;
 131:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 131 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 4


  42              	.LVL1:
 130:Src/mode.c    ****     Control_ResetVelo();
  43              		.loc 1 130 0
  44 0006 0025     		movs	r5, #0
 129:Src/mode.c    ****     int8_t mode = 0;
  45              		.loc 1 129 0
  46 0008 2C46     		mov	r4, r5
  47 000a 45E0     		b	.L16
  48              	.LVL2:
  49              	.L23:
 132:Src/mode.c    **** 
 133:Src/mode.c    ****     while (1)
 134:Src/mode.c    ****     {
 135:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 136:Src/mode.c    ****         {
 137:Src/mode.c    ****             if (gyro_y < -300.0f)
 138:Src/mode.c    ****             {
 139:Src/mode.c    ****                 mode++;
 140:Src/mode.c    ****             }
 141:Src/mode.c    ****             else if (gyro_y > 300.0f)
  50              		.loc 1 141 0
  51 000c 404B     		ldr	r3, .L28
  52 000e 93ED007A 		vldr.32	s14, [r3]
  53 0012 DFED407A 		vldr.32	s15, .L28+4
  54 0016 B4EEE77A 		vcmpe.f32	s14, s15
  55 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  56 001e 5ADD     		ble	.L7
 142:Src/mode.c    ****             {
 143:Src/mode.c    ****                 mode--;
  57              		.loc 1 143 0
  58 0020 013C     		subs	r4, r4, #1
  59              	.LVL3:
  60 0022 64B2     		sxtb	r4, r4
  61              	.LVL4:
  62 0024 57E0     		b	.L7
  63              	.L17:
 144:Src/mode.c    ****             }
 145:Src/mode.c    ****             if (mode > 3)
 146:Src/mode.c    ****             {
 147:Src/mode.c    ****                 mode = 0;
  64              		.loc 1 147 0
  65 0026 0024     		movs	r4, #0
  66              	.LVL5:
  67              	.L9:
 148:Src/mode.c    ****             }
 149:Src/mode.c    ****             else if (mode < 0)
 150:Src/mode.c    ****             {
 151:Src/mode.c    ****                 mode = 3;
 152:Src/mode.c    ****             }
 153:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  68              		.loc 1 153 0
  69 0028 6FF00900 		mvn	r0, #9
  70 002c 00FB04F0 		mul	r0, r0, r4
  71 0030 4FF49671 		mov	r1, #300
  72 0034 AA30     		adds	r0, r0, #170
  73 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
  74              	.LVL6:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 5


 154:Src/mode.c    ****             HAL_Delay(100);
  75              		.loc 1 154 0
  76 003a 6420     		movs	r0, #100
  77 003c FFF7FEFF 		bl	HAL_Delay
  78              	.LVL7:
 155:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  79              		.loc 1 155 0
  80 0040 0021     		movs	r1, #0
  81 0042 0A20     		movs	r0, #10
  82 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
  83              	.LVL8:
 156:Src/mode.c    ****             HAL_Delay(500);
  84              		.loc 1 156 0
  85 0048 4FF4FA70 		mov	r0, #500
  86 004c FFF7FEFF 		bl	HAL_Delay
  87              	.LVL9:
  88              	.L3:
 157:Src/mode.c    ****         }
 158:Src/mode.c    ****         if (enc.offset > 20)
  89              		.loc 1 158 0
  90 0050 314B     		ldr	r3, .L28+8
  91 0052 93ED027A 		vldr.32	s14, [r3, #8]
  92 0056 F3EE047A 		vmov.f32	s15, #2.0e+1
  93 005a B4EEE77A 		vcmpe.f32	s14, s15
  94 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  95 0062 04DD     		ble	.L10
 159:Src/mode.c    ****         {
 160:Src/mode.c    ****             state = 4 - state;
  96              		.loc 1 160 0
  97 0064 C5F10405 		rsb	r5, r5, #4
  98              	.LVL10:
  99 0068 EDB2     		uxtb	r5, r5
 100              	.LVL11:
 161:Src/mode.c    ****             enc.offset = 0;
 101              		.loc 1 161 0
 102 006a 0022     		movs	r2, #0
 103 006c 9A60     		str	r2, [r3, #8]	@ float
 104              	.L10:
 162:Src/mode.c    ****         }
 163:Src/mode.c    ****         if (accel.z > 25.0f)
 105              		.loc 1 163 0
 106 006e 2B4B     		ldr	r3, .L28+12
 107 0070 93ED027A 		vldr.32	s14, [r3, #8]
 108 0074 F3EE097A 		vmov.f32	s15, #2.5e+1
 109 0078 B4EEE77A 		vcmpe.f32	s14, s15
 110 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 111 0080 33DC     		bgt	.L26
 164:Src/mode.c    ****         {
 165:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 166:Src/mode.c    ****             HAL_Delay(100);
 167:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 168:Src/mode.c    ****             HAL_Delay(500);
 169:Src/mode.c    ****             break;
 170:Src/mode.c    ****         }
 171:Src/mode.c    ****         if (state == 0)
 112              		.loc 1 171 0
 113 0082 75BB     		cbnz	r5, .L14
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 6


 172:Src/mode.c    ****         {
 173:Src/mode.c    ****             Gpio_FullColor(CYAN);
 114              		.loc 1 173 0
 115 0084 0420     		movs	r0, #4
 116 0086 FFF7FEFF 		bl	Gpio_FullColor
 117              	.LVL12:
 118              	.L15:
 174:Src/mode.c    ****         }
 175:Src/mode.c    ****         else
 176:Src/mode.c    ****         {
 177:Src/mode.c    ****             Gpio_FullColor(YELLOW);
 178:Src/mode.c    ****         }
 179:Src/mode.c    ****         Gpio_SideLed(mode);
 119              		.loc 1 179 0
 120 008a E0B2     		uxtb	r0, r4
 121 008c FFF7FEFF 		bl	Gpio_SideLed
 122              	.LVL13:
 180:Src/mode.c    ****         printf("%d\r", mode + state);
 123              		.loc 1 180 0
 124 0090 6119     		adds	r1, r4, r5
 125 0092 2348     		ldr	r0, .L28+16
 126 0094 FFF7FEFF 		bl	printf
 127              	.LVL14:
 128              	.L16:
 135:Src/mode.c    ****         {
 129              		.loc 1 135 0
 130 0098 1D4B     		ldr	r3, .L28
 131 009a 93ED007A 		vldr.32	s14, [r3]
 132 009e DFED1D7A 		vldr.32	s15, .L28+4
 133 00a2 B4EEE77A 		vcmpe.f32	s14, s15
 134 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 135 00aa 08DC     		bgt	.L2
 135:Src/mode.c    ****         {
 136              		.loc 1 135 0 is_stmt 0 discriminator 1
 137 00ac 93ED007A 		vldr.32	s14, [r3]
 138 00b0 DFED1C7A 		vldr.32	s15, .L28+20
 139 00b4 B4EEE77A 		vcmpe.f32	s14, s15
 140 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 141 00bc C8D5     		bpl	.L3
 142              	.L2:
 137:Src/mode.c    ****             {
 143              		.loc 1 137 0 is_stmt 1
 144 00be 144B     		ldr	r3, .L28
 145 00c0 93ED007A 		vldr.32	s14, [r3]
 146 00c4 DFED177A 		vldr.32	s15, .L28+20
 147 00c8 B4EEE77A 		vcmpe.f32	s14, s15
 148 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 149 00d0 9CD5     		bpl	.L23
 139:Src/mode.c    ****             }
 150              		.loc 1 139 0
 151 00d2 0134     		adds	r4, r4, #1
 152              	.LVL15:
 153 00d4 64B2     		sxtb	r4, r4
 154              	.LVL16:
 155              	.L7:
 145:Src/mode.c    ****             {
 156              		.loc 1 145 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 7


 157 00d6 032C     		cmp	r4, #3
 158 00d8 A5DC     		bgt	.L17
 149:Src/mode.c    ****             {
 159              		.loc 1 149 0
 160 00da 002C     		cmp	r4, #0
 161 00dc A4DA     		bge	.L9
 151:Src/mode.c    ****             }
 162              		.loc 1 151 0
 163 00de 0324     		movs	r4, #3
 164              	.LVL17:
 165 00e0 A2E7     		b	.L9
 166              	.LVL18:
 167              	.L14:
 177:Src/mode.c    ****         }
 168              		.loc 1 177 0
 169 00e2 0120     		movs	r0, #1
 170 00e4 FFF7FEFF 		bl	Gpio_FullColor
 171              	.LVL19:
 172 00e8 CFE7     		b	.L15
 173              	.L26:
 165:Src/mode.c    ****             HAL_Delay(100);
 174              		.loc 1 165 0
 175 00ea 4FF49671 		mov	r1, #300
 176 00ee 4C20     		movs	r0, #76
 177 00f0 FFF7FEFF 		bl	Tim_BuzzerPwm
 178              	.LVL20:
 166:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 179              		.loc 1 166 0
 180 00f4 6420     		movs	r0, #100
 181 00f6 FFF7FEFF 		bl	HAL_Delay
 182              	.LVL21:
 167:Src/mode.c    ****             HAL_Delay(500);
 183              		.loc 1 167 0
 184 00fa 0021     		movs	r1, #0
 185 00fc 0A20     		movs	r0, #10
 186 00fe FFF7FEFF 		bl	Tim_BuzzerPwm
 187              	.LVL22:
 168:Src/mode.c    ****             break;
 188              		.loc 1 168 0
 189 0102 4FF4FA70 		mov	r0, #500
 190 0106 FFF7FEFF 		bl	HAL_Delay
 191              	.LVL23:
 181:Src/mode.c    ****     }
 182:Src/mode.c    ****     return mode + state;
 192              		.loc 1 182 0
 193 010a 2C44     		add	r4, r4, r5
 194              	.LVL24:
 195 010c E0B2     		uxtb	r0, r4
 183:Src/mode.c    **** }
 196              		.loc 1 183 0
 197 010e 38BD     		pop	{r3, r4, r5, pc}
 198              	.LVL25:
 199              	.L29:
 200              		.align	2
 201              	.L28:
 202 0110 00000000 		.word	gyro_y
 203 0114 00009643 		.word	1133903872
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 8


 204 0118 00000000 		.word	enc
 205 011c 00000000 		.word	accel
 206 0120 00000000 		.word	.LC0
 207 0124 000096C3 		.word	-1013579776
 208              		.cfi_endproc
 209              	.LFE127:
 211              		.section	.text.SensorCheck,"ax",%progbits
 212              		.align	1
 213              		.global	SensorCheck
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	SensorCheck:
 220              	.LFB128:
 184:Src/mode.c    **** 
 185:Src/mode.c    **** void SensorCheck(void)
 186:Src/mode.c    **** {
 221              		.loc 1 186 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 10B5     		push	{r4, lr}
 226              	.LCFI1:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 4, -8
 229              		.cfi_offset 14, -4
 230 0002 82B0     		sub	sp, sp, #8
 231              	.LCFI2:
 232              		.cfi_def_cfa_offset 16
 187:Src/mode.c    ****     Adc_IrSensorStart();
 233              		.loc 1 187 0
 234 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 235              	.LVL26:
 236 0008 2CE0     		b	.L37
 237              	.L42:
 188:Src/mode.c    **** 
 189:Src/mode.c    ****     while (1)
 190:Src/mode.c    ****     {
 191:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 192:Src/mode.c    ****         {
 193:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 238              		.loc 1 193 0
 239 000a 0022     		movs	r2, #0
 240 000c 8021     		movs	r1, #128
 241 000e 2D48     		ldr	r0, .L45
 242 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 243              	.LVL27:
 244 0014 2FE0     		b	.L32
 245              	.L43:
 194:Src/mode.c    ****         }
 195:Src/mode.c    ****         else
 196:Src/mode.c    ****         {
 197:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 198:Src/mode.c    ****         }
 199:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 200:Src/mode.c    ****         {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 9


 201:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 246              		.loc 1 201 0
 247 0016 0022     		movs	r2, #0
 248 0018 1021     		movs	r1, #16
 249 001a 2B48     		ldr	r0, .L45+4
 250 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 251              	.LVL28:
 252 0020 32E0     		b	.L34
 253              	.L44:
 202:Src/mode.c    ****         }
 203:Src/mode.c    ****         else
 204:Src/mode.c    ****         {
 205:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 206:Src/mode.c    ****         }
 207:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 208:Src/mode.c    ****         {
 209:Src/mode.c    ****             Gpio_FullColor(WHITE);
 254              		.loc 1 209 0
 255 0022 0020     		movs	r0, #0
 256 0024 FFF7FEFF 		bl	Gpio_FullColor
 257              	.LVL29:
 258              	.L36:
 210:Src/mode.c    ****         }
 211:Src/mode.c    ****         else
 212:Src/mode.c    ****         {
 213:Src/mode.c    ****             Gpio_FullColor(DARK);
 214:Src/mode.c    ****         }
 215:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now, s
 259              		.loc 1 215 0
 260 0028 284B     		ldr	r3, .L45+8
 261 002a B3F90010 		ldrsh	r1, [r3]
 262 002e 284B     		ldr	r3, .L45+12
 263 0030 B3F90020 		ldrsh	r2, [r3]
 264 0034 274B     		ldr	r3, .L45+16
 265 0036 B3F90030 		ldrsh	r3, [r3]
 266 003a 2748     		ldr	r0, .L45+20
 267 003c B0F90000 		ldrsh	r0, [r0]
 268 0040 264C     		ldr	r4, .L45+24
 269 0042 B4F90040 		ldrsh	r4, [r4]
 270 0046 0194     		str	r4, [sp, #4]
 271 0048 0090     		str	r0, [sp]
 272 004a 2548     		ldr	r0, .L45+28
 273 004c FFF7FEFF 		bl	printf
 274              	.LVL30:
 216:Src/mode.c    **** 
 217:Src/mode.c    ****         if (accel.x > 60)
 275              		.loc 1 217 0
 276 0050 244B     		ldr	r3, .L45+32
 277 0052 93ED007A 		vldr.32	s14, [r3]
 278 0056 DFED247A 		vldr.32	s15, .L45+36
 279 005a B4EEE77A 		vcmpe.f32	s14, s15
 280 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 281 0062 19DC     		bgt	.L41
 282              	.L37:
 191:Src/mode.c    ****         {
 283              		.loc 1 191 0
 284 0064 1D4B     		ldr	r3, .L45+24
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 10


 285 0066 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 286 0068 012B     		cmp	r3, #1
 287 006a CED0     		beq	.L42
 197:Src/mode.c    ****         }
 288              		.loc 1 197 0
 289 006c 0122     		movs	r2, #1
 290 006e 8021     		movs	r1, #128
 291 0070 1448     		ldr	r0, .L45
 292 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 293              	.LVL31:
 294              	.L32:
 199:Src/mode.c    ****         {
 295              		.loc 1 199 0
 296 0076 154B     		ldr	r3, .L45+8
 297 0078 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 298 007a 012B     		cmp	r3, #1
 299 007c CBD0     		beq	.L43
 205:Src/mode.c    ****         }
 300              		.loc 1 205 0
 301 007e 0122     		movs	r2, #1
 302 0080 1021     		movs	r1, #16
 303 0082 1148     		ldr	r0, .L45+4
 304 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 305              	.LVL32:
 306              	.L34:
 207:Src/mode.c    ****         {
 307              		.loc 1 207 0
 308 0088 124B     		ldr	r3, .L45+16
 309 008a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 310 008c 012B     		cmp	r3, #1
 311 008e C8D0     		beq	.L44
 213:Src/mode.c    ****         }
 312              		.loc 1 213 0
 313 0090 0720     		movs	r0, #7
 314 0092 FFF7FEFF 		bl	Gpio_FullColor
 315              	.LVL33:
 316 0096 C7E7     		b	.L36
 317              	.L41:
 218:Src/mode.c    ****         {
 219:Src/mode.c    ****             Adc_IrSensorFinish();
 318              		.loc 1 219 0
 319 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 320              	.LVL34:
 220:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 321              		.loc 1 220 0
 322 009c 4FF49671 		mov	r1, #300
 323 00a0 4C20     		movs	r0, #76
 324 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 325              	.LVL35:
 221:Src/mode.c    ****             HAL_Delay(300);
 326              		.loc 1 221 0
 327 00a6 4FF49670 		mov	r0, #300
 328 00aa FFF7FEFF 		bl	HAL_Delay
 329              	.LVL36:
 222:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 330              		.loc 1 222 0
 331 00ae 0021     		movs	r1, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 11


 332 00b0 0A20     		movs	r0, #10
 333 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 334              	.LVL37:
 223:Src/mode.c    ****             HAL_Delay(500);
 335              		.loc 1 223 0
 336 00b6 4FF4FA70 		mov	r0, #500
 337 00ba FFF7FEFF 		bl	HAL_Delay
 338              	.LVL38:
 224:Src/mode.c    ****             break;
 225:Src/mode.c    ****         }
 226:Src/mode.c    ****     }
 227:Src/mode.c    **** }
 339              		.loc 1 227 0
 340 00be 02B0     		add	sp, sp, #8
 341              	.LCFI3:
 342              		.cfi_def_cfa_offset 8
 343              		@ sp needed
 344 00c0 10BD     		pop	{r4, pc}
 345              	.L46:
 346 00c2 00BF     		.align	2
 347              	.L45:
 348 00c4 00040240 		.word	1073873920
 349 00c8 00000240 		.word	1073872896
 350 00cc 00000000 		.word	sen_l
 351 00d0 00000000 		.word	sen_fl
 352 00d4 00000000 		.word	sen_front
 353 00d8 00000000 		.word	sen_fr
 354 00dc 00000000 		.word	sen_r
 355 00e0 00000000 		.word	.LC1
 356 00e4 00000000 		.word	accel
 357 00e8 00007042 		.word	1114636288
 358              		.cfi_endproc
 359              	.LFE128:
 361              		.section	.text.SetRunMode,"ax",%progbits
 362              		.align	1
 363              		.global	SetRunMode
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	SetRunMode:
 370              	.LFB129:
 228:Src/mode.c    **** 
 229:Src/mode.c    **** void SetRunMode(void)
 230:Src/mode.c    **** {
 371              		.loc 1 230 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI4:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 231:Src/mode.c    ****     Adc_IrSensorStart();
 380              		.loc 1 231 0
 381 0002 FFF7FEFF 		bl	Adc_IrSensorStart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 12


 382              	.LVL39:
 383              	.L48:
 232:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 384              		.loc 1 232 0 discriminator 1
 385 0006 154B     		ldr	r3, .L50
 386 0008 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 387 000a 012B     		cmp	r3, #1
 388 000c FBD1     		bne	.L48
 233:Src/mode.c    ****     {
 234:Src/mode.c    ****     }
 235:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 389              		.loc 1 235 0
 390 000e 4FF49671 		mov	r1, #300
 391 0012 4C20     		movs	r0, #76
 392 0014 FFF7FEFF 		bl	Tim_BuzzerPwm
 393              	.LVL40:
 236:Src/mode.c    ****     HAL_Delay(100);
 394              		.loc 1 236 0
 395 0018 6420     		movs	r0, #100
 396 001a FFF7FEFF 		bl	HAL_Delay
 397              	.LVL41:
 237:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 398              		.loc 1 237 0
 399 001e 0021     		movs	r1, #0
 400 0020 0A20     		movs	r0, #10
 401 0022 FFF7FEFF 		bl	Tim_BuzzerPwm
 402              	.LVL42:
 238:Src/mode.c    ****     HAL_Delay(5000);
 403              		.loc 1 238 0
 404 0026 41F28830 		movw	r0, #5000
 405 002a FFF7FEFF 		bl	HAL_Delay
 406              	.LVL43:
 239:Src/mode.c    ****     Spi_GyroReset();
 407              		.loc 1 239 0
 408 002e FFF7FEFF 		bl	Spi_GyroReset
 409              	.LVL44:
 240:Src/mode.c    ****     HAL_Delay(1200);
 410              		.loc 1 240 0
 411 0032 4FF49660 		mov	r0, #1200
 412 0036 FFF7FEFF 		bl	HAL_Delay
 413              	.LVL45:
 241:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 414              		.loc 1 241 0
 415 003a 4FF49671 		mov	r1, #300
 416 003e 4C20     		movs	r0, #76
 417 0040 FFF7FEFF 		bl	Tim_BuzzerPwm
 418              	.LVL46:
 242:Src/mode.c    ****     HAL_Delay(100);
 419              		.loc 1 242 0
 420 0044 6420     		movs	r0, #100
 421 0046 FFF7FEFF 		bl	HAL_Delay
 422              	.LVL47:
 243:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 423              		.loc 1 243 0
 424 004a 0021     		movs	r1, #0
 425 004c 0A20     		movs	r0, #10
 426 004e FFF7FEFF 		bl	Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 13


 427              	.LVL48:
 244:Src/mode.c    ****     motor_flag = TRUE;
 428              		.loc 1 244 0
 429 0052 034B     		ldr	r3, .L50+4
 430 0054 0122     		movs	r2, #1
 431 0056 1A70     		strb	r2, [r3]
 245:Src/mode.c    **** }
 432              		.loc 1 245 0
 433 0058 08BD     		pop	{r3, pc}
 434              	.L51:
 435 005a 00BF     		.align	2
 436              	.L50:
 437 005c 00000000 		.word	sen_front
 438 0060 00000000 		.word	motor_flag
 439              		.cfi_endproc
 440              	.LFE129:
 442              		.section	.text.Get_WallData,"ax",%progbits
 443              		.align	1
 444              		.global	Get_WallData
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	Get_WallData:
 451              	.LFB130:
 246:Src/mode.c    **** 
 247:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 248:Src/mode.c    **** {
 452              		.loc 1 248 0
 453              		.cfi_startproc
 454              		@ args = 12, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL49:
 458 0000 10B4     		push	{r4}
 459              	.LCFI5:
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 4, -4
 462 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 249:Src/mode.c    ****     // 方向別に壁の状態を取得
 250:Src/mode.c    ****     switch (direction)
 463              		.loc 1 250 0
 464 0006 032C     		cmp	r4, #3
 465 0008 0ED8     		bhi	.L52
 466 000a DFE804F0 		tbb	[pc, r4]
 467              	.L55:
 468 000e 02       		.byte	(.L54-.L55)/2
 469 000f 28       		.byte	(.L56-.L55)/2
 470 0010 1C       		.byte	(.L57-.L55)/2
 471 0011 10       		.byte	(.L58-.L55)/2
 472              		.p2align 1
 473              	.L54:
 251:Src/mode.c    ****     {
 252:Src/mode.c    ****     case NORTH:
 253:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 474              		.loc 1 253 0
 475 0012 194C     		ldr	r4, .L60
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 14


 476 0014 247B     		ldrb	r4, [r4, #12]	@ zero_extendqisi2
 477 0016 0470     		strb	r4, [r0]
 254:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 478              		.loc 1 254 0
 479 0018 1848     		ldr	r0, .L60+4
 480              	.LVL50:
 481 001a 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 482 001c 0870     		strb	r0, [r1]
 255:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 483              		.loc 1 255 0
 484 001e 1849     		ldr	r1, .L60+8
 485              	.LVL51:
 486 0020 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 487 0022 1170     		strb	r1, [r2]
 256:Src/mode.c    ****         *s_wall = 0;
 488              		.loc 1 256 0
 489 0024 0022     		movs	r2, #0
 490              	.LVL52:
 491 0026 1A70     		strb	r2, [r3]
 492              	.LVL53:
 493              	.L52:
 257:Src/mode.c    ****         break;
 258:Src/mode.c    ****     case EAST:
 259:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 260:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 261:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 262:Src/mode.c    ****         *w_wall = 0;
 263:Src/mode.c    ****         break;
 264:Src/mode.c    ****     case SOUTH:
 265:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 266:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 267:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 268:Src/mode.c    ****         *n_wall = 0;
 269:Src/mode.c    ****         break;
 270:Src/mode.c    ****     case WEST:
 271:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 272:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 273:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 274:Src/mode.c    ****         *e_wall = 0;
 275:Src/mode.c    ****         break;
 276:Src/mode.c    ****     default:
 277:Src/mode.c    ****         break;
 278:Src/mode.c    ****     }
 279:Src/mode.c    **** }
 494              		.loc 1 279 0
 495 0028 5DF8044B 		ldr	r4, [sp], #4
 496              	.LCFI6:
 497              		.cfi_remember_state
 498              		.cfi_restore 4
 499              		.cfi_def_cfa_offset 0
 500              	.LVL54:
 501 002c 7047     		bx	lr
 502              	.LVL55:
 503              	.L58:
 504              	.LCFI7:
 505              		.cfi_restore_state
 259:Src/mode.c    ****         *s_wall = sen_r.is_wall;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 15


 506              		.loc 1 259 0
 507 002e 124C     		ldr	r4, .L60
 508 0030 247B     		ldrb	r4, [r4, #12]	@ zero_extendqisi2
 509 0032 0C70     		strb	r4, [r1]
 260:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 510              		.loc 1 260 0
 511 0034 1149     		ldr	r1, .L60+4
 512              	.LVL56:
 513 0036 097B     		ldrb	r1, [r1, #12]	@ zero_extendqisi2
 514 0038 1970     		strb	r1, [r3]
 261:Src/mode.c    ****         *w_wall = 0;
 515              		.loc 1 261 0
 516 003a 114B     		ldr	r3, .L60+8
 517              	.LVL57:
 518 003c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 519 003e 0370     		strb	r3, [r0]
 262:Src/mode.c    ****         break;
 520              		.loc 1 262 0
 521 0040 0023     		movs	r3, #0
 522 0042 1370     		strb	r3, [r2]
 263:Src/mode.c    ****     case SOUTH:
 523              		.loc 1 263 0
 524 0044 F0E7     		b	.L52
 525              	.LVL58:
 526              	.L57:
 265:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 527              		.loc 1 265 0
 528 0046 0C4C     		ldr	r4, .L60
 529 0048 247B     		ldrb	r4, [r4, #12]	@ zero_extendqisi2
 530 004a 1C70     		strb	r4, [r3]
 266:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 531              		.loc 1 266 0
 532 004c 0B4B     		ldr	r3, .L60+4
 533              	.LVL59:
 534 004e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 535 0050 1370     		strb	r3, [r2]
 267:Src/mode.c    ****         *n_wall = 0;
 536              		.loc 1 267 0
 537 0052 0B4B     		ldr	r3, .L60+8
 538 0054 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 539 0056 0B70     		strb	r3, [r1]
 268:Src/mode.c    ****         break;
 540              		.loc 1 268 0
 541 0058 0023     		movs	r3, #0
 542 005a 0370     		strb	r3, [r0]
 269:Src/mode.c    ****     case WEST:
 543              		.loc 1 269 0
 544 005c E4E7     		b	.L52
 545              	.LVL60:
 546              	.L56:
 271:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 547              		.loc 1 271 0
 548 005e 064C     		ldr	r4, .L60
 549 0060 247B     		ldrb	r4, [r4, #12]	@ zero_extendqisi2
 550 0062 1470     		strb	r4, [r2]
 272:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 551              		.loc 1 272 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 16


 552 0064 054A     		ldr	r2, .L60+4
 553              	.LVL61:
 554 0066 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 555 0068 0270     		strb	r2, [r0]
 273:Src/mode.c    ****         *e_wall = 0;
 556              		.loc 1 273 0
 557 006a 054A     		ldr	r2, .L60+8
 558 006c 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 559 006e 1A70     		strb	r2, [r3]
 274:Src/mode.c    ****         break;
 560              		.loc 1 274 0
 561 0070 0023     		movs	r3, #0
 562              	.LVL62:
 563 0072 0B70     		strb	r3, [r1]
 564              		.loc 1 279 0
 565 0074 D8E7     		b	.L52
 566              	.L61:
 567 0076 00BF     		.align	2
 568              	.L60:
 569 0078 00000000 		.word	sen_front
 570 007c 00000000 		.word	sen_r
 571 0080 00000000 		.word	sen_l
 572              		.cfi_endproc
 573              	.LFE130:
 575              		.section	.text.SearchRun,"ax",%progbits
 576              		.align	1
 577              		.global	SearchRun
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	SearchRun:
 584              	.LFB131:
 280:Src/mode.c    **** 
 281:Src/mode.c    **** void SearchRun(void)
 282:Src/mode.c    **** {
 585              		.loc 1 282 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 288
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 30B5     		push	{r4, r5, lr}
 590              	.LCFI8:
 591              		.cfi_def_cfa_offset 12
 592              		.cfi_offset 4, -12
 593              		.cfi_offset 5, -8
 594              		.cfi_offset 14, -4
 595 0002 CDB0     		sub	sp, sp, #308
 596              	.LCFI9:
 597              		.cfi_def_cfa_offset 320
 283:Src/mode.c    ****     //壁情報を持った構造体を定義
 284:Src/mode.c    ****     wallData_t wall_data;
 285:Src/mode.c    ****     wallData_t wall_data_fast;
 286:Src/mode.c    **** 
 287:Src/mode.c    ****     //ポジションを定義、初期化
 288:Src/mode.c    ****     pos_t mypos;
 289:Src/mode.c    ****     mypos.dir = 0;
 598              		.loc 1 289 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 17


 599 0004 0024     		movs	r4, #0
 600 0006 8DF81E40 		strb	r4, [sp, #30]
 290:Src/mode.c    ****     mypos.x = 0;
 601              		.loc 1 290 0
 602 000a 8DF81C40 		strb	r4, [sp, #28]
 291:Src/mode.c    ****     mypos.y = 1;
 603              		.loc 1 291 0
 604 000e 0125     		movs	r5, #1
 605 0010 8DF81D50 		strb	r5, [sp, #29]
 292:Src/mode.c    **** 
 293:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 294:Src/mode.c    ****     Map_Init(&wall_data);
 606              		.loc 1 294 0
 607 0014 2AA8     		add	r0, sp, #168
 608 0016 FFF7FEFF 		bl	Map_Init
 609              	.LVL63:
 295:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 610              		.loc 1 295 0
 611 001a 08A8     		add	r0, sp, #32
 612 001c FFF7FEFF 		bl	Map_InitFast
 613              	.LVL64:
 296:Src/mode.c    **** 
 297:Src/mode.c    ****     //歩数マップの作製
 298:Src/mode.c    ****     unsigned char nextdir = FRONT;
 614              		.loc 1 298 0
 615 0020 8DF81B40 		strb	r4, [sp, #27]
 299:Src/mode.c    ****     //最初の区画は進んでいるものとする
 300:Src/mode.c    ****     unsigned char flag_goal = 0;
 616              		.loc 1 300 0
 617 0024 8DF81A40 		strb	r4, [sp, #26]
 301:Src/mode.c    ****     //enable control side wall
 302:Src/mode.c    ****     control_wall_flag = TRUE;
 618              		.loc 1 302 0
 619 0028 6F4B     		ldr	r3, .L69
 620 002a 1D70     		strb	r5, [r3]
 303:Src/mode.c    ****     SetRunMode();
 621              		.loc 1 303 0
 622 002c FFF7FEFF 		bl	SetRunMode
 623              	.LVL65:
 304:Src/mode.c    ****     Motion_Start();
 624              		.loc 1 304 0
 625 0030 FFF7FEFF 		bl	Motion_Start
 626              	.LVL66:
 627 0034 0FE0     		b	.L66
 628              	.L64:
 629              	.LBB2:
 305:Src/mode.c    ****     while (1)
 306:Src/mode.c    ****     {
 307:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 308:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 309:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 310:Src/mode.c    **** 
 311:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 312:Src/mode.c    ****         Map_addWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 313:Src/mode.c    **** 
 314:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 315:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 18


 316:Src/mode.c    ****         Maze_UpdatePosition(&nextdir, &mypos);
 317:Src/mode.c    ****         Motion_Switch(nextdir);
 318:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 319:Src/mode.c    ****         {
 320:Src/mode.c    ****             if (flag_goal == 0)
 321:Src/mode.c    ****             {
 322:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 323:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 324:Src/mode.c    ****                 Map_addWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 325:Src/mode.c    ****                 flag_goal = 1;
 326:Src/mode.c    ****                 Motion_End();
 327:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 328:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 329:Src/mode.c    ****                 HAL_Delay(200);
 330:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 331:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 332:Src/mode.c    ****                 {
 333:Src/mode.c    ****                     nextdir = FRONT;
 334:Src/mode.c    ****                     Maze_UpdatePosition(&nextdir, &mypos);
 335:Src/mode.c    ****                     Motion_Restart(FALSE);
 336:Src/mode.c    ****                 }
 337:Src/mode.c    ****                 else
 338:Src/mode.c    ****                 {
 339:Src/mode.c    ****                     nextdir = PIVO_REAR;
 630              		.loc 1 339 0
 631 0036 0423     		movs	r3, #4
 632 0038 8DF81B30 		strb	r3, [sp, #27]
 340:Src/mode.c    ****                     Maze_UpdatePosition(&nextdir, &mypos);
 633              		.loc 1 340 0
 634 003c 07A9     		add	r1, sp, #28
 635 003e 0DF11B00 		add	r0, sp, #27
 636 0042 FFF7FEFF 		bl	Maze_UpdatePosition
 637              	.LVL67:
 341:Src/mode.c    ****                     Motion_Restart(TRUE);
 638              		.loc 1 341 0
 639 0046 0120     		movs	r0, #1
 640 0048 FFF7FEFF 		bl	Motion_Restart
 641              	.LVL68:
 642              	.L63:
 342:Src/mode.c    ****                 }
 343:Src/mode.c    ****             }
 344:Src/mode.c    ****         }
 345:Src/mode.c    ****         if (flag_goal == 2)
 643              		.loc 1 345 0
 644 004c 9DF81A30 		ldrb	r3, [sp, #26]	@ zero_extendqisi2
 645 0050 022B     		cmp	r3, #2
 646 0052 00F0B080 		beq	.L68
 647              	.L66:
 307:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 648              		.loc 1 307 0
 649 0056 0023     		movs	r3, #0
 650 0058 8DF81630 		strb	r3, [sp, #22]
 651 005c 8DF81730 		strb	r3, [sp, #23]
 652 0060 8DF81830 		strb	r3, [sp, #24]
 653 0064 8DF81930 		strb	r3, [sp, #25]
 309:Src/mode.c    **** 
 654              		.loc 1 309 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 19


 655 0068 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 656 006c 0293     		str	r3, [sp, #8]
 657 006e 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 658 0072 0193     		str	r3, [sp, #4]
 659 0074 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 660 0078 0093     		str	r3, [sp]
 661 007a 0DF11903 		add	r3, sp, #25
 662 007e 06AA     		add	r2, sp, #24
 663 0080 0DF11701 		add	r1, sp, #23
 664 0084 0DF11600 		add	r0, sp, #22
 665 0088 FFF7FEFF 		bl	Get_WallData
 666              	.LVL69:
 311:Src/mode.c    ****         Map_addWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 667              		.loc 1 311 0
 668 008c 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 669 0090 9DF81620 		ldrb	r2, [sp, #22]	@ zero_extendqisi2
 670 0094 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 671 0098 0191     		str	r1, [sp, #4]
 672 009a 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 673 009e 0091     		str	r1, [sp]
 674 00a0 07A9     		add	r1, sp, #28
 675 00a2 2AA8     		add	r0, sp, #168
 676 00a4 FFF7FEFF 		bl	Map_addWall
 677              	.LVL70:
 312:Src/mode.c    **** 
 678              		.loc 1 312 0
 679 00a8 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 680 00ac 9DF81620 		ldrb	r2, [sp, #22]	@ zero_extendqisi2
 681 00b0 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 682 00b4 0191     		str	r1, [sp, #4]
 683 00b6 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 684 00ba 0091     		str	r1, [sp]
 685 00bc 07A9     		add	r1, sp, #28
 686 00be 08A8     		add	r0, sp, #32
 687 00c0 FFF7FEFF 		bl	Map_addWall
 688              	.LVL71:
 314:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 689              		.loc 1 314 0
 690 00c4 494C     		ldr	r4, .L69+4
 691 00c6 2AAB     		add	r3, sp, #168
 692 00c8 494A     		ldr	r2, .L69+8
 693 00ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 694 00cc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 695 00ce 0DF11A00 		add	r0, sp, #26
 696 00d2 FFF7FEFF 		bl	Maze_UpdateStepMap
 697              	.LVL72:
 315:Src/mode.c    ****         Maze_UpdatePosition(&nextdir, &mypos);
 698              		.loc 1 315 0
 699 00d6 2AA9     		add	r1, sp, #168
 700 00d8 07A8     		add	r0, sp, #28
 701 00da FFF7FEFF 		bl	Maze_GetNextMotion
 702              	.LVL73:
 703 00de 8DF81B00 		strb	r0, [sp, #27]
 316:Src/mode.c    ****         Motion_Switch(nextdir);
 704              		.loc 1 316 0
 705 00e2 07A9     		add	r1, sp, #28
 706 00e4 0DF11B00 		add	r0, sp, #27
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 20


 707 00e8 FFF7FEFF 		bl	Maze_UpdatePosition
 708              	.LVL74:
 317:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 709              		.loc 1 317 0
 710 00ec 9DF81B00 		ldrb	r0, [sp, #27]	@ zero_extendqisi2
 711 00f0 FFF7FEFF 		bl	Motion_Switch
 712              	.LVL75:
 318:Src/mode.c    ****         {
 713              		.loc 1 318 0
 714 00f4 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 715 00f8 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 716 00fa 9342     		cmp	r3, r2
 717 00fc A6D1     		bne	.L63
 318:Src/mode.c    ****         {
 718              		.loc 1 318 0 is_stmt 0 discriminator 1
 719 00fe 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 720 0102 3B49     		ldr	r1, .L69+8
 721 0104 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 722 0106 8A42     		cmp	r2, r1
 723 0108 A0D1     		bne	.L63
 320:Src/mode.c    ****             {
 724              		.loc 1 320 0 is_stmt 1
 725 010a 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 726 010e 0029     		cmp	r1, #0
 727 0110 9CD1     		bne	.L63
 322:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 728              		.loc 1 322 0
 729 0112 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 730 0116 0291     		str	r1, [sp, #8]
 731 0118 0192     		str	r2, [sp, #4]
 732 011a 0093     		str	r3, [sp]
 733 011c 0DF11903 		add	r3, sp, #25
 734 0120 06AA     		add	r2, sp, #24
 735 0122 0DF11701 		add	r1, sp, #23
 736 0126 0DF11600 		add	r0, sp, #22
 737 012a FFF7FEFF 		bl	Get_WallData
 738              	.LVL76:
 323:Src/mode.c    ****                 Map_addWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 739              		.loc 1 323 0
 740 012e 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 741 0132 9DF81620 		ldrb	r2, [sp, #22]	@ zero_extendqisi2
 742 0136 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 743 013a 0191     		str	r1, [sp, #4]
 744 013c 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 745 0140 0091     		str	r1, [sp]
 746 0142 07A9     		add	r1, sp, #28
 747 0144 2AA8     		add	r0, sp, #168
 748 0146 FFF7FEFF 		bl	Map_addWall
 749              	.LVL77:
 324:Src/mode.c    ****                 flag_goal = 1;
 750              		.loc 1 324 0
 751 014a 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 752 014e 9DF81620 		ldrb	r2, [sp, #22]	@ zero_extendqisi2
 753 0152 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 754 0156 0191     		str	r1, [sp, #4]
 755 0158 9DF81810 		ldrb	r1, [sp, #24]	@ zero_extendqisi2
 756 015c 0091     		str	r1, [sp]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 21


 757 015e 07A9     		add	r1, sp, #28
 758 0160 08A8     		add	r0, sp, #32
 759 0162 FFF7FEFF 		bl	Map_addWall
 760              	.LVL78:
 325:Src/mode.c    ****                 Motion_End();
 761              		.loc 1 325 0
 762 0166 0123     		movs	r3, #1
 763 0168 8DF81A30 		strb	r3, [sp, #26]
 326:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 764              		.loc 1 326 0
 765 016c FFF7FEFF 		bl	Motion_End
 766              	.LVL79:
 327:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 767              		.loc 1 327 0
 768 0170 8822     		movs	r2, #136
 769 0172 08A9     		add	r1, sp, #32
 770 0174 1F4B     		ldr	r3, .L69+12
 771 0176 1868     		ldr	r0, [r3]
 772 0178 FFF7FEFF 		bl	Flash_Write
 773              	.LVL80:
 328:Src/mode.c    ****                 HAL_Delay(200);
 774              		.loc 1 328 0
 775 017c 4FF49671 		mov	r1, #300
 776 0180 5B20     		movs	r0, #91
 777 0182 FFF7FEFF 		bl	Tim_BuzzerPwm
 778              	.LVL81:
 329:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 779              		.loc 1 329 0
 780 0186 C820     		movs	r0, #200
 781 0188 FFF7FEFF 		bl	HAL_Delay
 782              	.LVL82:
 330:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
 783              		.loc 1 330 0
 784 018c 0021     		movs	r1, #0
 785 018e 0A20     		movs	r0, #10
 786 0190 FFF7FEFF 		bl	Tim_BuzzerPwm
 787              	.LVL83:
 331:Src/mode.c    ****                 {
 788              		.loc 1 331 0
 789 0194 184B     		ldr	r3, .L69+16
 790 0196 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 791 0198 002B     		cmp	r3, #0
 792 019a 7FF44CAF 		bne	.L64
 333:Src/mode.c    ****                     Maze_UpdatePosition(&nextdir, &mypos);
 793              		.loc 1 333 0
 794 019e 0024     		movs	r4, #0
 795 01a0 8DF81B40 		strb	r4, [sp, #27]
 334:Src/mode.c    ****                     Motion_Restart(FALSE);
 796              		.loc 1 334 0
 797 01a4 07A9     		add	r1, sp, #28
 798 01a6 0DF11B00 		add	r0, sp, #27
 799 01aa FFF7FEFF 		bl	Maze_UpdatePosition
 800              	.LVL84:
 335:Src/mode.c    ****                 }
 801              		.loc 1 335 0
 802 01ae 2046     		mov	r0, r4
 803 01b0 FFF7FEFF 		bl	Motion_Restart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 22


 804              	.LVL85:
 805 01b4 4AE7     		b	.L63
 806              	.L68:
 346:Src/mode.c    ****         {
 347:Src/mode.c    **** 
 348:Src/mode.c    ****             Motion_End();
 807              		.loc 1 348 0
 808 01b6 FFF7FEFF 		bl	Motion_End
 809              	.LVL86:
 349:Src/mode.c    ****             motor_flag = FALSE;
 810              		.loc 1 349 0
 811 01ba 0024     		movs	r4, #0
 812 01bc 0F4B     		ldr	r3, .L69+20
 813 01be 1C70     		strb	r4, [r3]
 350:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 814              		.loc 1 350 0
 815 01c0 8822     		movs	r2, #136
 816 01c2 08A9     		add	r1, sp, #32
 817 01c4 0B4B     		ldr	r3, .L69+12
 818 01c6 1868     		ldr	r0, [r3]
 819 01c8 FFF7FEFF 		bl	Flash_Write
 820              	.LVL87:
 351:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 821              		.loc 1 351 0
 822 01cc 4FF49671 		mov	r1, #300
 823 01d0 5B20     		movs	r0, #91
 824 01d2 FFF7FEFF 		bl	Tim_BuzzerPwm
 825              	.LVL88:
 352:Src/mode.c    ****             HAL_Delay(200);
 826              		.loc 1 352 0
 827 01d6 C820     		movs	r0, #200
 828 01d8 FFF7FEFF 		bl	HAL_Delay
 829              	.LVL89:
 353:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 830              		.loc 1 353 0
 831 01dc 2146     		mov	r1, r4
 832 01de 0A20     		movs	r0, #10
 833 01e0 FFF7FEFF 		bl	Tim_BuzzerPwm
 834              	.LVL90:
 835              	.LBE2:
 354:Src/mode.c    ****             break;
 355:Src/mode.c    ****         }
 356:Src/mode.c    ****     }
 357:Src/mode.c    **** }
 836              		.loc 1 357 0
 837 01e4 4DB0     		add	sp, sp, #308
 838              	.LCFI10:
 839              		.cfi_def_cfa_offset 12
 840              		@ sp needed
 841 01e6 30BD     		pop	{r4, r5, pc}
 842              	.L70:
 843              		.align	2
 844              	.L69:
 845 01e8 00000000 		.word	control_wall_flag
 846 01ec 00000000 		.word	.LANCHOR1
 847 01f0 00000000 		.word	.LANCHOR0
 848 01f4 00000000 		.word	start_address
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 23


 849 01f8 00000000 		.word	sen_front
 850 01fc 00000000 		.word	motor_flag
 851              		.cfi_endproc
 852              	.LFE131:
 854              		.section	.text.Mode_FastRun,"ax",%progbits
 855              		.align	1
 856              		.global	Mode_FastRun
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	Mode_FastRun:
 863              	.LFB132:
 358:Src/mode.c    **** 
 359:Src/mode.c    **** void Mode_FastRun(void)
 360:Src/mode.c    **** {
 864              		.loc 1 360 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 400
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868 0000 10B5     		push	{r4, lr}
 869              	.LCFI11:
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 4, -8
 872              		.cfi_offset 14, -4
 873 0002 E4B0     		sub	sp, sp, #400
 874              	.LCFI12:
 875              		.cfi_def_cfa_offset 408
 361:Src/mode.c    ****     wallData_t wallData;
 362:Src/mode.c    ****     uint8_t motion[255];
 363:Src/mode.c    ****     uint8_t tail = 0;
 876              		.loc 1 363 0
 877 0004 0023     		movs	r3, #0
 878 0006 8DF80730 		strb	r3, [sp, #7]
 364:Src/mode.c    ****     uint8_t head = 0;
 879              		.loc 1 364 0
 880 000a 8DF80630 		strb	r3, [sp, #6]
 365:Src/mode.c    ****     uint8_t goal_flag = 0;
 881              		.loc 1 365 0
 882 000e 8DF80530 		strb	r3, [sp, #5]
 366:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 883              		.loc 1 366 0
 884 0012 8822     		movs	r2, #136
 885 0014 42A9     		add	r1, sp, #264
 886 0016 334B     		ldr	r3, .L83
 887 0018 1868     		ldr	r0, [r3]
 888 001a FFF7FEFF 		bl	Flash_Load
 889              	.LVL91:
 367:Src/mode.c    ****     Maze_UpdateStepMap(&goal_flag, gx, gy, &wallData);
 890              		.loc 1 367 0
 891 001e 42AB     		add	r3, sp, #264
 892 0020 314A     		ldr	r2, .L83+4
 893 0022 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 894 0024 3149     		ldr	r1, .L83+8
 895 0026 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 896 0028 0DF10500 		add	r0, sp, #5
 897 002c FFF7FEFF 		bl	Maze_UpdateStepMap
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 24


 898              	.LVL92:
 368:Src/mode.c    ****     Plan_Root(motion, &wallData, &tail);
 899              		.loc 1 368 0
 900 0030 0DF10702 		add	r2, sp, #7
 901 0034 42A9     		add	r1, sp, #264
 902 0036 02A8     		add	r0, sp, #8
 903 0038 FFF7FEFF 		bl	Plan_Root
 904              	.LVL93:
 369:Src/mode.c    ****     Plan_Compress(motion, &head, &tail);
 905              		.loc 1 369 0
 906 003c 0DF10702 		add	r2, sp, #7
 907 0040 0DF10601 		add	r1, sp, #6
 908 0044 02A8     		add	r0, sp, #8
 909 0046 FFF7FEFF 		bl	Plan_Compress
 910              	.LVL94:
 370:Src/mode.c    ****     control_wall_flag = TRUE;
 911              		.loc 1 370 0
 912 004a 294B     		ldr	r3, .L83+12
 913 004c 0122     		movs	r2, #1
 914 004e 1A70     		strb	r2, [r3]
 371:Src/mode.c    ****     SetRunMode();
 915              		.loc 1 371 0
 916 0050 FFF7FEFF 		bl	SetRunMode
 917              	.LVL95:
 372:Src/mode.c    ****     while (head != tail)
 918              		.loc 1 372 0
 919 0054 08E0     		b	.L72
 920              	.L78:
 373:Src/mode.c    ****     {
 374:Src/mode.c    ****         switch (motion[head] >> 4)
 375:Src/mode.c    ****         {
 376:Src/mode.c    ****         case START:
 377:Src/mode.c    ****             Motion_FastStart(motion[head] & 0b1111);
 921              		.loc 1 377 0
 922 0056 00F00F00 		and	r0, r0, #15
 923 005a FFF7FEFF 		bl	Motion_FastStart
 924              	.LVL96:
 925              	.L73:
 378:Src/mode.c    ****             //printf("\r\nSTART:%d\r\n",motion[head]&0b1111);
 379:Src/mode.c    ****             break;
 380:Src/mode.c    ****         case LEFT:
 381:Src/mode.c    ****             Motion_LeftTurn();
 382:Src/mode.c    ****             //printf("LEFT:%d\n\r",motion[head]&0b1111);
 383:Src/mode.c    ****             break;
 384:Src/mode.c    ****         case FRONT:
 385:Src/mode.c    ****             Motion_FastStraight(motion[head] & 0b1111);
 386:Src/mode.c    ****             //printf("FRONT:%d\n\r",motion[head]&0b1111);
 387:Src/mode.c    ****             break;
 388:Src/mode.c    ****         case RIGHT:
 389:Src/mode.c    ****             Motion_RightTurn();
 390:Src/mode.c    ****             //printf("RIGHT\n\r");
 391:Src/mode.c    ****             break;
 392:Src/mode.c    ****         case GOAL:
 393:Src/mode.c    ****             Motion_FastGoal(motion[head] & 0b1111);
 394:Src/mode.c    ****             //printf("GOAL:%d\n\r",motion[head]&0b1111);
 395:Src/mode.c    ****             break;
 396:Src/mode.c    ****         default:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 25


 397:Src/mode.c    ****             break;
 398:Src/mode.c    ****         }
 399:Src/mode.c    ****         head++;
 926              		.loc 1 399 0
 927 005e 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 928 0062 0133     		adds	r3, r3, #1
 929 0064 8DF80630 		strb	r3, [sp, #6]
 930              	.L72:
 372:Src/mode.c    ****     {
 931              		.loc 1 372 0
 932 0068 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 933 006c 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 934 0070 9342     		cmp	r3, r2
 935 0072 25D0     		beq	.L82
 374:Src/mode.c    ****         {
 936              		.loc 1 374 0
 937 0074 02AA     		add	r2, sp, #8
 938 0076 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 939 0078 0309     		lsrs	r3, r0, #4
 940 007a 062B     		cmp	r3, #6
 941 007c EFD8     		bhi	.L73
 942 007e 01A2     		adr	r2, .L75
 943 0080 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 944              		.p2align 2
 945              	.L75:
 946 0084 A7000000 		.word	.L74+1
 947 0088 A1000000 		.word	.L76+1
 948 008c B1000000 		.word	.L77+1
 949 0090 5F000000 		.word	.L73+1
 950 0094 5F000000 		.word	.L73+1
 951 0098 57000000 		.word	.L78+1
 952 009c B7000000 		.word	.L79+1
 953              		.p2align 1
 954              	.L76:
 381:Src/mode.c    ****             //printf("LEFT:%d\n\r",motion[head]&0b1111);
 955              		.loc 1 381 0
 956 00a0 FFF7FEFF 		bl	Motion_LeftTurn
 957              	.LVL97:
 383:Src/mode.c    ****         case FRONT:
 958              		.loc 1 383 0
 959 00a4 DBE7     		b	.L73
 960              	.L74:
 385:Src/mode.c    ****             //printf("FRONT:%d\n\r",motion[head]&0b1111);
 961              		.loc 1 385 0
 962 00a6 00F00F00 		and	r0, r0, #15
 963 00aa FFF7FEFF 		bl	Motion_FastStraight
 964              	.LVL98:
 387:Src/mode.c    ****         case RIGHT:
 965              		.loc 1 387 0
 966 00ae D6E7     		b	.L73
 967              	.L77:
 389:Src/mode.c    ****             //printf("RIGHT\n\r");
 968              		.loc 1 389 0
 969 00b0 FFF7FEFF 		bl	Motion_RightTurn
 970              	.LVL99:
 391:Src/mode.c    ****         case GOAL:
 971              		.loc 1 391 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 26


 972 00b4 D3E7     		b	.L73
 973              	.L79:
 393:Src/mode.c    ****             //printf("GOAL:%d\n\r",motion[head]&0b1111);
 974              		.loc 1 393 0
 975 00b6 00F00F00 		and	r0, r0, #15
 976 00ba FFF7FEFF 		bl	Motion_FastGoal
 977              	.LVL100:
 395:Src/mode.c    ****         default:
 978              		.loc 1 395 0
 979 00be CEE7     		b	.L73
 980              	.L82:
 400:Src/mode.c    ****     }
 401:Src/mode.c    ****     motor_flag = FALSE;
 981              		.loc 1 401 0
 982 00c0 0024     		movs	r4, #0
 983 00c2 0C4B     		ldr	r3, .L83+16
 984 00c4 1C70     		strb	r4, [r3]
 402:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 985              		.loc 1 402 0
 986 00c6 4FF49671 		mov	r1, #300
 987 00ca 4C20     		movs	r0, #76
 988 00cc FFF7FEFF 		bl	Tim_BuzzerPwm
 989              	.LVL101:
 403:Src/mode.c    ****     HAL_Delay(200);
 990              		.loc 1 403 0
 991 00d0 C820     		movs	r0, #200
 992 00d2 FFF7FEFF 		bl	HAL_Delay
 993              	.LVL102:
 404:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 994              		.loc 1 404 0
 995 00d6 2146     		mov	r1, r4
 996 00d8 0A20     		movs	r0, #10
 997 00da FFF7FEFF 		bl	Tim_BuzzerPwm
 998              	.LVL103:
 405:Src/mode.c    **** }
 999              		.loc 1 405 0
 1000 00de 64B0     		add	sp, sp, #400
 1001              	.LCFI13:
 1002              		.cfi_def_cfa_offset 8
 1003              		@ sp needed
 1004 00e0 10BD     		pop	{r4, pc}
 1005              	.L84:
 1006 00e2 00BF     		.align	2
 1007              	.L83:
 1008 00e4 00000000 		.word	start_address
 1009 00e8 00000000 		.word	.LANCHOR0
 1010 00ec 00000000 		.word	.LANCHOR1
 1011 00f0 00000000 		.word	control_wall_flag
 1012 00f4 00000000 		.word	motor_flag
 1013              		.cfi_endproc
 1014              	.LFE132:
 1016              		.section	.text.CheckStraight,"ax",%progbits
 1017              		.align	1
 1018              		.global	CheckStraight
 1019              		.syntax unified
 1020              		.thumb
 1021              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 27


 1022              		.fpu fpv4-sp-d16
 1024              	CheckStraight:
 1025              	.LFB133:
 406:Src/mode.c    **** 
 407:Src/mode.c    **** void CheckStraight(uint8_t block)
 408:Src/mode.c    **** {
 1026              		.loc 1 408 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL104:
 1031 0000 38B5     		push	{r3, r4, r5, lr}
 1032              	.LCFI14:
 1033              		.cfi_def_cfa_offset 16
 1034              		.cfi_offset 3, -16
 1035              		.cfi_offset 4, -12
 1036              		.cfi_offset 5, -8
 1037              		.cfi_offset 14, -4
 1038 0002 0546     		mov	r5, r0
 409:Src/mode.c    ****     SetRunMode();
 1039              		.loc 1 409 0
 1040 0004 FFF7FEFF 		bl	SetRunMode
 1041              	.LVL105:
 410:Src/mode.c    ****     Motion_Start();
 1042              		.loc 1 410 0
 1043 0008 FFF7FEFF 		bl	Motion_Start
 1044              	.LVL106:
 1045              	.LBB3:
 411:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1046              		.loc 1 411 0
 1047 000c 0024     		movs	r4, #0
 1048 000e 03E0     		b	.L86
 1049              	.LVL107:
 1050              	.L87:
 412:Src/mode.c    ****     {
 413:Src/mode.c    ****         Motion_Straight();
 1051              		.loc 1 413 0 discriminator 3
 1052 0010 FFF7FEFF 		bl	Motion_Straight
 1053              	.LVL108:
 411:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1054              		.loc 1 411 0 discriminator 3
 1055 0014 0134     		adds	r4, r4, #1
 1056              	.LVL109:
 1057 0016 E4B2     		uxtb	r4, r4
 1058              	.LVL110:
 1059              	.L86:
 411:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1060              		.loc 1 411 0 is_stmt 0 discriminator 1
 1061 0018 AC42     		cmp	r4, r5
 1062 001a F9D3     		bcc	.L87
 1063              	.LBE3:
 414:Src/mode.c    ****     }
 415:Src/mode.c    ****     Motion_End();
 1064              		.loc 1 415 0 is_stmt 1
 1065 001c FFF7FEFF 		bl	Motion_End
 1066              	.LVL111:
 416:Src/mode.c    ****     motor_flag = FALSE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 28


 1067              		.loc 1 416 0
 1068 0020 0025     		movs	r5, #0
 1069 0022 144B     		ldr	r3, .L89
 1070 0024 1D70     		strb	r5, [r3]
 417:Src/mode.c    ****     loger.velo[loger.cnt] = enc.distance;
 1071              		.loc 1 417 0
 1072 0026 144B     		ldr	r3, .L89+4
 1073 0028 D3ED007A 		vldr.32	s15, [r3]
 1074 002c 134C     		ldr	r4, .L89+8
 1075              	.LVL112:
 1076 002e 2388     		ldrh	r3, [r4]
 1077 0030 03F5BB53 		add	r3, r3, #5984
 1078 0034 1033     		adds	r3, r3, #16
 1079 0036 04EB4303 		add	r3, r4, r3, lsl #1
 1080 003a FDEEE77A 		vcvt.s32.f32	s15, s15
 1081 003e 17EE902A 		vmov	r2, s15	@ int
 1082 0042 5A80     		strh	r2, [r3, #2]	@ movhi
 418:Src/mode.c    ****     HAL_Delay(500);
 1083              		.loc 1 418 0
 1084 0044 4FF4FA70 		mov	r0, #500
 1085 0048 FFF7FEFF 		bl	HAL_Delay
 1086              	.LVL113:
 419:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1087              		.loc 1 419 0
 1088 004c 45F6C252 		movw	r2, #24002
 1089 0050 2146     		mov	r1, r4
 1090 0052 0B4B     		ldr	r3, .L89+12
 1091 0054 1868     		ldr	r0, [r3]
 1092 0056 FFF7FEFF 		bl	Flash_Write
 1093              	.LVL114:
 420:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1094              		.loc 1 420 0
 1095 005a 4FF49671 		mov	r1, #300
 1096 005e 4C20     		movs	r0, #76
 1097 0060 FFF7FEFF 		bl	Tim_BuzzerPwm
 1098              	.LVL115:
 421:Src/mode.c    ****     HAL_Delay(200);
 1099              		.loc 1 421 0
 1100 0064 C820     		movs	r0, #200
 1101 0066 FFF7FEFF 		bl	HAL_Delay
 1102              	.LVL116:
 422:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1103              		.loc 1 422 0
 1104 006a 2946     		mov	r1, r5
 1105 006c 0A20     		movs	r0, #10
 1106 006e FFF7FEFF 		bl	Tim_BuzzerPwm
 1107              	.LVL117:
 423:Src/mode.c    **** }
 1108              		.loc 1 423 0
 1109 0072 38BD     		pop	{r3, r4, r5, pc}
 1110              	.L90:
 1111              		.align	2
 1112              	.L89:
 1113 0074 00000000 		.word	motor_flag
 1114 0078 00000000 		.word	enc
 1115 007c 00000000 		.word	loger
 1116 0080 00000000 		.word	start_address
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 29


 1117              		.cfi_endproc
 1118              	.LFE133:
 1120              		.section	.text.CheckTurn,"ax",%progbits
 1121              		.align	1
 1122              		.global	CheckTurn
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1126              		.fpu fpv4-sp-d16
 1128              	CheckTurn:
 1129              	.LFB134:
 424:Src/mode.c    **** 
 425:Src/mode.c    **** void CheckTurn(void)
 426:Src/mode.c    **** {
 1130              		.loc 1 426 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134 0000 38B5     		push	{r3, r4, r5, lr}
 1135              	.LCFI15:
 1136              		.cfi_def_cfa_offset 16
 1137              		.cfi_offset 3, -16
 1138              		.cfi_offset 4, -12
 1139              		.cfi_offset 5, -8
 1140              		.cfi_offset 14, -4
 427:Src/mode.c    ****     SetRunMode();
 1141              		.loc 1 427 0
 1142 0002 FFF7FEFF 		bl	SetRunMode
 1143              	.LVL118:
 428:Src/mode.c    ****     gyro_z.degree = 0;
 1144              		.loc 1 428 0
 1145 0006 144D     		ldr	r5, .L93
 1146 0008 0023     		movs	r3, #0
 1147 000a 6B60     		str	r3, [r5, #4]	@ float
 429:Src/mode.c    ****     Motion_TestTurn();
 1148              		.loc 1 429 0
 1149 000c FFF7FEFF 		bl	Motion_TestTurn
 1150              	.LVL119:
 430:Src/mode.c    ****     motor_flag = FALSE;
 1151              		.loc 1 430 0
 1152 0010 0024     		movs	r4, #0
 1153 0012 124B     		ldr	r3, .L93+4
 1154 0014 1C70     		strb	r4, [r3]
 431:Src/mode.c    ****     loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 1155              		.loc 1 431 0
 1156 0016 D5ED017A 		vldr.32	s15, [r5, #4]
 1157 001a 1149     		ldr	r1, .L93+8
 1158 001c 0B88     		ldrh	r3, [r1]
 1159 001e FDEEE77A 		vcvt.s32.f32	s15, s15
 1160 0022 03F50C53 		add	r3, r3, #8960
 1161 0026 2833     		adds	r3, r3, #40
 1162 0028 01EB4303 		add	r3, r1, r3, lsl #1
 1163 002c 17EE902A 		vmov	r2, s15	@ int
 1164 0030 5A80     		strh	r2, [r3, #2]	@ movhi
 432:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1165              		.loc 1 432 0
 1166 0032 45F6C252 		movw	r2, #24002
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 30


 1167 0036 0B4B     		ldr	r3, .L93+12
 1168 0038 1868     		ldr	r0, [r3]
 1169 003a FFF7FEFF 		bl	Flash_Write
 1170              	.LVL120:
 433:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1171              		.loc 1 433 0
 1172 003e 4FF49671 		mov	r1, #300
 1173 0042 4C20     		movs	r0, #76
 1174 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 1175              	.LVL121:
 434:Src/mode.c    ****     HAL_Delay(200);
 1176              		.loc 1 434 0
 1177 0048 C820     		movs	r0, #200
 1178 004a FFF7FEFF 		bl	HAL_Delay
 1179              	.LVL122:
 435:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1180              		.loc 1 435 0
 1181 004e 2146     		mov	r1, r4
 1182 0050 0A20     		movs	r0, #10
 1183 0052 FFF7FEFF 		bl	Tim_BuzzerPwm
 1184              	.LVL123:
 436:Src/mode.c    **** }
 1185              		.loc 1 436 0
 1186 0056 38BD     		pop	{r3, r4, r5, pc}
 1187              	.L94:
 1188              		.align	2
 1189              	.L93:
 1190 0058 00000000 		.word	gyro_z
 1191 005c 00000000 		.word	motor_flag
 1192 0060 00000000 		.word	loger
 1193 0064 00000000 		.word	start_address
 1194              		.cfi_endproc
 1195              	.LFE134:
 1197              		.section	.text.PrintOutPut,"ax",%progbits
 1198              		.align	1
 1199              		.global	PrintOutPut
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu fpv4-sp-d16
 1205              	PrintOutPut:
 1206              	.LFB135:
 437:Src/mode.c    **** 
 438:Src/mode.c    **** void PrintOutPut(void)
 439:Src/mode.c    **** {
 1207              		.loc 1 439 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211 0000 30B5     		push	{r4, r5, lr}
 1212              	.LCFI16:
 1213              		.cfi_def_cfa_offset 12
 1214              		.cfi_offset 4, -12
 1215              		.cfi_offset 5, -8
 1216              		.cfi_offset 14, -4
 1217 0002 83B0     		sub	sp, sp, #12
 1218              	.LCFI17:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 31


 1219              		.cfi_def_cfa_offset 24
 440:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1220              		.loc 1 440 0
 1221 0004 45F6C252 		movw	r2, #24002
 1222 0008 1549     		ldr	r1, .L99
 1223 000a 164B     		ldr	r3, .L99+4
 1224 000c 1868     		ldr	r0, [r3]
 1225 000e FFF7FEFF 		bl	Flash_Load
 1226              	.LVL124:
 1227              	.LBB4:
 441:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1228              		.loc 1 441 0
 1229 0012 0024     		movs	r4, #0
 1230 0014 1EE0     		b	.L96
 1231              	.LVL125:
 1232              	.L97:
 442:Src/mode.c    ****     {
 443:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 444:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 445:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
 1233              		.loc 1 445 0 discriminator 3
 1234 0016 1248     		ldr	r0, .L99
 1235 0018 00EB4403 		add	r3, r0, r4, lsl #1
 1236 001c B3F90210 		ldrsh	r1, [r3, #2]
 1237 0020 04F5BB53 		add	r3, r4, #5984
 1238 0024 1033     		adds	r3, r3, #16
 1239 0026 00EB4303 		add	r3, r0, r3, lsl #1
 1240 002a B3F90220 		ldrsh	r2, [r3, #2]
 1241 002e 04F6B833 		addw	r3, r4, #3000
 1242 0032 00EB4303 		add	r3, r0, r3, lsl #1
 1243 0036 B3F90230 		ldrsh	r3, [r3, #2]
 1244 003a 04F50C55 		add	r5, r4, #8960
 1245 003e 2835     		adds	r5, r5, #40
 1246 0040 00EB4500 		add	r0, r0, r5, lsl #1
 1247 0044 B0F90200 		ldrsh	r0, [r0, #2]
 1248 0048 0090     		str	r0, [sp]
 1249 004a 0748     		ldr	r0, .L99+8
 1250 004c FFF7FEFF 		bl	printf
 1251              	.LVL126:
 441:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1252              		.loc 1 441 0 discriminator 3
 1253 0050 0134     		adds	r4, r4, #1
 1254              	.LVL127:
 1255 0052 A4B2     		uxth	r4, r4
 1256              	.LVL128:
 1257              	.L96:
 441:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1258              		.loc 1 441 0 is_stmt 0 discriminator 1
 1259 0054 024B     		ldr	r3, .L99
 1260 0056 1B88     		ldrh	r3, [r3]
 1261 0058 A342     		cmp	r3, r4
 1262 005a DCD2     		bcs	.L97
 1263              	.LBE4:
 446:Src/mode.c    ****     }
 447:Src/mode.c    **** }
 1264              		.loc 1 447 0 is_stmt 1
 1265 005c 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 32


 1266              	.LCFI18:
 1267              		.cfi_def_cfa_offset 12
 1268              		@ sp needed
 1269 005e 30BD     		pop	{r4, r5, pc}
 1270              	.LVL129:
 1271              	.L100:
 1272              		.align	2
 1273              	.L99:
 1274 0060 00000000 		.word	loger
 1275 0064 00000000 		.word	start_address
 1276 0068 00000000 		.word	.LC2
 1277              		.cfi_endproc
 1278              	.LFE135:
 1280              		.section	.text.AdjustStraight,"ax",%progbits
 1281              		.align	1
 1282              		.global	AdjustStraight
 1283              		.syntax unified
 1284              		.thumb
 1285              		.thumb_func
 1286              		.fpu fpv4-sp-d16
 1288              	AdjustStraight:
 1289              	.LFB136:
 448:Src/mode.c    **** 
 449:Src/mode.c    **** void AdjustStraight(void)
 450:Src/mode.c    **** {
 1290              		.loc 1 450 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294 0000 08B5     		push	{r3, lr}
 1295              	.LCFI19:
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 3, -8
 1298              		.cfi_offset 14, -4
 451:Src/mode.c    ****     SetRunMode();
 1299              		.loc 1 451 0
 1300 0002 FFF7FEFF 		bl	SetRunMode
 1301              	.LVL130:
 452:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 1302              		.loc 1 452 0
 1303 0006 6021     		movs	r1, #96
 1304 0008 0846     		mov	r0, r1
 1305 000a FFF7FEFF 		bl	Tim_MotorPwm
 1306              	.LVL131:
 1307              	.L102:
 453:Src/mode.c    ****     while (motor_flag == TRUE)
 1308              		.loc 1 453 0 discriminator 1
 1309 000e 0E4B     		ldr	r3, .L104
 1310 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1311 0012 DBB2     		uxtb	r3, r3
 1312 0014 012B     		cmp	r3, #1
 1313 0016 FAD0     		beq	.L102
 454:Src/mode.c    ****     {
 455:Src/mode.c    ****     }
 456:Src/mode.c    ****     HAL_Delay(500);
 1314              		.loc 1 456 0
 1315 0018 4FF4FA70 		mov	r0, #500
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 33


 1316 001c FFF7FEFF 		bl	HAL_Delay
 1317              	.LVL132:
 457:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1318              		.loc 1 457 0
 1319 0020 45F6C252 		movw	r2, #24002
 1320 0024 0949     		ldr	r1, .L104+4
 1321 0026 0A4B     		ldr	r3, .L104+8
 1322 0028 1868     		ldr	r0, [r3]
 1323 002a FFF7FEFF 		bl	Flash_Write
 1324              	.LVL133:
 458:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1325              		.loc 1 458 0
 1326 002e 4FF49671 		mov	r1, #300
 1327 0032 4C20     		movs	r0, #76
 1328 0034 FFF7FEFF 		bl	Tim_BuzzerPwm
 1329              	.LVL134:
 459:Src/mode.c    ****     HAL_Delay(200);
 1330              		.loc 1 459 0
 1331 0038 C820     		movs	r0, #200
 1332 003a FFF7FEFF 		bl	HAL_Delay
 1333              	.LVL135:
 460:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1334              		.loc 1 460 0
 1335 003e 0021     		movs	r1, #0
 1336 0040 0A20     		movs	r0, #10
 1337 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 1338              	.LVL136:
 461:Src/mode.c    **** }
 1339              		.loc 1 461 0
 1340 0046 08BD     		pop	{r3, pc}
 1341              	.L105:
 1342              		.align	2
 1343              	.L104:
 1344 0048 00000000 		.word	motor_flag
 1345 004c 00000000 		.word	loger
 1346 0050 00000000 		.word	start_address
 1347              		.cfi_endproc
 1348              	.LFE136:
 1350              		.section	.text.AdjustTurn,"ax",%progbits
 1351              		.align	1
 1352              		.global	AdjustTurn
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1356              		.fpu fpv4-sp-d16
 1358              	AdjustTurn:
 1359              	.LFB137:
 462:Src/mode.c    **** 
 463:Src/mode.c    **** void AdjustTurn(void)
 464:Src/mode.c    **** {
 1360              		.loc 1 464 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364 0000 08B5     		push	{r3, lr}
 1365              	.LCFI20:
 1366              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 34


 1367              		.cfi_offset 3, -8
 1368              		.cfi_offset 14, -4
 465:Src/mode.c    ****     SetRunMode();
 1369              		.loc 1 465 0
 1370 0002 FFF7FEFF 		bl	SetRunMode
 1371              	.LVL137:
 466:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 1372              		.loc 1 466 0
 1373 0006 B421     		movs	r1, #180
 1374 0008 6FF0B300 		mvn	r0, #179
 1375 000c FFF7FEFF 		bl	Tim_MotorPwm
 1376              	.LVL138:
 1377              	.L107:
 467:Src/mode.c    ****     while (motor_flag == TRUE)
 1378              		.loc 1 467 0 discriminator 1
 1379 0010 0E4B     		ldr	r3, .L109
 1380 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 0014 DBB2     		uxtb	r3, r3
 1382 0016 012B     		cmp	r3, #1
 1383 0018 FAD0     		beq	.L107
 468:Src/mode.c    ****     {
 469:Src/mode.c    ****     }
 470:Src/mode.c    ****     HAL_Delay(500);
 1384              		.loc 1 470 0
 1385 001a 4FF4FA70 		mov	r0, #500
 1386 001e FFF7FEFF 		bl	HAL_Delay
 1387              	.LVL139:
 471:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1388              		.loc 1 471 0
 1389 0022 45F6C252 		movw	r2, #24002
 1390 0026 0A49     		ldr	r1, .L109+4
 1391 0028 0A4B     		ldr	r3, .L109+8
 1392 002a 1868     		ldr	r0, [r3]
 1393 002c FFF7FEFF 		bl	Flash_Write
 1394              	.LVL140:
 472:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1395              		.loc 1 472 0
 1396 0030 4FF49671 		mov	r1, #300
 1397 0034 4C20     		movs	r0, #76
 1398 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 1399              	.LVL141:
 473:Src/mode.c    ****     HAL_Delay(200);
 1400              		.loc 1 473 0
 1401 003a C820     		movs	r0, #200
 1402 003c FFF7FEFF 		bl	HAL_Delay
 1403              	.LVL142:
 474:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1404              		.loc 1 474 0
 1405 0040 0021     		movs	r1, #0
 1406 0042 0A20     		movs	r0, #10
 1407 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 1408              	.LVL143:
 475:Src/mode.c    **** }
 1409              		.loc 1 475 0
 1410 0048 08BD     		pop	{r3, pc}
 1411              	.L110:
 1412 004a 00BF     		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 35


 1413              	.L109:
 1414 004c 00000000 		.word	motor_flag
 1415 0050 00000000 		.word	loger
 1416 0054 00000000 		.word	start_address
 1417              		.cfi_endproc
 1418              	.LFE137:
 1420              		.section	.text.Circuit,"ax",%progbits
 1421              		.align	1
 1422              		.global	Circuit
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	Circuit:
 1429              	.LFB138:
 476:Src/mode.c    **** 
 477:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 478:Src/mode.c    **** {
 1430              		.loc 1 478 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              	.LVL144:
 1435 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1436              	.LCFI21:
 1437              		.cfi_def_cfa_offset 24
 1438              		.cfi_offset 4, -24
 1439              		.cfi_offset 5, -20
 1440              		.cfi_offset 6, -16
 1441              		.cfi_offset 7, -12
 1442              		.cfi_offset 8, -8
 1443              		.cfi_offset 14, -4
 1444 0004 0746     		mov	r7, r0
 1445 0006 0E46     		mov	r6, r1
 1446 0008 9046     		mov	r8, r2
 1447 000a 1D46     		mov	r5, r3
 479:Src/mode.c    ****     Motion_Start();
 1448              		.loc 1 479 0
 1449 000c FFF7FEFF 		bl	Motion_Start
 1450              	.LVL145:
 1451              	.LBB5:
 480:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1452              		.loc 1 480 0
 1453 0010 0024     		movs	r4, #0
 1454 0012 20E0     		b	.L112
 1455              	.LVL146:
 1456              	.L128:
 481:Src/mode.c    ****     {
 482:Src/mode.c    ****         if (row > 0)
 483:Src/mode.c    ****         {
 484:Src/mode.c    ****             Motion_FastStraight(row - 1);
 1457              		.loc 1 484 0
 1458 0014 781E     		subs	r0, r7, #1
 1459 0016 C0B2     		uxtb	r0, r0
 1460 0018 FFF7FEFF 		bl	Motion_FastStraight
 1461              	.LVL147:
 1462 001c 1FE0     		b	.L113
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 36


 1463              	.L129:
 485:Src/mode.c    ****         }
 486:Src/mode.c    **** 
 487:Src/mode.c    ****         if (dir == 1)
 488:Src/mode.c    ****         {
 489:Src/mode.c    ****             Motion_LeftTurn();
 1464              		.loc 1 489 0
 1465 001e FFF7FEFF 		bl	Motion_LeftTurn
 1466              	.LVL148:
 1467 0022 20E0     		b	.L115
 1468              	.L130:
 490:Src/mode.c    ****         }
 491:Src/mode.c    ****         else
 492:Src/mode.c    ****         {
 493:Src/mode.c    ****             Motion_RightTurn();
 494:Src/mode.c    ****         }
 495:Src/mode.c    **** 
 496:Src/mode.c    ****         if (colum > 0)
 497:Src/mode.c    ****         {
 498:Src/mode.c    ****             Motion_FastStraight(colum - 1);
 1469              		.loc 1 498 0
 1470 0024 701E     		subs	r0, r6, #1
 1471 0026 C0B2     		uxtb	r0, r0
 1472 0028 FFF7FEFF 		bl	Motion_FastStraight
 1473              	.LVL149:
 1474 002c 1DE0     		b	.L116
 1475              	.L131:
 499:Src/mode.c    ****         }
 500:Src/mode.c    **** 
 501:Src/mode.c    ****         if (dir == 1)
 502:Src/mode.c    ****         {
 503:Src/mode.c    ****             Motion_LeftTurn();
 1476              		.loc 1 503 0
 1477 002e FFF7FEFF 		bl	Motion_LeftTurn
 1478              	.LVL150:
 1479 0032 1EE0     		b	.L118
 1480              	.L132:
 504:Src/mode.c    ****         }
 505:Src/mode.c    ****         else
 506:Src/mode.c    ****         {
 507:Src/mode.c    ****             Motion_RightTurn();
 508:Src/mode.c    ****         }
 509:Src/mode.c    **** 
 510:Src/mode.c    ****         if (row > 0)
 511:Src/mode.c    ****         {
 512:Src/mode.c    ****             Motion_FastStraight(row - 1);
 1481              		.loc 1 512 0
 1482 0034 781E     		subs	r0, r7, #1
 1483 0036 C0B2     		uxtb	r0, r0
 1484 0038 FFF7FEFF 		bl	Motion_FastStraight
 1485              	.LVL151:
 1486 003c 1BE0     		b	.L119
 1487              	.L133:
 513:Src/mode.c    ****         }
 514:Src/mode.c    **** 
 515:Src/mode.c    ****         if (dir == 1)
 516:Src/mode.c    ****         {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 37


 517:Src/mode.c    ****             Motion_LeftTurn();
 1488              		.loc 1 517 0
 1489 003e FFF7FEFF 		bl	Motion_LeftTurn
 1490              	.LVL152:
 1491 0042 1CE0     		b	.L121
 1492              	.L134:
 518:Src/mode.c    ****         }
 519:Src/mode.c    ****         else
 520:Src/mode.c    ****         {
 521:Src/mode.c    ****             Motion_RightTurn();
 522:Src/mode.c    ****         }
 523:Src/mode.c    **** 
 524:Src/mode.c    ****         if (colum > 0)
 525:Src/mode.c    ****         {
 526:Src/mode.c    ****             Motion_FastStraight(colum - 1);
 1493              		.loc 1 526 0
 1494 0044 701E     		subs	r0, r6, #1
 1495 0046 C0B2     		uxtb	r0, r0
 1496 0048 FFF7FEFF 		bl	Motion_FastStraight
 1497              	.LVL153:
 1498 004c 19E0     		b	.L122
 1499              	.L135:
 527:Src/mode.c    ****         }
 528:Src/mode.c    ****         if (dir == 1)
 529:Src/mode.c    ****         {
 530:Src/mode.c    ****             Motion_LeftTurn();
 1500              		.loc 1 530 0
 1501 004e FFF7FEFF 		bl	Motion_LeftTurn
 1502              	.LVL154:
 1503              	.L124:
 480:Src/mode.c    ****     {
 1504              		.loc 1 480 0 discriminator 2
 1505 0052 0134     		adds	r4, r4, #1
 1506              	.LVL155:
 1507 0054 E4B2     		uxtb	r4, r4
 1508              	.LVL156:
 1509              	.L112:
 480:Src/mode.c    ****     {
 1510              		.loc 1 480 0 is_stmt 0 discriminator 1
 1511 0056 4445     		cmp	r4, r8
 1512 0058 18D2     		bcs	.L127
 482:Src/mode.c    ****         {
 1513              		.loc 1 482 0 is_stmt 1
 1514 005a 002F     		cmp	r7, #0
 1515 005c DAD1     		bne	.L128
 1516              	.L113:
 487:Src/mode.c    ****         {
 1517              		.loc 1 487 0
 1518 005e 012D     		cmp	r5, #1
 1519 0060 DDD0     		beq	.L129
 493:Src/mode.c    ****         }
 1520              		.loc 1 493 0
 1521 0062 FFF7FEFF 		bl	Motion_RightTurn
 1522              	.LVL157:
 1523              	.L115:
 496:Src/mode.c    ****         {
 1524              		.loc 1 496 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 38


 1525 0066 002E     		cmp	r6, #0
 1526 0068 DCD1     		bne	.L130
 1527              	.L116:
 501:Src/mode.c    ****         {
 1528              		.loc 1 501 0
 1529 006a 012D     		cmp	r5, #1
 1530 006c DFD0     		beq	.L131
 507:Src/mode.c    ****         }
 1531              		.loc 1 507 0
 1532 006e FFF7FEFF 		bl	Motion_RightTurn
 1533              	.LVL158:
 1534              	.L118:
 510:Src/mode.c    ****         {
 1535              		.loc 1 510 0
 1536 0072 002F     		cmp	r7, #0
 1537 0074 DED1     		bne	.L132
 1538              	.L119:
 515:Src/mode.c    ****         {
 1539              		.loc 1 515 0
 1540 0076 012D     		cmp	r5, #1
 1541 0078 E1D0     		beq	.L133
 521:Src/mode.c    ****         }
 1542              		.loc 1 521 0
 1543 007a FFF7FEFF 		bl	Motion_RightTurn
 1544              	.LVL159:
 1545              	.L121:
 524:Src/mode.c    ****         {
 1546              		.loc 1 524 0
 1547 007e 002E     		cmp	r6, #0
 1548 0080 E0D1     		bne	.L134
 1549              	.L122:
 528:Src/mode.c    ****         {
 1550              		.loc 1 528 0
 1551 0082 012D     		cmp	r5, #1
 1552 0084 E3D0     		beq	.L135
 531:Src/mode.c    ****         }
 532:Src/mode.c    ****         else
 533:Src/mode.c    ****         {
 534:Src/mode.c    ****             Motion_RightTurn();
 1553              		.loc 1 534 0
 1554 0086 FFF7FEFF 		bl	Motion_RightTurn
 1555              	.LVL160:
 1556 008a E2E7     		b	.L124
 1557              	.L127:
 1558              	.LBE5:
 535:Src/mode.c    ****         }
 536:Src/mode.c    ****     }
 537:Src/mode.c    ****     Motion_End();
 1559              		.loc 1 537 0
 1560 008c FFF7FEFF 		bl	Motion_End
 1561              	.LVL161:
 538:Src/mode.c    ****     motor_flag = FALSE;
 1562              		.loc 1 538 0
 1563 0090 024B     		ldr	r3, .L136
 1564 0092 0022     		movs	r2, #0
 1565 0094 1A70     		strb	r2, [r3]
 539:Src/mode.c    **** }...
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 39


 1566              		.loc 1 539 0
 1567 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1568              	.LVL162:
 1569              	.L137:
 1570 009a 00BF     		.align	2
 1571              	.L136:
 1572 009c 00000000 		.word	motor_flag
 1573              		.cfi_endproc
 1574              	.LFE138:
 1576              		.section	.text.Mode_Mouse,"ax",%progbits
 1577              		.align	1
 1578              		.global	Mode_Mouse
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1582              		.fpu fpv4-sp-d16
 1584              	Mode_Mouse:
 1585              	.LFB126:
  50:Src/mode.c    **** {
 1586              		.loc 1 50 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              	.LVL163:
 1591 0000 10B5     		push	{r4, lr}
 1592              	.LCFI22:
 1593              		.cfi_def_cfa_offset 8
 1594              		.cfi_offset 4, -8
 1595              		.cfi_offset 14, -4
  51:Src/mode.c    ****     switch (mode)
 1596              		.loc 1 51 0
 1597 0002 0728     		cmp	r0, #7
 1598 0004 07D8     		bhi	.L138
 1599 0006 DFE800F0 		tbb	[pc, r0]
 1600              	.L141:
 1601 000a 04       		.byte	(.L140-.L141)/2
 1602 000b 07       		.byte	(.L142-.L141)/2
 1603 000c 0A       		.byte	(.L143-.L141)/2
 1604 000d 2F       		.byte	(.L144-.L141)/2
 1605 000e 54       		.byte	(.L145-.L141)/2
 1606 000f 5B       		.byte	(.L146-.L141)/2
 1607 0010 67       		.byte	(.L147-.L141)/2
 1608 0011 73       		.byte	(.L148-.L141)/2
 1609              		.p2align 1
 1610              	.L140:
  59:Src/mode.c    ****         SearchRun();
 1611              		.loc 1 59 0
 1612 0012 FFF7FEFF 		bl	SearchRun
 1613              	.LVL164:
 1614              	.L138:
 125:Src/mode.c    **** }
 1615              		.loc 1 125 0
 1616 0016 10BD     		pop	{r4, pc}
 1617              	.LVL165:
 1618              	.L142:
  64:Src/mode.c    ****         Mode_FastRun();
 1619              		.loc 1 64 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 40


 1620 0018 FFF7FEFF 		bl	Mode_FastRun
 1621              	.LVL166:
  70:Src/mode.c    ****         break;
 1622              		.loc 1 70 0
 1623 001c FBE7     		b	.L138
 1624              	.LVL167:
 1625              	.L143:
  76:Src/mode.c    ****         control_wall_flag = FALSE;
 1626              		.loc 1 76 0
 1627 001e 0024     		movs	r4, #0
 1628 0020 354B     		ldr	r3, .L150
 1629 0022 1C70     		strb	r4, [r3]
  77:Src/mode.c    ****         SetRunMode();
 1630              		.loc 1 77 0
 1631 0024 FFF7FEFF 		bl	SetRunMode
 1632              	.LVL168:
  78:Src/mode.c    ****         Motion_Start();
 1633              		.loc 1 78 0
 1634 0028 FFF7FEFF 		bl	Motion_Start
 1635              	.LVL169:
  79:Src/mode.c    ****         Motion_LeftTurn();
 1636              		.loc 1 79 0
 1637 002c FFF7FEFF 		bl	Motion_LeftTurn
 1638              	.LVL170:
  80:Src/mode.c    ****         Motion_End();
 1639              		.loc 1 80 0
 1640 0030 FFF7FEFF 		bl	Motion_End
 1641              	.LVL171:
  81:Src/mode.c    ****         motor_flag = FALSE;
 1642              		.loc 1 81 0
 1643 0034 314B     		ldr	r3, .L150+4
 1644 0036 1C70     		strb	r4, [r3]
  82:Src/mode.c    ****         HAL_Delay(500);
 1645              		.loc 1 82 0
 1646 0038 4FF4FA70 		mov	r0, #500
 1647 003c FFF7FEFF 		bl	HAL_Delay
 1648              	.LVL172:
  83:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1649              		.loc 1 83 0
 1650 0040 45F6C252 		movw	r2, #24002
 1651 0044 2E49     		ldr	r1, .L150+8
 1652 0046 2F4B     		ldr	r3, .L150+12
 1653 0048 1868     		ldr	r0, [r3]
 1654 004a FFF7FEFF 		bl	Flash_Write
 1655              	.LVL173:
  84:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 1656              		.loc 1 84 0
 1657 004e 4FF49671 		mov	r1, #300
 1658 0052 4C20     		movs	r0, #76
 1659 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 1660              	.LVL174:
  85:Src/mode.c    ****         HAL_Delay(200);
 1661              		.loc 1 85 0
 1662 0058 C820     		movs	r0, #200
 1663 005a FFF7FEFF 		bl	HAL_Delay
 1664              	.LVL175:
  86:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 41


 1665              		.loc 1 86 0
 1666 005e 2146     		mov	r1, r4
 1667 0060 0A20     		movs	r0, #10
 1668 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 1669              	.LVL176:
  87:Src/mode.c    ****         break;
 1670              		.loc 1 87 0
 1671 0066 D6E7     		b	.L138
 1672              	.LVL177:
 1673              	.L144:
  89:Src/mode.c    ****         control_wall_flag = FALSE;
 1674              		.loc 1 89 0
 1675 0068 0024     		movs	r4, #0
 1676 006a 234B     		ldr	r3, .L150
 1677 006c 1C70     		strb	r4, [r3]
  90:Src/mode.c    ****         SetRunMode();
 1678              		.loc 1 90 0
 1679 006e FFF7FEFF 		bl	SetRunMode
 1680              	.LVL178:
  91:Src/mode.c    ****         Motion_Start();
 1681              		.loc 1 91 0
 1682 0072 FFF7FEFF 		bl	Motion_Start
 1683              	.LVL179:
  92:Src/mode.c    ****         Motion_RightTurn();
 1684              		.loc 1 92 0
 1685 0076 FFF7FEFF 		bl	Motion_RightTurn
 1686              	.LVL180:
  93:Src/mode.c    ****         Motion_End();
 1687              		.loc 1 93 0
 1688 007a FFF7FEFF 		bl	Motion_End
 1689              	.LVL181:
  94:Src/mode.c    ****         motor_flag = FALSE;
 1690              		.loc 1 94 0
 1691 007e 1F4B     		ldr	r3, .L150+4
 1692 0080 1C70     		strb	r4, [r3]
  95:Src/mode.c    ****         HAL_Delay(500);
 1693              		.loc 1 95 0
 1694 0082 4FF4FA70 		mov	r0, #500
 1695 0086 FFF7FEFF 		bl	HAL_Delay
 1696              	.LVL182:
  96:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1697              		.loc 1 96 0
 1698 008a 45F6C252 		movw	r2, #24002
 1699 008e 1C49     		ldr	r1, .L150+8
 1700 0090 1C4B     		ldr	r3, .L150+12
 1701 0092 1868     		ldr	r0, [r3]
 1702 0094 FFF7FEFF 		bl	Flash_Write
 1703              	.LVL183:
  97:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 1704              		.loc 1 97 0
 1705 0098 4FF49671 		mov	r1, #300
 1706 009c 4C20     		movs	r0, #76
 1707 009e FFF7FEFF 		bl	Tim_BuzzerPwm
 1708              	.LVL184:
  98:Src/mode.c    ****         HAL_Delay(200);
 1709              		.loc 1 98 0
 1710 00a2 C820     		movs	r0, #200
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 42


 1711 00a4 FFF7FEFF 		bl	HAL_Delay
 1712              	.LVL185:
  99:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 1713              		.loc 1 99 0
 1714 00a8 2146     		mov	r1, r4
 1715 00aa 0A20     		movs	r0, #10
 1716 00ac FFF7FEFF 		bl	Tim_BuzzerPwm
 1717              	.LVL186:
 100:Src/mode.c    ****         break;
 1718              		.loc 1 100 0
 1719 00b0 B1E7     		b	.L138
 1720              	.LVL187:
 1721              	.L145:
 105:Src/mode.c    ****         control_wall_flag = TRUE;
 1722              		.loc 1 105 0
 1723 00b2 114B     		ldr	r3, .L150
 1724 00b4 0122     		movs	r2, #1
 1725 00b6 1A70     		strb	r2, [r3]
 106:Src/mode.c    ****         CheckStraight(6);
 1726              		.loc 1 106 0
 1727 00b8 0620     		movs	r0, #6
 1728              	.LVL188:
 1729 00ba FFF7FEFF 		bl	CheckStraight
 1730              	.LVL189:
 107:Src/mode.c    ****         break;
 1731              		.loc 1 107 0
 1732 00be AAE7     		b	.L138
 1733              	.LVL190:
 1734              	.L146:
 109:Src/mode.c    ****         control_wall_flag = FALSE;
 1735              		.loc 1 109 0
 1736 00c0 0D4B     		ldr	r3, .L150
 1737 00c2 0022     		movs	r2, #0
 1738 00c4 1A70     		strb	r2, [r3]
 110:Src/mode.c    ****         SetRunMode();
 1739              		.loc 1 110 0
 1740 00c6 FFF7FEFF 		bl	SetRunMode
 1741              	.LVL191:
 111:Src/mode.c    ****         Circuit(1, 1, 3, 1);
 1742              		.loc 1 111 0
 1743 00ca 0123     		movs	r3, #1
 1744 00cc 0322     		movs	r2, #3
 1745 00ce 1946     		mov	r1, r3
 1746 00d0 1846     		mov	r0, r3
 1747 00d2 FFF7FEFF 		bl	Circuit
 1748              	.LVL192:
 112:Src/mode.c    ****         break;
 1749              		.loc 1 112 0
 1750 00d6 9EE7     		b	.L138
 1751              	.LVL193:
 1752              	.L147:
 114:Src/mode.c    ****         control_wall_flag = FALSE;
 1753              		.loc 1 114 0
 1754 00d8 074B     		ldr	r3, .L150
 1755 00da 0022     		movs	r2, #0
 1756 00dc 1A70     		strb	r2, [r3]
 115:Src/mode.c    ****         SetRunMode();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 43


 1757              		.loc 1 115 0
 1758 00de FFF7FEFF 		bl	SetRunMode
 1759              	.LVL194:
 116:Src/mode.c    ****         Circuit(1, 1, 3, -1);
 1760              		.loc 1 116 0
 1761 00e2 FF23     		movs	r3, #255
 1762 00e4 0322     		movs	r2, #3
 1763 00e6 0121     		movs	r1, #1
 1764 00e8 0846     		mov	r0, r1
 1765 00ea FFF7FEFF 		bl	Circuit
 1766              	.LVL195:
 117:Src/mode.c    ****         break;
 1767              		.loc 1 117 0
 1768 00ee 92E7     		b	.L138
 1769              	.LVL196:
 1770              	.L148:
 120:Src/mode.c    ****         Maze_Printf();
 1771              		.loc 1 120 0
 1772 00f0 FFF7FEFF 		bl	Maze_Printf
 1773              	.LVL197:
 125:Src/mode.c    **** }
 1774              		.loc 1 125 0
 1775 00f4 8FE7     		b	.L138
 1776              	.L151:
 1777 00f6 00BF     		.align	2
 1778              	.L150:
 1779 00f8 00000000 		.word	control_wall_flag
 1780 00fc 00000000 		.word	motor_flag
 1781 0100 00000000 		.word	loger
 1782 0104 00000000 		.word	start_address
 1783              		.cfi_endproc
 1784              	.LFE126:
 1786              		.global	gy
 1787              		.global	gx
 1788              		.section	.bss.gy,"aw",%nobits
 1789              		.set	.LANCHOR0,. + 0
 1792              	gy:
 1793 0000 00       		.space	1
 1794              		.section	.data.gx,"aw",%progbits
 1795              		.set	.LANCHOR1,. + 0
 1798              	gx:
 1799 0000 01       		.byte	1
 1800              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 1801              		.align	2
 1802              	.LC0:
 1803 0000 25640D00 		.ascii	"%d\015\000"
 1804              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 1805              		.align	2
 1806              	.LC2:
 1807 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 1807      64092564 
 1807      0925640D 
 1807      0A00
 1808              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 1809              		.align	2
 1810              	.LC1:
 1811 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\000"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 44


 1811      20666C3A 
 1811      25642066 
 1811      3A256420 
 1811      66723A25 
 1812              		.text
 1813              	.Letext0:
 1814              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1815              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1816              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1817              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1818              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1819              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1820              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1821              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1822              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1823              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1824              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1825              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1826              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1827              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1828              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1829              		.file 17 "Inc/spi.h"
 1830              		.file 18 "Inc/tim.h"
 1831              		.file 19 "Inc/adc.h"
 1832              		.file 20 "Inc/MazeCon.h"
 1833              		.file 21 "Inc/flash.h"
 1834              		.file 22 "Inc/motion.h"
 1835              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1836              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1837              		.file 25 "Inc/Maze.h"
 1838              		.file 26 "Inc/Map.h"
 1839              		.file 27 "Inc/gpio.h"
 1840              		.file 28 "Inc/control.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:202    .text.Mode_Select:00000110 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:212    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:219    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:348    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:362    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:369    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:437    .text.SetRunMode:0000005c $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:443    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:450    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:468    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:472    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:569    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:576    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:583    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:845    .text.SearchRun:000001e8 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:855    .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:862    .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:946    .text.Mode_FastRun:00000084 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:953    .text.Mode_FastRun:000000a0 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1008   .text.Mode_FastRun:000000e4 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1017   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1024   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1113   .text.CheckStraight:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1121   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1128   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1190   .text.CheckTurn:00000058 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1198   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1205   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1274   .text.PrintOutPut:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1281   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1288   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1344   .text.AdjustStraight:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1351   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1358   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1414   .text.AdjustTurn:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1421   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1428   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1572   .text.Circuit:0000009c $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1577   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1584   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1601   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1609   .text.Mode_Mouse:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1779   .text.Mode_Mouse:000000f8 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1792   .bss.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1798   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1793   .bss.gy:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1801   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1805   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s:1809   .rodata.SensorCheck.str1.4:00000000 $d

UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccXyBu2a.s 			page 46


HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
gyro_y
enc
accel
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
motor_flag
Map_Init
Map_InitFast
Motion_Start
Maze_UpdatePosition
Motion_Restart
Map_addWall
Maze_UpdateStepMap
Maze_GetNextMotion
Motion_Switch
Motion_End
Flash_Write
control_wall_flag
start_address
Flash_Load
Plan_Root
Plan_Compress
Motion_FastStart
Motion_LeftTurn
Motion_FastStraight
Motion_RightTurn
Motion_FastGoal
Motion_Straight
loger
Motion_TestTurn
gyro_z
Tim_MotorPwm
Maze_Printf
