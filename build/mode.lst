ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"mode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Mode_Select,"ax",%progbits
  18              		.align	1
  19              		.global	Mode_Select
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Mode_Select:
  26              	.LFB127:
  27              		.file 1 "Src/mode.c"
   1:Src/mode.c    **** #include "mode.h"
   2:Src/mode.c    **** #include "spi.h"
   3:Src/mode.c    **** #include "tim.h"
   4:Src/mode.c    **** #include "adc.h"
   5:Src/mode.c    **** #include "stdint.h"
   6:Src/mode.c    **** #include "gpio.h"
   7:Src/mode.c    **** #include "motion.h"
   8:Src/mode.c    **** #include "control.h"
   9:Src/mode.c    **** #include "Maze.h"
  10:Src/mode.c    **** #include "Map.h"
  11:Src/mode.c    **** #include "flash.h"
  12:Src/mode.c    **** #include "MazeCon.h"
  13:Src/mode.c    **** 
  14:Src/mode.c    **** #define TRUE 1
  15:Src/mode.c    **** #define FALSE 0
  16:Src/mode.c    **** 
  17:Src/mode.c    **** extern volatile accel_t accel;
  18:Src/mode.c    **** extern volatile float gyro_y;
  19:Src/mode.c    **** extern gyro_t gyro_z;
  20:Src/mode.c    **** extern sensor_t sen_l;
  21:Src/mode.c    **** extern sensor_t sen_fl;
  22:Src/mode.c    **** extern sensor_t sen_front;
  23:Src/mode.c    **** extern sensor_t sen_fr;
  24:Src/mode.c    **** extern sensor_t sen_r;
  25:Src/mode.c    **** extern enc_t enc;
  26:Src/mode.c    **** extern volatile uint8_t motor_flag;
  27:Src/mode.c    **** extern loger_t loger;
  28:Src/mode.c    **** extern volatile uint8_t control_wall_flag;
  29:Src/mode.c    **** extern uint8_t counter_s; 
  30:Src/mode.c    **** 
  31:Src/mode.c    **** unsigned char gx = 7, gy = 7;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 2


  32:Src/mode.c    **** 
  33:Src/mode.c    **** //Prototype Function
  34:Src/mode.c    **** void SensorCheck(void);
  35:Src/mode.c    **** void SetRunMode(void);
  36:Src/mode.c    **** void CheckStraight(uint8_t block);
  37:Src/mode.c    **** void CheckFastStraight(uint8_t block);
  38:Src/mode.c    **** void CheckDiagonal(uint8_t block);
  39:Src/mode.c    **** void CheckTurn(uint8_t num);
  40:Src/mode.c    **** void PrintOutPut(void);
  41:Src/mode.c    **** void PrintWallData(void);
  42:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail);
  43:Src/mode.c    **** void AdjustStraight(void);
  44:Src/mode.c    **** void AdjustTurn(void);
  45:Src/mode.c    **** void SearchRun(void);
  46:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain,uint8_t w_str, uint8_t w_turn);
  47:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir);
  48:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  49:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step);
  50:Src/mode.c    **** void TurnBig90_Test(int8_t dir);
  51:Src/mode.c    **** void TurnBig180_Test(int8_t dir);
  52:Src/mode.c    **** void TurnV90_Test(int8_t dir);
  53:Src/mode.c    **** 
  54:Src/mode.c    **** /****************************************************************************************
  55:Src/mode.c    ****  * outline  : wright mode 
  56:Src/mode.c    ****  * argument : mode nomber
  57:Src/mode.c    ****  * return   : void
  58:Src/mode.c    **** ********************************************************************************************/
  59:Src/mode.c    **** void Mode_Mouse(int8_t mode)
  60:Src/mode.c    **** {
  61:Src/mode.c    ****     switch (mode)
  62:Src/mode.c    ****     {
  63:Src/mode.c    ****     //WHITE
  64:Src/mode.c    ****     case 0:
  65:Src/mode.c    ****         SearchRun();
  66:Src/mode.c    ****         break;
  67:Src/mode.c    ****     case 1:
  68:Src/mode.c    ****         Mode_FastRun(FALSE,0.0f, 1, 3);
  69:Src/mode.c    ****         break;
  70:Src/mode.c    ****     case 2:
  71:Src/mode.c    ****         /*
  72:Src/mode.c    ****         SetRunMode();
  73:Src/mode.c    ****         control_wall_flag = FALSE;
  74:Src/mode.c    ****         Motion_enkai();
  75:Src/mode.c    ****         */
  76:Src/mode.c    ****         Mode_FastRun(TRUE, 0.0f, 7, 5);
  77:Src/mode.c    ****         break;
  78:Src/mode.c    ****     case 3:
  79:Src/mode.c    ****         SensorCheck();
  80:Src/mode.c    ****         break;
  81:Src/mode.c    ****     //CYAN
  82:Src/mode.c    ****     case 4:
  83:Src/mode.c    ****         PrintOutPut();
  84:Src/mode.c    ****         break;
  85:Src/mode.c    ****     case 5:
  86:Src/mode.c    ****         PrintWallData();
  87:Src/mode.c    ****         break;
  88:Src/mode.c    ****     case 6: //straight
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 3


  89:Src/mode.c    ****         //CheckDiagonal(5);
  90:Src/mode.c    ****         Mode_FastRun(FALSE,80.0f, 1, 3);
  91:Src/mode.c    ****         /*
  92:Src/mode.c    ****         control_wall_flag = 2;
  93:Src/mode.c    ****         CheckFastStraight(5);
  94:Src/mode.c    ****         */
  95:Src/mode.c    ****         /*
  96:Src/mode.c    ****         control_wall_flag = 1;
  97:Src/mode.c    ****         CheckStraight(6);
  98:Src/mode.c    ****         */
  99:Src/mode.c    ****         break;
 100:Src/mode.c    ****     case 7: //turn
 101:Src/mode.c    ****         Mode_FastRun(TRUE, 80.0f, 7, 5);
 102:Src/mode.c    ****         //control_wall_flag = FALSE;
 103:Src/mode.c    ****         //CheckTurn(4);
 104:Src/mode.c    ****         break;
 105:Src/mode.c    ****     //YELLOW
 106:Src/mode.c    ****     case 8: //left turn
 107:Src/mode.c    ****         control_wall_flag = FALSE;
 108:Src/mode.c    ****         SetRunMode();
 109:Src/mode.c    ****         Motion_Start();
 110:Src/mode.c    ****         Motion_LeftTurn();
 111:Src/mode.c    ****         Motion_End();
 112:Src/mode.c    ****         motor_flag = FALSE;
 113:Src/mode.c    ****         HAL_Delay(500);
 114:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 115:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 116:Src/mode.c    ****         HAL_Delay(200);
 117:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 118:Src/mode.c    ****         break;
 119:Src/mode.c    ****     case 9: //right turn
 120:Src/mode.c    ****         control_wall_flag = FALSE;
 121:Src/mode.c    ****         SetRunMode();
 122:Src/mode.c    ****         Motion_Start();
 123:Src/mode.c    ****         Motion_RightTurn();
 124:Src/mode.c    ****         Motion_End();
 125:Src/mode.c    ****         motor_flag = FALSE;
 126:Src/mode.c    ****         HAL_Delay(500);
 127:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 128:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 129:Src/mode.c    ****         HAL_Delay(200);
 130:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 131:Src/mode.c    ****         break;
 132:Src/mode.c    ****     case 10: //circuit left
 133:Src/mode.c    ****         control_wall_flag = FALSE;
 134:Src/mode.c    ****         SetRunMode();
 135:Src/mode.c    ****         Circuit(2, 2, 3, 1);
 136:Src/mode.c    ****         break;
 137:Src/mode.c    ****     case 11: //circuit right
 138:Src/mode.c    ****         control_wall_flag = FALSE;
 139:Src/mode.c    ****         SetRunMode();
 140:Src/mode.c    ****         Circuit(2, 2, 3, -1);
 141:Src/mode.c    ****         break;
 142:Src/mode.c    ****     //GREEN
 143:Src/mode.c    ****     case 12: //left quarter turn
 144:Src/mode.c    ****         control_wall_flag = FALSE;
 145:Src/mode.c    ****         Turn45_Test(FRONT, LEFT, 0);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 4


 146:Src/mode.c    ****         //Turn135_Test(FRONT, LEFT, 0);
 147:Src/mode.c    ****         break;
 148:Src/mode.c    ****     case 13: //right quarter turn
 149:Src/mode.c    ****         control_wall_flag = FALSE;
 150:Src/mode.c    ****         Turn45_Test(FRONT, RIGHT, 0);
 151:Src/mode.c    ****         //Turn135_Test(FRONT, RIGHT, 0);
 152:Src/mode.c    ****         break;
 153:Src/mode.c    ****     case 14:
 154:Src/mode.c    ****         control_wall_flag = FALSE;
 155:Src/mode.c    ****         Turn45_Test(LEFT, LEFT, 1);
 156:Src/mode.c    ****         //Turn135_Test(LEFT, LEFT, 1);
 157:Src/mode.c    ****         break;
 158:Src/mode.c    ****     case 15:
 159:Src/mode.c    ****         control_wall_flag = FALSE;
 160:Src/mode.c    ****         Turn45_Test(RIGHT, RIGHT, 1);
 161:Src/mode.c    ****         //Turn135_Test(RIGHT, RIGHT, 1);
 162:Src/mode.c    ****         break;
 163:Src/mode.c    ****     //MAGENTA
 164:Src/mode.c    ****     case 16:
 165:Src/mode.c    ****         control_wall_flag = FALSE;
 166:Src/mode.c    ****         TurnBig90_Test(LEFT);
 167:Src/mode.c    ****         break;
 168:Src/mode.c    ****     case 17:
 169:Src/mode.c    ****         control_wall_flag = FALSE;
 170:Src/mode.c    ****         TurnBig90_Test(RIGHT);
 171:Src/mode.c    ****         break;
 172:Src/mode.c    ****     case 18:
 173:Src/mode.c    ****         control_wall_flag = FALSE;
 174:Src/mode.c    ****         TurnBig180_Test(LEFT);
 175:Src/mode.c    ****         //TurnV90_Test(LEFT);
 176:Src/mode.c    ****         break;
 177:Src/mode.c    ****     case 19:
 178:Src/mode.c    ****         control_wall_flag = FALSE;
 179:Src/mode.c    ****         TurnBig180_Test(RIGHT);
 180:Src/mode.c    ****         //TurnV90_Test(RIGHT);
 181:Src/mode.c    ****         break;
 182:Src/mode.c    ****     default:
 183:Src/mode.c    ****         break;
 184:Src/mode.c    ****     }
 185:Src/mode.c    **** }
 186:Src/mode.c    **** 
 187:Src/mode.c    **** char Mode_Select(void)
 188:Src/mode.c    **** {
  28              		.loc 1 188 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL0:
 189:Src/mode.c    ****     int8_t mode = 0;
 190:Src/mode.c    ****     uint8_t state = 0;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 5


 191:Src/mode.c    ****     Control_ResetVelo();
  40              		.loc 1 191 0
  41 0002 FFF7FEFF 		bl	Control_ResetVelo
  42              	.LVL1:
 192:Src/mode.c    ****     accel.z = 0;
  43              		.loc 1 192 0
  44 0006 524B     		ldr	r3, .L34
  45 0008 0022     		movs	r2, #0
  46 000a 9A60     		str	r2, [r3, #8]	@ float
 190:Src/mode.c    ****     Control_ResetVelo();
  47              		.loc 1 190 0
  48 000c 0024     		movs	r4, #0
 189:Src/mode.c    ****     int8_t mode = 0;
  49              		.loc 1 189 0
  50 000e 2546     		mov	r5, r4
  51 0010 50E0     		b	.L18
  52              	.LVL2:
  53              	.L28:
 193:Src/mode.c    **** 
 194:Src/mode.c    ****     while (1)
 195:Src/mode.c    ****     {
 196:Src/mode.c    ****         if (gyro_y > 300.0f || gyro_y < -300.0f)
 197:Src/mode.c    ****         {
 198:Src/mode.c    ****             if (gyro_y < -300.0f)
 199:Src/mode.c    ****             {
 200:Src/mode.c    ****                 mode++;
 201:Src/mode.c    ****             }
 202:Src/mode.c    ****             else if (gyro_y > 300.0f)
  54              		.loc 1 202 0
  55 0012 504B     		ldr	r3, .L34+4
  56 0014 93ED007A 		vldr.32	s14, [r3]
  57 0018 DFED4F7A 		vldr.32	s15, .L34+8
  58 001c B4EEE77A 		vcmpe.f32	s14, s15
  59 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0024 65DD     		ble	.L7
 203:Src/mode.c    ****             {
 204:Src/mode.c    ****                 mode--;
  61              		.loc 1 204 0
  62 0026 013D     		subs	r5, r5, #1
  63              	.LVL3:
  64 0028 6DB2     		sxtb	r5, r5
  65              	.LVL4:
  66 002a 62E0     		b	.L7
  67              	.L19:
 205:Src/mode.c    ****             }
 206:Src/mode.c    ****             if (mode > 3)
 207:Src/mode.c    ****             {
 208:Src/mode.c    ****                 mode = 0;
  68              		.loc 1 208 0
  69 002c 0025     		movs	r5, #0
  70              	.LVL5:
  71              	.L9:
 209:Src/mode.c    ****             }
 210:Src/mode.c    ****             else if (mode < 0)
 211:Src/mode.c    ****             {
 212:Src/mode.c    ****                 mode = 3;
 213:Src/mode.c    ****             }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 6


 214:Src/mode.c    ****             Tim_BuzzerPwm(170 - 10 * mode, 300);
  72              		.loc 1 214 0
  73 002e 6FF00900 		mvn	r0, #9
  74 0032 00FB05F0 		mul	r0, r0, r5
  75 0036 4FF49671 		mov	r1, #300
  76 003a AA30     		adds	r0, r0, #170
  77 003c FFF7FEFF 		bl	Tim_BuzzerPwm
  78              	.LVL6:
 215:Src/mode.c    ****             HAL_Delay(100);
  79              		.loc 1 215 0
  80 0040 6420     		movs	r0, #100
  81 0042 FFF7FEFF 		bl	HAL_Delay
  82              	.LVL7:
 216:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
  83              		.loc 1 216 0
  84 0046 0021     		movs	r1, #0
  85 0048 0A20     		movs	r0, #10
  86 004a FFF7FEFF 		bl	Tim_BuzzerPwm
  87              	.LVL8:
 217:Src/mode.c    ****             HAL_Delay(500);
  88              		.loc 1 217 0
  89 004e 4FF4FA70 		mov	r0, #500
  90 0052 FFF7FEFF 		bl	HAL_Delay
  91              	.LVL9:
  92              	.L3:
 218:Src/mode.c    ****         }
 219:Src/mode.c    ****         if (enc.offset > 20)
  93              		.loc 1 219 0
  94 0056 414B     		ldr	r3, .L34+12
  95 0058 93ED027A 		vldr.32	s14, [r3, #8]
  96 005c F3EE047A 		vmov.f32	s15, #2.0e+1
  97 0060 B4EEE77A 		vcmpe.f32	s14, s15
  98 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  99 0068 4BDD     		ble	.L29
 220:Src/mode.c    ****         {
 221:Src/mode.c    ****             if (state == 16)
 100              		.loc 1 221 0
 101 006a 102C     		cmp	r4, #16
 102 006c 47D0     		beq	.L21
 222:Src/mode.c    ****             {
 223:Src/mode.c    ****                 state = 0;
 224:Src/mode.c    ****             }
 225:Src/mode.c    ****             else
 226:Src/mode.c    ****             {
 227:Src/mode.c    ****                 state += 4;
 103              		.loc 1 227 0
 104 006e 0434     		adds	r4, r4, #4
 105              	.LVL10:
 106 0070 E4B2     		uxtb	r4, r4
 107              	.LVL11:
 108              	.L12:
 228:Src/mode.c    ****             }
 229:Src/mode.c    ****             enc.offset = 0;
 109              		.loc 1 229 0
 110 0072 3A4B     		ldr	r3, .L34+12
 111 0074 0022     		movs	r2, #0
 112 0076 9A60     		str	r2, [r3, #8]	@ float
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 7


 113              	.L13:
 230:Src/mode.c    ****         }
 231:Src/mode.c    ****         else if (enc.offset < -20)
 232:Src/mode.c    ****         {
 233:Src/mode.c    ****             if (state == 0)
 234:Src/mode.c    ****             {
 235:Src/mode.c    ****                 state = 16;
 236:Src/mode.c    ****             }
 237:Src/mode.c    ****             else
 238:Src/mode.c    ****             {
 239:Src/mode.c    ****                 state -= 4;
 240:Src/mode.c    ****             }
 241:Src/mode.c    ****             enc.offset = 0;
 242:Src/mode.c    ****         }
 243:Src/mode.c    ****         if (accel.z > 30.0f)
 114              		.loc 1 243 0
 115 0078 354B     		ldr	r3, .L34
 116 007a 93ED027A 		vldr.32	s14, [r3, #8]
 117 007e F3EE0E7A 		vmov.f32	s15, #3.0e+1
 118 0082 B4EEE77A 		vcmpe.f32	s14, s15
 119 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 120 008a 4DDC     		bgt	.L32
 244:Src/mode.c    ****         {
 245:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 246:Src/mode.c    ****             HAL_Delay(100);
 247:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 248:Src/mode.c    ****             HAL_Delay(500);
 249:Src/mode.c    ****             break;
 250:Src/mode.c    ****         }
 251:Src/mode.c    ****         Gpio_FullColor(state % 7);
 121              		.loc 1 251 0
 122 008c 3448     		ldr	r0, .L34+16
 123 008e A0FB0430 		umull	r3, r0, r0, r4
 124 0092 231A     		subs	r3, r4, r0
 125 0094 00EB5300 		add	r0, r0, r3, lsr #1
 126 0098 8008     		lsrs	r0, r0, #2
 127 009a C0EBC000 		rsb	r0, r0, r0, lsl #3
 128 009e 201A     		subs	r0, r4, r0
 129 00a0 C0B2     		uxtb	r0, r0
 130 00a2 FFF7FEFF 		bl	Gpio_FullColor
 131              	.LVL12:
 252:Src/mode.c    ****         Gpio_SideLed(mode);
 132              		.loc 1 252 0
 133 00a6 E8B2     		uxtb	r0, r5
 134 00a8 FFF7FEFF 		bl	Gpio_SideLed
 135              	.LVL13:
 253:Src/mode.c    ****         printf("%d\r", mode + state);
 136              		.loc 1 253 0
 137 00ac 2919     		adds	r1, r5, r4
 138 00ae 2D48     		ldr	r0, .L34+20
 139 00b0 FFF7FEFF 		bl	printf
 140              	.LVL14:
 141              	.L18:
 196:Src/mode.c    ****         {
 142              		.loc 1 196 0
 143 00b4 274B     		ldr	r3, .L34+4
 144 00b6 93ED007A 		vldr.32	s14, [r3]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 8


 145 00ba DFED277A 		vldr.32	s15, .L34+8
 146 00be B4EEE77A 		vcmpe.f32	s14, s15
 147 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 148 00c6 08DC     		bgt	.L2
 196:Src/mode.c    ****         {
 149              		.loc 1 196 0 is_stmt 0 discriminator 1
 150 00c8 93ED007A 		vldr.32	s14, [r3]
 151 00cc DFED267A 		vldr.32	s15, .L34+24
 152 00d0 B4EEE77A 		vcmpe.f32	s14, s15
 153 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 154 00d8 BDD5     		bpl	.L3
 155              	.L2:
 198:Src/mode.c    ****             {
 156              		.loc 1 198 0 is_stmt 1
 157 00da 1E4B     		ldr	r3, .L34+4
 158 00dc 93ED007A 		vldr.32	s14, [r3]
 159 00e0 DFED217A 		vldr.32	s15, .L34+24
 160 00e4 B4EEE77A 		vcmpe.f32	s14, s15
 161 00e8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 162 00ec 91D5     		bpl	.L28
 200:Src/mode.c    ****             }
 163              		.loc 1 200 0
 164 00ee 0135     		adds	r5, r5, #1
 165              	.LVL15:
 166 00f0 6DB2     		sxtb	r5, r5
 167              	.LVL16:
 168              	.L7:
 206:Src/mode.c    ****             {
 169              		.loc 1 206 0
 170 00f2 032D     		cmp	r5, #3
 171 00f4 9ADC     		bgt	.L19
 210:Src/mode.c    ****             {
 172              		.loc 1 210 0
 173 00f6 002D     		cmp	r5, #0
 174 00f8 99DA     		bge	.L9
 212:Src/mode.c    ****             }
 175              		.loc 1 212 0
 176 00fa 0325     		movs	r5, #3
 177              	.LVL17:
 178 00fc 97E7     		b	.L9
 179              	.LVL18:
 180              	.L21:
 223:Src/mode.c    ****             }
 181              		.loc 1 223 0
 182 00fe 0024     		movs	r4, #0
 183              	.LVL19:
 184 0100 B7E7     		b	.L12
 185              	.LVL20:
 186              	.L29:
 231:Src/mode.c    ****         {
 187              		.loc 1 231 0
 188 0102 164B     		ldr	r3, .L34+12
 189 0104 93ED027A 		vldr.32	s14, [r3, #8]
 190 0108 FBEE047A 		vmov.f32	s15, #-2.0e+1
 191 010c B4EEE77A 		vcmpe.f32	s14, s15
 192 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193 0114 B0D5     		bpl	.L13
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 9


 233:Src/mode.c    ****             {
 194              		.loc 1 233 0
 195 0116 2CB1     		cbz	r4, .L22
 239:Src/mode.c    ****             }
 196              		.loc 1 239 0
 197 0118 043C     		subs	r4, r4, #4
 198              	.LVL21:
 199 011a E4B2     		uxtb	r4, r4
 200              	.LVL22:
 201              	.L15:
 241:Src/mode.c    ****         }
 202              		.loc 1 241 0
 203 011c 0F4B     		ldr	r3, .L34+12
 204 011e 0022     		movs	r2, #0
 205 0120 9A60     		str	r2, [r3, #8]	@ float
 206 0122 A9E7     		b	.L13
 207              	.L22:
 235:Src/mode.c    ****             }
 208              		.loc 1 235 0
 209 0124 1024     		movs	r4, #16
 210              	.LVL23:
 211 0126 F9E7     		b	.L15
 212              	.LVL24:
 213              	.L32:
 245:Src/mode.c    ****             HAL_Delay(100);
 214              		.loc 1 245 0
 215 0128 4FF49671 		mov	r1, #300
 216 012c 4C20     		movs	r0, #76
 217 012e FFF7FEFF 		bl	Tim_BuzzerPwm
 218              	.LVL25:
 246:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 219              		.loc 1 246 0
 220 0132 6420     		movs	r0, #100
 221 0134 FFF7FEFF 		bl	HAL_Delay
 222              	.LVL26:
 247:Src/mode.c    ****             HAL_Delay(500);
 223              		.loc 1 247 0
 224 0138 0021     		movs	r1, #0
 225 013a 0A20     		movs	r0, #10
 226 013c FFF7FEFF 		bl	Tim_BuzzerPwm
 227              	.LVL27:
 248:Src/mode.c    ****             break;
 228              		.loc 1 248 0
 229 0140 4FF4FA70 		mov	r0, #500
 230 0144 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL28:
 254:Src/mode.c    ****     }
 255:Src/mode.c    ****     return mode + state;
 232              		.loc 1 255 0
 233 0148 2C44     		add	r4, r4, r5
 234              	.LVL29:
 235 014a E0B2     		uxtb	r0, r4
 256:Src/mode.c    **** }
 236              		.loc 1 256 0
 237 014c 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL30:
 239              	.L35:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 10


 240 014e 00BF     		.align	2
 241              	.L34:
 242 0150 00000000 		.word	accel
 243 0154 00000000 		.word	gyro_y
 244 0158 00009643 		.word	1133903872
 245 015c 00000000 		.word	enc
 246 0160 25499224 		.word	613566757
 247 0164 00000000 		.word	.LC0
 248 0168 000096C3 		.word	-1013579776
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.SensorCheck,"ax",%progbits
 253              		.align	1
 254              		.global	SensorCheck
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	SensorCheck:
 261              	.LFB128:
 257:Src/mode.c    **** 
 258:Src/mode.c    **** void SensorCheck(void)
 259:Src/mode.c    **** {
 262              		.loc 1 259 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 271 0002 82B0     		sub	sp, sp, #8
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 16
 260:Src/mode.c    ****     Adc_IrSensorStart();
 274              		.loc 1 260 0
 275 0004 FFF7FEFF 		bl	Adc_IrSensorStart
 276              	.LVL31:
 277 0008 2CE0     		b	.L43
 278              	.L48:
 261:Src/mode.c    **** 
 262:Src/mode.c    ****     while (1)
 263:Src/mode.c    ****     {
 264:Src/mode.c    ****         if (sen_r.is_wall == TRUE)
 265:Src/mode.c    ****         {
 266:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_RESET);
 279              		.loc 1 266 0
 280 000a 0022     		movs	r2, #0
 281 000c 8021     		movs	r1, #128
 282 000e 2D48     		ldr	r0, .L51
 283 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 284              	.LVL32:
 285 0014 2FE0     		b	.L38
 286              	.L49:
 267:Src/mode.c    ****         }
 268:Src/mode.c    ****         else
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 11


 269:Src/mode.c    ****         {
 270:Src/mode.c    ****             HAL_GPIO_WritePin(led2_GPIO_Port, led2_Pin, GPIO_PIN_SET);
 271:Src/mode.c    ****         }
 272:Src/mode.c    ****         if (sen_l.is_wall == TRUE)
 273:Src/mode.c    ****         {
 274:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_RESET);
 287              		.loc 1 274 0
 288 0016 0022     		movs	r2, #0
 289 0018 1021     		movs	r1, #16
 290 001a 2B48     		ldr	r0, .L51+4
 291 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL33:
 293 0020 32E0     		b	.L40
 294              	.L50:
 275:Src/mode.c    ****         }
 276:Src/mode.c    ****         else
 277:Src/mode.c    ****         {
 278:Src/mode.c    ****             HAL_GPIO_WritePin(led1_GPIO_Port, led1_Pin, GPIO_PIN_SET);
 279:Src/mode.c    ****         }
 280:Src/mode.c    ****         if (sen_front.is_wall == TRUE)
 281:Src/mode.c    ****         {
 282:Src/mode.c    ****             Gpio_FullColor(WHITE);
 295              		.loc 1 282 0
 296 0022 0020     		movs	r0, #0
 297 0024 FFF7FEFF 		bl	Gpio_FullColor
 298              	.LVL34:
 299              	.L42:
 283:Src/mode.c    ****         }
 284:Src/mode.c    ****         else
 285:Src/mode.c    ****         {
 286:Src/mode.c    ****             Gpio_FullColor(DARK);
 287:Src/mode.c    ****         }
 288:Src/mode.c    ****         printf("l:%d fl:%d f:%d fr:%d r:%d \r", sen_l.now, sen_fl.now, sen_front.now, sen_fr.now, s
 300              		.loc 1 288 0
 301 0028 284B     		ldr	r3, .L51+8
 302 002a B3F90010 		ldrsh	r1, [r3]
 303 002e 284B     		ldr	r3, .L51+12
 304 0030 B3F90020 		ldrsh	r2, [r3]
 305 0034 274B     		ldr	r3, .L51+16
 306 0036 B3F90030 		ldrsh	r3, [r3]
 307 003a 2748     		ldr	r0, .L51+20
 308 003c B0F90000 		ldrsh	r0, [r0]
 309 0040 264C     		ldr	r4, .L51+24
 310 0042 B4F90040 		ldrsh	r4, [r4]
 311 0046 0194     		str	r4, [sp, #4]
 312 0048 0090     		str	r0, [sp]
 313 004a 2548     		ldr	r0, .L51+28
 314 004c FFF7FEFF 		bl	printf
 315              	.LVL35:
 289:Src/mode.c    **** 
 290:Src/mode.c    ****         if (accel.x > 60)
 316              		.loc 1 290 0
 317 0050 244B     		ldr	r3, .L51+32
 318 0052 93ED007A 		vldr.32	s14, [r3]
 319 0056 DFED247A 		vldr.32	s15, .L51+36
 320 005a B4EEE77A 		vcmpe.f32	s14, s15
 321 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 12


 322 0062 19DC     		bgt	.L47
 323              	.L43:
 264:Src/mode.c    ****         {
 324              		.loc 1 264 0
 325 0064 1D4B     		ldr	r3, .L51+24
 326 0066 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 327 0068 012B     		cmp	r3, #1
 328 006a CED0     		beq	.L48
 270:Src/mode.c    ****         }
 329              		.loc 1 270 0
 330 006c 0122     		movs	r2, #1
 331 006e 8021     		movs	r1, #128
 332 0070 1448     		ldr	r0, .L51
 333 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL36:
 335              	.L38:
 272:Src/mode.c    ****         {
 336              		.loc 1 272 0
 337 0076 154B     		ldr	r3, .L51+8
 338 0078 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 339 007a 012B     		cmp	r3, #1
 340 007c CBD0     		beq	.L49
 278:Src/mode.c    ****         }
 341              		.loc 1 278 0
 342 007e 0122     		movs	r2, #1
 343 0080 1021     		movs	r1, #16
 344 0082 1148     		ldr	r0, .L51+4
 345 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL37:
 347              	.L40:
 280:Src/mode.c    ****         {
 348              		.loc 1 280 0
 349 0088 124B     		ldr	r3, .L51+16
 350 008a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 351 008c 012B     		cmp	r3, #1
 352 008e C8D0     		beq	.L50
 286:Src/mode.c    ****         }
 353              		.loc 1 286 0
 354 0090 0720     		movs	r0, #7
 355 0092 FFF7FEFF 		bl	Gpio_FullColor
 356              	.LVL38:
 357 0096 C7E7     		b	.L42
 358              	.L47:
 291:Src/mode.c    ****         {
 292:Src/mode.c    ****             Adc_IrSensorFinish();
 359              		.loc 1 292 0
 360 0098 FFF7FEFF 		bl	Adc_IrSensorFinish
 361              	.LVL39:
 293:Src/mode.c    ****             Tim_BuzzerPwm(HZ_C_H, 300);
 362              		.loc 1 293 0
 363 009c 4FF49671 		mov	r1, #300
 364 00a0 4C20     		movs	r0, #76
 365 00a2 FFF7FEFF 		bl	Tim_BuzzerPwm
 366              	.LVL40:
 294:Src/mode.c    ****             HAL_Delay(300);
 367              		.loc 1 294 0
 368 00a6 4FF49670 		mov	r0, #300
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 13


 369 00aa FFF7FEFF 		bl	HAL_Delay
 370              	.LVL41:
 295:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 371              		.loc 1 295 0
 372 00ae 0021     		movs	r1, #0
 373 00b0 0A20     		movs	r0, #10
 374 00b2 FFF7FEFF 		bl	Tim_BuzzerPwm
 375              	.LVL42:
 296:Src/mode.c    ****             HAL_Delay(500);
 376              		.loc 1 296 0
 377 00b6 4FF4FA70 		mov	r0, #500
 378 00ba FFF7FEFF 		bl	HAL_Delay
 379              	.LVL43:
 297:Src/mode.c    ****             break;
 298:Src/mode.c    ****         }
 299:Src/mode.c    ****     }
 300:Src/mode.c    **** }
 380              		.loc 1 300 0
 381 00be 02B0     		add	sp, sp, #8
 382              	.LCFI3:
 383              		.cfi_def_cfa_offset 8
 384              		@ sp needed
 385 00c0 10BD     		pop	{r4, pc}
 386              	.L52:
 387 00c2 00BF     		.align	2
 388              	.L51:
 389 00c4 00040240 		.word	1073873920
 390 00c8 00000240 		.word	1073872896
 391 00cc 00000000 		.word	sen_l
 392 00d0 00000000 		.word	sen_fl
 393 00d4 00000000 		.word	sen_front
 394 00d8 00000000 		.word	sen_fr
 395 00dc 00000000 		.word	sen_r
 396 00e0 00000000 		.word	.LC1
 397 00e4 00000000 		.word	accel
 398 00e8 00007042 		.word	1114636288
 399              		.cfi_endproc
 400              	.LFE128:
 402              		.section	.text.SetRunMode,"ax",%progbits
 403              		.align	1
 404              		.global	SetRunMode
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	SetRunMode:
 411              	.LFB129:
 301:Src/mode.c    **** 
 302:Src/mode.c    **** void SetRunMode(void)
 303:Src/mode.c    **** {
 412              		.loc 1 303 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI4:
 418              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 14


 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 304:Src/mode.c    ****     Adc_IrSensorStart();
 421              		.loc 1 304 0
 422 0002 FFF7FEFF 		bl	Adc_IrSensorStart
 423              	.LVL44:
 424              	.L54:
 305:Src/mode.c    ****     while (sen_front.is_wall != TRUE)
 425              		.loc 1 305 0 discriminator 1
 426 0006 164B     		ldr	r3, .L56
 427 0008 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 428 000a 012B     		cmp	r3, #1
 429 000c FBD1     		bne	.L54
 306:Src/mode.c    ****     {
 307:Src/mode.c    ****     }
 308:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 430              		.loc 1 308 0
 431 000e 4FF49671 		mov	r1, #300
 432 0012 4C20     		movs	r0, #76
 433 0014 FFF7FEFF 		bl	Tim_BuzzerPwm
 434              	.LVL45:
 309:Src/mode.c    ****     HAL_Delay(100);
 435              		.loc 1 309 0
 436 0018 6420     		movs	r0, #100
 437 001a FFF7FEFF 		bl	HAL_Delay
 438              	.LVL46:
 310:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 439              		.loc 1 310 0
 440 001e 0021     		movs	r1, #0
 441 0020 0A20     		movs	r0, #10
 442 0022 FFF7FEFF 		bl	Tim_BuzzerPwm
 443              	.LVL47:
 311:Src/mode.c    ****     HAL_Delay(5000);
 444              		.loc 1 311 0
 445 0026 41F28830 		movw	r0, #5000
 446 002a FFF7FEFF 		bl	HAL_Delay
 447              	.LVL48:
 312:Src/mode.c    ****     Spi_GyroReset();
 448              		.loc 1 312 0
 449 002e FFF7FEFF 		bl	Spi_GyroReset
 450              	.LVL49:
 313:Src/mode.c    ****     HAL_Delay(1200);
 451              		.loc 1 313 0
 452 0032 4FF49660 		mov	r0, #1200
 453 0036 FFF7FEFF 		bl	HAL_Delay
 454              	.LVL50:
 314:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 455              		.loc 1 314 0
 456 003a 4FF49671 		mov	r1, #300
 457 003e 4C20     		movs	r0, #76
 458 0040 FFF7FEFF 		bl	Tim_BuzzerPwm
 459              	.LVL51:
 315:Src/mode.c    ****     HAL_Delay(100);
 460              		.loc 1 315 0
 461 0044 6420     		movs	r0, #100
 462 0046 FFF7FEFF 		bl	HAL_Delay
 463              	.LVL52:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 15


 316:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 464              		.loc 1 316 0
 465 004a 0021     		movs	r1, #0
 466 004c 0A20     		movs	r0, #10
 467 004e FFF7FEFF 		bl	Tim_BuzzerPwm
 468              	.LVL53:
 317:Src/mode.c    ****     Control_ResetVelo();
 469              		.loc 1 317 0
 470 0052 FFF7FEFF 		bl	Control_ResetVelo
 471              	.LVL54:
 318:Src/mode.c    ****     motor_flag = TRUE;
 472              		.loc 1 318 0
 473 0056 034B     		ldr	r3, .L56+4
 474 0058 0122     		movs	r2, #1
 475 005a 1A70     		strb	r2, [r3]
 319:Src/mode.c    **** }
 476              		.loc 1 319 0
 477 005c 08BD     		pop	{r3, pc}
 478              	.L57:
 479 005e 00BF     		.align	2
 480              	.L56:
 481 0060 00000000 		.word	sen_front
 482 0064 00000000 		.word	motor_flag
 483              		.cfi_endproc
 484              	.LFE129:
 486              		.section	.text.Get_WallData,"ax",%progbits
 487              		.align	1
 488              		.global	Get_WallData
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	Get_WallData:
 495              	.LFB130:
 320:Src/mode.c    **** 
 321:Src/mode.c    **** void Get_WallData(uint8_t *n_wall, uint8_t *e_wall, uint8_t *w_wall, uint8_t *s_wall, uint8_t x, ui
 322:Src/mode.c    **** {
 496              		.loc 1 322 0
 497              		.cfi_startproc
 498              		@ args = 12, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL55:
 502 0000 10B4     		push	{r4}
 503              	.LCFI5:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 4, -4
 506 0002 9DF80C40 		ldrb	r4, [sp, #12]	@ zero_extendqisi2
 323:Src/mode.c    ****     // 方向別に壁の状態を取得
 324:Src/mode.c    ****     switch (direction)
 507              		.loc 1 324 0
 508 0006 032C     		cmp	r4, #3
 509 0008 0ED8     		bhi	.L58
 510 000a DFE804F0 		tbb	[pc, r4]
 511              	.L61:
 512 000e 02       		.byte	(.L60-.L61)/2
 513 000f 28       		.byte	(.L62-.L61)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 16


 514 0010 1C       		.byte	(.L63-.L61)/2
 515 0011 10       		.byte	(.L64-.L61)/2
 516              		.p2align 1
 517              	.L60:
 325:Src/mode.c    ****     {
 326:Src/mode.c    ****     case NORTH:
 327:Src/mode.c    ****         *n_wall = sen_front.is_wall;
 518              		.loc 1 327 0
 519 0012 194C     		ldr	r4, .L66
 520 0014 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 521 0016 0470     		strb	r4, [r0]
 328:Src/mode.c    ****         *e_wall = sen_r.is_wall;
 522              		.loc 1 328 0
 523 0018 1848     		ldr	r0, .L66+4
 524              	.LVL56:
 525 001a 007F     		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 526 001c 0870     		strb	r0, [r1]
 329:Src/mode.c    ****         *w_wall = sen_l.is_wall;
 527              		.loc 1 329 0
 528 001e 1849     		ldr	r1, .L66+8
 529              	.LVL57:
 530 0020 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 531 0022 1170     		strb	r1, [r2]
 330:Src/mode.c    ****         *s_wall = 0;
 532              		.loc 1 330 0
 533 0024 0022     		movs	r2, #0
 534              	.LVL58:
 535 0026 1A70     		strb	r2, [r3]
 536              	.LVL59:
 537              	.L58:
 331:Src/mode.c    ****         break;
 332:Src/mode.c    ****     case EAST:
 333:Src/mode.c    ****         *e_wall = sen_front.is_wall;
 334:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 335:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 336:Src/mode.c    ****         *w_wall = 0;
 337:Src/mode.c    ****         break;
 338:Src/mode.c    ****     case SOUTH:
 339:Src/mode.c    ****         *s_wall = sen_front.is_wall;
 340:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 341:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 342:Src/mode.c    ****         *n_wall = 0;
 343:Src/mode.c    ****         break;
 344:Src/mode.c    ****     case WEST:
 345:Src/mode.c    ****         *w_wall = sen_front.is_wall;
 346:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 347:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 348:Src/mode.c    ****         *e_wall = 0;
 349:Src/mode.c    ****         break;
 350:Src/mode.c    ****     default:
 351:Src/mode.c    ****         break;
 352:Src/mode.c    ****     }
 353:Src/mode.c    **** }
 538              		.loc 1 353 0
 539 0028 5DF8044B 		ldr	r4, [sp], #4
 540              	.LCFI6:
 541              		.cfi_remember_state
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 17


 542              		.cfi_restore 4
 543              		.cfi_def_cfa_offset 0
 544              	.LVL60:
 545 002c 7047     		bx	lr
 546              	.LVL61:
 547              	.L64:
 548              	.LCFI7:
 549              		.cfi_restore_state
 333:Src/mode.c    ****         *s_wall = sen_r.is_wall;
 550              		.loc 1 333 0
 551 002e 124C     		ldr	r4, .L66
 552 0030 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 553 0032 0C70     		strb	r4, [r1]
 334:Src/mode.c    ****         *n_wall = sen_l.is_wall;
 554              		.loc 1 334 0
 555 0034 1149     		ldr	r1, .L66+4
 556              	.LVL62:
 557 0036 097F     		ldrb	r1, [r1, #28]	@ zero_extendqisi2
 558 0038 1970     		strb	r1, [r3]
 335:Src/mode.c    ****         *w_wall = 0;
 559              		.loc 1 335 0
 560 003a 114B     		ldr	r3, .L66+8
 561              	.LVL63:
 562 003c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 563 003e 0370     		strb	r3, [r0]
 336:Src/mode.c    ****         break;
 564              		.loc 1 336 0
 565 0040 0023     		movs	r3, #0
 566 0042 1370     		strb	r3, [r2]
 337:Src/mode.c    ****     case SOUTH:
 567              		.loc 1 337 0
 568 0044 F0E7     		b	.L58
 569              	.LVL64:
 570              	.L63:
 339:Src/mode.c    ****         *w_wall = sen_r.is_wall;
 571              		.loc 1 339 0
 572 0046 0C4C     		ldr	r4, .L66
 573 0048 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 574 004a 1C70     		strb	r4, [r3]
 340:Src/mode.c    ****         *e_wall = sen_l.is_wall;
 575              		.loc 1 340 0
 576 004c 0B4B     		ldr	r3, .L66+4
 577              	.LVL65:
 578 004e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 579 0050 1370     		strb	r3, [r2]
 341:Src/mode.c    ****         *n_wall = 0;
 580              		.loc 1 341 0
 581 0052 0B4B     		ldr	r3, .L66+8
 582 0054 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 583 0056 0B70     		strb	r3, [r1]
 342:Src/mode.c    ****         break;
 584              		.loc 1 342 0
 585 0058 0023     		movs	r3, #0
 586 005a 0370     		strb	r3, [r0]
 343:Src/mode.c    ****     case WEST:
 587              		.loc 1 343 0
 588 005c E4E7     		b	.L58
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 18


 589              	.LVL66:
 590              	.L62:
 345:Src/mode.c    ****         *n_wall = sen_r.is_wall;
 591              		.loc 1 345 0
 592 005e 064C     		ldr	r4, .L66
 593 0060 247F     		ldrb	r4, [r4, #28]	@ zero_extendqisi2
 594 0062 1470     		strb	r4, [r2]
 346:Src/mode.c    ****         *s_wall = sen_l.is_wall;
 595              		.loc 1 346 0
 596 0064 054A     		ldr	r2, .L66+4
 597              	.LVL67:
 598 0066 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 599 0068 0270     		strb	r2, [r0]
 347:Src/mode.c    ****         *e_wall = 0;
 600              		.loc 1 347 0
 601 006a 054A     		ldr	r2, .L66+8
 602 006c 127F     		ldrb	r2, [r2, #28]	@ zero_extendqisi2
 603 006e 1A70     		strb	r2, [r3]
 348:Src/mode.c    ****         break;
 604              		.loc 1 348 0
 605 0070 0023     		movs	r3, #0
 606              	.LVL68:
 607 0072 0B70     		strb	r3, [r1]
 608              		.loc 1 353 0
 609 0074 D8E7     		b	.L58
 610              	.L67:
 611 0076 00BF     		.align	2
 612              	.L66:
 613 0078 00000000 		.word	sen_front
 614 007c 00000000 		.word	sen_r
 615 0080 00000000 		.word	sen_l
 616              		.cfi_endproc
 617              	.LFE130:
 619              		.section	.text.SearchRun,"ax",%progbits
 620              		.align	1
 621              		.global	SearchRun
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv4-sp-d16
 627              	SearchRun:
 628              	.LFB131:
 354:Src/mode.c    **** 
 355:Src/mode.c    **** void SearchRun(void)
 356:Src/mode.c    **** {
 629              		.loc 1 356 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 288
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633 0000 30B5     		push	{r4, r5, lr}
 634              	.LCFI8:
 635              		.cfi_def_cfa_offset 12
 636              		.cfi_offset 4, -12
 637              		.cfi_offset 5, -8
 638              		.cfi_offset 14, -4
 639 0002 CDB0     		sub	sp, sp, #308
 640              	.LCFI9:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 19


 641              		.cfi_def_cfa_offset 320
 357:Src/mode.c    ****     //壁情報を持った構造体を定義
 358:Src/mode.c    ****     wallData_t wall_data;
 359:Src/mode.c    ****     wallData_t wall_data_fast;
 360:Src/mode.c    **** 
 361:Src/mode.c    ****     //ポジションを定義、初期化
 362:Src/mode.c    ****     pos_t mypos;
 363:Src/mode.c    ****     mypos.dir = 0;
 642              		.loc 1 363 0
 643 0004 0024     		movs	r4, #0
 644 0006 8DF81E40 		strb	r4, [sp, #30]
 364:Src/mode.c    ****     mypos.x = 0;
 645              		.loc 1 364 0
 646 000a 8DF81C40 		strb	r4, [sp, #28]
 365:Src/mode.c    ****     mypos.y = 1;
 647              		.loc 1 365 0
 648 000e 0125     		movs	r5, #1
 649 0010 8DF81D50 		strb	r5, [sp, #29]
 366:Src/mode.c    **** 
 367:Src/mode.c    ****     //マップを扱うクラスを定義、壁情報を初期化
 368:Src/mode.c    ****     Map_Init(&wall_data);
 650              		.loc 1 368 0
 651 0014 2AA8     		add	r0, sp, #168
 652 0016 FFF7FEFF 		bl	Map_Init
 653              	.LVL69:
 369:Src/mode.c    ****     Map_InitFast(&wall_data_fast);
 654              		.loc 1 369 0
 655 001a 08A8     		add	r0, sp, #32
 656 001c FFF7FEFF 		bl	Map_InitFast
 657              	.LVL70:
 370:Src/mode.c    **** 
 371:Src/mode.c    ****     //歩数マップの作製
 372:Src/mode.c    ****     uint16_t nextdir = FRONT;
 373:Src/mode.c    ****     //最初の区画は進んでいるものとする
 374:Src/mode.c    ****     unsigned char flag_goal = 0;
 658              		.loc 1 374 0
 659 0020 8DF81B40 		strb	r4, [sp, #27]
 375:Src/mode.c    ****     //enable control side wall
 376:Src/mode.c    ****     control_wall_flag = TRUE;
 660              		.loc 1 376 0
 661 0024 7D4B     		ldr	r3, .L77
 662 0026 1D70     		strb	r5, [r3]
 377:Src/mode.c    ****     //counter set
 378:Src/mode.c    ****     counter_s=0;
 663              		.loc 1 378 0
 664 0028 7D4B     		ldr	r3, .L77+4
 665 002a 1C70     		strb	r4, [r3]
 379:Src/mode.c    ****     SetRunMode();
 666              		.loc 1 379 0
 667 002c FFF7FEFF 		bl	SetRunMode
 668              	.LVL71:
 380:Src/mode.c    ****     Motion_Start();
 669              		.loc 1 380 0
 670 0030 FFF7FEFF 		bl	Motion_Start
 671              	.LVL72:
 672 0034 73E0     		b	.L73
 673              	.LVL73:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 20


 674              	.L76:
 675              	.LBB2:
 381:Src/mode.c    ****     while (1)
 382:Src/mode.c    ****     {
 383:Src/mode.c    ****         unsigned char n_wall = 0, e_wall = 0, w_wall = 0, s_wall = 0;
 384:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 385:Src/mode.c    ****         Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 386:Src/mode.c    **** 
 387:Src/mode.c    ****         Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 388:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 389:Src/mode.c    **** 
 390:Src/mode.c    ****         Maze_UpdateStepMap(&flag_goal, gx, gy, &wall_data);
 391:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 392:Src/mode.c    ****         Maze_UpdatePosition(nextdir, &mypos);
 393:Src/mode.c    ****         Motion_Switch(nextdir);
 394:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 676              		.loc 1 394 0 discriminator 1
 677 0036 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 678 003a 7A49     		ldr	r1, .L77+8
 679 003c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 680 003e 8A42     		cmp	r2, r1
 681 0040 40F0BF80 		bne	.L69
 395:Src/mode.c    ****         {
 396:Src/mode.c    ****             if (flag_goal == 0)
 682              		.loc 1 396 0
 683 0044 9DF81B10 		ldrb	r1, [sp, #27]	@ zero_extendqisi2
 684 0048 0029     		cmp	r1, #0
 685 004a 40F0BA80 		bne	.L69
 397:Src/mode.c    ****             {
 398:Src/mode.c    ****                 Get_WallData(&n_wall, &e_wall, &w_wall, &s_wall, mypos.x, mypos.y, mypos.dir);
 686              		.loc 1 398 0
 687 004e 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 688 0052 0291     		str	r1, [sp, #8]
 689 0054 0192     		str	r2, [sp, #4]
 690 0056 0093     		str	r3, [sp]
 691 0058 0DF11A03 		add	r3, sp, #26
 692 005c 0DF11902 		add	r2, sp, #25
 693 0060 06A9     		add	r1, sp, #24
 694 0062 0DF11700 		add	r0, sp, #23
 695 0066 FFF7FEFF 		bl	Get_WallData
 696              	.LVL74:
 399:Src/mode.c    ****                 Map_addWall(&wall_data, &mypos, n_wall, e_wall, w_wall, s_wall);
 697              		.loc 1 399 0
 698 006a 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 699 006e 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 700 0072 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 701 0076 0191     		str	r1, [sp, #4]
 702 0078 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 703 007c 0091     		str	r1, [sp]
 704 007e 07A9     		add	r1, sp, #28
 705 0080 2AA8     		add	r0, sp, #168
 706 0082 FFF7FEFF 		bl	Map_addWall
 707              	.LVL75:
 400:Src/mode.c    ****                 Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 708              		.loc 1 400 0
 709 0086 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 710 008a 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 21


 711 008e 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 712 0092 0191     		str	r1, [sp, #4]
 713 0094 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 714 0098 0091     		str	r1, [sp]
 715 009a 07A9     		add	r1, sp, #28
 716 009c 08A8     		add	r0, sp, #32
 717 009e FFF7FEFF 		bl	Map_DelWall
 718              	.LVL76:
 401:Src/mode.c    ****                 Motion_End();
 719              		.loc 1 401 0
 720 00a2 FFF7FEFF 		bl	Motion_End
 721              	.LVL77:
 402:Src/mode.c    ****                 motor_flag = FALSE;
 722              		.loc 1 402 0
 723 00a6 0024     		movs	r4, #0
 724 00a8 5F4B     		ldr	r3, .L77+12
 725 00aa 1C70     		strb	r4, [r3]
 403:Src/mode.c    ****                 flag_goal = 1;
 726              		.loc 1 403 0
 727 00ac 0123     		movs	r3, #1
 728 00ae 8DF81B30 		strb	r3, [sp, #27]
 404:Src/mode.c    ****                 HAL_Delay(1000);
 729              		.loc 1 404 0
 730 00b2 4FF47A70 		mov	r0, #1000
 731 00b6 FFF7FEFF 		bl	HAL_Delay
 732              	.LVL78:
 405:Src/mode.c    ****                 Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 733              		.loc 1 405 0
 734 00ba 8822     		movs	r2, #136
 735 00bc 08A9     		add	r1, sp, #32
 736 00be 5B4B     		ldr	r3, .L77+16
 737 00c0 1868     		ldr	r0, [r3]
 738 00c2 FFF7FEFF 		bl	Flash_Write
 739              	.LVL79:
 406:Src/mode.c    ****                 HAL_Delay(2000);
 740              		.loc 1 406 0
 741 00c6 4FF4FA60 		mov	r0, #2000
 742 00ca FFF7FEFF 		bl	HAL_Delay
 743              	.LVL80:
 407:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_A, 300);
 744              		.loc 1 407 0
 745 00ce 4FF49671 		mov	r1, #300
 746 00d2 5B20     		movs	r0, #91
 747 00d4 FFF7FEFF 		bl	Tim_BuzzerPwm
 748              	.LVL81:
 408:Src/mode.c    ****                 HAL_Delay(200);
 749              		.loc 1 408 0
 750 00d8 C820     		movs	r0, #200
 751 00da FFF7FEFF 		bl	HAL_Delay
 752              	.LVL82:
 409:Src/mode.c    ****                 Tim_BuzzerPwm(HZ_NORMAL, 0);
 753              		.loc 1 409 0
 754 00de 2146     		mov	r1, r4
 755 00e0 0A20     		movs	r0, #10
 756 00e2 FFF7FEFF 		bl	Tim_BuzzerPwm
 757              	.LVL83:
 410:Src/mode.c    ****                 if (sen_front.is_wall == FALSE)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 22


 758              		.loc 1 410 0
 759 00e6 524B     		ldr	r3, .L77+20
 760 00e8 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 761 00ea 53B9     		cbnz	r3, .L70
 762              	.LVL84:
 411:Src/mode.c    ****                 {
 412:Src/mode.c    ****                     nextdir = FRONT;
 413:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 763              		.loc 1 413 0
 764 00ec 07A9     		add	r1, sp, #28
 765 00ee 2046     		mov	r0, r4
 766 00f0 FFF7FEFF 		bl	Maze_UpdatePosition
 767              	.LVL85:
 414:Src/mode.c    ****                     motor_flag = TRUE;
 768              		.loc 1 414 0
 769 00f4 4C4B     		ldr	r3, .L77+12
 770 00f6 0122     		movs	r2, #1
 771 00f8 1A70     		strb	r2, [r3]
 415:Src/mode.c    ****                     Motion_Restart(FALSE);
 772              		.loc 1 415 0
 773 00fa 2046     		mov	r0, r4
 774 00fc FFF7FEFF 		bl	Motion_Restart
 775              	.LVL86:
 776 0100 5FE0     		b	.L69
 777              	.LVL87:
 778              	.L70:
 416:Src/mode.c    ****                 }
 417:Src/mode.c    ****                 else
 418:Src/mode.c    ****                 {
 419:Src/mode.c    ****                     nextdir = PIVO_REAR;
 420:Src/mode.c    ****                     Maze_UpdatePosition(nextdir, &mypos);
 779              		.loc 1 420 0
 780 0102 07A9     		add	r1, sp, #28
 781 0104 0420     		movs	r0, #4
 782 0106 FFF7FEFF 		bl	Maze_UpdatePosition
 783              	.LVL88:
 421:Src/mode.c    ****                     motor_flag = TRUE;
 784              		.loc 1 421 0
 785 010a 0120     		movs	r0, #1
 786 010c 464B     		ldr	r3, .L77+12
 787 010e 1870     		strb	r0, [r3]
 422:Src/mode.c    ****                     Motion_Restart(TRUE);
 788              		.loc 1 422 0
 789 0110 FFF7FEFF 		bl	Motion_Restart
 790              	.LVL89:
 791 0114 55E0     		b	.L69
 792              	.LVL90:
 793              	.L71:
 423:Src/mode.c    ****                 }
 424:Src/mode.c    ****             }
 425:Src/mode.c    ****         }
 426:Src/mode.c    ****         if(counter_s > 150 && flag_goal==1){
 427:Src/mode.c    ****             flag_goal=2;
 428:Src/mode.c    ****         }
 429:Src/mode.c    ****         if (flag_goal == 2)
 794              		.loc 1 429 0
 795 0116 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 23


 796 011a 022B     		cmp	r3, #2
 797 011c 5DD0     		beq	.L75
 798              	.L73:
 383:Src/mode.c    ****         // 現在の座標の壁情報を読み込み、壁を探索データに追加する。
 799              		.loc 1 383 0
 800 011e 0023     		movs	r3, #0
 801 0120 8DF81730 		strb	r3, [sp, #23]
 802 0124 8DF81830 		strb	r3, [sp, #24]
 803 0128 8DF81930 		strb	r3, [sp, #25]
 804 012c 8DF81A30 		strb	r3, [sp, #26]
 385:Src/mode.c    **** 
 805              		.loc 1 385 0
 806 0130 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 807 0134 0293     		str	r3, [sp, #8]
 808 0136 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 809 013a 0193     		str	r3, [sp, #4]
 810 013c 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 811 0140 0093     		str	r3, [sp]
 812 0142 0DF11A03 		add	r3, sp, #26
 813 0146 0DF11902 		add	r2, sp, #25
 814 014a 06A9     		add	r1, sp, #24
 815 014c 0DF11700 		add	r0, sp, #23
 816 0150 FFF7FEFF 		bl	Get_WallData
 817              	.LVL91:
 387:Src/mode.c    ****         Map_DelWall(&wall_data_fast, &mypos, n_wall, e_wall, w_wall, s_wall);
 818              		.loc 1 387 0
 819 0154 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 820 0158 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 821 015c 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 822 0160 0191     		str	r1, [sp, #4]
 823 0162 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 824 0166 0091     		str	r1, [sp]
 825 0168 07A9     		add	r1, sp, #28
 826 016a 2AA8     		add	r0, sp, #168
 827 016c FFF7FEFF 		bl	Map_addWall
 828              	.LVL92:
 388:Src/mode.c    **** 
 829              		.loc 1 388 0
 830 0170 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 831 0174 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 832 0178 9DF81A10 		ldrb	r1, [sp, #26]	@ zero_extendqisi2
 833 017c 0191     		str	r1, [sp, #4]
 834 017e 9DF81910 		ldrb	r1, [sp, #25]	@ zero_extendqisi2
 835 0182 0091     		str	r1, [sp]
 836 0184 07A9     		add	r1, sp, #28
 837 0186 08A8     		add	r0, sp, #32
 838 0188 FFF7FEFF 		bl	Map_DelWall
 839              	.LVL93:
 390:Src/mode.c    ****         nextdir = Maze_GetNextMotion(&mypos, &wall_data);
 840              		.loc 1 390 0
 841 018c 294C     		ldr	r4, .L77+24
 842 018e 2AAB     		add	r3, sp, #168
 843 0190 244A     		ldr	r2, .L77+8
 844 0192 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 845 0194 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 846 0196 0DF11B00 		add	r0, sp, #27
 847 019a FFF7FEFF 		bl	Maze_UpdateStepMap
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 24


 848              	.LVL94:
 391:Src/mode.c    ****         Maze_UpdatePosition(nextdir, &mypos);
 849              		.loc 1 391 0
 850 019e 2AA9     		add	r1, sp, #168
 851 01a0 07A8     		add	r0, sp, #28
 852 01a2 FFF7FEFF 		bl	Maze_GetNextMotion
 853              	.LVL95:
 854 01a6 0546     		mov	r5, r0
 855              	.LVL96:
 392:Src/mode.c    ****         Motion_Switch(nextdir);
 856              		.loc 1 392 0
 857 01a8 07A9     		add	r1, sp, #28
 858 01aa 80B2     		uxth	r0, r0
 859 01ac FFF7FEFF 		bl	Maze_UpdatePosition
 860              	.LVL97:
 393:Src/mode.c    ****         if (mypos.x == gx && mypos.y == gy)
 861              		.loc 1 393 0
 862 01b0 2846     		mov	r0, r5
 863 01b2 FFF7FEFF 		bl	Motion_Switch
 864              	.LVL98:
 394:Src/mode.c    ****         {
 865              		.loc 1 394 0
 866 01b6 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 867 01ba 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 868 01bc 9342     		cmp	r3, r2
 869 01be 3FF43AAF 		beq	.L76
 870              	.L69:
 426:Src/mode.c    ****             flag_goal=2;
 871              		.loc 1 426 0
 872 01c2 174B     		ldr	r3, .L77+4
 873 01c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 01c6 962B     		cmp	r3, #150
 875 01c8 A5D9     		bls	.L71
 426:Src/mode.c    ****             flag_goal=2;
 876              		.loc 1 426 0 is_stmt 0 discriminator 1
 877 01ca 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 878 01ce 012B     		cmp	r3, #1
 879 01d0 A1D1     		bne	.L71
 427:Src/mode.c    ****         }
 880              		.loc 1 427 0 is_stmt 1
 881 01d2 0223     		movs	r3, #2
 882 01d4 8DF81B30 		strb	r3, [sp, #27]
 883 01d8 9DE7     		b	.L71
 884              	.L75:
 430:Src/mode.c    ****         {
 431:Src/mode.c    ****             Motion_End();
 885              		.loc 1 431 0
 886 01da FFF7FEFF 		bl	Motion_End
 887              	.LVL99:
 432:Src/mode.c    ****             motor_flag = FALSE;
 888              		.loc 1 432 0
 889 01de 0024     		movs	r4, #0
 890 01e0 114B     		ldr	r3, .L77+12
 891 01e2 1C70     		strb	r4, [r3]
 433:Src/mode.c    ****             HAL_Delay(1000);
 892              		.loc 1 433 0
 893 01e4 4FF47A70 		mov	r0, #1000
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 25


 894 01e8 FFF7FEFF 		bl	HAL_Delay
 895              	.LVL100:
 434:Src/mode.c    ****             Flash_Write(start_address, (uint8_t *)&wall_data_fast, sizeof(wallData_t));
 896              		.loc 1 434 0
 897 01ec 8822     		movs	r2, #136
 898 01ee 08A9     		add	r1, sp, #32
 899 01f0 0E4B     		ldr	r3, .L77+16
 900 01f2 1868     		ldr	r0, [r3]
 901 01f4 FFF7FEFF 		bl	Flash_Write
 902              	.LVL101:
 435:Src/mode.c    ****             HAL_Delay(2000);
 903              		.loc 1 435 0
 904 01f8 4FF4FA60 		mov	r0, #2000
 905 01fc FFF7FEFF 		bl	HAL_Delay
 906              	.LVL102:
 436:Src/mode.c    ****             Tim_BuzzerPwm(HZ_A, 300);
 907              		.loc 1 436 0
 908 0200 4FF49671 		mov	r1, #300
 909 0204 5B20     		movs	r0, #91
 910 0206 FFF7FEFF 		bl	Tim_BuzzerPwm
 911              	.LVL103:
 437:Src/mode.c    ****             HAL_Delay(200);
 912              		.loc 1 437 0
 913 020a C820     		movs	r0, #200
 914 020c FFF7FEFF 		bl	HAL_Delay
 915              	.LVL104:
 438:Src/mode.c    ****             Tim_BuzzerPwm(HZ_NORMAL, 0);
 916              		.loc 1 438 0
 917 0210 2146     		mov	r1, r4
 918 0212 0A20     		movs	r0, #10
 919 0214 FFF7FEFF 		bl	Tim_BuzzerPwm
 920              	.LVL105:
 921              	.LBE2:
 439:Src/mode.c    ****             break;
 440:Src/mode.c    ****         }
 441:Src/mode.c    ****     }
 442:Src/mode.c    **** }
 922              		.loc 1 442 0
 923 0218 4DB0     		add	sp, sp, #308
 924              	.LCFI10:
 925              		.cfi_def_cfa_offset 12
 926              		@ sp needed
 927 021a 30BD     		pop	{r4, r5, pc}
 928              	.L78:
 929              		.align	2
 930              	.L77:
 931 021c 00000000 		.word	control_wall_flag
 932 0220 00000000 		.word	counter_s
 933 0224 00000000 		.word	.LANCHOR0
 934 0228 00000000 		.word	motor_flag
 935 022c 00000000 		.word	start_address
 936 0230 00000000 		.word	sen_front
 937 0234 00000000 		.word	.LANCHOR1
 938              		.cfi_endproc
 939              	.LFE131:
 941              		.section	.text.Mode_FastRun,"ax",%progbits
 942              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 26


 943              		.global	Mode_FastRun
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv4-sp-d16
 949              	Mode_FastRun:
 950              	.LFB132:
 443:Src/mode.c    **** 
 444:Src/mode.c    **** void Mode_FastRun(uint8_t diagonal_flag, float gain,uint8_t w_str, uint8_t w_turn)
 445:Src/mode.c    **** {
 951              		.loc 1 445 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 1680
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL106:
 956 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 957              	.LCFI11:
 958              		.cfi_def_cfa_offset 20
 959              		.cfi_offset 4, -20
 960              		.cfi_offset 5, -16
 961              		.cfi_offset 6, -12
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 2DED028B 		vpush.64	{d8}
 965              	.LCFI12:
 966              		.cfi_def_cfa_offset 28
 967              		.cfi_offset 80, -28
 968              		.cfi_offset 81, -24
 969 0006 ADF29C6D 		subw	sp, sp, #1692
 970              	.LCFI13:
 971              		.cfi_def_cfa_offset 1720
 972 000a 0446     		mov	r4, r0
 973 000c B0EE408A 		vmov.f32	s16, s0
 974 0010 0E46     		mov	r6, r1
 975 0012 1746     		mov	r7, r2
 446:Src/mode.c    ****     wallData_t wallData;
 447:Src/mode.c    ****     pos_t pos;
 448:Src/mode.c    ****     uint16_t motion[255];
 449:Src/mode.c    ****     uint32_t velocity[255];
 450:Src/mode.c    ****     uint8_t tail = 0;
 976              		.loc 1 450 0
 977 0014 0025     		movs	r5, #0
 978 0016 8DF80F50 		strb	r5, [sp, #15]
 979              	.LVL107:
 451:Src/mode.c    ****     uint8_t head = 0;
 452:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&wallData, sizeof(wallData_t));
 980              		.loc 1 452 0
 981 001a 8822     		movs	r2, #136
 982              	.LVL108:
 983 001c 0DF5C261 		add	r1, sp, #1552
 984              	.LVL109:
 985 0020 7D4B     		ldr	r3, .L96
 986 0022 1868     		ldr	r0, [r3]
 987              	.LVL110:
 988 0024 FFF7FEFF 		bl	Flash_Load
 989              	.LVL111:
 453:Src/mode.c    ****     Maze_UpdateStepMapEx(&wallData, w_str, w_turn, gx, gy);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 27


 990              		.loc 1 453 0
 991 0028 7C4B     		ldr	r3, .L96+4
 992 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 002c 7C4A     		ldr	r2, .L96+8
 994 002e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 995 0030 0092     		str	r2, [sp]
 996 0032 3A46     		mov	r2, r7
 997 0034 3146     		mov	r1, r6
 998 0036 0DF5C260 		add	r0, sp, #1552
 999 003a FFF7FEFF 		bl	Maze_UpdateStepMapEx
 1000              	.LVL112:
 454:Src/mode.c    ****     Motion_MaxVeloSet(gain);
 1001              		.loc 1 454 0
 1002 003e B0EE480A 		vmov.f32	s0, s16
 1003 0042 FFF7FEFF 		bl	Motion_MaxVeloSet
 1004              	.LVL113:
 455:Src/mode.c    ****     pos.dir = NORTH;
 1005              		.loc 1 455 0
 1006 0046 8DF80E56 		strb	r5, [sp, #1550]
 456:Src/mode.c    ****     pos.x = 0;
 1007              		.loc 1 456 0
 1008 004a 8DF80C56 		strb	r5, [sp, #1548]
 457:Src/mode.c    ****     pos.y = 1;
 1009              		.loc 1 457 0
 1010 004e 0123     		movs	r3, #1
 1011 0050 8DF80D36 		strb	r3, [sp, #1549]
 458:Src/mode.c    ****     motion[tail] = START;
 1012              		.loc 1 458 0
 1013 0054 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1014 0058 0DF20C42 		addw	r2, sp, #1036
 1015 005c 0521     		movs	r1, #5
 1016 005e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 459:Src/mode.c    ****     tail++;
 1017              		.loc 1 459 0
 1018 0062 0133     		adds	r3, r3, #1
 1019 0064 DBB2     		uxtb	r3, r3
 460:Src/mode.c    ****     motion[tail] = ((1 << 4) | FRONT);
 1020              		.loc 1 460 0
 1021 0066 1021     		movs	r1, #16
 1022 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 461:Src/mode.c    ****     tail++;
 1023              		.loc 1 461 0
 1024 006c 0133     		adds	r3, r3, #1
 1025 006e 8DF80F30 		strb	r3, [sp, #15]
 1026              	.LVL114:
 462:Src/mode.c    ****     head += 2;
 463:Src/mode.c    ****     while (pos.x != gx || pos.y != gy)
 1027              		.loc 1 463 0
 1028 0072 14E0     		b	.L80
 1029              	.L81:
 1030              	.LBB3:
 464:Src/mode.c    ****     {
 465:Src/mode.c    ****         uint16_t buff = Maze_GetNextMotionEx(&pos, &wallData);
 1031              		.loc 1 465 0
 1032 0074 0DF5C261 		add	r1, sp, #1552
 1033 0078 0DF20C60 		addw	r0, sp, #1548
 1034 007c FFF7FEFF 		bl	Maze_GetNextMotionEx
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 28


 1035              	.LVL115:
 466:Src/mode.c    ****         motion[tail] = buff;
 1036              		.loc 1 466 0
 1037 0080 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1038 0084 0DF20C42 		addw	r2, sp, #1036
 1039 0088 22F81300 		strh	r0, [r2, r3, lsl #1]	@ movhi
 467:Src/mode.c    ****         tail++;
 1040              		.loc 1 467 0
 1041 008c 0133     		adds	r3, r3, #1
 1042 008e 8DF80F30 		strb	r3, [sp, #15]
 468:Src/mode.c    ****         Maze_UpdatePosition(buff & 0xf, &pos);
 1043              		.loc 1 468 0
 1044 0092 0DF20C61 		addw	r1, sp, #1548
 1045 0096 00F00F00 		and	r0, r0, #15
 1046              	.LVL116:
 1047 009a FFF7FEFF 		bl	Maze_UpdatePosition
 1048              	.LVL117:
 1049              	.L80:
 1050              	.LBE3:
 463:Src/mode.c    ****     {
 1051              		.loc 1 463 0
 1052 009e 9DF80C26 		ldrb	r2, [sp, #1548]	@ zero_extendqisi2
 1053 00a2 5E4B     		ldr	r3, .L96+4
 1054 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 00a6 9A42     		cmp	r2, r3
 1056 00a8 E4D1     		bne	.L81
 463:Src/mode.c    ****     {
 1057              		.loc 1 463 0 is_stmt 0 discriminator 1
 1058 00aa 9DF80D26 		ldrb	r2, [sp, #1549]	@ zero_extendqisi2
 1059 00ae 5C4B     		ldr	r3, .L96+8
 1060 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 00b2 9A42     		cmp	r2, r3
 1062 00b4 DED1     		bne	.L81
 469:Src/mode.c    ****     }
 470:Src/mode.c    ****     motion[tail] = GOAL;
 1063              		.loc 1 470 0 is_stmt 1
 1064 00b6 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1065 00ba 0DF20C41 		addw	r1, sp, #1036
 1066 00be 0622     		movs	r2, #6
 1067 00c0 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 471:Src/mode.c    ****     tail++;
 1068              		.loc 1 471 0
 1069 00c4 0133     		adds	r3, r3, #1
 1070 00c6 8DF80F30 		strb	r3, [sp, #15]
 1071              	.LVL118:
 472:Src/mode.c    ****     head = 0;
 473:Src/mode.c    ****     Maze_Compress(diagonal_flag, motion, velocity, &tail);
 1072              		.loc 1 473 0
 1073 00ca 0DF10F03 		add	r3, sp, #15
 1074 00ce 04AA     		add	r2, sp, #16
 1075 00d0 2046     		mov	r0, r4
 1076 00d2 FFF7FEFF 		bl	Maze_Compress
 1077              	.LVL119:
 474:Src/mode.c    **** 
 475:Src/mode.c    ****     control_wall_flag = 2;
 1078              		.loc 1 475 0
 1079 00d6 534B     		ldr	r3, .L96+12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 29


 1080 00d8 0222     		movs	r2, #2
 1081 00da 1A70     		strb	r2, [r3]
 476:Src/mode.c    ****     SetRunMode();
 1082              		.loc 1 476 0
 1083 00dc FFF7FEFF 		bl	SetRunMode
 1084              	.LVL120:
 472:Src/mode.c    ****     head = 0;
 1085              		.loc 1 472 0
 1086 00e0 0024     		movs	r4, #0
 477:Src/mode.c    ****     while (head != tail)
 1087              		.loc 1 477 0
 1088 00e2 0CE0     		b	.L82
 1089              	.LVL121:
 1090              	.L88:
 478:Src/mode.c    ****     {
 479:Src/mode.c    ****         switch (motion[head] & 0xf)
 480:Src/mode.c    ****         {
 481:Src/mode.c    ****         case START:
 482:Src/mode.c    ****             Motion_FastStart(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 1091              		.loc 1 482 0
 1092 00e4 04AB     		add	r3, sp, #16
 1093 00e6 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1094 00ea 00EE103A 		vmov	s0, r3	@ int
 1095 00ee B8EE400A 		vcvt.f32.u32	s0, s0
 1096 00f2 C0F30710 		ubfx	r0, r0, #4, #8
 1097 00f6 FFF7FEFF 		bl	Motion_FastStart
 1098              	.LVL122:
 1099              	.L83:
 483:Src/mode.c    ****             break;
 484:Src/mode.c    ****         case LEFT:
 485:Src/mode.c    ****             Motion_FastLeftTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 486:Src/mode.c    ****             break;
 487:Src/mode.c    ****         case FRONT:
 488:Src/mode.c    ****             Motion_FastStraight(motion[head] >> 4, (float)(velocity[head] >> 16), (float)(velocity[
 489:Src/mode.c    ****             break;
 490:Src/mode.c    ****         case DIAGONAL_L:
 491:Src/mode.c    ****             Motion_DiagonalLeft(motion[head] >> 4);
 492:Src/mode.c    ****             break;
 493:Src/mode.c    ****         case DIAGONAL_R:
 494:Src/mode.c    ****             Motion_DiagonalRight(motion[head] >> 4);
 495:Src/mode.c    ****             break;
 496:Src/mode.c    ****         case RIGHT:
 497:Src/mode.c    ****             Motion_FastRightTurn(motion[head] >> 4, (float)(velocity[head] & 0xffff));
 498:Src/mode.c    ****             break;
 499:Src/mode.c    ****         case GOAL:
 500:Src/mode.c    ****             Motion_FastGoal(motion[head] >> 4, (float)(velocity[head] >> 16));
 501:Src/mode.c    ****             break;
 502:Src/mode.c    ****         case ADJUST:
 503:Src/mode.c    ****             Motion_Adjust(motion[head] >> 4, (float)(velocity[head] >> 16));
 504:Src/mode.c    ****             break;
 505:Src/mode.c    ****         default:
 506:Src/mode.c    ****             break;
 507:Src/mode.c    ****         }
 508:Src/mode.c    ****         head++;
 1100              		.loc 1 508 0
 1101 00fa 0134     		adds	r4, r4, #1
 1102              	.LVL123:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 30


 1103 00fc E4B2     		uxtb	r4, r4
 1104              	.LVL124:
 1105              	.L82:
 477:Src/mode.c    ****     {
 1106              		.loc 1 477 0
 1107 00fe 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1108 0102 A342     		cmp	r3, r4
 1109 0104 6DD0     		beq	.L95
 479:Src/mode.c    ****         {
 1110              		.loc 1 479 0
 1111 0106 0DF20C43 		addw	r3, sp, #1036
 1112 010a 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 1113 010e 00F00F03 		and	r3, r0, #15
 1114 0112 0A2B     		cmp	r3, #10
 1115 0114 F1D8     		bhi	.L83
 1116 0116 01A2     		adr	r2, .L85
 1117 0118 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1118              		.p2align 2
 1119              	.L85:
 1120 011c 61010000 		.word	.L84+1
 1121 0120 49010000 		.word	.L86+1
 1122 0124 99010000 		.word	.L87+1
 1123 0128 FB000000 		.word	.L83+1
 1124 012c FB000000 		.word	.L83+1
 1125 0130 E5000000 		.word	.L88+1
 1126 0134 B1010000 		.word	.L89+1
 1127 0138 FB000000 		.word	.L83+1
 1128 013c 85010000 		.word	.L90+1
 1129 0140 8F010000 		.word	.L91+1
 1130 0144 CB010000 		.word	.L92+1
 1131              		.p2align 1
 1132              	.L86:
 485:Src/mode.c    ****             break;
 1133              		.loc 1 485 0
 1134 0148 04AB     		add	r3, sp, #16
 1135 014a 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1136 014e 00EE103A 		vmov	s0, r3	@ int
 1137 0152 B8EE400A 		vcvt.f32.u32	s0, s0
 1138 0156 C0F30710 		ubfx	r0, r0, #4, #8
 1139 015a FFF7FEFF 		bl	Motion_FastLeftTurn
 1140              	.LVL125:
 486:Src/mode.c    ****         case FRONT:
 1141              		.loc 1 486 0
 1142 015e CCE7     		b	.L83
 1143              	.L84:
 488:Src/mode.c    ****             break;
 1144              		.loc 1 488 0
 1145 0160 04AB     		add	r3, sp, #16
 1146 0162 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1147 0166 1A0C     		lsrs	r2, r3, #16
 1148 0168 00EE102A 		vmov	s0, r2	@ int
 1149 016c 9BB2     		uxth	r3, r3
 1150 016e 00EE903A 		vmov	s1, r3	@ int
 1151 0172 F8EE600A 		vcvt.f32.u32	s1, s1
 1152 0176 B8EE400A 		vcvt.f32.u32	s0, s0
 1153 017a C0F30710 		ubfx	r0, r0, #4, #8
 1154 017e FFF7FEFF 		bl	Motion_FastStraight
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 31


 1155              	.LVL126:
 489:Src/mode.c    ****         case DIAGONAL_L:
 1156              		.loc 1 489 0
 1157 0182 BAE7     		b	.L83
 1158              	.L90:
 491:Src/mode.c    ****             break;
 1159              		.loc 1 491 0
 1160 0184 C0F30710 		ubfx	r0, r0, #4, #8
 1161 0188 FFF7FEFF 		bl	Motion_DiagonalLeft
 1162              	.LVL127:
 492:Src/mode.c    ****         case DIAGONAL_R:
 1163              		.loc 1 492 0
 1164 018c B5E7     		b	.L83
 1165              	.L91:
 494:Src/mode.c    ****             break;
 1166              		.loc 1 494 0
 1167 018e C0F30710 		ubfx	r0, r0, #4, #8
 1168 0192 FFF7FEFF 		bl	Motion_DiagonalRight
 1169              	.LVL128:
 495:Src/mode.c    ****         case RIGHT:
 1170              		.loc 1 495 0
 1171 0196 B0E7     		b	.L83
 1172              	.L87:
 497:Src/mode.c    ****             break;
 1173              		.loc 1 497 0
 1174 0198 04AB     		add	r3, sp, #16
 1175 019a 33F82430 		ldrh	r3, [r3, r4, lsl #2]
 1176 019e 00EE103A 		vmov	s0, r3	@ int
 1177 01a2 B8EE400A 		vcvt.f32.u32	s0, s0
 1178 01a6 C0F30710 		ubfx	r0, r0, #4, #8
 1179 01aa FFF7FEFF 		bl	Motion_FastRightTurn
 1180              	.LVL129:
 498:Src/mode.c    ****         case GOAL:
 1181              		.loc 1 498 0
 1182 01ae A4E7     		b	.L83
 1183              	.L89:
 500:Src/mode.c    ****             break;
 1184              		.loc 1 500 0
 1185 01b0 04AB     		add	r3, sp, #16
 1186 01b2 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1187 01b6 1B0C     		lsrs	r3, r3, #16
 1188 01b8 00EE103A 		vmov	s0, r3	@ int
 1189 01bc B8EE400A 		vcvt.f32.u32	s0, s0
 1190 01c0 C0F30710 		ubfx	r0, r0, #4, #8
 1191 01c4 FFF7FEFF 		bl	Motion_FastGoal
 1192              	.LVL130:
 501:Src/mode.c    ****         case ADJUST:
 1193              		.loc 1 501 0
 1194 01c8 97E7     		b	.L83
 1195              	.L92:
 503:Src/mode.c    ****             break;
 1196              		.loc 1 503 0
 1197 01ca 04AB     		add	r3, sp, #16
 1198 01cc 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1199 01d0 1B0C     		lsrs	r3, r3, #16
 1200 01d2 00EE103A 		vmov	s0, r3	@ int
 1201 01d6 B8EE400A 		vcvt.f32.u32	s0, s0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 32


 1202 01da 0009     		lsrs	r0, r0, #4
 1203 01dc FFF7FEFF 		bl	Motion_Adjust
 1204              	.LVL131:
 504:Src/mode.c    ****         default:
 1205              		.loc 1 504 0
 1206 01e0 8BE7     		b	.L83
 1207              	.L95:
 509:Src/mode.c    ****     }
 510:Src/mode.c    ****     //PrintMotion(motion, velocity, tail);
 511:Src/mode.c    ****     Tim_MotorBrake();
 1208              		.loc 1 511 0
 1209 01e2 FFF7FEFF 		bl	Tim_MotorBrake
 1210              	.LVL132:
 512:Src/mode.c    ****     HAL_Delay(500);
 1211              		.loc 1 512 0
 1212 01e6 4FF4FA70 		mov	r0, #500
 1213 01ea FFF7FEFF 		bl	HAL_Delay
 1214              	.LVL133:
 513:Src/mode.c    ****     motor_flag = FALSE;
 1215              		.loc 1 513 0
 1216 01ee 0024     		movs	r4, #0
 1217              	.LVL134:
 1218 01f0 0D4B     		ldr	r3, .L96+16
 1219 01f2 1C70     		strb	r4, [r3]
 514:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1220              		.loc 1 514 0
 1221 01f4 4FF49671 		mov	r1, #300
 1222 01f8 4C20     		movs	r0, #76
 1223 01fa FFF7FEFF 		bl	Tim_BuzzerPwm
 1224              	.LVL135:
 515:Src/mode.c    ****     HAL_Delay(200);
 1225              		.loc 1 515 0
 1226 01fe C820     		movs	r0, #200
 1227 0200 FFF7FEFF 		bl	HAL_Delay
 1228              	.LVL136:
 516:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1229              		.loc 1 516 0
 1230 0204 2146     		mov	r1, r4
 1231 0206 0A20     		movs	r0, #10
 1232 0208 FFF7FEFF 		bl	Tim_BuzzerPwm
 1233              	.LVL137:
 517:Src/mode.c    **** }
 1234              		.loc 1 517 0
 1235 020c 0DF29C6D 		addw	sp, sp, #1692
 1236              	.LCFI14:
 1237              		.cfi_def_cfa_offset 28
 1238              		@ sp needed
 1239 0210 BDEC028B 		vldm	sp!, {d8}
 1240              	.LCFI15:
 1241              		.cfi_restore 80
 1242              		.cfi_restore 81
 1243              		.cfi_def_cfa_offset 20
 1244              	.LVL138:
 1245 0214 F0BD     		pop	{r4, r5, r6, r7, pc}
 1246              	.L97:
 1247 0216 00BF     		.align	2
 1248              	.L96:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 33


 1249 0218 00000000 		.word	start_address
 1250 021c 00000000 		.word	.LANCHOR1
 1251 0220 00000000 		.word	.LANCHOR0
 1252 0224 00000000 		.word	control_wall_flag
 1253 0228 00000000 		.word	motor_flag
 1254              		.cfi_endproc
 1255              	.LFE132:
 1257              		.section	.text.CheckStraight,"ax",%progbits
 1258              		.align	1
 1259              		.global	CheckStraight
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	CheckStraight:
 1266              	.LFB133:
 518:Src/mode.c    **** 
 519:Src/mode.c    **** void CheckStraight(uint8_t block)
 520:Src/mode.c    **** {
 1267              		.loc 1 520 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              	.LVL139:
 1272 0000 38B5     		push	{r3, r4, r5, lr}
 1273              	.LCFI16:
 1274              		.cfi_def_cfa_offset 16
 1275              		.cfi_offset 3, -16
 1276              		.cfi_offset 4, -12
 1277              		.cfi_offset 5, -8
 1278              		.cfi_offset 14, -4
 1279 0002 0546     		mov	r5, r0
 521:Src/mode.c    ****     SetRunMode();
 1280              		.loc 1 521 0
 1281 0004 FFF7FEFF 		bl	SetRunMode
 1282              	.LVL140:
 522:Src/mode.c    ****     enc.distance = 0;
 1283              		.loc 1 522 0
 1284 0008 144B     		ldr	r3, .L102
 1285 000a 0022     		movs	r2, #0
 1286 000c 1A60     		str	r2, [r3]	@ float
 523:Src/mode.c    ****     Motion_Start();
 1287              		.loc 1 523 0
 1288 000e FFF7FEFF 		bl	Motion_Start
 1289              	.LVL141:
 1290              	.LBB4:
 524:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1291              		.loc 1 524 0
 1292 0012 0024     		movs	r4, #0
 1293 0014 03E0     		b	.L99
 1294              	.LVL142:
 1295              	.L100:
 525:Src/mode.c    ****     {
 526:Src/mode.c    ****         Motion_Straight();
 1296              		.loc 1 526 0 discriminator 3
 1297 0016 FFF7FEFF 		bl	Motion_Straight
 1298              	.LVL143:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 34


 524:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1299              		.loc 1 524 0 discriminator 3
 1300 001a 0134     		adds	r4, r4, #1
 1301              	.LVL144:
 1302 001c E4B2     		uxtb	r4, r4
 1303              	.LVL145:
 1304              	.L99:
 524:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1305              		.loc 1 524 0 is_stmt 0 discriminator 1
 1306 001e AC42     		cmp	r4, r5
 1307 0020 F9D3     		bcc	.L100
 1308              	.LBE4:
 527:Src/mode.c    ****     }
 528:Src/mode.c    ****     Motion_End();
 1309              		.loc 1 528 0 is_stmt 1
 1310 0022 FFF7FEFF 		bl	Motion_End
 1311              	.LVL146:
 529:Src/mode.c    ****     motor_flag = FALSE;
 1312              		.loc 1 529 0
 1313 0026 0024     		movs	r4, #0
 1314              	.LVL147:
 1315 0028 0D4B     		ldr	r3, .L102+4
 1316 002a 1C70     		strb	r4, [r3]
 530:Src/mode.c    ****     HAL_Delay(500);
 1317              		.loc 1 530 0
 1318 002c 4FF4FA70 		mov	r0, #500
 1319 0030 FFF7FEFF 		bl	HAL_Delay
 1320              	.LVL148:
 531:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1321              		.loc 1 531 0
 1322 0034 49F64242 		movw	r2, #40002
 1323 0038 0A49     		ldr	r1, .L102+8
 1324 003a 0B4B     		ldr	r3, .L102+12
 1325 003c 1868     		ldr	r0, [r3]
 1326 003e FFF7FEFF 		bl	Flash_Write
 1327              	.LVL149:
 532:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1328              		.loc 1 532 0
 1329 0042 4FF49671 		mov	r1, #300
 1330 0046 4C20     		movs	r0, #76
 1331 0048 FFF7FEFF 		bl	Tim_BuzzerPwm
 1332              	.LVL150:
 533:Src/mode.c    ****     HAL_Delay(200);
 1333              		.loc 1 533 0
 1334 004c C820     		movs	r0, #200
 1335 004e FFF7FEFF 		bl	HAL_Delay
 1336              	.LVL151:
 534:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1337              		.loc 1 534 0
 1338 0052 2146     		mov	r1, r4
 1339 0054 0A20     		movs	r0, #10
 1340 0056 FFF7FEFF 		bl	Tim_BuzzerPwm
 1341              	.LVL152:
 535:Src/mode.c    **** }
 1342              		.loc 1 535 0
 1343 005a 38BD     		pop	{r3, r4, r5, pc}
 1344              	.L103:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 35


 1345              		.align	2
 1346              	.L102:
 1347 005c 00000000 		.word	enc
 1348 0060 00000000 		.word	motor_flag
 1349 0064 00000000 		.word	loger
 1350 0068 00000000 		.word	start_address
 1351              		.cfi_endproc
 1352              	.LFE133:
 1354              		.section	.text.CheckFastStraight,"ax",%progbits
 1355              		.align	1
 1356              		.global	CheckFastStraight
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu fpv4-sp-d16
 1362              	CheckFastStraight:
 1363              	.LFB134:
 536:Src/mode.c    **** 
 537:Src/mode.c    **** void CheckFastStraight(uint8_t block)
 538:Src/mode.c    **** {
 1364              		.loc 1 538 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              	.LVL153:
 1369 0000 38B5     		push	{r3, r4, r5, lr}
 1370              	.LCFI17:
 1371              		.cfi_def_cfa_offset 16
 1372              		.cfi_offset 3, -16
 1373              		.cfi_offset 4, -12
 1374              		.cfi_offset 5, -8
 1375              		.cfi_offset 14, -4
 1376 0002 0546     		mov	r5, r0
 539:Src/mode.c    ****     SetRunMode();
 1377              		.loc 1 539 0
 1378 0004 FFF7FEFF 		bl	SetRunMode
 1379              	.LVL154:
 540:Src/mode.c    ****     enc.distance = 0;
 1380              		.loc 1 540 0
 1381 0008 1D4B     		ldr	r3, .L108
 1382 000a 0022     		movs	r2, #0
 1383 000c 1A60     		str	r2, [r3]	@ float
 541:Src/mode.c    ****     Motion_FastStart(0, 800.0f);
 1384              		.loc 1 541 0
 1385 000e 9FED1D0A 		vldr.32	s0, .L108+4
 1386 0012 0020     		movs	r0, #0
 1387 0014 FFF7FEFF 		bl	Motion_FastStart
 1388              	.LVL155:
 1389              	.LBB5:
 542:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1390              		.loc 1 542 0
 1391 0018 0024     		movs	r4, #0
 1392 001a 08E0     		b	.L105
 1393              	.LVL156:
 1394              	.L106:
 543:Src/mode.c    ****     {
 544:Src/mode.c    ****         Motion_FastStraight(2, 800.0f, 800.0f);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 36


 1395              		.loc 1 544 0 discriminator 3
 1396 001c 9FED190A 		vldr.32	s0, .L108+4
 1397 0020 F0EE400A 		vmov.f32	s1, s0
 1398 0024 0220     		movs	r0, #2
 1399 0026 FFF7FEFF 		bl	Motion_FastStraight
 1400              	.LVL157:
 542:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1401              		.loc 1 542 0 discriminator 3
 1402 002a 0134     		adds	r4, r4, #1
 1403              	.LVL158:
 1404 002c E4B2     		uxtb	r4, r4
 1405              	.LVL159:
 1406              	.L105:
 542:Src/mode.c    ****     for (uint8_t i = 0; i < block; i++)
 1407              		.loc 1 542 0 is_stmt 0 discriminator 1
 1408 002e AC42     		cmp	r4, r5
 1409 0030 F4D3     		bcc	.L106
 1410              	.LBE5:
 545:Src/mode.c    ****     }
 546:Src/mode.c    ****     Motion_Adjust(800.0f, 1);
 1411              		.loc 1 546 0 is_stmt 1
 1412 0032 B7EE000A 		vmov.f32	s0, #1.0e+0
 1413 0036 4FF44870 		mov	r0, #800
 1414 003a FFF7FEFF 		bl	Motion_Adjust
 1415              	.LVL160:
 547:Src/mode.c    ****     Motion_FastGoal(0, 800.0f);
 1416              		.loc 1 547 0
 1417 003e 9FED110A 		vldr.32	s0, .L108+4
 1418 0042 0020     		movs	r0, #0
 1419 0044 FFF7FEFF 		bl	Motion_FastGoal
 1420              	.LVL161:
 548:Src/mode.c    ****     motor_flag = FALSE;
 1421              		.loc 1 548 0
 1422 0048 0024     		movs	r4, #0
 1423              	.LVL162:
 1424 004a 0F4B     		ldr	r3, .L108+8
 1425 004c 1C70     		strb	r4, [r3]
 549:Src/mode.c    ****     HAL_Delay(500);
 1426              		.loc 1 549 0
 1427 004e 4FF4FA70 		mov	r0, #500
 1428 0052 FFF7FEFF 		bl	HAL_Delay
 1429              	.LVL163:
 550:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1430              		.loc 1 550 0
 1431 0056 49F64242 		movw	r2, #40002
 1432 005a 0C49     		ldr	r1, .L108+12
 1433 005c 0C4B     		ldr	r3, .L108+16
 1434 005e 1868     		ldr	r0, [r3]
 1435 0060 FFF7FEFF 		bl	Flash_Write
 1436              	.LVL164:
 551:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1437              		.loc 1 551 0
 1438 0064 4FF49671 		mov	r1, #300
 1439 0068 4C20     		movs	r0, #76
 1440 006a FFF7FEFF 		bl	Tim_BuzzerPwm
 1441              	.LVL165:
 552:Src/mode.c    ****     HAL_Delay(200);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 37


 1442              		.loc 1 552 0
 1443 006e C820     		movs	r0, #200
 1444 0070 FFF7FEFF 		bl	HAL_Delay
 1445              	.LVL166:
 553:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1446              		.loc 1 553 0
 1447 0074 2146     		mov	r1, r4
 1448 0076 0A20     		movs	r0, #10
 1449 0078 FFF7FEFF 		bl	Tim_BuzzerPwm
 1450              	.LVL167:
 554:Src/mode.c    **** }
 1451              		.loc 1 554 0
 1452 007c 38BD     		pop	{r3, r4, r5, pc}
 1453              	.L109:
 1454 007e 00BF     		.align	2
 1455              	.L108:
 1456 0080 00000000 		.word	enc
 1457 0084 00004844 		.word	1145569280
 1458 0088 00000000 		.word	motor_flag
 1459 008c 00000000 		.word	loger
 1460 0090 00000000 		.word	start_address
 1461              		.cfi_endproc
 1462              	.LFE134:
 1464              		.section	.text.CheckDiagonal,"ax",%progbits
 1465              		.align	1
 1466              		.global	CheckDiagonal
 1467              		.syntax unified
 1468              		.thumb
 1469              		.thumb_func
 1470              		.fpu fpv4-sp-d16
 1472              	CheckDiagonal:
 1473              	.LFB135:
 555:Src/mode.c    **** 
 556:Src/mode.c    **** void CheckDiagonal(uint8_t block)
 557:Src/mode.c    **** {
 1474              		.loc 1 557 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              	.LVL168:
 1479 0000 10B5     		push	{r4, lr}
 1480              	.LCFI18:
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 4, -8
 1483              		.cfi_offset 14, -4
 1484 0002 0446     		mov	r4, r0
 558:Src/mode.c    ****     SetRunMode();
 1485              		.loc 1 558 0
 1486 0004 FFF7FEFF 		bl	SetRunMode
 1487              	.LVL169:
 559:Src/mode.c    ****     enc.distance = 0;
 1488              		.loc 1 559 0
 1489 0008 124B     		ldr	r3, .L112
 1490 000a 0022     		movs	r2, #0
 1491 000c 1A60     		str	r2, [r3]	@ float
 560:Src/mode.c    ****     Motion_DiagonalStart();
 1492              		.loc 1 560 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 38


 1493 000e FFF7FEFF 		bl	Motion_DiagonalStart
 1494              	.LVL170:
 561:Src/mode.c    ****     Motion_DiagonalLeft(block);
 1495              		.loc 1 561 0
 1496 0012 2046     		mov	r0, r4
 1497 0014 FFF7FEFF 		bl	Motion_DiagonalLeft
 1498              	.LVL171:
 562:Src/mode.c    ****     Motion_DiagonalStop();
 1499              		.loc 1 562 0
 1500 0018 FFF7FEFF 		bl	Motion_DiagonalStop
 1501              	.LVL172:
 563:Src/mode.c    ****     motor_flag = FALSE;
 1502              		.loc 1 563 0
 1503 001c 0024     		movs	r4, #0
 1504 001e 0E4B     		ldr	r3, .L112+4
 1505 0020 1C70     		strb	r4, [r3]
 564:Src/mode.c    ****     HAL_Delay(500);
 1506              		.loc 1 564 0
 1507 0022 4FF4FA70 		mov	r0, #500
 1508 0026 FFF7FEFF 		bl	HAL_Delay
 1509              	.LVL173:
 565:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1510              		.loc 1 565 0
 1511 002a 49F64242 		movw	r2, #40002
 1512 002e 0B49     		ldr	r1, .L112+8
 1513 0030 0B4B     		ldr	r3, .L112+12
 1514 0032 1868     		ldr	r0, [r3]
 1515 0034 FFF7FEFF 		bl	Flash_Write
 1516              	.LVL174:
 566:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1517              		.loc 1 566 0
 1518 0038 4FF49671 		mov	r1, #300
 1519 003c 4C20     		movs	r0, #76
 1520 003e FFF7FEFF 		bl	Tim_BuzzerPwm
 1521              	.LVL175:
 567:Src/mode.c    ****     HAL_Delay(200);
 1522              		.loc 1 567 0
 1523 0042 C820     		movs	r0, #200
 1524 0044 FFF7FEFF 		bl	HAL_Delay
 1525              	.LVL176:
 568:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1526              		.loc 1 568 0
 1527 0048 2146     		mov	r1, r4
 1528 004a 0A20     		movs	r0, #10
 1529 004c FFF7FEFF 		bl	Tim_BuzzerPwm
 1530              	.LVL177:
 569:Src/mode.c    **** }
 1531              		.loc 1 569 0
 1532 0050 10BD     		pop	{r4, pc}
 1533              	.L113:
 1534 0052 00BF     		.align	2
 1535              	.L112:
 1536 0054 00000000 		.word	enc
 1537 0058 00000000 		.word	motor_flag
 1538 005c 00000000 		.word	loger
 1539 0060 00000000 		.word	start_address
 1540              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 39


 1541              	.LFE135:
 1543              		.section	.text.CheckTurn,"ax",%progbits
 1544              		.align	1
 1545              		.global	CheckTurn
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1549              		.fpu fpv4-sp-d16
 1551              	CheckTurn:
 1552              	.LFB136:
 570:Src/mode.c    **** 
 571:Src/mode.c    **** void CheckTurn(uint8_t num)
 572:Src/mode.c    **** {
 1553              		.loc 1 572 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              	.LVL178:
 1558 0000 38B5     		push	{r3, r4, r5, lr}
 1559              	.LCFI19:
 1560              		.cfi_def_cfa_offset 16
 1561              		.cfi_offset 3, -16
 1562              		.cfi_offset 4, -12
 1563              		.cfi_offset 5, -8
 1564              		.cfi_offset 14, -4
 1565 0002 0546     		mov	r5, r0
 573:Src/mode.c    ****     SetRunMode();
 1566              		.loc 1 573 0
 1567 0004 FFF7FEFF 		bl	SetRunMode
 1568              	.LVL179:
 574:Src/mode.c    ****     gyro_z.degree = 0;
 1569              		.loc 1 574 0
 1570 0008 174B     		ldr	r3, .L118
 1571 000a 0022     		movs	r2, #0
 1572 000c 5A60     		str	r2, [r3, #4]	@ float
 1573              	.LVL180:
 1574              	.LBB6:
 575:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1575              		.loc 1 575 0
 1576 000e 0024     		movs	r4, #0
 1577 0010 03E0     		b	.L115
 1578              	.LVL181:
 1579              	.L116:
 576:Src/mode.c    ****     {
 577:Src/mode.c    ****         Motion_TestTurn();
 1580              		.loc 1 577 0 discriminator 3
 1581 0012 FFF7FEFF 		bl	Motion_TestTurn
 1582              	.LVL182:
 575:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1583              		.loc 1 575 0 discriminator 3
 1584 0016 0134     		adds	r4, r4, #1
 1585              	.LVL183:
 1586 0018 E4B2     		uxtb	r4, r4
 1587              	.LVL184:
 1588              	.L115:
 575:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 1589              		.loc 1 575 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 40


 1590 001a AC42     		cmp	r4, r5
 1591 001c F9D3     		bcc	.L116
 1592              	.LBE6:
 578:Src/mode.c    ****     }
 579:Src/mode.c    ****     motor_flag = FALSE;
 1593              		.loc 1 579 0 is_stmt 1
 1594 001e 0024     		movs	r4, #0
 1595              	.LVL185:
 1596 0020 124B     		ldr	r3, .L118+4
 1597 0022 1C70     		strb	r4, [r3]
 580:Src/mode.c    ****     loger.velo_ang[loger.cnt] = (int16_t)gyro_z.degree;
 1598              		.loc 1 580 0
 1599 0024 104B     		ldr	r3, .L118
 1600 0026 D3ED017A 		vldr.32	s15, [r3, #4]
 1601 002a 1149     		ldr	r1, .L118+8
 1602 002c 0B88     		ldrh	r3, [r1]
 1603 002e FDEEE77A 		vcvt.s32.f32	s15, s15
 1604 0032 03F56A53 		add	r3, r3, #14976
 1605 0036 1833     		adds	r3, r3, #24
 1606 0038 01EB4303 		add	r3, r1, r3, lsl #1
 1607 003c 17EE902A 		vmov	r2, s15	@ int
 1608 0040 5A80     		strh	r2, [r3, #2]	@ movhi
 581:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1609              		.loc 1 581 0
 1610 0042 49F64242 		movw	r2, #40002
 1611 0046 0B4B     		ldr	r3, .L118+12
 1612 0048 1868     		ldr	r0, [r3]
 1613 004a FFF7FEFF 		bl	Flash_Write
 1614              	.LVL186:
 582:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 1615              		.loc 1 582 0
 1616 004e 4FF49671 		mov	r1, #300
 1617 0052 4C20     		movs	r0, #76
 1618 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 1619              	.LVL187:
 583:Src/mode.c    ****     HAL_Delay(200);
 1620              		.loc 1 583 0
 1621 0058 C820     		movs	r0, #200
 1622 005a FFF7FEFF 		bl	HAL_Delay
 1623              	.LVL188:
 584:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 1624              		.loc 1 584 0
 1625 005e 2146     		mov	r1, r4
 1626 0060 0A20     		movs	r0, #10
 1627 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 1628              	.LVL189:
 585:Src/mode.c    **** }
 1629              		.loc 1 585 0
 1630 0066 38BD     		pop	{r3, r4, r5, pc}
 1631              	.L119:
 1632              		.align	2
 1633              	.L118:
 1634 0068 00000000 		.word	gyro_z
 1635 006c 00000000 		.word	motor_flag
 1636 0070 00000000 		.word	loger
 1637 0074 00000000 		.word	start_address
 1638              		.cfi_endproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 41


 1639              	.LFE136:
 1641              		.section	.text.PrintOutPut,"ax",%progbits
 1642              		.align	1
 1643              		.global	PrintOutPut
 1644              		.syntax unified
 1645              		.thumb
 1646              		.thumb_func
 1647              		.fpu fpv4-sp-d16
 1649              	PrintOutPut:
 1650              	.LFB137:
 586:Src/mode.c    **** 
 587:Src/mode.c    **** void PrintOutPut(void)
 588:Src/mode.c    **** {
 1651              		.loc 1 588 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655 0000 30B5     		push	{r4, r5, lr}
 1656              	.LCFI20:
 1657              		.cfi_def_cfa_offset 12
 1658              		.cfi_offset 4, -12
 1659              		.cfi_offset 5, -8
 1660              		.cfi_offset 14, -4
 1661 0002 83B0     		sub	sp, sp, #12
 1662              	.LCFI21:
 1663              		.cfi_def_cfa_offset 24
 589:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&loger, sizeof(loger_t));
 1664              		.loc 1 589 0
 1665 0004 49F64242 		movw	r2, #40002
 1666 0008 1649     		ldr	r1, .L124
 1667 000a 174B     		ldr	r3, .L124+4
 1668 000c 1868     		ldr	r0, [r3]
 1669 000e FFF7FEFF 		bl	Flash_Load
 1670              	.LVL190:
 1671              	.LBB7:
 590:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1672              		.loc 1 590 0
 1673 0012 0024     		movs	r4, #0
 1674 0014 1FE0     		b	.L121
 1675              	.LVL191:
 1676              	.L122:
 591:Src/mode.c    ****     {
 592:Src/mode.c    ****         //printf("%d\r\n",loger.velo[i]);
 593:Src/mode.c    ****         //printf("%d\r\n", loger.velo_ang[i]);
 594:Src/mode.c    ****         printf("%d\t%d\t%d\t%d\r\n", loger.target_velo[i], loger.velo[i], loger.target_velo_ang[i],
 1677              		.loc 1 594 0 discriminator 3
 1678 0016 1348     		ldr	r0, .L124
 1679 0018 00EB4403 		add	r3, r0, r4, lsl #1
 1680 001c B3F90210 		ldrsh	r1, [r3, #2]
 1681 0020 04F51C53 		add	r3, r4, #9984
 1682 0024 1033     		adds	r3, r3, #16
 1683 0026 00EB4303 		add	r3, r0, r3, lsl #1
 1684 002a B3F90220 		ldrsh	r2, [r3, #2]
 1685 002e 04F59C53 		add	r3, r4, #4992
 1686 0032 0833     		adds	r3, r3, #8
 1687 0034 00EB4303 		add	r3, r0, r3, lsl #1
 1688 0038 B3F90230 		ldrsh	r3, [r3, #2]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 42


 1689 003c 04F56A55 		add	r5, r4, #14976
 1690 0040 1835     		adds	r5, r5, #24
 1691 0042 00EB4500 		add	r0, r0, r5, lsl #1
 1692 0046 B0F90200 		ldrsh	r0, [r0, #2]
 1693 004a 0090     		str	r0, [sp]
 1694 004c 0748     		ldr	r0, .L124+8
 1695 004e FFF7FEFF 		bl	printf
 1696              	.LVL192:
 590:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1697              		.loc 1 590 0 discriminator 3
 1698 0052 0134     		adds	r4, r4, #1
 1699              	.LVL193:
 1700 0054 A4B2     		uxth	r4, r4
 1701              	.LVL194:
 1702              	.L121:
 590:Src/mode.c    ****     for (uint16_t i = 0; i <= loger.cnt; i++)
 1703              		.loc 1 590 0 is_stmt 0 discriminator 1
 1704 0056 034B     		ldr	r3, .L124
 1705 0058 1B88     		ldrh	r3, [r3]
 1706 005a A342     		cmp	r3, r4
 1707 005c DBD2     		bcs	.L122
 1708              	.LBE7:
 595:Src/mode.c    ****     }
 596:Src/mode.c    **** }
 1709              		.loc 1 596 0 is_stmt 1
 1710 005e 03B0     		add	sp, sp, #12
 1711              	.LCFI22:
 1712              		.cfi_def_cfa_offset 12
 1713              		@ sp needed
 1714 0060 30BD     		pop	{r4, r5, pc}
 1715              	.LVL195:
 1716              	.L125:
 1717 0062 00BF     		.align	2
 1718              	.L124:
 1719 0064 00000000 		.word	loger
 1720 0068 00000000 		.word	start_address
 1721 006c 00000000 		.word	.LC2
 1722              		.cfi_endproc
 1723              	.LFE137:
 1725              		.section	.text.PrintWallData,"ax",%progbits
 1726              		.align	1
 1727              		.global	PrintWallData
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv4-sp-d16
 1733              	PrintWallData:
 1734              	.LFB138:
 597:Src/mode.c    **** 
 598:Src/mode.c    **** void PrintWallData(void)
 599:Src/mode.c    **** {
 1735              		.loc 1 599 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 136
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739 0000 30B5     		push	{r4, r5, lr}
 1740              	.LCFI23:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 43


 1741              		.cfi_def_cfa_offset 12
 1742              		.cfi_offset 4, -12
 1743              		.cfi_offset 5, -8
 1744              		.cfi_offset 14, -4
 1745 0002 A3B0     		sub	sp, sp, #140
 1746              	.LCFI24:
 1747              		.cfi_def_cfa_offset 152
 600:Src/mode.c    ****     wallData_t walldata;
 601:Src/mode.c    ****     Flash_Load(start_address, (uint8_t *)&walldata, sizeof(wallData_t));
 1748              		.loc 1 601 0
 1749 0004 8822     		movs	r2, #136
 1750 0006 6946     		mov	r1, sp
 1751 0008 2C4B     		ldr	r3, .L143
 1752 000a 1868     		ldr	r0, [r3]
 1753 000c FFF7FEFF 		bl	Flash_Load
 1754              	.LVL196:
 602:Src/mode.c    ****     printf("\r\n");
 1755              		.loc 1 602 0
 1756 0010 2B48     		ldr	r0, .L143+4
 1757 0012 FFF7FEFF 		bl	puts
 1758              	.LVL197:
 1759              	.LBB8:
 603:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1760              		.loc 1 603 0
 1761 0016 0024     		movs	r4, #0
 1762 0018 07E0     		b	.L127
 1763              	.LVL198:
 1764              	.L128:
 604:Src/mode.c    ****     {
 605:Src/mode.c    ****         printf("+");
 1765              		.loc 1 605 0 discriminator 3
 1766 001a 2B20     		movs	r0, #43
 1767 001c FFF7FEFF 		bl	putchar
 1768              	.LVL199:
 606:Src/mode.c    ****         printf("---");
 1769              		.loc 1 606 0 discriminator 3
 1770 0020 2848     		ldr	r0, .L143+8
 1771 0022 FFF7FEFF 		bl	printf
 1772              	.LVL200:
 603:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1773              		.loc 1 603 0 discriminator 3
 1774 0026 0134     		adds	r4, r4, #1
 1775              	.LVL201:
 1776 0028 E4B2     		uxtb	r4, r4
 1777              	.LVL202:
 1778              	.L127:
 603:Src/mode.c    ****     for (unsigned char i = 0; i < MAZE_SIZE; i++)
 1779              		.loc 1 603 0 is_stmt 0 discriminator 1
 1780 002a 0F2C     		cmp	r4, #15
 1781 002c F5D9     		bls	.L128
 1782              	.LBE8:
 607:Src/mode.c    ****     }
 608:Src/mode.c    ****     printf("+\r\n");
 1783              		.loc 1 608 0 is_stmt 1
 1784 002e 2648     		ldr	r0, .L143+12
 1785 0030 FFF7FEFF 		bl	puts
 1786              	.LVL203:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 44


 1787              	.LBB9:
 609:Src/mode.c    ****     for (unsigned char j = MAZE_SIZE; j > 0; j--)
 1788              		.loc 1 609 0
 1789 0034 1025     		movs	r5, #16
 1790 0036 3CE0     		b	.L129
 1791              	.LVL204:
 1792              	.L130:
 1793              	.LBB10:
 610:Src/mode.c    ****     {
 611:Src/mode.c    ****         for (unsigned char i = 0; i < MAZE_SIZE; i++)
 612:Src/mode.c    ****         {
 613:Src/mode.c    ****             if (walldata.vertical[i] & 0b1 << (j - 1))
 614:Src/mode.c    ****             {
 615:Src/mode.c    ****                 printf("|");
 616:Src/mode.c    ****             }
 617:Src/mode.c    ****             else
 618:Src/mode.c    ****             {
 619:Src/mode.c    ****                 printf(" ");
 1794              		.loc 1 619 0
 1795 0038 2020     		movs	r0, #32
 1796 003a FFF7FEFF 		bl	putchar
 1797              	.LVL205:
 1798              	.L131:
 620:Src/mode.c    ****             }
 621:Src/mode.c    ****             printf("   ");
 1799              		.loc 1 621 0 discriminator 2
 1800 003e 2348     		ldr	r0, .L143+16
 1801 0040 FFF7FEFF 		bl	printf
 1802              	.LVL206:
 611:Src/mode.c    ****         {
 1803              		.loc 1 611 0 discriminator 2
 1804 0044 0134     		adds	r4, r4, #1
 1805              	.LVL207:
 1806 0046 E4B2     		uxtb	r4, r4
 1807              	.LVL208:
 1808              	.L137:
 611:Src/mode.c    ****         {
 1809              		.loc 1 611 0 is_stmt 0 discriminator 1
 1810 0048 0F2C     		cmp	r4, #15
 1811 004a 0DD8     		bhi	.L140
 613:Src/mode.c    ****             {
 1812              		.loc 1 613 0 is_stmt 1
 1813 004c 22AB     		add	r3, sp, #136
 1814 004e 03EB4403 		add	r3, r3, r4, lsl #1
 1815 0052 33F8883C 		ldrh	r3, [r3, #-136]
 1816 0056 6A1E     		subs	r2, r5, #1
 1817 0058 1341     		asrs	r3, r3, r2
 1818 005a 13F0010F 		tst	r3, #1
 1819 005e EBD0     		beq	.L130
 615:Src/mode.c    ****             }
 1820              		.loc 1 615 0
 1821 0060 7C20     		movs	r0, #124
 1822 0062 FFF7FEFF 		bl	putchar
 1823              	.LVL209:
 1824 0066 EAE7     		b	.L131
 1825              	.L140:
 1826              	.LBE10:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 45


 622:Src/mode.c    ****         }
 623:Src/mode.c    ****         printf("|");
 1827              		.loc 1 623 0
 1828 0068 7C20     		movs	r0, #124
 1829 006a FFF7FEFF 		bl	putchar
 1830              	.LVL210:
 624:Src/mode.c    ****         printf("\r\n");
 1831              		.loc 1 624 0
 1832 006e 1448     		ldr	r0, .L143+4
 1833 0070 FFF7FEFF 		bl	puts
 1834              	.LVL211:
 1835              	.LBB11:
 625:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1836              		.loc 1 625 0
 1837 0074 0024     		movs	r4, #0
 1838              	.LVL212:
 1839 0076 03E0     		b	.L133
 1840              	.LVL213:
 1841              	.L134:
 626:Src/mode.c    ****         {
 627:Src/mode.c    ****             printf("+");
 628:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 629:Src/mode.c    ****             {
 630:Src/mode.c    ****                 printf("---");
 631:Src/mode.c    ****             }
 632:Src/mode.c    ****             else
 633:Src/mode.c    ****             {
 634:Src/mode.c    ****                 printf("   ");
 1842              		.loc 1 634 0
 1843 0078 1448     		ldr	r0, .L143+16
 1844 007a FFF7FEFF 		bl	printf
 1845              	.LVL214:
 1846              	.L135:
 625:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1847              		.loc 1 625 0 discriminator 2
 1848 007e 0134     		adds	r4, r4, #1
 1849              	.LVL215:
 1850              	.L133:
 625:Src/mode.c    ****         for (unsigned i = 0; i < MAZE_SIZE; i++)
 1851              		.loc 1 625 0 is_stmt 0 discriminator 1
 1852 0080 0F2C     		cmp	r4, #15
 1853 0082 11D8     		bhi	.L141
 627:Src/mode.c    ****             if (walldata.horizontal[j - 1] & 0b1 << i)
 1854              		.loc 1 627 0 is_stmt 1
 1855 0084 2B20     		movs	r0, #43
 1856 0086 FFF7FEFF 		bl	putchar
 1857              	.LVL216:
 628:Src/mode.c    ****             {
 1858              		.loc 1 628 0
 1859 008a 05F10F03 		add	r3, r5, #15
 1860 008e 22AA     		add	r2, sp, #136
 1861 0090 02EB4303 		add	r3, r2, r3, lsl #1
 1862 0094 33F8863C 		ldrh	r3, [r3, #-134]
 1863 0098 2341     		asrs	r3, r3, r4
 1864 009a 13F0010F 		tst	r3, #1
 1865 009e EBD0     		beq	.L134
 630:Src/mode.c    ****             }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 46


 1866              		.loc 1 630 0
 1867 00a0 0848     		ldr	r0, .L143+8
 1868 00a2 FFF7FEFF 		bl	printf
 1869              	.LVL217:
 1870 00a6 EAE7     		b	.L135
 1871              	.L141:
 1872              	.LBE11:
 635:Src/mode.c    ****             }
 636:Src/mode.c    ****         }
 637:Src/mode.c    ****         printf("+\r\n");
 1873              		.loc 1 637 0 discriminator 2
 1874 00a8 0748     		ldr	r0, .L143+12
 1875 00aa FFF7FEFF 		bl	puts
 1876              	.LVL218:
 609:Src/mode.c    ****     {
 1877              		.loc 1 609 0 discriminator 2
 1878 00ae 013D     		subs	r5, r5, #1
 1879              	.LVL219:
 1880 00b0 EDB2     		uxtb	r5, r5
 1881              	.LVL220:
 1882              	.L129:
 609:Src/mode.c    ****     {
 1883              		.loc 1 609 0 is_stmt 0 discriminator 1
 1884 00b2 0DB1     		cbz	r5, .L142
 1885              	.LBB12:
 611:Src/mode.c    ****         {
 1886              		.loc 1 611 0 is_stmt 1
 1887 00b4 0024     		movs	r4, #0
 1888 00b6 C7E7     		b	.L137
 1889              	.L142:
 1890              	.LBE12:
 1891              	.LBE9:
 638:Src/mode.c    ****     }
 639:Src/mode.c    **** }
 1892              		.loc 1 639 0
 1893 00b8 23B0     		add	sp, sp, #140
 1894              	.LCFI25:
 1895              		.cfi_def_cfa_offset 12
 1896              		@ sp needed
 1897 00ba 30BD     		pop	{r4, r5, pc}
 1898              	.LVL221:
 1899              	.L144:
 1900              		.align	2
 1901              	.L143:
 1902 00bc 00000000 		.word	start_address
 1903 00c0 00000000 		.word	.LC3
 1904 00c4 04000000 		.word	.LC4
 1905 00c8 08000000 		.word	.LC5
 1906 00cc 0C000000 		.word	.LC6
 1907              		.cfi_endproc
 1908              	.LFE138:
 1910              		.section	.text.PrintMotion,"ax",%progbits
 1911              		.align	1
 1912              		.global	PrintMotion
 1913              		.syntax unified
 1914              		.thumb
 1915              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 47


 1916              		.fpu fpv4-sp-d16
 1918              	PrintMotion:
 1919              	.LFB139:
 640:Src/mode.c    **** 
 641:Src/mode.c    **** void PrintMotion(uint16_t *motion, uint32_t *velocity, uint8_t tail)
 642:Src/mode.c    **** {
 1920              		.loc 1 642 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              	.LVL222:
 1925 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1926              	.LCFI26:
 1927              		.cfi_def_cfa_offset 24
 1928              		.cfi_offset 3, -24
 1929              		.cfi_offset 4, -20
 1930              		.cfi_offset 5, -16
 1931              		.cfi_offset 6, -12
 1932              		.cfi_offset 7, -8
 1933              		.cfi_offset 14, -4
 1934 0002 0646     		mov	r6, r0
 1935 0004 0F46     		mov	r7, r1
 1936 0006 1546     		mov	r5, r2
 1937              	.LVL223:
 643:Src/mode.c    ****     uint8_t head = 0;
 1938              		.loc 1 643 0
 1939 0008 0024     		movs	r4, #0
 644:Src/mode.c    ****     while (head < tail)
 1940              		.loc 1 644 0
 1941 000a 09E0     		b	.L146
 1942              	.LVL224:
 1943              	.L152:
 645:Src/mode.c    ****     {
 646:Src/mode.c    ****         switch (motion[head] & 0xf)
 647:Src/mode.c    ****         {
 648:Src/mode.c    ****         case START:
 649:Src/mode.c    ****             printf("\r\nSTART:%d\tv_start:%ld\tv_end:%ld\r\n", motion[head] >> 4, velocity[head] >>
 1944              		.loc 1 649 0
 1945 000c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 1946 0010 93B2     		uxth	r3, r2
 1947 0012 120C     		lsrs	r2, r2, #16
 1948 0014 0909     		lsrs	r1, r1, #4
 1949 0016 7648     		ldr	r0, .L180
 1950 0018 FFF7FEFF 		bl	printf
 1951              	.LVL225:
 1952              	.L156:
 650:Src/mode.c    ****             break;
 651:Src/mode.c    ****         case LEFT:
 652:Src/mode.c    ****             switch (motion[head] >> 4)
 653:Src/mode.c    ****             {
 654:Src/mode.c    ****             case SEARCH:
 655:Src/mode.c    ****                 printf("LEFT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 656:Src/mode.c    ****                 break;
 657:Src/mode.c    ****             case T_90:
 658:Src/mode.c    ****                 printf("LEFT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[head
 659:Src/mode.c    ****                 break;
 660:Src/mode.c    ****             case T_180:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 48


 661:Src/mode.c    ****                 printf("LEFT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 662:Src/mode.c    ****                 break;
 663:Src/mode.c    ****             case T_45IN:
 664:Src/mode.c    ****                 printf("LEFT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 665:Src/mode.c    ****                 break;
 666:Src/mode.c    ****             case T_45OUT:
 667:Src/mode.c    ****                 printf("LEFT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 668:Src/mode.c    ****                 break;
 669:Src/mode.c    ****             case T_135IN:
 670:Src/mode.c    ****                 printf("LEFT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 671:Src/mode.c    ****                 break;
 672:Src/mode.c    ****             case T_135OUT:
 673:Src/mode.c    ****                 printf("LEFT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 674:Src/mode.c    ****                 break;
 675:Src/mode.c    ****             case T_V90:
 676:Src/mode.c    ****                 printf("LEFT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 677:Src/mode.c    ****                 break;
 678:Src/mode.c    ****             default:
 679:Src/mode.c    ****                 printf("\r\n");
 680:Src/mode.c    ****                 break;
 681:Src/mode.c    ****             }
 682:Src/mode.c    ****             break;
 683:Src/mode.c    ****         case RIGHT:
 684:Src/mode.c    ****             switch (motion[head] >> 4)
 685:Src/mode.c    ****             {
 686:Src/mode.c    ****             case SEARCH:
 687:Src/mode.c    ****                 printf("RIGHT:SEARCH\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 688:Src/mode.c    ****                 break;
 689:Src/mode.c    ****             case T_90:
 690:Src/mode.c    ****                 printf("RIGHT:T_90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[hea
 691:Src/mode.c    ****                 break;
 692:Src/mode.c    ****             case T_180:
 693:Src/mode.c    ****                 printf("RIGHT:T_180\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 694:Src/mode.c    ****                 break;
 695:Src/mode.c    ****             case T_45IN:
 696:Src/mode.c    ****                 printf("RIGHT:T_45IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[h
 697:Src/mode.c    ****                 break;
 698:Src/mode.c    ****             case T_45OUT:
 699:Src/mode.c    ****                 printf("RIGHT:T_45OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 700:Src/mode.c    ****                 break;
 701:Src/mode.c    ****             case T_135IN:
 702:Src/mode.c    ****                 printf("RIGHT:T_135IN\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[
 703:Src/mode.c    ****                 break;
 704:Src/mode.c    ****             case T_135OUT:
 705:Src/mode.c    ****                 printf("RIGHT:T_135OUT\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity
 706:Src/mode.c    ****                 break;
 707:Src/mode.c    ****             case T_V90:
 708:Src/mode.c    ****                 printf("RIGHT:T_V90\tv_start:%ld\tv_end:%ld\n\r", velocity[head] >> 16, velocity[he
 709:Src/mode.c    ****                 break;
 710:Src/mode.c    ****             default:
 711:Src/mode.c    ****                 printf("\r\n");
 712:Src/mode.c    ****                 break;
 713:Src/mode.c    ****             }
 714:Src/mode.c    ****             break;
 715:Src/mode.c    ****         case FRONT:
 716:Src/mode.c    ****             printf("FRONT:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16,
 717:Src/mode.c    ****             break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 49


 718:Src/mode.c    ****         case DIAGONAL:
 719:Src/mode.c    ****             printf("DIAGONAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 
 720:Src/mode.c    ****             break;
 721:Src/mode.c    ****         case GOAL:
 722:Src/mode.c    ****             printf("GOAL:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16, 
 723:Src/mode.c    ****             break;
 724:Src/mode.c    ****         case ADJUST:
 725:Src/mode.c    ****             printf("ADJUST:%d\tv_start:%ld\tv_end:%ld\n\r", motion[head] >> 4, velocity[head] >> 16
 726:Src/mode.c    ****             break;
 727:Src/mode.c    ****         default:
 728:Src/mode.c    ****             printf("\r\n");
 729:Src/mode.c    ****             break;
 730:Src/mode.c    ****         }
 731:Src/mode.c    ****         head++;
 1953              		.loc 1 731 0
 1954 001c 0134     		adds	r4, r4, #1
 1955              	.LVL226:
 1956 001e E4B2     		uxtb	r4, r4
 1957              	.LVL227:
 1958              	.L146:
 644:Src/mode.c    ****     {
 1959              		.loc 1 644 0
 1960 0020 AC42     		cmp	r4, r5
 1961 0022 80F0E380 		bcs	.L179
 646:Src/mode.c    ****         {
 1962              		.loc 1 646 0
 1963 0026 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 1964 002a 01F00F03 		and	r3, r1, #15
 1965 002e 0A2B     		cmp	r3, #10
 1966 0030 00F2D880 		bhi	.L147
 1967 0034 01A0     		adr	r0, .L149
 1968 0036 50F823F0 		ldr	pc, [r0, r3, lsl #2]
 1969 003a 00BF     		.p2align 2
 1970              	.L149:
 1971 003c 9D010000 		.word	.L148+1
 1972 0040 69000000 		.word	.L150+1
 1973 0044 03010000 		.word	.L151+1
 1974 0048 E5010000 		.word	.L147+1
 1975 004c E5010000 		.word	.L147+1
 1976 0050 0D000000 		.word	.L152+1
 1977 0054 C1010000 		.word	.L153+1
 1978 0058 AF010000 		.word	.L154+1
 1979 005c E5010000 		.word	.L147+1
 1980 0060 E5010000 		.word	.L147+1
 1981 0064 D3010000 		.word	.L155+1
 1982              		.p2align 1
 1983              	.L150:
 652:Src/mode.c    ****             {
 1984              		.loc 1 652 0
 1985 0068 0909     		lsrs	r1, r1, #4
 1986 006a 0729     		cmp	r1, #7
 1987 006c 45D8     		bhi	.L157
 1988 006e DFE801F0 		tbb	[pc, r1]
 1989              	.L159:
 1990 0072 04       		.byte	(.L158-.L159)/2
 1991 0073 1C       		.byte	(.L160-.L159)/2
 1992 0074 2C       		.byte	(.L161-.L159)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 50


 1993 0075 0C       		.byte	(.L162-.L159)/2
 1994 0076 14       		.byte	(.L163-.L159)/2
 1995 0077 24       		.byte	(.L164-.L159)/2
 1996 0078 34       		.byte	(.L165-.L159)/2
 1997 0079 3C       		.byte	(.L166-.L159)/2
 1998              		.p2align 1
 1999              	.L158:
 655:Src/mode.c    ****                 break;
 2000              		.loc 1 655 0
 2001 007a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2002 007e 8AB2     		uxth	r2, r1
 2003 0080 090C     		lsrs	r1, r1, #16
 2004 0082 5C48     		ldr	r0, .L180+4
 2005 0084 FFF7FEFF 		bl	printf
 2006              	.LVL228:
 656:Src/mode.c    ****             case T_90:
 2007              		.loc 1 656 0
 2008 0088 C8E7     		b	.L156
 2009              	.L162:
 658:Src/mode.c    ****                 break;
 2010              		.loc 1 658 0
 2011 008a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2012 008e 8AB2     		uxth	r2, r1
 2013 0090 090C     		lsrs	r1, r1, #16
 2014 0092 5948     		ldr	r0, .L180+8
 2015 0094 FFF7FEFF 		bl	printf
 2016              	.LVL229:
 659:Src/mode.c    ****             case T_180:
 2017              		.loc 1 659 0
 2018 0098 C0E7     		b	.L156
 2019              	.L163:
 661:Src/mode.c    ****                 break;
 2020              		.loc 1 661 0
 2021 009a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2022 009e 8AB2     		uxth	r2, r1
 2023 00a0 090C     		lsrs	r1, r1, #16
 2024 00a2 5648     		ldr	r0, .L180+12
 2025 00a4 FFF7FEFF 		bl	printf
 2026              	.LVL230:
 662:Src/mode.c    ****             case T_45IN:
 2027              		.loc 1 662 0
 2028 00a8 B8E7     		b	.L156
 2029              	.L160:
 664:Src/mode.c    ****                 break;
 2030              		.loc 1 664 0
 2031 00aa 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2032 00ae 8AB2     		uxth	r2, r1
 2033 00b0 090C     		lsrs	r1, r1, #16
 2034 00b2 5348     		ldr	r0, .L180+16
 2035 00b4 FFF7FEFF 		bl	printf
 2036              	.LVL231:
 665:Src/mode.c    ****             case T_45OUT:
 2037              		.loc 1 665 0
 2038 00b8 B0E7     		b	.L156
 2039              	.L164:
 667:Src/mode.c    ****                 break;
 2040              		.loc 1 667 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 51


 2041 00ba 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2042 00be 8AB2     		uxth	r2, r1
 2043 00c0 090C     		lsrs	r1, r1, #16
 2044 00c2 5048     		ldr	r0, .L180+20
 2045 00c4 FFF7FEFF 		bl	printf
 2046              	.LVL232:
 668:Src/mode.c    ****             case T_135IN:
 2047              		.loc 1 668 0
 2048 00c8 A8E7     		b	.L156
 2049              	.L161:
 670:Src/mode.c    ****                 break;
 2050              		.loc 1 670 0
 2051 00ca 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2052 00ce 8AB2     		uxth	r2, r1
 2053 00d0 090C     		lsrs	r1, r1, #16
 2054 00d2 4D48     		ldr	r0, .L180+24
 2055 00d4 FFF7FEFF 		bl	printf
 2056              	.LVL233:
 671:Src/mode.c    ****             case T_135OUT:
 2057              		.loc 1 671 0
 2058 00d8 A0E7     		b	.L156
 2059              	.L165:
 673:Src/mode.c    ****                 break;
 2060              		.loc 1 673 0
 2061 00da 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2062 00de 8AB2     		uxth	r2, r1
 2063 00e0 090C     		lsrs	r1, r1, #16
 2064 00e2 4A48     		ldr	r0, .L180+28
 2065 00e4 FFF7FEFF 		bl	printf
 2066              	.LVL234:
 674:Src/mode.c    ****             case T_V90:
 2067              		.loc 1 674 0
 2068 00e8 98E7     		b	.L156
 2069              	.L166:
 676:Src/mode.c    ****                 break;
 2070              		.loc 1 676 0
 2071 00ea 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2072 00ee 8AB2     		uxth	r2, r1
 2073 00f0 090C     		lsrs	r1, r1, #16
 2074 00f2 4748     		ldr	r0, .L180+32
 2075 00f4 FFF7FEFF 		bl	printf
 2076              	.LVL235:
 677:Src/mode.c    ****             default:
 2077              		.loc 1 677 0
 2078 00f8 90E7     		b	.L156
 2079              	.L157:
 679:Src/mode.c    ****                 break;
 2080              		.loc 1 679 0
 2081 00fa 4648     		ldr	r0, .L180+36
 2082 00fc FFF7FEFF 		bl	puts
 2083              	.LVL236:
 680:Src/mode.c    ****             }
 2084              		.loc 1 680 0
 2085 0100 8CE7     		b	.L156
 2086              	.L151:
 684:Src/mode.c    ****             {
 2087              		.loc 1 684 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 52


 2088 0102 0909     		lsrs	r1, r1, #4
 2089 0104 0729     		cmp	r1, #7
 2090 0106 45D8     		bhi	.L167
 2091 0108 DFE801F0 		tbb	[pc, r1]
 2092              	.L169:
 2093 010c 04       		.byte	(.L168-.L169)/2
 2094 010d 1C       		.byte	(.L170-.L169)/2
 2095 010e 2C       		.byte	(.L171-.L169)/2
 2096 010f 0C       		.byte	(.L172-.L169)/2
 2097 0110 14       		.byte	(.L173-.L169)/2
 2098 0111 24       		.byte	(.L174-.L169)/2
 2099 0112 34       		.byte	(.L175-.L169)/2
 2100 0113 3C       		.byte	(.L176-.L169)/2
 2101              		.p2align 1
 2102              	.L168:
 687:Src/mode.c    ****                 break;
 2103              		.loc 1 687 0
 2104 0114 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2105 0118 8AB2     		uxth	r2, r1
 2106 011a 090C     		lsrs	r1, r1, #16
 2107 011c 3E48     		ldr	r0, .L180+40
 2108 011e FFF7FEFF 		bl	printf
 2109              	.LVL237:
 688:Src/mode.c    ****             case T_90:
 2110              		.loc 1 688 0
 2111 0122 7BE7     		b	.L156
 2112              	.L172:
 690:Src/mode.c    ****                 break;
 2113              		.loc 1 690 0
 2114 0124 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2115 0128 8AB2     		uxth	r2, r1
 2116 012a 090C     		lsrs	r1, r1, #16
 2117 012c 3B48     		ldr	r0, .L180+44
 2118 012e FFF7FEFF 		bl	printf
 2119              	.LVL238:
 691:Src/mode.c    ****             case T_180:
 2120              		.loc 1 691 0
 2121 0132 73E7     		b	.L156
 2122              	.L173:
 693:Src/mode.c    ****                 break;
 2123              		.loc 1 693 0
 2124 0134 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2125 0138 8AB2     		uxth	r2, r1
 2126 013a 090C     		lsrs	r1, r1, #16
 2127 013c 3848     		ldr	r0, .L180+48
 2128 013e FFF7FEFF 		bl	printf
 2129              	.LVL239:
 694:Src/mode.c    ****             case T_45IN:
 2130              		.loc 1 694 0
 2131 0142 6BE7     		b	.L156
 2132              	.L170:
 696:Src/mode.c    ****                 break;
 2133              		.loc 1 696 0
 2134 0144 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2135 0148 8AB2     		uxth	r2, r1
 2136 014a 090C     		lsrs	r1, r1, #16
 2137 014c 3548     		ldr	r0, .L180+52
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 53


 2138 014e FFF7FEFF 		bl	printf
 2139              	.LVL240:
 697:Src/mode.c    ****             case T_45OUT:
 2140              		.loc 1 697 0
 2141 0152 63E7     		b	.L156
 2142              	.L174:
 699:Src/mode.c    ****                 break;
 2143              		.loc 1 699 0
 2144 0154 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2145 0158 8AB2     		uxth	r2, r1
 2146 015a 090C     		lsrs	r1, r1, #16
 2147 015c 3248     		ldr	r0, .L180+56
 2148 015e FFF7FEFF 		bl	printf
 2149              	.LVL241:
 700:Src/mode.c    ****             case T_135IN:
 2150              		.loc 1 700 0
 2151 0162 5BE7     		b	.L156
 2152              	.L171:
 702:Src/mode.c    ****                 break;
 2153              		.loc 1 702 0
 2154 0164 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2155 0168 8AB2     		uxth	r2, r1
 2156 016a 090C     		lsrs	r1, r1, #16
 2157 016c 2F48     		ldr	r0, .L180+60
 2158 016e FFF7FEFF 		bl	printf
 2159              	.LVL242:
 703:Src/mode.c    ****             case T_135OUT:
 2160              		.loc 1 703 0
 2161 0172 53E7     		b	.L156
 2162              	.L175:
 705:Src/mode.c    ****                 break;
 2163              		.loc 1 705 0
 2164 0174 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2165 0178 8AB2     		uxth	r2, r1
 2166 017a 090C     		lsrs	r1, r1, #16
 2167 017c 2C48     		ldr	r0, .L180+64
 2168 017e FFF7FEFF 		bl	printf
 2169              	.LVL243:
 706:Src/mode.c    ****             case T_V90:
 2170              		.loc 1 706 0
 2171 0182 4BE7     		b	.L156
 2172              	.L176:
 708:Src/mode.c    ****                 break;
 2173              		.loc 1 708 0
 2174 0184 57F82410 		ldr	r1, [r7, r4, lsl #2]
 2175 0188 8AB2     		uxth	r2, r1
 2176 018a 090C     		lsrs	r1, r1, #16
 2177 018c 2948     		ldr	r0, .L180+68
 2178 018e FFF7FEFF 		bl	printf
 2179              	.LVL244:
 709:Src/mode.c    ****             default:
 2180              		.loc 1 709 0
 2181 0192 43E7     		b	.L156
 2182              	.L167:
 711:Src/mode.c    ****                 break;
 2183              		.loc 1 711 0
 2184 0194 1F48     		ldr	r0, .L180+36
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 54


 2185 0196 FFF7FEFF 		bl	puts
 2186              	.LVL245:
 712:Src/mode.c    ****             }
 2187              		.loc 1 712 0
 2188 019a 3FE7     		b	.L156
 2189              	.L148:
 716:Src/mode.c    ****             break;
 2190              		.loc 1 716 0
 2191 019c 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2192 01a0 93B2     		uxth	r3, r2
 2193 01a2 120C     		lsrs	r2, r2, #16
 2194 01a4 0909     		lsrs	r1, r1, #4
 2195 01a6 2448     		ldr	r0, .L180+72
 2196 01a8 FFF7FEFF 		bl	printf
 2197              	.LVL246:
 717:Src/mode.c    ****         case DIAGONAL:
 2198              		.loc 1 717 0
 2199 01ac 36E7     		b	.L156
 2200              	.L154:
 719:Src/mode.c    ****             break;
 2201              		.loc 1 719 0
 2202 01ae 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2203 01b2 93B2     		uxth	r3, r2
 2204 01b4 120C     		lsrs	r2, r2, #16
 2205 01b6 0909     		lsrs	r1, r1, #4
 2206 01b8 2048     		ldr	r0, .L180+76
 2207 01ba FFF7FEFF 		bl	printf
 2208              	.LVL247:
 720:Src/mode.c    ****         case GOAL:
 2209              		.loc 1 720 0
 2210 01be 2DE7     		b	.L156
 2211              	.L153:
 722:Src/mode.c    ****             break;
 2212              		.loc 1 722 0
 2213 01c0 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2214 01c4 93B2     		uxth	r3, r2
 2215 01c6 120C     		lsrs	r2, r2, #16
 2216 01c8 0909     		lsrs	r1, r1, #4
 2217 01ca 1D48     		ldr	r0, .L180+80
 2218 01cc FFF7FEFF 		bl	printf
 2219              	.LVL248:
 723:Src/mode.c    ****         case ADJUST:
 2220              		.loc 1 723 0
 2221 01d0 24E7     		b	.L156
 2222              	.L155:
 725:Src/mode.c    ****             break;
 2223              		.loc 1 725 0
 2224 01d2 57F82420 		ldr	r2, [r7, r4, lsl #2]
 2225 01d6 93B2     		uxth	r3, r2
 2226 01d8 120C     		lsrs	r2, r2, #16
 2227 01da 0909     		lsrs	r1, r1, #4
 2228 01dc 1948     		ldr	r0, .L180+84
 2229 01de FFF7FEFF 		bl	printf
 2230              	.LVL249:
 726:Src/mode.c    ****         default:
 2231              		.loc 1 726 0
 2232 01e2 1BE7     		b	.L156
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 55


 2233              	.L147:
 728:Src/mode.c    ****             break;
 2234              		.loc 1 728 0
 2235 01e4 0B48     		ldr	r0, .L180+36
 2236 01e6 FFF7FEFF 		bl	puts
 2237              	.LVL250:
 729:Src/mode.c    ****         }
 2238              		.loc 1 729 0
 2239 01ea 17E7     		b	.L156
 2240              	.L179:
 732:Src/mode.c    ****     }
 733:Src/mode.c    **** }
 2241              		.loc 1 733 0
 2242 01ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2243              	.LVL251:
 2244              	.L181:
 2245 01ee 00BF     		.align	2
 2246              	.L180:
 2247 01f0 00000000 		.word	.LC7
 2248 01f4 24000000 		.word	.LC8
 2249 01f8 48000000 		.word	.LC9
 2250 01fc 6C000000 		.word	.LC10
 2251 0200 90000000 		.word	.LC11
 2252 0204 B4000000 		.word	.LC12
 2253 0208 DC000000 		.word	.LC13
 2254 020c 04010000 		.word	.LC14
 2255 0210 2C010000 		.word	.LC15
 2256 0214 00000000 		.word	.LC3
 2257 0218 50010000 		.word	.LC16
 2258 021c 78010000 		.word	.LC17
 2259 0220 9C010000 		.word	.LC18
 2260 0224 C0010000 		.word	.LC19
 2261 0228 E8010000 		.word	.LC20
 2262 022c 10020000 		.word	.LC21
 2263 0230 38020000 		.word	.LC22
 2264 0234 60020000 		.word	.LC23
 2265 0238 84020000 		.word	.LC24
 2266 023c A8020000 		.word	.LC25
 2267 0240 CC020000 		.word	.LC26
 2268 0244 EC020000 		.word	.LC27
 2269              		.cfi_endproc
 2270              	.LFE139:
 2272              		.section	.text.AdjustStraight,"ax",%progbits
 2273              		.align	1
 2274              		.global	AdjustStraight
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu fpv4-sp-d16
 2280              	AdjustStraight:
 2281              	.LFB140:
 734:Src/mode.c    **** 
 735:Src/mode.c    **** void AdjustStraight(void)
 736:Src/mode.c    **** {
 2282              		.loc 1 736 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 56


 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286 0000 08B5     		push	{r3, lr}
 2287              	.LCFI27:
 2288              		.cfi_def_cfa_offset 8
 2289              		.cfi_offset 3, -8
 2290              		.cfi_offset 14, -4
 737:Src/mode.c    ****     SetRunMode();
 2291              		.loc 1 737 0
 2292 0002 FFF7FEFF 		bl	SetRunMode
 2293              	.LVL252:
 738:Src/mode.c    ****     Tim_MotorPwm(96, 96);
 2294              		.loc 1 738 0
 2295 0006 6021     		movs	r1, #96
 2296 0008 0846     		mov	r0, r1
 2297 000a FFF7FEFF 		bl	Tim_MotorPwm
 2298              	.LVL253:
 2299              	.L183:
 739:Src/mode.c    ****     while (motor_flag == TRUE)
 2300              		.loc 1 739 0 discriminator 1
 2301 000e 0E4B     		ldr	r3, .L185
 2302 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2303 0012 DBB2     		uxtb	r3, r3
 2304 0014 012B     		cmp	r3, #1
 2305 0016 FAD0     		beq	.L183
 740:Src/mode.c    ****     {
 741:Src/mode.c    ****     }
 742:Src/mode.c    ****     HAL_Delay(500);
 2306              		.loc 1 742 0
 2307 0018 4FF4FA70 		mov	r0, #500
 2308 001c FFF7FEFF 		bl	HAL_Delay
 2309              	.LVL254:
 743:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2310              		.loc 1 743 0
 2311 0020 49F64242 		movw	r2, #40002
 2312 0024 0949     		ldr	r1, .L185+4
 2313 0026 0A4B     		ldr	r3, .L185+8
 2314 0028 1868     		ldr	r0, [r3]
 2315 002a FFF7FEFF 		bl	Flash_Write
 2316              	.LVL255:
 744:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2317              		.loc 1 744 0
 2318 002e 4FF49671 		mov	r1, #300
 2319 0032 4C20     		movs	r0, #76
 2320 0034 FFF7FEFF 		bl	Tim_BuzzerPwm
 2321              	.LVL256:
 745:Src/mode.c    ****     HAL_Delay(200);
 2322              		.loc 1 745 0
 2323 0038 C820     		movs	r0, #200
 2324 003a FFF7FEFF 		bl	HAL_Delay
 2325              	.LVL257:
 746:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2326              		.loc 1 746 0
 2327 003e 0021     		movs	r1, #0
 2328 0040 0A20     		movs	r0, #10
 2329 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 2330              	.LVL258:
 747:Src/mode.c    **** }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 57


 2331              		.loc 1 747 0
 2332 0046 08BD     		pop	{r3, pc}
 2333              	.L186:
 2334              		.align	2
 2335              	.L185:
 2336 0048 00000000 		.word	motor_flag
 2337 004c 00000000 		.word	loger
 2338 0050 00000000 		.word	start_address
 2339              		.cfi_endproc
 2340              	.LFE140:
 2342              		.section	.text.AdjustTurn,"ax",%progbits
 2343              		.align	1
 2344              		.global	AdjustTurn
 2345              		.syntax unified
 2346              		.thumb
 2347              		.thumb_func
 2348              		.fpu fpv4-sp-d16
 2350              	AdjustTurn:
 2351              	.LFB141:
 748:Src/mode.c    **** 
 749:Src/mode.c    **** void AdjustTurn(void)
 750:Src/mode.c    **** {
 2352              		.loc 1 750 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356 0000 08B5     		push	{r3, lr}
 2357              	.LCFI28:
 2358              		.cfi_def_cfa_offset 8
 2359              		.cfi_offset 3, -8
 2360              		.cfi_offset 14, -4
 751:Src/mode.c    ****     SetRunMode();
 2361              		.loc 1 751 0
 2362 0002 FFF7FEFF 		bl	SetRunMode
 2363              	.LVL259:
 752:Src/mode.c    ****     Tim_MotorPwm(-180, 180);
 2364              		.loc 1 752 0
 2365 0006 B421     		movs	r1, #180
 2366 0008 6FF0B300 		mvn	r0, #179
 2367 000c FFF7FEFF 		bl	Tim_MotorPwm
 2368              	.LVL260:
 2369              	.L188:
 753:Src/mode.c    ****     while (motor_flag == TRUE)
 2370              		.loc 1 753 0 discriminator 1
 2371 0010 0E4B     		ldr	r3, .L190
 2372 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2373 0014 DBB2     		uxtb	r3, r3
 2374 0016 012B     		cmp	r3, #1
 2375 0018 FAD0     		beq	.L188
 754:Src/mode.c    ****     {
 755:Src/mode.c    ****     }
 756:Src/mode.c    ****     HAL_Delay(500);
 2376              		.loc 1 756 0
 2377 001a 4FF4FA70 		mov	r0, #500
 2378 001e FFF7FEFF 		bl	HAL_Delay
 2379              	.LVL261:
 757:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 58


 2380              		.loc 1 757 0
 2381 0022 49F64242 		movw	r2, #40002
 2382 0026 0A49     		ldr	r1, .L190+4
 2383 0028 0A4B     		ldr	r3, .L190+8
 2384 002a 1868     		ldr	r0, [r3]
 2385 002c FFF7FEFF 		bl	Flash_Write
 2386              	.LVL262:
 758:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2387              		.loc 1 758 0
 2388 0030 4FF49671 		mov	r1, #300
 2389 0034 4C20     		movs	r0, #76
 2390 0036 FFF7FEFF 		bl	Tim_BuzzerPwm
 2391              	.LVL263:
 759:Src/mode.c    ****     HAL_Delay(200);
 2392              		.loc 1 759 0
 2393 003a C820     		movs	r0, #200
 2394 003c FFF7FEFF 		bl	HAL_Delay
 2395              	.LVL264:
 760:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2396              		.loc 1 760 0
 2397 0040 0021     		movs	r1, #0
 2398 0042 0A20     		movs	r0, #10
 2399 0044 FFF7FEFF 		bl	Tim_BuzzerPwm
 2400              	.LVL265:
 761:Src/mode.c    **** }
 2401              		.loc 1 761 0
 2402 0048 08BD     		pop	{r3, pc}
 2403              	.L191:
 2404 004a 00BF     		.align	2
 2405              	.L190:
 2406 004c 00000000 		.word	motor_flag
 2407 0050 00000000 		.word	loger
 2408 0054 00000000 		.word	start_address
 2409              		.cfi_endproc
 2410              	.LFE141:
 2412              		.section	.text.Circuit,"ax",%progbits
 2413              		.align	1
 2414              		.global	Circuit
 2415              		.syntax unified
 2416              		.thumb
 2417              		.thumb_func
 2418              		.fpu fpv4-sp-d16
 2420              	Circuit:
 2421              	.LFB142:
 762:Src/mode.c    **** 
 763:Src/mode.c    **** void Circuit(uint8_t row, uint8_t colum, uint8_t num, uint8_t dir)
 764:Src/mode.c    **** {
 2422              		.loc 1 764 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              	.LVL266:
 2427 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2428              	.LCFI29:
 2429              		.cfi_def_cfa_offset 24
 2430              		.cfi_offset 4, -24
 2431              		.cfi_offset 5, -20
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 59


 2432              		.cfi_offset 6, -16
 2433              		.cfi_offset 7, -12
 2434              		.cfi_offset 8, -8
 2435              		.cfi_offset 14, -4
 2436 0004 0746     		mov	r7, r0
 2437 0006 0E46     		mov	r6, r1
 2438 0008 9046     		mov	r8, r2
 2439 000a 1D46     		mov	r5, r3
 765:Src/mode.c    ****     Motion_Start();
 2440              		.loc 1 765 0
 2441 000c FFF7FEFF 		bl	Motion_Start
 2442              	.LVL267:
 2443              	.LBB13:
 766:Src/mode.c    ****     for (uint8_t i = 0; i < num; i++)
 2444              		.loc 1 766 0
 2445 0010 0024     		movs	r4, #0
 2446 0012 17E0     		b	.L193
 2447              	.LVL268:
 2448              	.L210:
 767:Src/mode.c    ****     {
 768:Src/mode.c    ****         if (row > 1)
 769:Src/mode.c    ****         {
 770:Src/mode.c    ****             Motion_Straight();
 2449              		.loc 1 770 0
 2450 0014 FFF7FEFF 		bl	Motion_Straight
 2451              	.LVL269:
 2452 0018 18E0     		b	.L194
 2453              	.L211:
 771:Src/mode.c    ****         }
 772:Src/mode.c    **** 
 773:Src/mode.c    ****         if (dir == 1)
 774:Src/mode.c    ****         {
 775:Src/mode.c    ****             Motion_LeftTurn();
 2454              		.loc 1 775 0
 2455 001a FFF7FEFF 		bl	Motion_LeftTurn
 2456              	.LVL270:
 2457 001e 19E0     		b	.L196
 2458              	.L212:
 776:Src/mode.c    ****         }
 777:Src/mode.c    ****         else
 778:Src/mode.c    ****         {
 779:Src/mode.c    ****             Motion_RightTurn();
 780:Src/mode.c    ****         }
 781:Src/mode.c    **** 
 782:Src/mode.c    ****         if (colum > 1)
 783:Src/mode.c    ****         {
 784:Src/mode.c    ****             Motion_Straight();
 2459              		.loc 1 784 0
 2460 0020 FFF7FEFF 		bl	Motion_Straight
 2461              	.LVL271:
 2462 0024 18E0     		b	.L197
 2463              	.L213:
 785:Src/mode.c    ****         }
 786:Src/mode.c    **** 
 787:Src/mode.c    ****         if (dir == 1)
 788:Src/mode.c    ****         {
 789:Src/mode.c    ****             Motion_LeftTurn();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 60


 2464              		.loc 1 789 0
 2465 0026 FFF7FEFF 		bl	Motion_LeftTurn
 2466              	.LVL272:
 2467 002a 19E0     		b	.L199
 2468              	.L214:
 790:Src/mode.c    ****         }
 791:Src/mode.c    ****         else
 792:Src/mode.c    ****         {
 793:Src/mode.c    ****             Motion_RightTurn();
 794:Src/mode.c    ****         }
 795:Src/mode.c    **** 
 796:Src/mode.c    ****         if (row > 1)
 797:Src/mode.c    ****         {
 798:Src/mode.c    ****             Motion_Straight();
 2469              		.loc 1 798 0
 2470 002c FFF7FEFF 		bl	Motion_Straight
 2471              	.LVL273:
 2472 0030 18E0     		b	.L200
 2473              	.L215:
 799:Src/mode.c    ****         }
 800:Src/mode.c    **** 
 801:Src/mode.c    ****         if (dir == 1)
 802:Src/mode.c    ****         {
 803:Src/mode.c    ****             Motion_LeftTurn();
 2474              		.loc 1 803 0
 2475 0032 FFF7FEFF 		bl	Motion_LeftTurn
 2476              	.LVL274:
 2477 0036 19E0     		b	.L202
 2478              	.L203:
 804:Src/mode.c    ****         }
 805:Src/mode.c    ****         else
 806:Src/mode.c    ****         {
 807:Src/mode.c    ****             Motion_RightTurn();
 808:Src/mode.c    ****         }
 809:Src/mode.c    **** 
 810:Src/mode.c    ****         if (colum > 1)
 811:Src/mode.c    ****         {
 812:Src/mode.c    ****             Motion_Straight();
 813:Src/mode.c    ****         }
 814:Src/mode.c    ****         if (dir == 1)
 2479              		.loc 1 814 0
 2480 0038 012D     		cmp	r5, #1
 2481 003a 1CD0     		beq	.L208
 815:Src/mode.c    ****         {
 816:Src/mode.c    ****             Motion_LeftTurn();
 817:Src/mode.c    ****         }
 818:Src/mode.c    ****         else
 819:Src/mode.c    ****         {
 820:Src/mode.c    ****             Motion_RightTurn();
 2482              		.loc 1 820 0
 2483 003c FFF7FEFF 		bl	Motion_RightTurn
 2484              	.LVL275:
 2485              	.L205:
 766:Src/mode.c    ****     {
 2486              		.loc 1 766 0 discriminator 2
 2487 0040 0134     		adds	r4, r4, #1
 2488              	.LVL276:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 61


 2489 0042 E4B2     		uxtb	r4, r4
 2490              	.LVL277:
 2491              	.L193:
 766:Src/mode.c    ****     {
 2492              		.loc 1 766 0 is_stmt 0 discriminator 1
 2493 0044 4445     		cmp	r4, r8
 2494 0046 19D2     		bcs	.L209
 768:Src/mode.c    ****         {
 2495              		.loc 1 768 0 is_stmt 1
 2496 0048 012F     		cmp	r7, #1
 2497 004a E3D8     		bhi	.L210
 2498              	.L194:
 773:Src/mode.c    ****         {
 2499              		.loc 1 773 0
 2500 004c 012D     		cmp	r5, #1
 2501 004e E4D0     		beq	.L211
 779:Src/mode.c    ****         }
 2502              		.loc 1 779 0
 2503 0050 FFF7FEFF 		bl	Motion_RightTurn
 2504              	.LVL278:
 2505              	.L196:
 782:Src/mode.c    ****         {
 2506              		.loc 1 782 0
 2507 0054 012E     		cmp	r6, #1
 2508 0056 E3D8     		bhi	.L212
 2509              	.L197:
 787:Src/mode.c    ****         {
 2510              		.loc 1 787 0
 2511 0058 012D     		cmp	r5, #1
 2512 005a E4D0     		beq	.L213
 793:Src/mode.c    ****         }
 2513              		.loc 1 793 0
 2514 005c FFF7FEFF 		bl	Motion_RightTurn
 2515              	.LVL279:
 2516              	.L199:
 796:Src/mode.c    ****         {
 2517              		.loc 1 796 0
 2518 0060 012F     		cmp	r7, #1
 2519 0062 E3D8     		bhi	.L214
 2520              	.L200:
 801:Src/mode.c    ****         {
 2521              		.loc 1 801 0
 2522 0064 012D     		cmp	r5, #1
 2523 0066 E4D0     		beq	.L215
 807:Src/mode.c    ****         }
 2524              		.loc 1 807 0
 2525 0068 FFF7FEFF 		bl	Motion_RightTurn
 2526              	.LVL280:
 2527              	.L202:
 810:Src/mode.c    ****         {
 2528              		.loc 1 810 0
 2529 006c 012E     		cmp	r6, #1
 2530 006e E3D9     		bls	.L203
 812:Src/mode.c    ****         }
 2531              		.loc 1 812 0
 2532 0070 FFF7FEFF 		bl	Motion_Straight
 2533              	.LVL281:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 62


 2534 0074 E0E7     		b	.L203
 2535              	.L208:
 816:Src/mode.c    ****         }
 2536              		.loc 1 816 0
 2537 0076 FFF7FEFF 		bl	Motion_LeftTurn
 2538              	.LVL282:
 2539 007a E1E7     		b	.L205
 2540              	.L209:
 2541              	.LBE13:
 821:Src/mode.c    ****         }
 822:Src/mode.c    ****     }
 823:Src/mode.c    ****     Motion_End();
 2542              		.loc 1 823 0
 2543 007c FFF7FEFF 		bl	Motion_End
 2544              	.LVL283:
 824:Src/mode.c    ****     motor_flag = FALSE;
 2545              		.loc 1 824 0
 2546 0080 024B     		ldr	r3, .L216
 2547 0082 0022     		movs	r2, #0
 2548 0084 1A70     		strb	r2, [r3]
 825:Src/mode.c    **** }
 2549              		.loc 1 825 0
 2550 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2551              	.LVL284:
 2552              	.L217:
 2553 008a 00BF     		.align	2
 2554              	.L216:
 2555 008c 00000000 		.word	motor_flag
 2556              		.cfi_endproc
 2557              	.LFE142:
 2559              		.section	.text.Turn45_Test,"ax",%progbits
 2560              		.align	1
 2561              		.global	Turn45_Test
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2565              		.fpu fpv4-sp-d16
 2567              	Turn45_Test:
 2568              	.LFB143:
 826:Src/mode.c    **** 
 827:Src/mode.c    **** void Turn45_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
 828:Src/mode.c    **** {
 2569              		.loc 1 828 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              	.LVL285:
 2574 0000 70B5     		push	{r4, r5, r6, lr}
 2575              	.LCFI30:
 2576              		.cfi_def_cfa_offset 16
 2577              		.cfi_offset 4, -16
 2578              		.cfi_offset 5, -12
 2579              		.cfi_offset 6, -8
 2580              		.cfi_offset 14, -4
 2581 0002 2DED028B 		vpush.64	{d8}
 2582              	.LCFI31:
 2583              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 63


 2584              		.cfi_offset 80, -24
 2585              		.cfi_offset 81, -20
 2586 0006 0546     		mov	r5, r0
 2587 0008 0C46     		mov	r4, r1
 2588 000a 1646     		mov	r6, r2
 829:Src/mode.c    ****     SetRunMode();
 2589              		.loc 1 829 0
 2590 000c FFF7FEFF 		bl	SetRunMode
 2591              	.LVL286:
 830:Src/mode.c    **** 
 831:Src/mode.c    ****     switch (in_dir)
 2592              		.loc 1 831 0
 2593 0010 012D     		cmp	r5, #1
 2594 0012 2CD0     		beq	.L220
 2595 0014 45B3     		cbz	r5, .L221
 2596 0016 022D     		cmp	r5, #2
 2597 0018 31D0     		beq	.L222
 2598              	.L219:
 832:Src/mode.c    ****     {
 833:Src/mode.c    ****     case FRONT:
 834:Src/mode.c    ****         Motion_DiagonalStart();
 835:Src/mode.c    ****         break;
 836:Src/mode.c    ****     case LEFT:
 837:Src/mode.c    ****         Motion_FastStart(2, VELO_F);
 838:Src/mode.c    ****         Motion_InLeft45Turn();
 839:Src/mode.c    ****         break;
 840:Src/mode.c    ****     case RIGHT:
 841:Src/mode.c    ****         Motion_FastStart(2, VELO_F);
 842:Src/mode.c    ****         Motion_InRight45Turn();
 843:Src/mode.c    ****         break;
 844:Src/mode.c    ****     default:
 845:Src/mode.c    ****         break;
 846:Src/mode.c    ****     }
 847:Src/mode.c    **** 
 848:Src/mode.c    ****     if (step > 0)
 2599              		.loc 1 848 0
 2600 001a C6BB     		cbnz	r6, .L229
 2601              	.L223:
 849:Src/mode.c    ****     {
 850:Src/mode.c    ****         Motion_Diagonal(step);
 851:Src/mode.c    ****     }
 852:Src/mode.c    **** 
 853:Src/mode.c    ****     switch (out_dir)
 2602              		.loc 1 853 0
 2603 001c 012C     		cmp	r4, #1
 2604 001e 3DD0     		beq	.L225
 2605 0020 CCB3     		cbz	r4, .L226
 2606 0022 022C     		cmp	r4, #2
 2607 0024 46D0     		beq	.L227
 2608              	.L224:
 854:Src/mode.c    ****     {
 855:Src/mode.c    ****     case FRONT:
 856:Src/mode.c    ****         Motion_DiagonalStop();
 857:Src/mode.c    ****         break;
 858:Src/mode.c    ****     case LEFT:
 859:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 860:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 64


 861:Src/mode.c    ****         break;
 862:Src/mode.c    ****     case RIGHT:
 863:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
 864:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 865:Src/mode.c    ****         break;
 866:Src/mode.c    ****     default:
 867:Src/mode.c    ****         break;
 868:Src/mode.c    ****     }
 869:Src/mode.c    **** 
 870:Src/mode.c    ****     motor_flag = FALSE;
 2609              		.loc 1 870 0
 2610 0026 0024     		movs	r4, #0
 2611 0028 284B     		ldr	r3, .L230
 2612 002a 1C70     		strb	r4, [r3]
 871:Src/mode.c    ****     HAL_Delay(500);
 2613              		.loc 1 871 0
 2614 002c 4FF4FA70 		mov	r0, #500
 2615 0030 FFF7FEFF 		bl	HAL_Delay
 2616              	.LVL287:
 872:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2617              		.loc 1 872 0
 2618 0034 49F64242 		movw	r2, #40002
 2619 0038 2549     		ldr	r1, .L230+4
 2620 003a 264B     		ldr	r3, .L230+8
 2621 003c 1868     		ldr	r0, [r3]
 2622 003e FFF7FEFF 		bl	Flash_Write
 2623              	.LVL288:
 873:Src/mode.c    ****     HAL_Delay(300);
 2624              		.loc 1 873 0
 2625 0042 4FF49670 		mov	r0, #300
 2626 0046 FFF7FEFF 		bl	HAL_Delay
 2627              	.LVL289:
 874:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2628              		.loc 1 874 0
 2629 004a 4FF49671 		mov	r1, #300
 2630 004e 4C20     		movs	r0, #76
 2631 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 2632              	.LVL290:
 875:Src/mode.c    ****     HAL_Delay(200);
 2633              		.loc 1 875 0
 2634 0054 C820     		movs	r0, #200
 2635 0056 FFF7FEFF 		bl	HAL_Delay
 2636              	.LVL291:
 876:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2637              		.loc 1 876 0
 2638 005a 2146     		mov	r1, r4
 2639 005c 0A20     		movs	r0, #10
 2640 005e FFF7FEFF 		bl	Tim_BuzzerPwm
 2641              	.LVL292:
 877:Src/mode.c    **** }
 2642              		.loc 1 877 0
 2643 0062 BDEC028B 		vldm	sp!, {d8}
 2644              	.LCFI32:
 2645              		.cfi_remember_state
 2646              		.cfi_restore 80
 2647              		.cfi_restore 81
 2648              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 65


 2649 0066 70BD     		pop	{r4, r5, r6, pc}
 2650              	.L221:
 2651              	.LCFI33:
 2652              		.cfi_restore_state
 834:Src/mode.c    ****         break;
 2653              		.loc 1 834 0
 2654 0068 FFF7FEFF 		bl	Motion_DiagonalStart
 2655              	.LVL293:
 835:Src/mode.c    ****     case LEFT:
 2656              		.loc 1 835 0
 2657 006c D5E7     		b	.L219
 2658              	.L220:
 837:Src/mode.c    ****         Motion_InLeft45Turn();
 2659              		.loc 1 837 0
 2660 006e 9FED1A0A 		vldr.32	s0, .L230+12
 2661 0072 0220     		movs	r0, #2
 2662 0074 FFF7FEFF 		bl	Motion_FastStart
 2663              	.LVL294:
 838:Src/mode.c    ****         break;
 2664              		.loc 1 838 0
 2665 0078 FFF7FEFF 		bl	Motion_InLeft45Turn
 2666              	.LVL295:
 839:Src/mode.c    ****     case RIGHT:
 2667              		.loc 1 839 0
 2668 007c CDE7     		b	.L219
 2669              	.L222:
 841:Src/mode.c    ****         Motion_InRight45Turn();
 2670              		.loc 1 841 0
 2671 007e 9FED160A 		vldr.32	s0, .L230+12
 2672 0082 0220     		movs	r0, #2
 2673 0084 FFF7FEFF 		bl	Motion_FastStart
 2674              	.LVL296:
 842:Src/mode.c    ****         break;
 2675              		.loc 1 842 0
 2676 0088 FFF7FEFF 		bl	Motion_InRight45Turn
 2677              	.LVL297:
 843:Src/mode.c    ****     default:
 2678              		.loc 1 843 0
 2679 008c C5E7     		b	.L219
 2680              	.L229:
 850:Src/mode.c    ****     }
 2681              		.loc 1 850 0
 2682 008e 3046     		mov	r0, r6
 2683 0090 FFF7FEFF 		bl	Motion_Diagonal
 2684              	.LVL298:
 2685 0094 C2E7     		b	.L223
 2686              	.L226:
 856:Src/mode.c    ****         break;
 2687              		.loc 1 856 0
 2688 0096 FFF7FEFF 		bl	Motion_DiagonalStop
 2689              	.LVL299:
 857:Src/mode.c    ****     case LEFT:
 2690              		.loc 1 857 0
 2691 009a C4E7     		b	.L224
 2692              	.L225:
 859:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2693              		.loc 1 859 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 66


 2694 009c 9FED0E8A 		vldr.32	s16, .L230+12
 2695 00a0 B0EE480A 		vmov.f32	s0, s16
 2696 00a4 FFF7FEFF 		bl	Motion_OutLeft45Turn
 2697              	.LVL300:
 860:Src/mode.c    ****         break;
 2698              		.loc 1 860 0
 2699 00a8 B0EE480A 		vmov.f32	s0, s16
 2700 00ac 0120     		movs	r0, #1
 2701 00ae FFF7FEFF 		bl	Motion_FastGoal
 2702              	.LVL301:
 861:Src/mode.c    ****     case RIGHT:
 2703              		.loc 1 861 0
 2704 00b2 B8E7     		b	.L224
 2705              	.L227:
 863:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2706              		.loc 1 863 0
 2707 00b4 9FED088A 		vldr.32	s16, .L230+12
 2708 00b8 B0EE480A 		vmov.f32	s0, s16
 2709 00bc FFF7FEFF 		bl	Motion_OutRight45Turn
 2710              	.LVL302:
 864:Src/mode.c    ****         break;
 2711              		.loc 1 864 0
 2712 00c0 B0EE480A 		vmov.f32	s0, s16
 2713 00c4 0120     		movs	r0, #1
 2714 00c6 FFF7FEFF 		bl	Motion_FastGoal
 2715              	.LVL303:
 865:Src/mode.c    ****     default:
 2716              		.loc 1 865 0
 2717 00ca ACE7     		b	.L224
 2718              	.L231:
 2719              		.align	2
 2720              	.L230:
 2721 00cc 00000000 		.word	motor_flag
 2722 00d0 00000000 		.word	loger
 2723 00d4 00000000 		.word	start_address
 2724 00d8 00004844 		.word	1145569280
 2725              		.cfi_endproc
 2726              	.LFE143:
 2728              		.section	.text.Turn135_Test,"ax",%progbits
 2729              		.align	1
 2730              		.global	Turn135_Test
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2734              		.fpu fpv4-sp-d16
 2736              	Turn135_Test:
 2737              	.LFB144:
 878:Src/mode.c    **** 
 879:Src/mode.c    **** void Turn135_Test(uint8_t in_dir, uint8_t out_dir, uint8_t step)
 880:Src/mode.c    **** {
 2738              		.loc 1 880 0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 0
 2741              		@ frame_needed = 0, uses_anonymous_args = 0
 2742              	.LVL304:
 2743 0000 70B5     		push	{r4, r5, r6, lr}
 2744              	.LCFI34:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 67


 2745              		.cfi_def_cfa_offset 16
 2746              		.cfi_offset 4, -16
 2747              		.cfi_offset 5, -12
 2748              		.cfi_offset 6, -8
 2749              		.cfi_offset 14, -4
 2750 0002 2DED028B 		vpush.64	{d8}
 2751              	.LCFI35:
 2752              		.cfi_def_cfa_offset 24
 2753              		.cfi_offset 80, -24
 2754              		.cfi_offset 81, -20
 2755 0006 0546     		mov	r5, r0
 2756 0008 0C46     		mov	r4, r1
 2757 000a 1646     		mov	r6, r2
 881:Src/mode.c    ****     SetRunMode();
 2758              		.loc 1 881 0
 2759 000c FFF7FEFF 		bl	SetRunMode
 2760              	.LVL305:
 882:Src/mode.c    **** 
 883:Src/mode.c    ****     switch (in_dir)
 2761              		.loc 1 883 0
 2762 0010 012D     		cmp	r5, #1
 2763 0012 2ED0     		beq	.L234
 2764 0014 55B3     		cbz	r5, .L235
 2765 0016 022D     		cmp	r5, #2
 2766 0018 3DD0     		beq	.L236
 2767              	.L233:
 884:Src/mode.c    ****     {
 885:Src/mode.c    ****     case FRONT:
 886:Src/mode.c    ****         Motion_DiagonalStart();
 887:Src/mode.c    ****         break;
 888:Src/mode.c    ****     case LEFT:
 889:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
 890:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 891:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 892:Src/mode.c    ****         break;
 893:Src/mode.c    ****     case RIGHT:
 894:Src/mode.c    ****         Motion_FastStart(1, VELO_F);
 895:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 896:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 897:Src/mode.c    ****         break;
 898:Src/mode.c    ****     default:
 899:Src/mode.c    ****         break;
 900:Src/mode.c    ****     }
 901:Src/mode.c    **** 
 902:Src/mode.c    ****     if (step > 0)
 2768              		.loc 1 902 0
 2769 001a 002E     		cmp	r6, #0
 2770 001c 4DD1     		bne	.L243
 2771              	.L237:
 903:Src/mode.c    ****     {
 904:Src/mode.c    ****         Motion_Diagonal(step);
 905:Src/mode.c    ****     }
 906:Src/mode.c    **** 
 907:Src/mode.c    ****     switch (out_dir)
 2772              		.loc 1 907 0
 2773 001e 012C     		cmp	r4, #1
 2774 0020 52D0     		beq	.L239
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 68


 2775 0022 002C     		cmp	r4, #0
 2776 0024 4DD0     		beq	.L240
 2777 0026 022C     		cmp	r4, #2
 2778 0028 5BD0     		beq	.L241
 2779              	.L238:
 908:Src/mode.c    ****     {
 909:Src/mode.c    ****     case FRONT:
 910:Src/mode.c    ****         Motion_DiagonalStop();
 911:Src/mode.c    ****         break;
 912:Src/mode.c    ****     case LEFT:
 913:Src/mode.c    ****         Motion_FastLeftTurn(T_135OUT, 800.0f);
 914:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 915:Src/mode.c    ****         break;
 916:Src/mode.c    ****     case RIGHT:
 917:Src/mode.c    ****         Motion_FastRightTurn(T_135OUT, 800.0f);
 918:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 919:Src/mode.c    ****         break;
 920:Src/mode.c    ****     default:
 921:Src/mode.c    ****         break;
 922:Src/mode.c    ****     }
 923:Src/mode.c    **** 
 924:Src/mode.c    ****     motor_flag = FALSE;
 2780              		.loc 1 924 0
 2781 002a 0024     		movs	r4, #0
 2782 002c 334B     		ldr	r3, .L244
 2783 002e 1C70     		strb	r4, [r3]
 925:Src/mode.c    ****     HAL_Delay(500);
 2784              		.loc 1 925 0
 2785 0030 4FF4FA70 		mov	r0, #500
 2786 0034 FFF7FEFF 		bl	HAL_Delay
 2787              	.LVL306:
 926:Src/mode.c    ****     Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 2788              		.loc 1 926 0
 2789 0038 49F64242 		movw	r2, #40002
 2790 003c 3049     		ldr	r1, .L244+4
 2791 003e 314B     		ldr	r3, .L244+8
 2792 0040 1868     		ldr	r0, [r3]
 2793 0042 FFF7FEFF 		bl	Flash_Write
 2794              	.LVL307:
 927:Src/mode.c    ****     HAL_Delay(300);
 2795              		.loc 1 927 0
 2796 0046 4FF49670 		mov	r0, #300
 2797 004a FFF7FEFF 		bl	HAL_Delay
 2798              	.LVL308:
 928:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2799              		.loc 1 928 0
 2800 004e 4FF49671 		mov	r1, #300
 2801 0052 4C20     		movs	r0, #76
 2802 0054 FFF7FEFF 		bl	Tim_BuzzerPwm
 2803              	.LVL309:
 929:Src/mode.c    ****     HAL_Delay(200);
 2804              		.loc 1 929 0
 2805 0058 C820     		movs	r0, #200
 2806 005a FFF7FEFF 		bl	HAL_Delay
 2807              	.LVL310:
 930:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2808              		.loc 1 930 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 69


 2809 005e 2146     		mov	r1, r4
 2810 0060 0A20     		movs	r0, #10
 2811 0062 FFF7FEFF 		bl	Tim_BuzzerPwm
 2812              	.LVL311:
 931:Src/mode.c    **** }
 2813              		.loc 1 931 0
 2814 0066 BDEC028B 		vldm	sp!, {d8}
 2815              	.LCFI36:
 2816              		.cfi_remember_state
 2817              		.cfi_restore 80
 2818              		.cfi_restore 81
 2819              		.cfi_def_cfa_offset 16
 2820 006a 70BD     		pop	{r4, r5, r6, pc}
 2821              	.L235:
 2822              	.LCFI37:
 2823              		.cfi_restore_state
 886:Src/mode.c    ****         break;
 2824              		.loc 1 886 0
 2825 006c FFF7FEFF 		bl	Motion_DiagonalStart
 2826              	.LVL312:
 887:Src/mode.c    ****     case LEFT:
 2827              		.loc 1 887 0
 2828 0070 D3E7     		b	.L233
 2829              	.L234:
 889:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 2830              		.loc 1 889 0
 2831 0072 9FED258A 		vldr.32	s16, .L244+12
 2832 0076 B0EE480A 		vmov.f32	s0, s16
 2833 007a 0120     		movs	r0, #1
 2834 007c FFF7FEFF 		bl	Motion_FastStart
 2835              	.LVL313:
 890:Src/mode.c    ****         Motion_FastLeftTurn(T_135IN, 800.0f);
 2836              		.loc 1 890 0
 2837 0080 B0EE480A 		vmov.f32	s0, s16
 2838 0084 0120     		movs	r0, #1
 2839 0086 FFF7FEFF 		bl	Motion_Adjust
 2840              	.LVL314:
 891:Src/mode.c    ****         break;
 2841              		.loc 1 891 0
 2842 008a B0EE480A 		vmov.f32	s0, s16
 2843 008e 0220     		movs	r0, #2
 2844 0090 FFF7FEFF 		bl	Motion_FastLeftTurn
 2845              	.LVL315:
 892:Src/mode.c    ****     case RIGHT:
 2846              		.loc 1 892 0
 2847 0094 C1E7     		b	.L233
 2848              	.L236:
 894:Src/mode.c    ****         Motion_Adjust(1,VELO_F);
 2849              		.loc 1 894 0
 2850 0096 9FED1C8A 		vldr.32	s16, .L244+12
 2851 009a B0EE480A 		vmov.f32	s0, s16
 2852 009e 0120     		movs	r0, #1
 2853 00a0 FFF7FEFF 		bl	Motion_FastStart
 2854              	.LVL316:
 895:Src/mode.c    ****         Motion_FastRightTurn(T_135IN, 800.0f);
 2855              		.loc 1 895 0
 2856 00a4 B0EE480A 		vmov.f32	s0, s16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 70


 2857 00a8 0120     		movs	r0, #1
 2858 00aa FFF7FEFF 		bl	Motion_Adjust
 2859              	.LVL317:
 896:Src/mode.c    ****         break;
 2860              		.loc 1 896 0
 2861 00ae B0EE480A 		vmov.f32	s0, s16
 2862 00b2 0220     		movs	r0, #2
 2863 00b4 FFF7FEFF 		bl	Motion_FastRightTurn
 2864              	.LVL318:
 897:Src/mode.c    ****     default:
 2865              		.loc 1 897 0
 2866 00b8 AFE7     		b	.L233
 2867              	.L243:
 904:Src/mode.c    ****     }
 2868              		.loc 1 904 0
 2869 00ba 3046     		mov	r0, r6
 2870 00bc FFF7FEFF 		bl	Motion_Diagonal
 2871              	.LVL319:
 2872 00c0 ADE7     		b	.L237
 2873              	.L240:
 910:Src/mode.c    ****         break;
 2874              		.loc 1 910 0
 2875 00c2 FFF7FEFF 		bl	Motion_DiagonalStop
 2876              	.LVL320:
 911:Src/mode.c    ****     case LEFT:
 2877              		.loc 1 911 0
 2878 00c6 B0E7     		b	.L238
 2879              	.L239:
 913:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2880              		.loc 1 913 0
 2881 00c8 9FED0F8A 		vldr.32	s16, .L244+12
 2882 00cc B0EE480A 		vmov.f32	s0, s16
 2883 00d0 0620     		movs	r0, #6
 2884 00d2 FFF7FEFF 		bl	Motion_FastLeftTurn
 2885              	.LVL321:
 914:Src/mode.c    ****         break;
 2886              		.loc 1 914 0
 2887 00d6 B0EE480A 		vmov.f32	s0, s16
 2888 00da 0120     		movs	r0, #1
 2889 00dc FFF7FEFF 		bl	Motion_FastGoal
 2890              	.LVL322:
 915:Src/mode.c    ****     case RIGHT:
 2891              		.loc 1 915 0
 2892 00e0 A3E7     		b	.L238
 2893              	.L241:
 917:Src/mode.c    ****         Motion_FastGoal(1, VELO_F);
 2894              		.loc 1 917 0
 2895 00e2 9FED098A 		vldr.32	s16, .L244+12
 2896 00e6 B0EE480A 		vmov.f32	s0, s16
 2897 00ea 0620     		movs	r0, #6
 2898 00ec FFF7FEFF 		bl	Motion_FastRightTurn
 2899              	.LVL323:
 918:Src/mode.c    ****         break;
 2900              		.loc 1 918 0
 2901 00f0 B0EE480A 		vmov.f32	s0, s16
 2902 00f4 0120     		movs	r0, #1
 2903 00f6 FFF7FEFF 		bl	Motion_FastGoal
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 71


 2904              	.LVL324:
 919:Src/mode.c    ****     default:
 2905              		.loc 1 919 0
 2906 00fa 96E7     		b	.L238
 2907              	.L245:
 2908              		.align	2
 2909              	.L244:
 2910 00fc 00000000 		.word	motor_flag
 2911 0100 00000000 		.word	loger
 2912 0104 00000000 		.word	start_address
 2913 0108 00004844 		.word	1145569280
 2914              		.cfi_endproc
 2915              	.LFE144:
 2917              		.section	.text.TurnBig90_Test,"ax",%progbits
 2918              		.align	1
 2919              		.global	TurnBig90_Test
 2920              		.syntax unified
 2921              		.thumb
 2922              		.thumb_func
 2923              		.fpu fpv4-sp-d16
 2925              	TurnBig90_Test:
 2926              	.LFB145:
 932:Src/mode.c    **** 
 933:Src/mode.c    **** void TurnBig90_Test(int8_t dir)
 934:Src/mode.c    **** {
 2927              		.loc 1 934 0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 2931              	.LVL325:
 2932 0000 10B5     		push	{r4, lr}
 2933              	.LCFI38:
 2934              		.cfi_def_cfa_offset 8
 2935              		.cfi_offset 4, -8
 2936              		.cfi_offset 14, -4
 2937 0002 2DED028B 		vpush.64	{d8}
 2938              	.LCFI39:
 2939              		.cfi_def_cfa_offset 16
 2940              		.cfi_offset 80, -16
 2941              		.cfi_offset 81, -12
 2942 0006 0446     		mov	r4, r0
 935:Src/mode.c    ****     SetRunMode();
 2943              		.loc 1 935 0
 2944 0008 FFF7FEFF 		bl	SetRunMode
 2945              	.LVL326:
 936:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 2946              		.loc 1 936 0
 2947 000c 9FED188A 		vldr.32	s16, .L252
 2948 0010 B0EE480A 		vmov.f32	s0, s16
 2949 0014 0120     		movs	r0, #1
 2950 0016 FFF7FEFF 		bl	Motion_FastStart
 2951              	.LVL327:
 937:Src/mode.c    ****     Motion_Adjust(1,VELO_F);
 2952              		.loc 1 937 0
 2953 001a B0EE480A 		vmov.f32	s0, s16
 2954 001e 0120     		movs	r0, #1
 2955 0020 FFF7FEFF 		bl	Motion_Adjust
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 72


 2956              	.LVL328:
 938:Src/mode.c    ****     if (dir == LEFT)
 2957              		.loc 1 938 0
 2958 0024 012C     		cmp	r4, #1
 2959 0026 18D0     		beq	.L250
 939:Src/mode.c    ****     {
 940:Src/mode.c    ****         Motion_Left90Turn(VELO_F);
 941:Src/mode.c    ****     }
 942:Src/mode.c    ****     else if (dir == RIGHT)
 2960              		.loc 1 942 0
 2961 0028 022C     		cmp	r4, #2
 2962 002a 1BD0     		beq	.L251
 2963              	.L248:
 943:Src/mode.c    ****     {
 944:Src/mode.c    ****         Motion_Right90Turn(VELO_F);
 945:Src/mode.c    ****     }
 946:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 2964              		.loc 1 946 0
 2965 002c 9FED100A 		vldr.32	s0, .L252
 2966 0030 0120     		movs	r0, #1
 2967 0032 FFF7FEFF 		bl	Motion_FastGoal
 2968              	.LVL329:
 947:Src/mode.c    ****     motor_flag = FALSE;
 2969              		.loc 1 947 0
 2970 0036 0024     		movs	r4, #0
 2971 0038 0E4B     		ldr	r3, .L252+4
 2972 003a 1C70     		strb	r4, [r3]
 948:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 2973              		.loc 1 948 0
 2974 003c 4FF49671 		mov	r1, #300
 2975 0040 4C20     		movs	r0, #76
 2976 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 2977              	.LVL330:
 949:Src/mode.c    ****     HAL_Delay(200);
 2978              		.loc 1 949 0
 2979 0046 C820     		movs	r0, #200
 2980 0048 FFF7FEFF 		bl	HAL_Delay
 2981              	.LVL331:
 950:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 2982              		.loc 1 950 0
 2983 004c 2146     		mov	r1, r4
 2984 004e 0A20     		movs	r0, #10
 2985 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 2986              	.LVL332:
 951:Src/mode.c    **** }
 2987              		.loc 1 951 0
 2988 0054 BDEC028B 		vldm	sp!, {d8}
 2989              	.LCFI40:
 2990              		.cfi_remember_state
 2991              		.cfi_restore 80
 2992              		.cfi_restore 81
 2993              		.cfi_def_cfa_offset 8
 2994 0058 10BD     		pop	{r4, pc}
 2995              	.L250:
 2996              	.LCFI41:
 2997              		.cfi_restore_state
 940:Src/mode.c    ****     }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 73


 2998              		.loc 1 940 0
 2999 005a B0EE480A 		vmov.f32	s0, s16
 3000 005e FFF7FEFF 		bl	Motion_Left90Turn
 3001              	.LVL333:
 3002 0062 E3E7     		b	.L248
 3003              	.L251:
 944:Src/mode.c    ****     }
 3004              		.loc 1 944 0
 3005 0064 9FED020A 		vldr.32	s0, .L252
 3006 0068 FFF7FEFF 		bl	Motion_Right90Turn
 3007              	.LVL334:
 3008 006c DEE7     		b	.L248
 3009              	.L253:
 3010 006e 00BF     		.align	2
 3011              	.L252:
 3012 0070 00004844 		.word	1145569280
 3013 0074 00000000 		.word	motor_flag
 3014              		.cfi_endproc
 3015              	.LFE145:
 3017              		.section	.text.TurnBig180_Test,"ax",%progbits
 3018              		.align	1
 3019              		.global	TurnBig180_Test
 3020              		.syntax unified
 3021              		.thumb
 3022              		.thumb_func
 3023              		.fpu fpv4-sp-d16
 3025              	TurnBig180_Test:
 3026              	.LFB146:
 952:Src/mode.c    **** 
 953:Src/mode.c    **** void TurnBig180_Test(int8_t dir)
 954:Src/mode.c    **** {
 3027              		.loc 1 954 0
 3028              		.cfi_startproc
 3029              		@ args = 0, pretend = 0, frame = 0
 3030              		@ frame_needed = 0, uses_anonymous_args = 0
 3031              	.LVL335:
 3032 0000 10B5     		push	{r4, lr}
 3033              	.LCFI42:
 3034              		.cfi_def_cfa_offset 8
 3035              		.cfi_offset 4, -8
 3036              		.cfi_offset 14, -4
 3037 0002 2DED028B 		vpush.64	{d8}
 3038              	.LCFI43:
 3039              		.cfi_def_cfa_offset 16
 3040              		.cfi_offset 80, -16
 3041              		.cfi_offset 81, -12
 3042 0006 0446     		mov	r4, r0
 955:Src/mode.c    ****     SetRunMode();
 3043              		.loc 1 955 0
 3044 0008 FFF7FEFF 		bl	SetRunMode
 3045              	.LVL336:
 956:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3046              		.loc 1 956 0
 3047 000c 9FED198A 		vldr.32	s16, .L260
 3048 0010 B0EE480A 		vmov.f32	s0, s16
 3049 0014 0120     		movs	r0, #1
 3050 0016 FFF7FEFF 		bl	Motion_FastStart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 74


 3051              	.LVL337:
 957:Src/mode.c    ****     Motion_Adjust(1, VELO_F);
 3052              		.loc 1 957 0
 3053 001a B0EE480A 		vmov.f32	s0, s16
 3054 001e 0120     		movs	r0, #1
 3055 0020 FFF7FEFF 		bl	Motion_Adjust
 3056              	.LVL338:
 958:Src/mode.c    ****     if (dir == LEFT)
 3057              		.loc 1 958 0
 3058 0024 012C     		cmp	r4, #1
 3059 0026 18D0     		beq	.L258
 959:Src/mode.c    ****     {
 960:Src/mode.c    ****         Motion_FastLeftTurn(T_180, VELO_F);
 961:Src/mode.c    ****     }
 962:Src/mode.c    ****     else if (dir == RIGHT)
 3060              		.loc 1 962 0
 3061 0028 022C     		cmp	r4, #2
 3062 002a 1CD0     		beq	.L259
 3063              	.L256:
 963:Src/mode.c    ****     {
 964:Src/mode.c    ****         Motion_FastRightTurn(T_180, VELO_F);
 965:Src/mode.c    ****     }
 966:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3064              		.loc 1 966 0
 3065 002c 9FED110A 		vldr.32	s0, .L260
 3066 0030 0120     		movs	r0, #1
 3067 0032 FFF7FEFF 		bl	Motion_FastGoal
 3068              	.LVL339:
 967:Src/mode.c    ****     motor_flag = FALSE;
 3069              		.loc 1 967 0
 3070 0036 0024     		movs	r4, #0
 3071 0038 0F4B     		ldr	r3, .L260+4
 3072 003a 1C70     		strb	r4, [r3]
 968:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3073              		.loc 1 968 0
 3074 003c 4FF49671 		mov	r1, #300
 3075 0040 4C20     		movs	r0, #76
 3076 0042 FFF7FEFF 		bl	Tim_BuzzerPwm
 3077              	.LVL340:
 969:Src/mode.c    ****     HAL_Delay(200);
 3078              		.loc 1 969 0
 3079 0046 C820     		movs	r0, #200
 3080 0048 FFF7FEFF 		bl	HAL_Delay
 3081              	.LVL341:
 970:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3082              		.loc 1 970 0
 3083 004c 2146     		mov	r1, r4
 3084 004e 0A20     		movs	r0, #10
 3085 0050 FFF7FEFF 		bl	Tim_BuzzerPwm
 3086              	.LVL342:
 971:Src/mode.c    **** }
 3087              		.loc 1 971 0
 3088 0054 BDEC028B 		vldm	sp!, {d8}
 3089              	.LCFI44:
 3090              		.cfi_remember_state
 3091              		.cfi_restore 80
 3092              		.cfi_restore 81
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 75


 3093              		.cfi_def_cfa_offset 8
 3094 0058 10BD     		pop	{r4, pc}
 3095              	.L258:
 3096              	.LCFI45:
 3097              		.cfi_restore_state
 960:Src/mode.c    ****     }
 3098              		.loc 1 960 0
 3099 005a B0EE480A 		vmov.f32	s0, s16
 3100 005e 0420     		movs	r0, #4
 3101 0060 FFF7FEFF 		bl	Motion_FastLeftTurn
 3102              	.LVL343:
 3103 0064 E2E7     		b	.L256
 3104              	.L259:
 964:Src/mode.c    ****     }
 3105              		.loc 1 964 0
 3106 0066 9FED030A 		vldr.32	s0, .L260
 3107 006a 0420     		movs	r0, #4
 3108 006c FFF7FEFF 		bl	Motion_FastRightTurn
 3109              	.LVL344:
 3110 0070 DCE7     		b	.L256
 3111              	.L261:
 3112 0072 00BF     		.align	2
 3113              	.L260:
 3114 0074 00004844 		.word	1145569280
 3115 0078 00000000 		.word	motor_flag
 3116              		.cfi_endproc
 3117              	.LFE146:
 3119              		.section	.text.Mode_Mouse,"ax",%progbits
 3120              		.align	1
 3121              		.global	Mode_Mouse
 3122              		.syntax unified
 3123              		.thumb
 3124              		.thumb_func
 3125              		.fpu fpv4-sp-d16
 3127              	Mode_Mouse:
 3128              	.LFB126:
  60:Src/mode.c    ****     switch (mode)
 3129              		.loc 1 60 0
 3130              		.cfi_startproc
 3131              		@ args = 0, pretend = 0, frame = 0
 3132              		@ frame_needed = 0, uses_anonymous_args = 0
 3133              	.LVL345:
 3134 0000 10B5     		push	{r4, lr}
 3135              	.LCFI46:
 3136              		.cfi_def_cfa_offset 8
 3137              		.cfi_offset 4, -8
 3138              		.cfi_offset 14, -4
  61:Src/mode.c    ****     {
 3139              		.loc 1 61 0
 3140 0002 1328     		cmp	r0, #19
 3141 0004 0DD8     		bhi	.L262
 3142 0006 DFE800F0 		tbb	[pc, r0]
 3143              	.L265:
 3144 000a 0A       		.byte	(.L264-.L265)/2
 3145 000b 0D       		.byte	(.L266-.L265)/2
 3146 000c 15       		.byte	(.L267-.L265)/2
 3147 000d 1D       		.byte	(.L268-.L265)/2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 76


 3148 000e 20       		.byte	(.L269-.L265)/2
 3149 000f 23       		.byte	(.L270-.L265)/2
 3150 0010 26       		.byte	(.L271-.L265)/2
 3151 0011 2E       		.byte	(.L272-.L265)/2
 3152 0012 36       		.byte	(.L273-.L265)/2
 3153 0013 5B       		.byte	(.L274-.L265)/2
 3154 0014 80       		.byte	(.L275-.L265)/2
 3155 0015 8C       		.byte	(.L276-.L265)/2
 3156 0016 98       		.byte	(.L277-.L265)/2
 3157 0017 A0       		.byte	(.L278-.L265)/2
 3158 0018 A8       		.byte	(.L279-.L265)/2
 3159 0019 B1       		.byte	(.L280-.L265)/2
 3160 001a BA       		.byte	(.L281-.L265)/2
 3161 001b C1       		.byte	(.L282-.L265)/2
 3162 001c C8       		.byte	(.L283-.L265)/2
 3163 001d CF       		.byte	(.L284-.L265)/2
 3164              		.p2align 1
 3165              	.L264:
  65:Src/mode.c    ****         break;
 3166              		.loc 1 65 0
 3167 001e FFF7FEFF 		bl	SearchRun
 3168              	.LVL346:
 3169              	.L262:
 185:Src/mode.c    **** 
 3170              		.loc 1 185 0
 3171 0022 10BD     		pop	{r4, pc}
 3172              	.LVL347:
 3173              	.L266:
  68:Src/mode.c    ****         break;
 3174              		.loc 1 68 0
 3175 0024 0322     		movs	r2, #3
 3176 0026 0121     		movs	r1, #1
 3177 0028 9FED630A 		vldr.32	s0, .L286
 3178 002c 0020     		movs	r0, #0
 3179              	.LVL348:
 3180 002e FFF7FEFF 		bl	Mode_FastRun
 3181              	.LVL349:
  69:Src/mode.c    ****     case 2:
 3182              		.loc 1 69 0
 3183 0032 F6E7     		b	.L262
 3184              	.LVL350:
 3185              	.L267:
  76:Src/mode.c    ****         break;
 3186              		.loc 1 76 0
 3187 0034 0522     		movs	r2, #5
 3188 0036 0721     		movs	r1, #7
 3189 0038 9FED5F0A 		vldr.32	s0, .L286
 3190 003c 0120     		movs	r0, #1
 3191              	.LVL351:
 3192 003e FFF7FEFF 		bl	Mode_FastRun
 3193              	.LVL352:
  77:Src/mode.c    ****     case 3:
 3194              		.loc 1 77 0
 3195 0042 EEE7     		b	.L262
 3196              	.LVL353:
 3197              	.L268:
  79:Src/mode.c    ****         break;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 77


 3198              		.loc 1 79 0
 3199 0044 FFF7FEFF 		bl	SensorCheck
 3200              	.LVL354:
  80:Src/mode.c    ****     //CYAN
 3201              		.loc 1 80 0
 3202 0048 EBE7     		b	.L262
 3203              	.LVL355:
 3204              	.L269:
  83:Src/mode.c    ****         break;
 3205              		.loc 1 83 0
 3206 004a FFF7FEFF 		bl	PrintOutPut
 3207              	.LVL356:
  84:Src/mode.c    ****     case 5:
 3208              		.loc 1 84 0
 3209 004e E8E7     		b	.L262
 3210              	.LVL357:
 3211              	.L270:
  86:Src/mode.c    ****         break;
 3212              		.loc 1 86 0
 3213 0050 FFF7FEFF 		bl	PrintWallData
 3214              	.LVL358:
  87:Src/mode.c    ****     case 6: //straight
 3215              		.loc 1 87 0
 3216 0054 E5E7     		b	.L262
 3217              	.LVL359:
 3218              	.L271:
  90:Src/mode.c    ****         /*
 3219              		.loc 1 90 0
 3220 0056 0322     		movs	r2, #3
 3221 0058 0121     		movs	r1, #1
 3222 005a 9FED580A 		vldr.32	s0, .L286+4
 3223 005e 0020     		movs	r0, #0
 3224              	.LVL360:
 3225 0060 FFF7FEFF 		bl	Mode_FastRun
 3226              	.LVL361:
  99:Src/mode.c    ****     case 7: //turn
 3227              		.loc 1 99 0
 3228 0064 DDE7     		b	.L262
 3229              	.LVL362:
 3230              	.L272:
 101:Src/mode.c    ****         //control_wall_flag = FALSE;
 3231              		.loc 1 101 0
 3232 0066 0522     		movs	r2, #5
 3233 0068 0721     		movs	r1, #7
 3234 006a 9FED540A 		vldr.32	s0, .L286+4
 3235 006e 0120     		movs	r0, #1
 3236              	.LVL363:
 3237 0070 FFF7FEFF 		bl	Mode_FastRun
 3238              	.LVL364:
 104:Src/mode.c    ****     //YELLOW
 3239              		.loc 1 104 0
 3240 0074 D5E7     		b	.L262
 3241              	.LVL365:
 3242              	.L273:
 107:Src/mode.c    ****         SetRunMode();
 3243              		.loc 1 107 0
 3244 0076 0024     		movs	r4, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 78


 3245 0078 514B     		ldr	r3, .L286+8
 3246 007a 1C70     		strb	r4, [r3]
 108:Src/mode.c    ****         Motion_Start();
 3247              		.loc 1 108 0
 3248 007c FFF7FEFF 		bl	SetRunMode
 3249              	.LVL366:
 109:Src/mode.c    ****         Motion_LeftTurn();
 3250              		.loc 1 109 0
 3251 0080 FFF7FEFF 		bl	Motion_Start
 3252              	.LVL367:
 110:Src/mode.c    ****         Motion_End();
 3253              		.loc 1 110 0
 3254 0084 FFF7FEFF 		bl	Motion_LeftTurn
 3255              	.LVL368:
 111:Src/mode.c    ****         motor_flag = FALSE;
 3256              		.loc 1 111 0
 3257 0088 FFF7FEFF 		bl	Motion_End
 3258              	.LVL369:
 112:Src/mode.c    ****         HAL_Delay(500);
 3259              		.loc 1 112 0
 3260 008c 4D4B     		ldr	r3, .L286+12
 3261 008e 1C70     		strb	r4, [r3]
 113:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3262              		.loc 1 113 0
 3263 0090 4FF4FA70 		mov	r0, #500
 3264 0094 FFF7FEFF 		bl	HAL_Delay
 3265              	.LVL370:
 114:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 3266              		.loc 1 114 0
 3267 0098 49F64242 		movw	r2, #40002
 3268 009c 4A49     		ldr	r1, .L286+16
 3269 009e 4B4B     		ldr	r3, .L286+20
 3270 00a0 1868     		ldr	r0, [r3]
 3271 00a2 FFF7FEFF 		bl	Flash_Write
 3272              	.LVL371:
 115:Src/mode.c    ****         HAL_Delay(200);
 3273              		.loc 1 115 0
 3274 00a6 4FF49671 		mov	r1, #300
 3275 00aa 4C20     		movs	r0, #76
 3276 00ac FFF7FEFF 		bl	Tim_BuzzerPwm
 3277              	.LVL372:
 116:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 3278              		.loc 1 116 0
 3279 00b0 C820     		movs	r0, #200
 3280 00b2 FFF7FEFF 		bl	HAL_Delay
 3281              	.LVL373:
 117:Src/mode.c    ****         break;
 3282              		.loc 1 117 0
 3283 00b6 2146     		mov	r1, r4
 3284 00b8 0A20     		movs	r0, #10
 3285 00ba FFF7FEFF 		bl	Tim_BuzzerPwm
 3286              	.LVL374:
 118:Src/mode.c    ****     case 9: //right turn
 3287              		.loc 1 118 0
 3288 00be B0E7     		b	.L262
 3289              	.LVL375:
 3290              	.L274:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 79


 120:Src/mode.c    ****         SetRunMode();
 3291              		.loc 1 120 0
 3292 00c0 0024     		movs	r4, #0
 3293 00c2 3F4B     		ldr	r3, .L286+8
 3294 00c4 1C70     		strb	r4, [r3]
 121:Src/mode.c    ****         Motion_Start();
 3295              		.loc 1 121 0
 3296 00c6 FFF7FEFF 		bl	SetRunMode
 3297              	.LVL376:
 122:Src/mode.c    ****         Motion_RightTurn();
 3298              		.loc 1 122 0
 3299 00ca FFF7FEFF 		bl	Motion_Start
 3300              	.LVL377:
 123:Src/mode.c    ****         Motion_End();
 3301              		.loc 1 123 0
 3302 00ce FFF7FEFF 		bl	Motion_RightTurn
 3303              	.LVL378:
 124:Src/mode.c    ****         motor_flag = FALSE;
 3304              		.loc 1 124 0
 3305 00d2 FFF7FEFF 		bl	Motion_End
 3306              	.LVL379:
 125:Src/mode.c    ****         HAL_Delay(500);
 3307              		.loc 1 125 0
 3308 00d6 3B4B     		ldr	r3, .L286+12
 3309 00d8 1C70     		strb	r4, [r3]
 126:Src/mode.c    ****         Flash_Write(start_address, (uint8_t *)&loger, sizeof(loger_t));
 3310              		.loc 1 126 0
 3311 00da 4FF4FA70 		mov	r0, #500
 3312 00de FFF7FEFF 		bl	HAL_Delay
 3313              	.LVL380:
 127:Src/mode.c    ****         Tim_BuzzerPwm(HZ_C_H, 300);
 3314              		.loc 1 127 0
 3315 00e2 49F64242 		movw	r2, #40002
 3316 00e6 3849     		ldr	r1, .L286+16
 3317 00e8 384B     		ldr	r3, .L286+20
 3318 00ea 1868     		ldr	r0, [r3]
 3319 00ec FFF7FEFF 		bl	Flash_Write
 3320              	.LVL381:
 128:Src/mode.c    ****         HAL_Delay(200);
 3321              		.loc 1 128 0
 3322 00f0 4FF49671 		mov	r1, #300
 3323 00f4 4C20     		movs	r0, #76
 3324 00f6 FFF7FEFF 		bl	Tim_BuzzerPwm
 3325              	.LVL382:
 129:Src/mode.c    ****         Tim_BuzzerPwm(HZ_NORMAL, 0);
 3326              		.loc 1 129 0
 3327 00fa C820     		movs	r0, #200
 3328 00fc FFF7FEFF 		bl	HAL_Delay
 3329              	.LVL383:
 130:Src/mode.c    ****         break;
 3330              		.loc 1 130 0
 3331 0100 2146     		mov	r1, r4
 3332 0102 0A20     		movs	r0, #10
 3333 0104 FFF7FEFF 		bl	Tim_BuzzerPwm
 3334              	.LVL384:
 131:Src/mode.c    ****     case 10: //circuit left
 3335              		.loc 1 131 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 80


 3336 0108 8BE7     		b	.L262
 3337              	.LVL385:
 3338              	.L275:
 133:Src/mode.c    ****         SetRunMode();
 3339              		.loc 1 133 0
 3340 010a 2D4B     		ldr	r3, .L286+8
 3341 010c 0022     		movs	r2, #0
 3342 010e 1A70     		strb	r2, [r3]
 134:Src/mode.c    ****         Circuit(2, 2, 3, 1);
 3343              		.loc 1 134 0
 3344 0110 FFF7FEFF 		bl	SetRunMode
 3345              	.LVL386:
 135:Src/mode.c    ****         break;
 3346              		.loc 1 135 0
 3347 0114 0123     		movs	r3, #1
 3348 0116 0322     		movs	r2, #3
 3349 0118 0221     		movs	r1, #2
 3350 011a 0846     		mov	r0, r1
 3351 011c FFF7FEFF 		bl	Circuit
 3352              	.LVL387:
 136:Src/mode.c    ****     case 11: //circuit right
 3353              		.loc 1 136 0
 3354 0120 7FE7     		b	.L262
 3355              	.LVL388:
 3356              	.L276:
 138:Src/mode.c    ****         SetRunMode();
 3357              		.loc 1 138 0
 3358 0122 274B     		ldr	r3, .L286+8
 3359 0124 0022     		movs	r2, #0
 3360 0126 1A70     		strb	r2, [r3]
 139:Src/mode.c    ****         Circuit(2, 2, 3, -1);
 3361              		.loc 1 139 0
 3362 0128 FFF7FEFF 		bl	SetRunMode
 3363              	.LVL389:
 140:Src/mode.c    ****         break;
 3364              		.loc 1 140 0
 3365 012c FF23     		movs	r3, #255
 3366 012e 0322     		movs	r2, #3
 3367 0130 0221     		movs	r1, #2
 3368 0132 0846     		mov	r0, r1
 3369 0134 FFF7FEFF 		bl	Circuit
 3370              	.LVL390:
 141:Src/mode.c    ****     //GREEN
 3371              		.loc 1 141 0
 3372 0138 73E7     		b	.L262
 3373              	.LVL391:
 3374              	.L277:
 144:Src/mode.c    ****         Turn45_Test(FRONT, LEFT, 0);
 3375              		.loc 1 144 0
 3376 013a 0020     		movs	r0, #0
 3377              	.LVL392:
 3378 013c 204B     		ldr	r3, .L286+8
 3379 013e 1870     		strb	r0, [r3]
 145:Src/mode.c    ****         //Turn135_Test(FRONT, LEFT, 0);
 3380              		.loc 1 145 0
 3381 0140 0246     		mov	r2, r0
 3382 0142 0121     		movs	r1, #1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 81


 3383 0144 FFF7FEFF 		bl	Turn45_Test
 3384              	.LVL393:
 147:Src/mode.c    ****     case 13: //right quarter turn
 3385              		.loc 1 147 0
 3386 0148 6BE7     		b	.L262
 3387              	.LVL394:
 3388              	.L278:
 149:Src/mode.c    ****         Turn45_Test(FRONT, RIGHT, 0);
 3389              		.loc 1 149 0
 3390 014a 0020     		movs	r0, #0
 3391              	.LVL395:
 3392 014c 1C4B     		ldr	r3, .L286+8
 3393 014e 1870     		strb	r0, [r3]
 150:Src/mode.c    ****         //Turn135_Test(FRONT, RIGHT, 0);
 3394              		.loc 1 150 0
 3395 0150 0246     		mov	r2, r0
 3396 0152 0221     		movs	r1, #2
 3397 0154 FFF7FEFF 		bl	Turn45_Test
 3398              	.LVL396:
 152:Src/mode.c    ****     case 14:
 3399              		.loc 1 152 0
 3400 0158 63E7     		b	.L262
 3401              	.LVL397:
 3402              	.L279:
 154:Src/mode.c    ****         Turn45_Test(LEFT, LEFT, 1);
 3403              		.loc 1 154 0
 3404 015a 194B     		ldr	r3, .L286+8
 3405 015c 0022     		movs	r2, #0
 3406 015e 1A70     		strb	r2, [r3]
 155:Src/mode.c    ****         //Turn135_Test(LEFT, LEFT, 1);
 3407              		.loc 1 155 0
 3408 0160 0122     		movs	r2, #1
 3409 0162 1146     		mov	r1, r2
 3410 0164 1046     		mov	r0, r2
 3411              	.LVL398:
 3412 0166 FFF7FEFF 		bl	Turn45_Test
 3413              	.LVL399:
 157:Src/mode.c    ****     case 15:
 3414              		.loc 1 157 0
 3415 016a 5AE7     		b	.L262
 3416              	.LVL400:
 3417              	.L280:
 159:Src/mode.c    ****         Turn45_Test(RIGHT, RIGHT, 1);
 3418              		.loc 1 159 0
 3419 016c 144B     		ldr	r3, .L286+8
 3420 016e 0022     		movs	r2, #0
 3421 0170 1A70     		strb	r2, [r3]
 160:Src/mode.c    ****         //Turn135_Test(RIGHT, RIGHT, 1);
 3422              		.loc 1 160 0
 3423 0172 0122     		movs	r2, #1
 3424 0174 0221     		movs	r1, #2
 3425 0176 0846     		mov	r0, r1
 3426              	.LVL401:
 3427 0178 FFF7FEFF 		bl	Turn45_Test
 3428              	.LVL402:
 162:Src/mode.c    ****     //MAGENTA
 3429              		.loc 1 162 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 82


 3430 017c 51E7     		b	.L262
 3431              	.LVL403:
 3432              	.L281:
 165:Src/mode.c    ****         TurnBig90_Test(LEFT);
 3433              		.loc 1 165 0
 3434 017e 104B     		ldr	r3, .L286+8
 3435 0180 0022     		movs	r2, #0
 3436 0182 1A70     		strb	r2, [r3]
 166:Src/mode.c    ****         break;
 3437              		.loc 1 166 0
 3438 0184 0120     		movs	r0, #1
 3439              	.LVL404:
 3440 0186 FFF7FEFF 		bl	TurnBig90_Test
 3441              	.LVL405:
 167:Src/mode.c    ****     case 17:
 3442              		.loc 1 167 0
 3443 018a 4AE7     		b	.L262
 3444              	.LVL406:
 3445              	.L282:
 169:Src/mode.c    ****         TurnBig90_Test(RIGHT);
 3446              		.loc 1 169 0
 3447 018c 0C4B     		ldr	r3, .L286+8
 3448 018e 0022     		movs	r2, #0
 3449 0190 1A70     		strb	r2, [r3]
 170:Src/mode.c    ****         break;
 3450              		.loc 1 170 0
 3451 0192 0220     		movs	r0, #2
 3452              	.LVL407:
 3453 0194 FFF7FEFF 		bl	TurnBig90_Test
 3454              	.LVL408:
 171:Src/mode.c    ****     case 18:
 3455              		.loc 1 171 0
 3456 0198 43E7     		b	.L262
 3457              	.LVL409:
 3458              	.L283:
 173:Src/mode.c    ****         TurnBig180_Test(LEFT);
 3459              		.loc 1 173 0
 3460 019a 094B     		ldr	r3, .L286+8
 3461 019c 0022     		movs	r2, #0
 3462 019e 1A70     		strb	r2, [r3]
 174:Src/mode.c    ****         //TurnV90_Test(LEFT);
 3463              		.loc 1 174 0
 3464 01a0 0120     		movs	r0, #1
 3465              	.LVL410:
 3466 01a2 FFF7FEFF 		bl	TurnBig180_Test
 3467              	.LVL411:
 176:Src/mode.c    ****     case 19:
 3468              		.loc 1 176 0
 3469 01a6 3CE7     		b	.L262
 3470              	.LVL412:
 3471              	.L284:
 178:Src/mode.c    ****         TurnBig180_Test(RIGHT);
 3472              		.loc 1 178 0
 3473 01a8 054B     		ldr	r3, .L286+8
 3474 01aa 0022     		movs	r2, #0
 3475 01ac 1A70     		strb	r2, [r3]
 179:Src/mode.c    ****         //TurnV90_Test(RIGHT);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 83


 3476              		.loc 1 179 0
 3477 01ae 0220     		movs	r0, #2
 3478              	.LVL413:
 3479 01b0 FFF7FEFF 		bl	TurnBig180_Test
 3480              	.LVL414:
 185:Src/mode.c    **** 
 3481              		.loc 1 185 0
 3482 01b4 35E7     		b	.L262
 3483              	.L287:
 3484 01b6 00BF     		.align	2
 3485              	.L286:
 3486 01b8 00000000 		.word	0
 3487 01bc 0000A042 		.word	1117782016
 3488 01c0 00000000 		.word	control_wall_flag
 3489 01c4 00000000 		.word	motor_flag
 3490 01c8 00000000 		.word	loger
 3491 01cc 00000000 		.word	start_address
 3492              		.cfi_endproc
 3493              	.LFE126:
 3495              		.section	.text.TurnV90_Test,"ax",%progbits
 3496              		.align	1
 3497              		.global	TurnV90_Test
 3498              		.syntax unified
 3499              		.thumb
 3500              		.thumb_func
 3501              		.fpu fpv4-sp-d16
 3503              	TurnV90_Test:
 3504              	.LFB147:
 972:Src/mode.c    **** 
 973:Src/mode.c    **** void TurnV90_Test(int8_t dir)
 974:Src/mode.c    **** {
 3505              		.loc 1 974 0
 3506              		.cfi_startproc
 3507              		@ args = 0, pretend = 0, frame = 0
 3508              		@ frame_needed = 0, uses_anonymous_args = 0
 3509              	.LVL415:
 3510 0000 10B5     		push	{r4, lr}
 3511              	.LCFI47:
 3512              		.cfi_def_cfa_offset 8
 3513              		.cfi_offset 4, -8
 3514              		.cfi_offset 14, -4
 3515 0002 2DED028B 		vpush.64	{d8}
 3516              	.LCFI48:
 3517              		.cfi_def_cfa_offset 16
 3518              		.cfi_offset 80, -16
 3519              		.cfi_offset 81, -12
 3520 0006 0446     		mov	r4, r0
 975:Src/mode.c    ****     SetRunMode();
 3521              		.loc 1 975 0
 3522 0008 FFF7FEFF 		bl	SetRunMode
 3523              	.LVL416:
 976:Src/mode.c    ****     Motion_FastStart(1, VELO_F);
 3524              		.loc 1 976 0
 3525 000c 9FED248A 		vldr.32	s16, .L293
 3526 0010 B0EE480A 		vmov.f32	s0, s16
 3527 0014 0120     		movs	r0, #1
 3528 0016 FFF7FEFF 		bl	Motion_FastStart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 84


 3529              	.LVL417:
 977:Src/mode.c    ****     Motion_Adjust(1,VELO_F);
 3530              		.loc 1 977 0
 3531 001a B0EE480A 		vmov.f32	s0, s16
 3532 001e 0120     		movs	r0, #1
 3533 0020 FFF7FEFF 		bl	Motion_Adjust
 3534              	.LVL418:
 978:Src/mode.c    ****     if (dir == LEFT)
 3535              		.loc 1 978 0
 3536 0024 012C     		cmp	r4, #1
 3537 0026 29D0     		beq	.L292
 979:Src/mode.c    ****     {
 980:Src/mode.c    ****         Motion_InLeft45Turn();
 981:Src/mode.c    ****         Motion_Diagonal(1);
 982:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 983:Src/mode.c    ****         Motion_Diagonal(1);
 984:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 985:Src/mode.c    ****     }
 986:Src/mode.c    ****     else
 987:Src/mode.c    ****     {
 988:Src/mode.c    ****         Motion_InRight45Turn();
 3538              		.loc 1 988 0
 3539 0028 FFF7FEFF 		bl	Motion_InRight45Turn
 3540              	.LVL419:
 989:Src/mode.c    ****         Motion_Diagonal(1);
 3541              		.loc 1 989 0
 3542 002c 0120     		movs	r0, #1
 3543 002e FFF7FEFF 		bl	Motion_Diagonal
 3544              	.LVL420:
 990:Src/mode.c    ****         Motion_FastRightTurn(T_V90, 800.0f);
 3545              		.loc 1 990 0
 3546 0032 9FED1B8A 		vldr.32	s16, .L293
 3547 0036 B0EE480A 		vmov.f32	s0, s16
 3548 003a 0720     		movs	r0, #7
 3549 003c FFF7FEFF 		bl	Motion_FastRightTurn
 3550              	.LVL421:
 991:Src/mode.c    ****         Motion_Diagonal(1);
 3551              		.loc 1 991 0
 3552 0040 0120     		movs	r0, #1
 3553 0042 FFF7FEFF 		bl	Motion_Diagonal
 3554              	.LVL422:
 992:Src/mode.c    ****         Motion_OutRight45Turn(VELO_F);
 3555              		.loc 1 992 0
 3556 0046 B0EE480A 		vmov.f32	s0, s16
 3557 004a FFF7FEFF 		bl	Motion_OutRight45Turn
 3558              	.LVL423:
 3559              	.L290:
 993:Src/mode.c    ****     }
 994:Src/mode.c    ****     Motion_FastGoal(1, VELO_F);
 3560              		.loc 1 994 0
 3561 004e 9FED140A 		vldr.32	s0, .L293
 3562 0052 0120     		movs	r0, #1
 3563 0054 FFF7FEFF 		bl	Motion_FastGoal
 3564              	.LVL424:
 995:Src/mode.c    ****     motor_flag = FALSE;
 3565              		.loc 1 995 0
 3566 0058 0024     		movs	r4, #0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 85


 3567 005a 124B     		ldr	r3, .L293+4
 3568 005c 1C70     		strb	r4, [r3]
 996:Src/mode.c    ****     Tim_BuzzerPwm(HZ_C_H, 300);
 3569              		.loc 1 996 0
 3570 005e 4FF49671 		mov	r1, #300
 3571 0062 4C20     		movs	r0, #76
 3572 0064 FFF7FEFF 		bl	Tim_BuzzerPwm
 3573              	.LVL425:
 997:Src/mode.c    ****     HAL_Delay(200);
 3574              		.loc 1 997 0
 3575 0068 C820     		movs	r0, #200
 3576 006a FFF7FEFF 		bl	HAL_Delay
 3577              	.LVL426:
 998:Src/mode.c    ****     Tim_BuzzerPwm(HZ_NORMAL, 0);
 3578              		.loc 1 998 0
 3579 006e 2146     		mov	r1, r4
 3580 0070 0A20     		movs	r0, #10
 3581 0072 FFF7FEFF 		bl	Tim_BuzzerPwm
 3582              	.LVL427:
 999:Src/mode.c    **** }...
 3583              		.loc 1 999 0
 3584 0076 BDEC028B 		vldm	sp!, {d8}
 3585              	.LCFI49:
 3586              		.cfi_remember_state
 3587              		.cfi_restore 80
 3588              		.cfi_restore 81
 3589              		.cfi_def_cfa_offset 8
 3590 007a 10BD     		pop	{r4, pc}
 3591              	.L292:
 3592              	.LCFI50:
 3593              		.cfi_restore_state
 980:Src/mode.c    ****         Motion_InLeft45Turn();
 3594              		.loc 1 980 0
 3595 007c FFF7FEFF 		bl	Motion_InLeft45Turn
 3596              	.LVL428:
 981:Src/mode.c    ****         Motion_Diagonal(1);
 3597              		.loc 1 981 0
 3598 0080 0120     		movs	r0, #1
 3599 0082 FFF7FEFF 		bl	Motion_Diagonal
 3600              	.LVL429:
 982:Src/mode.c    ****         Motion_FastLeftTurn(T_V90, 800.0f);
 3601              		.loc 1 982 0
 3602 0086 B0EE480A 		vmov.f32	s0, s16
 3603 008a 0720     		movs	r0, #7
 3604 008c FFF7FEFF 		bl	Motion_FastLeftTurn
 3605              	.LVL430:
 983:Src/mode.c    ****         Motion_Diagonal(1);
 3606              		.loc 1 983 0
 3607 0090 0120     		movs	r0, #1
 3608 0092 FFF7FEFF 		bl	Motion_Diagonal
 3609              	.LVL431:
 984:Src/mode.c    ****         Motion_OutLeft45Turn(VELO_F);
 3610              		.loc 1 984 0
 3611 0096 B0EE480A 		vmov.f32	s0, s16
 3612 009a FFF7FEFF 		bl	Motion_OutLeft45Turn
 3613              	.LVL432:
 3614 009e D6E7     		b	.L290
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 86


 3615              	.L294:
 3616              		.align	2
 3617              	.L293:
 3618 00a0 00004844 		.word	1145569280
 3619 00a4 00000000 		.word	motor_flag
 3620              		.cfi_endproc
 3621              	.LFE147:
 3623              		.global	gy
 3624              		.global	gx
 3625              		.section	.data.gx,"aw",%progbits
 3626              		.set	.LANCHOR1,. + 0
 3629              	gx:
 3630 0000 07       		.byte	7
 3631              		.section	.data.gy,"aw",%progbits
 3632              		.set	.LANCHOR0,. + 0
 3635              	gy:
 3636 0000 07       		.byte	7
 3637              		.section	.rodata.Mode_Select.str1.4,"aMS",%progbits,1
 3638              		.align	2
 3639              	.LC0:
 3640 0000 25640D00 		.ascii	"%d\015\000"
 3641              		.section	.rodata.PrintMotion.str1.4,"aMS",%progbits,1
 3642              		.align	2
 3643              	.LC7:
 3644 0000 0D0A5354 		.ascii	"\015\012START:%d\011v_start:%ld\011v_end:%ld\015\012"
 3644      4152543A 
 3644      25640976 
 3644      5F737461 
 3644      72743A25 
 3645 0022 00       		.ascii	"\000"
 3646 0023 00       		.space	1
 3647              	.LC8:
 3648 0024 4C454654 		.ascii	"LEFT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 3648      3A534541 
 3648      52434809 
 3648      765F7374 
 3648      6172743A 
 3649              	.LC9:
 3650 0048 4C454654 		.ascii	"LEFT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 3650      3A545F39 
 3650      3009765F 
 3650      73746172 
 3650      743A256C 
 3651 006a 0000     		.space	2
 3652              	.LC10:
 3653 006c 4C454654 		.ascii	"LEFT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 3653      3A545F31 
 3653      38300976 
 3653      5F737461 
 3653      72743A25 
 3654 008f 00       		.space	1
 3655              	.LC11:
 3656 0090 4C454654 		.ascii	"LEFT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3656      3A545F34 
 3656      35494E09 
 3656      765F7374 
 3656      6172743A 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 87


 3657              	.LC12:
 3658 00b4 4C454654 		.ascii	"LEFT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3658      3A545F34 
 3658      354F5554 
 3658      09765F73 
 3658      74617274 
 3659 00d9 000000   		.space	3
 3660              	.LC13:
 3661 00dc 4C454654 		.ascii	"LEFT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3661      3A545F31 
 3661      3335494E 
 3661      09765F73 
 3661      74617274 
 3662 0101 000000   		.space	3
 3663              	.LC14:
 3664 0104 4C454654 		.ascii	"LEFT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3664      3A545F31 
 3664      33354F55 
 3664      5409765F 
 3664      73746172 
 3665 012a 0000     		.space	2
 3666              	.LC15:
 3667 012c 4C454654 		.ascii	"LEFT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 3667      3A545F56 
 3667      39300976 
 3667      5F737461 
 3667      72743A25 
 3668 014f 00       		.space	1
 3669              	.LC16:
 3670 0150 52494748 		.ascii	"RIGHT:SEARCH\011v_start:%ld\011v_end:%ld\012\015\000"
 3670      543A5345 
 3670      41524348 
 3670      09765F73 
 3670      74617274 
 3671 0175 000000   		.space	3
 3672              	.LC17:
 3673 0178 52494748 		.ascii	"RIGHT:T_90\011v_start:%ld\011v_end:%ld\012\015\000"
 3673      543A545F 
 3673      39300976 
 3673      5F737461 
 3673      72743A25 
 3674 019b 00       		.space	1
 3675              	.LC18:
 3676 019c 52494748 		.ascii	"RIGHT:T_180\011v_start:%ld\011v_end:%ld\012\015\000"
 3676      543A545F 
 3676      31383009 
 3676      765F7374 
 3676      6172743A 
 3677              	.LC19:
 3678 01c0 52494748 		.ascii	"RIGHT:T_45IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3678      543A545F 
 3678      3435494E 
 3678      09765F73 
 3678      74617274 
 3679 01e5 000000   		.space	3
 3680              	.LC20:
 3681 01e8 52494748 		.ascii	"RIGHT:T_45OUT\011v_start:%ld\011v_end:%ld\012\015\000"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 88


 3681      543A545F 
 3681      34354F55 
 3681      5409765F 
 3681      73746172 
 3682 020e 0000     		.space	2
 3683              	.LC21:
 3684 0210 52494748 		.ascii	"RIGHT:T_135IN\011v_start:%ld\011v_end:%ld\012\015\000"
 3684      543A545F 
 3684      31333549 
 3684      4E09765F 
 3684      73746172 
 3685 0236 0000     		.space	2
 3686              	.LC22:
 3687 0238 52494748 		.ascii	"RIGHT:T_135OUT\011v_start:%ld\011v_end:%ld\012\015\000"
 3687      543A545F 
 3687      3133354F 
 3687      55540976 
 3687      5F737461 
 3688 025f 00       		.space	1
 3689              	.LC23:
 3690 0260 52494748 		.ascii	"RIGHT:T_V90\011v_start:%ld\011v_end:%ld\012\015\000"
 3690      543A545F 
 3690      56393009 
 3690      765F7374 
 3690      6172743A 
 3691              	.LC24:
 3692 0284 46524F4E 		.ascii	"FRONT:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3692      543A2564 
 3692      09765F73 
 3692      74617274 
 3692      3A256C64 
 3693 02a5 000000   		.space	3
 3694              	.LC25:
 3695 02a8 44494147 		.ascii	"DIAGONAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3695      4F4E414C 
 3695      3A256409 
 3695      765F7374 
 3695      6172743A 
 3696              	.LC26:
 3697 02cc 474F414C 		.ascii	"GOAL:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3697      3A256409 
 3697      765F7374 
 3697      6172743A 
 3697      256C6409 
 3698              	.LC27:
 3699 02ec 41444A55 		.ascii	"ADJUST:%d\011v_start:%ld\011v_end:%ld\012\015\000"
 3699      53543A25 
 3699      6409765F 
 3699      73746172 
 3699      743A256C 
 3700              		.section	.rodata.PrintOutPut.str1.4,"aMS",%progbits,1
 3701              		.align	2
 3702              	.LC2:
 3703 0000 25640925 		.ascii	"%d\011%d\011%d\011%d\015\012\000"
 3703      64092564 
 3703      0925640D 
 3703      0A00
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 89


 3704              		.section	.rodata.PrintWallData.str1.4,"aMS",%progbits,1
 3705              		.align	2
 3706              	.LC3:
 3707 0000 0D00     		.ascii	"\015\000"
 3708 0002 0000     		.space	2
 3709              	.LC4:
 3710 0004 2D2D2D00 		.ascii	"---\000"
 3711              	.LC5:
 3712 0008 2B0D00   		.ascii	"+\015\000"
 3713 000b 00       		.space	1
 3714              	.LC6:
 3715 000c 20202000 		.ascii	"   \000"
 3716              		.section	.rodata.SensorCheck.str1.4,"aMS",%progbits,1
 3717              		.align	2
 3718              	.LC1:
 3719 0000 6C3A2564 		.ascii	"l:%d fl:%d f:%d fr:%d r:%d \015\000"
 3719      20666C3A 
 3719      25642066 
 3719      3A256420 
 3719      66723A25 
 3720              		.text
 3721              	.Letext0:
 3722              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3723              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3724              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3725              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3726              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 3727              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3728              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 3729              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 3730              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 3731              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3732              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3733              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3734              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 3735              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 3736              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 3737              		.file 17 "Inc/spi.h"
 3738              		.file 18 "Inc/tim.h"
 3739              		.file 19 "Inc/adc.h"
 3740              		.file 20 "Inc/MazeCon.h"
 3741              		.file 21 "Inc/flash.h"
 3742              		.file 22 "Inc/motion.h"
 3743              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3744              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 3745              		.file 25 "<built-in>"
 3746              		.file 26 "Inc/Maze.h"
 3747              		.file 27 "Inc/Map.h"
 3748              		.file 28 "Inc/control.h"
 3749              		.file 29 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 90


DEFINED SYMBOLS
                            *ABS*:00000000 mode.c
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:18     .text.Mode_Select:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:25     .text.Mode_Select:00000000 Mode_Select
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:242    .text.Mode_Select:00000150 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:253    .text.SensorCheck:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:260    .text.SensorCheck:00000000 SensorCheck
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:389    .text.SensorCheck:000000c4 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:403    .text.SetRunMode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:410    .text.SetRunMode:00000000 SetRunMode
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:481    .text.SetRunMode:00000060 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:487    .text.Get_WallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:494    .text.Get_WallData:00000000 Get_WallData
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:512    .text.Get_WallData:0000000e $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:516    .text.Get_WallData:00000012 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:613    .text.Get_WallData:00000078 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:620    .text.SearchRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:627    .text.SearchRun:00000000 SearchRun
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:931    .text.SearchRun:0000021c $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:942    .text.Mode_FastRun:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:949    .text.Mode_FastRun:00000000 Mode_FastRun
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1120   .text.Mode_FastRun:0000011c $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1131   .text.Mode_FastRun:00000148 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1249   .text.Mode_FastRun:00000218 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1258   .text.CheckStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1265   .text.CheckStraight:00000000 CheckStraight
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1347   .text.CheckStraight:0000005c $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1355   .text.CheckFastStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1362   .text.CheckFastStraight:00000000 CheckFastStraight
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1456   .text.CheckFastStraight:00000080 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1465   .text.CheckDiagonal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1472   .text.CheckDiagonal:00000000 CheckDiagonal
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1536   .text.CheckDiagonal:00000054 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1544   .text.CheckTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1551   .text.CheckTurn:00000000 CheckTurn
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1634   .text.CheckTurn:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1642   .text.PrintOutPut:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1649   .text.PrintOutPut:00000000 PrintOutPut
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1719   .text.PrintOutPut:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1726   .text.PrintWallData:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1733   .text.PrintWallData:00000000 PrintWallData
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1902   .text.PrintWallData:000000bc $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1911   .text.PrintMotion:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1918   .text.PrintMotion:00000000 PrintMotion
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1971   .text.PrintMotion:0000003c $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1982   .text.PrintMotion:00000068 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1990   .text.PrintMotion:00000072 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:1998   .text.PrintMotion:0000007a $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2093   .text.PrintMotion:0000010c $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2101   .text.PrintMotion:00000114 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2247   .text.PrintMotion:000001f0 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2273   .text.AdjustStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2280   .text.AdjustStraight:00000000 AdjustStraight
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2336   .text.AdjustStraight:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2343   .text.AdjustTurn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2350   .text.AdjustTurn:00000000 AdjustTurn
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2406   .text.AdjustTurn:0000004c $d
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 91


C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2413   .text.Circuit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2420   .text.Circuit:00000000 Circuit
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2555   .text.Circuit:0000008c $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2560   .text.Turn45_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2567   .text.Turn45_Test:00000000 Turn45_Test
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2721   .text.Turn45_Test:000000cc $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2729   .text.Turn135_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2736   .text.Turn135_Test:00000000 Turn135_Test
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2910   .text.Turn135_Test:000000fc $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2918   .text.TurnBig90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:2925   .text.TurnBig90_Test:00000000 TurnBig90_Test
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3012   .text.TurnBig90_Test:00000070 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3018   .text.TurnBig180_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3025   .text.TurnBig180_Test:00000000 TurnBig180_Test
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3114   .text.TurnBig180_Test:00000074 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3120   .text.Mode_Mouse:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3127   .text.Mode_Mouse:00000000 Mode_Mouse
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3144   .text.Mode_Mouse:0000000a $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3164   .text.Mode_Mouse:0000001e $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3486   .text.Mode_Mouse:000001b8 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3496   .text.TurnV90_Test:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3503   .text.TurnV90_Test:00000000 TurnV90_Test
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3618   .text.TurnV90_Test:000000a0 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3635   .data.gy:00000000 gy
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3629   .data.gx:00000000 gx
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3638   .rodata.Mode_Select.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3642   .rodata.PrintMotion.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3701   .rodata.PrintOutPut.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3705   .rodata.PrintWallData.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s:3717   .rodata.SensorCheck.str1.4:00000000 $d

UNDEFINED SYMBOLS
Control_ResetVelo
Tim_BuzzerPwm
HAL_Delay
Gpio_FullColor
Gpio_SideLed
printf
accel
gyro_y
enc
Adc_IrSensorStart
HAL_GPIO_WritePin
Adc_IrSensorFinish
sen_l
sen_fl
sen_front
sen_fr
sen_r
Spi_GyroReset
motor_flag
Map_Init
Map_InitFast
Motion_Start
Map_addWall
Map_DelWall
Motion_End
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cczAdaUd.s 			page 92


Flash_Write
Maze_UpdatePosition
Motion_Restart
Maze_UpdateStepMap
Maze_GetNextMotion
Motion_Switch
control_wall_flag
counter_s
start_address
Flash_Load
Maze_UpdateStepMapEx
Motion_MaxVeloSet
Maze_GetNextMotionEx
Maze_Compress
Motion_FastStart
Motion_FastLeftTurn
Motion_FastStraight
Motion_DiagonalLeft
Motion_DiagonalRight
Motion_FastRightTurn
Motion_FastGoal
Motion_Adjust
Tim_MotorBrake
Motion_Straight
loger
Motion_DiagonalStart
Motion_DiagonalStop
Motion_TestTurn
gyro_z
puts
putchar
Tim_MotorPwm
Motion_LeftTurn
Motion_RightTurn
Motion_InLeft45Turn
Motion_InRight45Turn
Motion_Diagonal
Motion_OutLeft45Turn
Motion_OutRight45Turn
Motion_Left90Turn
Motion_Right90Turn
