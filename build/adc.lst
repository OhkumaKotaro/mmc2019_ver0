ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB126:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 2


  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** #include "stdint.h"
  48:Src/adc.c     **** //define
  49:Src/adc.c     **** #define OFF_VALUE 0
  50:Src/adc.c     **** #define FRONT_VALUE 1
  51:Src/adc.c     **** #define SIDE_VALUE 2
  52:Src/adc.c     **** #define FINISH_CONVERT 3
  53:Src/adc.c     **** #define IRSENSOR_OFF 4
  54:Src/adc.c     **** 
  55:Src/adc.c     **** #define ADC_CONVERT_DATA_SIZE ((uint32_t)4)
  56:Src/adc.c     **** 
  57:Src/adc.c     **** #define TRUE 1
  58:Src/adc.c     **** #define FALSE 0
  59:Src/adc.c     **** 
  60:Src/adc.c     **** //valuable
  61:Src/adc.c     **** sensor_t sen_l;
  62:Src/adc.c     **** sensor_t sen_fl;
  63:Src/adc.c     **** sensor_t sen_front;
  64:Src/adc.c     **** sensor_t sen_fr;
  65:Src/adc.c     **** sensor_t sen_r;
  66:Src/adc.c     **** int16_t sen_front_reference_f;
  67:Src/adc.c     **** 
  68:Src/adc.c     **** uint16_t ADCBuff[ADC_CONVERT_DATA_SIZE];
  69:Src/adc.c     **** uint16_t ADCOffData[ADC_CONVERT_DATA_SIZE];
  70:Src/adc.c     **** uint16_t ADCOntData[ADC_CONVERT_DATA_SIZE];
  71:Src/adc.c     **** int16_t adc_counter;
  72:Src/adc.c     **** uint8_t cnt_100ms;
  73:Src/adc.c     **** /* USER CODE END 0 */
  74:Src/adc.c     **** 
  75:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  76:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  77:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
  78:Src/adc.c     **** 
  79:Src/adc.c     **** /* ADC1 init function */
  80:Src/adc.c     **** void MX_ADC1_Init(void)
  81:Src/adc.c     **** {
  28              		.loc 1 81 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 3


  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  82:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  83:Src/adc.c     **** 
  84:Src/adc.c     ****   /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conv
  85:Src/adc.c     ****     */
  86:Src/adc.c     ****   hadc1.Instance = ADC1;
  39              		.loc 1 86 0
  40 0004 1548     		ldr	r0, .L7
  41 0006 164B     		ldr	r3, .L7+4
  42 0008 0360     		str	r3, [r0]
  87:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  43              		.loc 1 87 0
  44 000a 0023     		movs	r3, #0
  45 000c 4360     		str	r3, [r0, #4]
  88:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  46              		.loc 1 88 0
  47 000e 8360     		str	r3, [r0, #8]
  89:Src/adc.c     ****   hadc1.Init.ScanConvMode = DISABLE;
  48              		.loc 1 89 0
  49 0010 0361     		str	r3, [r0, #16]
  90:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  50              		.loc 1 90 0
  51 0012 8361     		str	r3, [r0, #24]
  91:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  52              		.loc 1 91 0
  53 0014 0362     		str	r3, [r0, #32]
  92:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  54              		.loc 1 92 0
  55 0016 C362     		str	r3, [r0, #44]
  93:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  56              		.loc 1 93 0
  57 0018 124A     		ldr	r2, .L7+8
  58 001a 8262     		str	r2, [r0, #40]
  94:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  59              		.loc 1 94 0
  60 001c C360     		str	r3, [r0, #12]
  95:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  61              		.loc 1 95 0
  62 001e 0122     		movs	r2, #1
  63 0020 C261     		str	r2, [r0, #28]
  96:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  64              		.loc 1 96 0
  65 0022 0363     		str	r3, [r0, #48]
  97:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  66              		.loc 1 97 0
  67 0024 4261     		str	r2, [r0, #20]
  98:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  68              		.loc 1 98 0
  69 0026 FFF7FEFF 		bl	HAL_ADC_Init
  70              	.LVL0:
  71 002a 68B9     		cbnz	r0, .L5
  72              	.L2:
  99:Src/adc.c     ****   {
 100:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 4


 101:Src/adc.c     ****   }
 102:Src/adc.c     **** 
 103:Src/adc.c     ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 104:Src/adc.c     ****     */
 105:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_15;
  73              		.loc 1 105 0
  74 002c 0F23     		movs	r3, #15
  75 002e 0093     		str	r3, [sp]
 106:Src/adc.c     ****   sConfig.Rank = 1;
  76              		.loc 1 106 0
  77 0030 0123     		movs	r3, #1
  78 0032 0193     		str	r3, [sp, #4]
 107:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
  79              		.loc 1 107 0
  80 0034 0023     		movs	r3, #0
  81 0036 0293     		str	r3, [sp, #8]
 108:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  82              		.loc 1 108 0
  83 0038 6946     		mov	r1, sp
  84 003a 0848     		ldr	r0, .L7
  85 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  86              	.LVL1:
  87 0040 38B9     		cbnz	r0, .L6
  88              	.L1:
 109:Src/adc.c     ****   {
 110:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 111:Src/adc.c     ****   }
 112:Src/adc.c     **** }
  89              		.loc 1 112 0
  90 0042 05B0     		add	sp, sp, #20
  91              	.LCFI2:
  92              		.cfi_remember_state
  93              		.cfi_def_cfa_offset 4
  94              		@ sp needed
  95 0044 5DF804FB 		ldr	pc, [sp], #4
  96              	.L5:
  97              	.LCFI3:
  98              		.cfi_restore_state
 100:Src/adc.c     ****   }
  99              		.loc 1 100 0
 100 0048 6421     		movs	r1, #100
 101 004a 0748     		ldr	r0, .L7+12
 102 004c FFF7FEFF 		bl	_Error_Handler
 103              	.LVL2:
 104 0050 ECE7     		b	.L2
 105              	.L6:
 110:Src/adc.c     ****   }
 106              		.loc 1 110 0
 107 0052 6E21     		movs	r1, #110
 108 0054 0448     		ldr	r0, .L7+12
 109 0056 FFF7FEFF 		bl	_Error_Handler
 110              	.LVL3:
 111              		.loc 1 112 0
 112 005a F2E7     		b	.L1
 113              	.L8:
 114              		.align	2
 115              	.L7:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 5


 116 005c 00000000 		.word	hadc1
 117 0060 00200140 		.word	1073815552
 118 0064 0100000F 		.word	251658241
 119 0068 00000000 		.word	.LC0
 120              		.cfi_endproc
 121              	.LFE126:
 123              		.section	.text.MX_ADC2_Init,"ax",%progbits
 124              		.align	1
 125              		.global	MX_ADC2_Init
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	MX_ADC2_Init:
 132              	.LFB127:
 113:Src/adc.c     **** /* ADC2 init function */
 114:Src/adc.c     **** void MX_ADC2_Init(void)
 115:Src/adc.c     **** {
 133              		.loc 1 115 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 16
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 00B5     		push	{lr}
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 14, -4
 141 0002 85B0     		sub	sp, sp, #20
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 24
 116:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 117:Src/adc.c     **** 
 118:Src/adc.c     ****   /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conv
 119:Src/adc.c     ****     */
 120:Src/adc.c     ****   hadc2.Instance = ADC2;
 144              		.loc 1 120 0
 145 0004 2C48     		ldr	r0, .L21
 146 0006 2D4B     		ldr	r3, .L21+4
 147 0008 0360     		str	r3, [r0]
 121:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 148              		.loc 1 121 0
 149 000a 0022     		movs	r2, #0
 150 000c 4260     		str	r2, [r0, #4]
 122:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_10B;
 151              		.loc 1 122 0
 152 000e 4FF08073 		mov	r3, #16777216
 153 0012 8360     		str	r3, [r0, #8]
 123:Src/adc.c     ****   hadc2.Init.ScanConvMode = ENABLE;
 154              		.loc 1 123 0
 155 0014 0123     		movs	r3, #1
 156 0016 0361     		str	r3, [r0, #16]
 124:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 157              		.loc 1 124 0
 158 0018 8361     		str	r3, [r0, #24]
 125:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 159              		.loc 1 125 0
 160 001a 0262     		str	r2, [r0, #32]
 126:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 6


 161              		.loc 1 126 0
 162 001c C262     		str	r2, [r0, #44]
 127:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 163              		.loc 1 127 0
 164 001e 2849     		ldr	r1, .L21+8
 165 0020 8162     		str	r1, [r0, #40]
 128:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 166              		.loc 1 128 0
 167 0022 C260     		str	r2, [r0, #12]
 129:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 4;
 168              		.loc 1 129 0
 169 0024 0422     		movs	r2, #4
 170 0026 C261     		str	r2, [r0, #28]
 130:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 171              		.loc 1 130 0
 172 0028 0363     		str	r3, [r0, #48]
 131:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 173              		.loc 1 131 0
 174 002a 4361     		str	r3, [r0, #20]
 132:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 175              		.loc 1 132 0
 176 002c FFF7FEFF 		bl	HAL_ADC_Init
 177              	.LVL4:
 178 0030 40BB     		cbnz	r0, .L16
 179              	.L10:
 133:Src/adc.c     ****   {
 134:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 135:Src/adc.c     ****   }
 136:Src/adc.c     **** 
 137:Src/adc.c     ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 138:Src/adc.c     ****     */
 139:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 180              		.loc 1 139 0
 181 0032 0223     		movs	r3, #2
 182 0034 0093     		str	r3, [sp]
 140:Src/adc.c     ****   sConfig.Rank = 1;
 183              		.loc 1 140 0
 184 0036 0123     		movs	r3, #1
 185 0038 0193     		str	r3, [sp, #4]
 141:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 186              		.loc 1 141 0
 187 003a 0023     		movs	r3, #0
 188 003c 0293     		str	r3, [sp, #8]
 142:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 189              		.loc 1 142 0
 190 003e 6946     		mov	r1, sp
 191 0040 1D48     		ldr	r0, .L21
 192 0042 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 193              	.LVL5:
 194 0046 10BB     		cbnz	r0, .L17
 195              	.L11:
 143:Src/adc.c     ****   {
 144:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 145:Src/adc.c     ****   }
 146:Src/adc.c     **** 
 147:Src/adc.c     ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 148:Src/adc.c     ****     */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 7


 149:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 196              		.loc 1 149 0
 197 0048 0323     		movs	r3, #3
 198 004a 0093     		str	r3, [sp]
 150:Src/adc.c     ****   sConfig.Rank = 2;
 199              		.loc 1 150 0
 200 004c 0223     		movs	r3, #2
 201 004e 0193     		str	r3, [sp, #4]
 151:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 202              		.loc 1 151 0
 203 0050 6946     		mov	r1, sp
 204 0052 1948     		ldr	r0, .L21
 205 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 206              	.LVL6:
 207 0058 F0B9     		cbnz	r0, .L18
 208              	.L12:
 152:Src/adc.c     ****   {
 153:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 154:Src/adc.c     ****   }
 155:Src/adc.c     **** 
 156:Src/adc.c     ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 157:Src/adc.c     ****     */
 158:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_10;
 209              		.loc 1 158 0
 210 005a 0A23     		movs	r3, #10
 211 005c 0093     		str	r3, [sp]
 159:Src/adc.c     ****   sConfig.Rank = 3;
 212              		.loc 1 159 0
 213 005e 0323     		movs	r3, #3
 214 0060 0193     		str	r3, [sp, #4]
 160:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 215              		.loc 1 160 0
 216 0062 6946     		mov	r1, sp
 217 0064 1448     		ldr	r0, .L21
 218 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 219              	.LVL7:
 220 006a D0B9     		cbnz	r0, .L19
 221              	.L13:
 161:Src/adc.c     ****   {
 162:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 163:Src/adc.c     ****   }
 164:Src/adc.c     **** 
 165:Src/adc.c     ****   /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its
 166:Src/adc.c     ****     */
 167:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_11;
 222              		.loc 1 167 0
 223 006c 0B23     		movs	r3, #11
 224 006e 0093     		str	r3, [sp]
 168:Src/adc.c     ****   sConfig.Rank = 4;
 225              		.loc 1 168 0
 226 0070 0423     		movs	r3, #4
 227 0072 0193     		str	r3, [sp, #4]
 169:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 228              		.loc 1 169 0
 229 0074 6946     		mov	r1, sp
 230 0076 1048     		ldr	r0, .L21
 231 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 8


 232              	.LVL8:
 233 007c B0B9     		cbnz	r0, .L20
 234              	.L9:
 170:Src/adc.c     ****   {
 171:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 172:Src/adc.c     ****   }
 173:Src/adc.c     **** }
 235              		.loc 1 173 0
 236 007e 05B0     		add	sp, sp, #20
 237              	.LCFI6:
 238              		.cfi_remember_state
 239              		.cfi_def_cfa_offset 4
 240              		@ sp needed
 241 0080 5DF804FB 		ldr	pc, [sp], #4
 242              	.L16:
 243              	.LCFI7:
 244              		.cfi_restore_state
 134:Src/adc.c     ****   }
 245              		.loc 1 134 0
 246 0084 8621     		movs	r1, #134
 247 0086 0F48     		ldr	r0, .L21+12
 248 0088 FFF7FEFF 		bl	_Error_Handler
 249              	.LVL9:
 250 008c D1E7     		b	.L10
 251              	.L17:
 144:Src/adc.c     ****   }
 252              		.loc 1 144 0
 253 008e 9021     		movs	r1, #144
 254 0090 0C48     		ldr	r0, .L21+12
 255 0092 FFF7FEFF 		bl	_Error_Handler
 256              	.LVL10:
 257 0096 D7E7     		b	.L11
 258              	.L18:
 153:Src/adc.c     ****   }
 259              		.loc 1 153 0
 260 0098 9921     		movs	r1, #153
 261 009a 0A48     		ldr	r0, .L21+12
 262 009c FFF7FEFF 		bl	_Error_Handler
 263              	.LVL11:
 264 00a0 DBE7     		b	.L12
 265              	.L19:
 162:Src/adc.c     ****   }
 266              		.loc 1 162 0
 267 00a2 A221     		movs	r1, #162
 268 00a4 0748     		ldr	r0, .L21+12
 269 00a6 FFF7FEFF 		bl	_Error_Handler
 270              	.LVL12:
 271 00aa DFE7     		b	.L13
 272              	.L20:
 171:Src/adc.c     ****   }
 273              		.loc 1 171 0
 274 00ac AB21     		movs	r1, #171
 275 00ae 0548     		ldr	r0, .L21+12
 276 00b0 FFF7FEFF 		bl	_Error_Handler
 277              	.LVL13:
 278              		.loc 1 173 0
 279 00b4 E3E7     		b	.L9
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 9


 280              	.L22:
 281 00b6 00BF     		.align	2
 282              	.L21:
 283 00b8 00000000 		.word	hadc2
 284 00bc 00210140 		.word	1073815808
 285 00c0 0100000F 		.word	251658241
 286 00c4 00000000 		.word	.LC0
 287              		.cfi_endproc
 288              	.LFE127:
 290              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_ADC_MspInit
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	HAL_ADC_MspInit:
 299              	.LFB128:
 174:Src/adc.c     **** 
 175:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef *adcHandle)
 176:Src/adc.c     **** {
 300              		.loc 1 176 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 32
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              	.LVL14:
 305 0000 70B5     		push	{r4, r5, r6, lr}
 306              	.LCFI8:
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 4, -16
 309              		.cfi_offset 5, -12
 310              		.cfi_offset 6, -8
 311              		.cfi_offset 14, -4
 312 0002 88B0     		sub	sp, sp, #32
 313              	.LCFI9:
 314              		.cfi_def_cfa_offset 48
 177:Src/adc.c     **** 
 178:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 179:Src/adc.c     ****   if (adcHandle->Instance == ADC1)
 315              		.loc 1 179 0
 316 0004 0368     		ldr	r3, [r0]
 317 0006 2E4A     		ldr	r2, .L31
 318 0008 9342     		cmp	r3, r2
 319 000a 05D0     		beq	.L28
 320 000c 0446     		mov	r4, r0
 180:Src/adc.c     ****   {
 181:Src/adc.c     ****     /* USER CODE BEGIN ADC1_MspInit 0 */
 182:Src/adc.c     **** 
 183:Src/adc.c     ****     /* USER CODE END ADC1_MspInit 0 */
 184:Src/adc.c     ****     /* ADC1 clock enable */
 185:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 186:Src/adc.c     **** 
 187:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 188:Src/adc.c     ****     PC5     ------> ADC1_IN15 
 189:Src/adc.c     ****     */
 190:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5;
 191:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 10


 192:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 193:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 194:Src/adc.c     **** 
 195:Src/adc.c     ****     /* USER CODE BEGIN ADC1_MspInit 1 */
 196:Src/adc.c     **** 
 197:Src/adc.c     ****     /* USER CODE END ADC1_MspInit 1 */
 198:Src/adc.c     ****   }
 199:Src/adc.c     ****   else if (adcHandle->Instance == ADC2)
 321              		.loc 1 199 0
 322 000e 2D4A     		ldr	r2, .L31+4
 323 0010 9342     		cmp	r3, r2
 324 0012 17D0     		beq	.L29
 325              	.LVL15:
 326              	.L23:
 200:Src/adc.c     ****   {
 201:Src/adc.c     ****     /* USER CODE BEGIN ADC2_MspInit 0 */
 202:Src/adc.c     **** 
 203:Src/adc.c     ****     /* USER CODE END ADC2_MspInit 0 */
 204:Src/adc.c     ****     /* ADC2 clock enable */
 205:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_ENABLE();
 206:Src/adc.c     **** 
 207:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 208:Src/adc.c     ****     PC0     ------> ADC2_IN10
 209:Src/adc.c     ****     PC1     ------> ADC2_IN11
 210:Src/adc.c     ****     PA2     ------> ADC2_IN2
 211:Src/adc.c     ****     PA3     ------> ADC2_IN3 
 212:Src/adc.c     ****     */
 213:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_1;
 214:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 215:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 216:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 217:Src/adc.c     **** 
 218:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 219:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 220:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 221:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222:Src/adc.c     **** 
 223:Src/adc.c     ****     /* ADC2 DMA Init */
 224:Src/adc.c     ****     /* ADC2 Init */
 225:Src/adc.c     ****     hdma_adc2.Instance = DMA2_Stream2;
 226:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 227:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 228:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 229:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 230:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 231:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 232:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_NORMAL;
 233:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 234:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 235:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 236:Src/adc.c     ****     {
 237:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 238:Src/adc.c     ****     }
 239:Src/adc.c     **** 
 240:Src/adc.c     ****     __HAL_LINKDMA(adcHandle, DMA_Handle, hdma_adc2);
 241:Src/adc.c     **** 
 242:Src/adc.c     ****     /* USER CODE BEGIN ADC2_MspInit 1 */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 11


 243:Src/adc.c     **** 
 244:Src/adc.c     ****     /* USER CODE END ADC2_MspInit 1 */
 245:Src/adc.c     ****   }
 246:Src/adc.c     **** }
 327              		.loc 1 246 0
 328 0014 08B0     		add	sp, sp, #32
 329              	.LCFI10:
 330              		.cfi_remember_state
 331              		.cfi_def_cfa_offset 16
 332              		@ sp needed
 333 0016 70BD     		pop	{r4, r5, r6, pc}
 334              	.LVL16:
 335              	.L28:
 336              	.LCFI11:
 337              		.cfi_restore_state
 338              	.LBB2:
 185:Src/adc.c     **** 
 339              		.loc 1 185 0
 340 0018 0021     		movs	r1, #0
 341 001a 0191     		str	r1, [sp, #4]
 342 001c 2A4B     		ldr	r3, .L31+8
 343 001e 5A6C     		ldr	r2, [r3, #68]
 344 0020 42F48072 		orr	r2, r2, #256
 345 0024 5A64     		str	r2, [r3, #68]
 346 0026 5B6C     		ldr	r3, [r3, #68]
 347 0028 03F48073 		and	r3, r3, #256
 348 002c 0193     		str	r3, [sp, #4]
 349 002e 019B     		ldr	r3, [sp, #4]
 350              	.LBE2:
 190:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 351              		.loc 1 190 0
 352 0030 2023     		movs	r3, #32
 353 0032 0393     		str	r3, [sp, #12]
 191:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 354              		.loc 1 191 0
 355 0034 0323     		movs	r3, #3
 356 0036 0493     		str	r3, [sp, #16]
 192:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 357              		.loc 1 192 0
 358 0038 0591     		str	r1, [sp, #20]
 193:Src/adc.c     **** 
 359              		.loc 1 193 0
 360 003a 03A9     		add	r1, sp, #12
 361 003c 2348     		ldr	r0, .L31+12
 362              	.LVL17:
 363 003e FFF7FEFF 		bl	HAL_GPIO_Init
 364              	.LVL18:
 365 0042 E7E7     		b	.L23
 366              	.LVL19:
 367              	.L29:
 368              	.LBB3:
 205:Src/adc.c     **** 
 369              		.loc 1 205 0
 370 0044 0025     		movs	r5, #0
 371 0046 0295     		str	r5, [sp, #8]
 372 0048 1F4B     		ldr	r3, .L31+8
 373 004a 5A6C     		ldr	r2, [r3, #68]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 12


 374 004c 42F40072 		orr	r2, r2, #512
 375 0050 5A64     		str	r2, [r3, #68]
 376 0052 5B6C     		ldr	r3, [r3, #68]
 377 0054 03F40073 		and	r3, r3, #512
 378 0058 0293     		str	r3, [sp, #8]
 379 005a 029B     		ldr	r3, [sp, #8]
 380              	.LBE3:
 213:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 381              		.loc 1 213 0
 382 005c 0326     		movs	r6, #3
 383 005e 0396     		str	r6, [sp, #12]
 214:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 384              		.loc 1 214 0
 385 0060 0496     		str	r6, [sp, #16]
 215:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 386              		.loc 1 215 0
 387 0062 0595     		str	r5, [sp, #20]
 216:Src/adc.c     **** 
 388              		.loc 1 216 0
 389 0064 03A9     		add	r1, sp, #12
 390 0066 1948     		ldr	r0, .L31+12
 391              	.LVL20:
 392 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 393              	.LVL21:
 218:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 394              		.loc 1 218 0
 395 006c 0C23     		movs	r3, #12
 396 006e 0393     		str	r3, [sp, #12]
 219:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 219 0
 398 0070 0496     		str	r6, [sp, #16]
 220:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 399              		.loc 1 220 0
 400 0072 0595     		str	r5, [sp, #20]
 221:Src/adc.c     **** 
 401              		.loc 1 221 0
 402 0074 0DEB0301 		add	r1, sp, r3
 403 0078 1548     		ldr	r0, .L31+16
 404 007a FFF7FEFF 		bl	HAL_GPIO_Init
 405              	.LVL22:
 225:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 406              		.loc 1 225 0
 407 007e 1548     		ldr	r0, .L31+20
 408 0080 154B     		ldr	r3, .L31+24
 409 0082 0360     		str	r3, [r0]
 226:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 410              		.loc 1 226 0
 411 0084 4FF00073 		mov	r3, #33554432
 412 0088 4360     		str	r3, [r0, #4]
 227:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 413              		.loc 1 227 0
 414 008a 8560     		str	r5, [r0, #8]
 228:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 415              		.loc 1 228 0
 416 008c C560     		str	r5, [r0, #12]
 229:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 417              		.loc 1 229 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 13


 418 008e 4FF48063 		mov	r3, #1024
 419 0092 0361     		str	r3, [r0, #16]
 230:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 420              		.loc 1 230 0
 421 0094 4FF40063 		mov	r3, #2048
 422 0098 4361     		str	r3, [r0, #20]
 231:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_NORMAL;
 423              		.loc 1 231 0
 424 009a 4FF40053 		mov	r3, #8192
 425 009e 8361     		str	r3, [r0, #24]
 232:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 426              		.loc 1 232 0
 427 00a0 C561     		str	r5, [r0, #28]
 233:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 428              		.loc 1 233 0
 429 00a2 0562     		str	r5, [r0, #32]
 234:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 430              		.loc 1 234 0
 431 00a4 4562     		str	r5, [r0, #36]
 235:Src/adc.c     ****     {
 432              		.loc 1 235 0
 433 00a6 FFF7FEFF 		bl	HAL_DMA_Init
 434              	.LVL23:
 435 00aa 18B9     		cbnz	r0, .L30
 436              	.L26:
 240:Src/adc.c     **** 
 437              		.loc 1 240 0
 438 00ac 094B     		ldr	r3, .L31+20
 439 00ae A363     		str	r3, [r4, #56]
 440 00b0 9C63     		str	r4, [r3, #56]
 441              		.loc 1 246 0
 442 00b2 AFE7     		b	.L23
 443              	.L30:
 237:Src/adc.c     ****     }
 444              		.loc 1 237 0
 445 00b4 ED21     		movs	r1, #237
 446 00b6 0948     		ldr	r0, .L31+28
 447 00b8 FFF7FEFF 		bl	_Error_Handler
 448              	.LVL24:
 449 00bc F6E7     		b	.L26
 450              	.L32:
 451 00be 00BF     		.align	2
 452              	.L31:
 453 00c0 00200140 		.word	1073815552
 454 00c4 00210140 		.word	1073815808
 455 00c8 00380240 		.word	1073887232
 456 00cc 00080240 		.word	1073874944
 457 00d0 00000240 		.word	1073872896
 458 00d4 00000000 		.word	hdma_adc2
 459 00d8 40640240 		.word	1073898560
 460 00dc 00000000 		.word	.LC0
 461              		.cfi_endproc
 462              	.LFE128:
 464              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 465              		.align	1
 466              		.global	HAL_ADC_MspDeInit
 467              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 14


 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	HAL_ADC_MspDeInit:
 473              	.LFB129:
 247:Src/adc.c     **** 
 248:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef *adcHandle)
 249:Src/adc.c     **** {
 474              		.loc 1 249 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL25:
 479 0000 10B5     		push	{r4, lr}
 480              	.LCFI12:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 4, -8
 483              		.cfi_offset 14, -4
 250:Src/adc.c     **** 
 251:Src/adc.c     ****   if (adcHandle->Instance == ADC1)
 484              		.loc 1 251 0
 485 0002 0368     		ldr	r3, [r0]
 486 0004 114A     		ldr	r2, .L39
 487 0006 9342     		cmp	r3, r2
 488 0008 04D0     		beq	.L37
 489 000a 0446     		mov	r4, r0
 252:Src/adc.c     ****   {
 253:Src/adc.c     ****     /* USER CODE BEGIN ADC1_MspDeInit 0 */
 254:Src/adc.c     **** 
 255:Src/adc.c     ****     /* USER CODE END ADC1_MspDeInit 0 */
 256:Src/adc.c     ****     /* Peripheral clock disable */
 257:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 258:Src/adc.c     **** 
 259:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 260:Src/adc.c     ****     PC5     ------> ADC1_IN15 
 261:Src/adc.c     ****     */
 262:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_5);
 263:Src/adc.c     **** 
 264:Src/adc.c     ****     /* USER CODE BEGIN ADC1_MspDeInit 1 */
 265:Src/adc.c     **** 
 266:Src/adc.c     ****     /* USER CODE END ADC1_MspDeInit 1 */
 267:Src/adc.c     ****   }
 268:Src/adc.c     ****   else if (adcHandle->Instance == ADC2)
 490              		.loc 1 268 0
 491 000c 104A     		ldr	r2, .L39+4
 492 000e 9342     		cmp	r3, r2
 493 0010 0BD0     		beq	.L38
 494              	.LVL26:
 495              	.L33:
 269:Src/adc.c     ****   {
 270:Src/adc.c     ****     /* USER CODE BEGIN ADC2_MspDeInit 0 */
 271:Src/adc.c     **** 
 272:Src/adc.c     ****     /* USER CODE END ADC2_MspDeInit 0 */
 273:Src/adc.c     ****     /* Peripheral clock disable */
 274:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_DISABLE();
 275:Src/adc.c     **** 
 276:Src/adc.c     ****     /**ADC2 GPIO Configuration    
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 15


 277:Src/adc.c     ****     PC0     ------> ADC2_IN10
 278:Src/adc.c     ****     PC1     ------> ADC2_IN11
 279:Src/adc.c     ****     PA2     ------> ADC2_IN2
 280:Src/adc.c     ****     PA3     ------> ADC2_IN3 
 281:Src/adc.c     ****     */
 282:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0 | GPIO_PIN_1);
 283:Src/adc.c     **** 
 284:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2 | GPIO_PIN_3);
 285:Src/adc.c     **** 
 286:Src/adc.c     ****     /* ADC2 DMA DeInit */
 287:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 288:Src/adc.c     ****     /* USER CODE BEGIN ADC2_MspDeInit 1 */
 289:Src/adc.c     **** 
 290:Src/adc.c     ****     /* USER CODE END ADC2_MspDeInit 1 */
 291:Src/adc.c     ****   }
 292:Src/adc.c     **** }
 496              		.loc 1 292 0
 497 0012 10BD     		pop	{r4, pc}
 498              	.LVL27:
 499              	.L37:
 257:Src/adc.c     **** 
 500              		.loc 1 257 0
 501 0014 02F58C32 		add	r2, r2, #71680
 502 0018 536C     		ldr	r3, [r2, #68]
 503 001a 23F48073 		bic	r3, r3, #256
 504 001e 5364     		str	r3, [r2, #68]
 262:Src/adc.c     **** 
 505              		.loc 1 262 0
 506 0020 2021     		movs	r1, #32
 507 0022 0C48     		ldr	r0, .L39+8
 508              	.LVL28:
 509 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 510              	.LVL29:
 511 0028 F3E7     		b	.L33
 512              	.LVL30:
 513              	.L38:
 274:Src/adc.c     **** 
 514              		.loc 1 274 0
 515 002a 0B4A     		ldr	r2, .L39+12
 516 002c 536C     		ldr	r3, [r2, #68]
 517 002e 23F40073 		bic	r3, r3, #512
 518 0032 5364     		str	r3, [r2, #68]
 282:Src/adc.c     **** 
 519              		.loc 1 282 0
 520 0034 0321     		movs	r1, #3
 521 0036 0748     		ldr	r0, .L39+8
 522              	.LVL31:
 523 0038 FFF7FEFF 		bl	HAL_GPIO_DeInit
 524              	.LVL32:
 284:Src/adc.c     **** 
 525              		.loc 1 284 0
 526 003c 0C21     		movs	r1, #12
 527 003e 0748     		ldr	r0, .L39+16
 528 0040 FFF7FEFF 		bl	HAL_GPIO_DeInit
 529              	.LVL33:
 287:Src/adc.c     ****     /* USER CODE BEGIN ADC2_MspDeInit 1 */
 530              		.loc 1 287 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 16


 531 0044 A06B     		ldr	r0, [r4, #56]
 532 0046 FFF7FEFF 		bl	HAL_DMA_DeInit
 533              	.LVL34:
 534              		.loc 1 292 0
 535 004a E2E7     		b	.L33
 536              	.L40:
 537              		.align	2
 538              	.L39:
 539 004c 00200140 		.word	1073815552
 540 0050 00210140 		.word	1073815808
 541 0054 00080240 		.word	1073874944
 542 0058 00380240 		.word	1073887232
 543 005c 00000240 		.word	1073872896
 544              		.cfi_endproc
 545              	.LFE129:
 547              		.section	.text.Adc_SetSensorValue,"ax",%progbits
 548              		.align	1
 549              		.global	Adc_SetSensorValue
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	Adc_SetSensorValue:
 556              	.LFB130:
 293:Src/adc.c     **** 
 294:Src/adc.c     **** /* USER CODE BEGIN 1 */
 295:Src/adc.c     **** void Adc_SetSensorValue(void)
 296:Src/adc.c     **** {
 557              		.loc 1 296 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 297:Src/adc.c     ****   sen_l.reference = 108;//111
 562              		.loc 1 297 0
 563 0000 094B     		ldr	r3, .L42
 564 0002 6C22     		movs	r2, #108
 565 0004 DA82     		strh	r2, [r3, #22]	@ movhi
 298:Src/adc.c     ****   sen_l.threshold = 87;//off80
 566              		.loc 1 298 0
 567 0006 5722     		movs	r2, #87
 568 0008 1A83     		strh	r2, [r3, #24]	@ movhi
 299:Src/adc.c     **** 
 300:Src/adc.c     ****   sen_front.reference = 230;//220
 569              		.loc 1 300 0
 570 000a 084B     		ldr	r3, .L42+4
 571 000c E622     		movs	r2, #230
 572 000e DA82     		strh	r2, [r3, #22]	@ movhi
 301:Src/adc.c     ****   sen_front_reference_f = 117;//117
 573              		.loc 1 301 0
 574 0010 074A     		ldr	r2, .L42+8
 575 0012 7521     		movs	r1, #117
 576 0014 1180     		strh	r1, [r2]	@ movhi
 302:Src/adc.c     ****   sen_front.threshold = 102;//109
 577              		.loc 1 302 0
 578 0016 6622     		movs	r2, #102
 579 0018 1A83     		strh	r2, [r3, #24]	@ movhi
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 17


 303:Src/adc.c     **** 
 304:Src/adc.c     ****   sen_r.reference = 153;//162
 580              		.loc 1 304 0
 581 001a 064B     		ldr	r3, .L42+12
 582 001c 9922     		movs	r2, #153
 583 001e DA82     		strh	r2, [r3, #22]	@ movhi
 305:Src/adc.c     ****   sen_r.threshold = 120;//off118//130
 584              		.loc 1 305 0
 585 0020 7822     		movs	r2, #120
 586 0022 1A83     		strh	r2, [r3, #24]	@ movhi
 306:Src/adc.c     **** }
 587              		.loc 1 306 0
 588 0024 7047     		bx	lr
 589              	.L43:
 590 0026 00BF     		.align	2
 591              	.L42:
 592 0028 00000000 		.word	sen_l
 593 002c 00000000 		.word	sen_front
 594 0030 00000000 		.word	sen_front_reference_f
 595 0034 00000000 		.word	sen_r
 596              		.cfi_endproc
 597              	.LFE130:
 599              		.section	.text.update_sensor_data,"ax",%progbits
 600              		.align	1
 601              		.global	update_sensor_data
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv4-sp-d16
 607              	update_sensor_data:
 608              	.LFB131:
 307:Src/adc.c     **** 
 308:Src/adc.c     **** void update_sensor_data(void)
 309:Src/adc.c     **** {
 609              		.loc 1 309 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 310:Src/adc.c     **** 
 311:Src/adc.c     ****   sen_front.now = (sen_fl.now + sen_fr.now) / 2;
 614              		.loc 1 311 0
 615 0000 1A4B     		ldr	r3, .L52
 616 0002 B3F90030 		ldrsh	r3, [r3]
 617 0006 1A4A     		ldr	r2, .L52+4
 618 0008 B2F90020 		ldrsh	r2, [r2]
 619 000c 1344     		add	r3, r3, r2
 620 000e 03EBD373 		add	r3, r3, r3, lsr #31
 621 0012 43F34F03 		sbfx	r3, r3, #1, #16
 622 0016 174A     		ldr	r2, .L52+8
 623 0018 1380     		strh	r3, [r2]	@ movhi
 312:Src/adc.c     **** 
 313:Src/adc.c     ****   if (sen_front.now < sen_front.threshold)
 624              		.loc 1 313 0
 625 001a B2F91820 		ldrsh	r2, [r2, #24]
 626 001e 9342     		cmp	r3, r2
 627 0020 17DA     		bge	.L45
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 18


 314:Src/adc.c     ****   {
 315:Src/adc.c     ****     sen_front.is_wall = FALSE;
 628              		.loc 1 315 0
 629 0022 144B     		ldr	r3, .L52+8
 630 0024 0022     		movs	r2, #0
 631 0026 1A77     		strb	r2, [r3, #28]
 632              	.L46:
 316:Src/adc.c     ****   }
 317:Src/adc.c     ****   else
 318:Src/adc.c     ****   {
 319:Src/adc.c     ****     sen_front.is_wall = TRUE;
 320:Src/adc.c     ****   }
 321:Src/adc.c     **** 
 322:Src/adc.c     ****   if (sen_l.now < sen_l.threshold)
 633              		.loc 1 322 0
 634 0028 134B     		ldr	r3, .L52+12
 635 002a B3F90020 		ldrsh	r2, [r3]
 636 002e B3F91830 		ldrsh	r3, [r3, #24]
 637 0032 9A42     		cmp	r2, r3
 638 0034 11DA     		bge	.L47
 323:Src/adc.c     ****   {
 324:Src/adc.c     ****     sen_l.is_wall = FALSE;
 639              		.loc 1 324 0
 640 0036 104B     		ldr	r3, .L52+12
 641 0038 0022     		movs	r2, #0
 642 003a 1A77     		strb	r2, [r3, #28]
 643              	.L48:
 325:Src/adc.c     ****   }
 326:Src/adc.c     ****   else
 327:Src/adc.c     ****   {
 328:Src/adc.c     ****     sen_l.is_wall = TRUE;
 329:Src/adc.c     ****   }
 330:Src/adc.c     **** 
 331:Src/adc.c     ****   if (sen_r.now < sen_r.threshold)
 644              		.loc 1 331 0
 645 003c 0F4B     		ldr	r3, .L52+16
 646 003e B3F90020 		ldrsh	r2, [r3]
 647 0042 B3F91830 		ldrsh	r3, [r3, #24]
 648 0046 9A42     		cmp	r2, r3
 649 0048 0BDB     		blt	.L51
 332:Src/adc.c     ****   {
 333:Src/adc.c     ****     sen_r.is_wall = FALSE;
 334:Src/adc.c     ****   }
 335:Src/adc.c     ****   else
 336:Src/adc.c     ****   {
 337:Src/adc.c     ****     sen_r.is_wall = TRUE;
 650              		.loc 1 337 0
 651 004a 0C4B     		ldr	r3, .L52+16
 652 004c 0122     		movs	r2, #1
 653 004e 1A77     		strb	r2, [r3, #28]
 338:Src/adc.c     ****   }
 339:Src/adc.c     **** }
 654              		.loc 1 339 0
 655 0050 7047     		bx	lr
 656              	.L45:
 319:Src/adc.c     ****   }
 657              		.loc 1 319 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 19


 658 0052 084B     		ldr	r3, .L52+8
 659 0054 0122     		movs	r2, #1
 660 0056 1A77     		strb	r2, [r3, #28]
 661 0058 E6E7     		b	.L46
 662              	.L47:
 328:Src/adc.c     ****   }
 663              		.loc 1 328 0
 664 005a 074B     		ldr	r3, .L52+12
 665 005c 0122     		movs	r2, #1
 666 005e 1A77     		strb	r2, [r3, #28]
 667 0060 ECE7     		b	.L48
 668              	.L51:
 333:Src/adc.c     ****   }
 669              		.loc 1 333 0
 670 0062 064B     		ldr	r3, .L52+16
 671 0064 0022     		movs	r2, #0
 672 0066 1A77     		strb	r2, [r3, #28]
 673 0068 7047     		bx	lr
 674              	.L53:
 675 006a 00BF     		.align	2
 676              	.L52:
 677 006c 00000000 		.word	sen_fl
 678 0070 00000000 		.word	sen_fr
 679 0074 00000000 		.word	sen_front
 680 0078 00000000 		.word	sen_l
 681 007c 00000000 		.word	sen_r
 682              		.cfi_endproc
 683              	.LFE131:
 685              		.section	.text.Adc_IrSensorStart,"ax",%progbits
 686              		.align	1
 687              		.global	Adc_IrSensorStart
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	Adc_IrSensorStart:
 694              	.LFB132:
 340:Src/adc.c     **** 
 341:Src/adc.c     **** void Adc_IrSensorStart(void)
 342:Src/adc.c     **** {
 695              		.loc 1 342 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 08B5     		push	{r3, lr}
 700              	.LCFI13:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 3, -8
 703              		.cfi_offset 14, -4
 343:Src/adc.c     ****   adc_counter = 0;
 704              		.loc 1 343 0
 705 0002 044B     		ldr	r3, .L56
 706 0004 0022     		movs	r2, #0
 707 0006 1A80     		strh	r2, [r3]	@ movhi
 344:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 708              		.loc 1 344 0
 709 0008 0422     		movs	r2, #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 20


 710 000a 0349     		ldr	r1, .L56+4
 711 000c 0348     		ldr	r0, .L56+8
 712 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 713              	.LVL35:
 345:Src/adc.c     **** }
 714              		.loc 1 345 0
 715 0012 08BD     		pop	{r3, pc}
 716              	.L57:
 717              		.align	2
 718              	.L56:
 719 0014 00000000 		.word	adc_counter
 720 0018 00000000 		.word	ADCBuff
 721 001c 00000000 		.word	hadc2
 722              		.cfi_endproc
 723              	.LFE132:
 725              		.section	.text.Adc_IrSensorFinish,"ax",%progbits
 726              		.align	1
 727              		.global	Adc_IrSensorFinish
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv4-sp-d16
 733              	Adc_IrSensorFinish:
 734              	.LFB133:
 346:Src/adc.c     **** 
 347:Src/adc.c     **** void Adc_IrSensorFinish(void)
 348:Src/adc.c     **** {
 735              		.loc 1 348 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739 0000 10B5     		push	{r4, lr}
 740              	.LCFI14:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
 349:Src/adc.c     ****   adc_counter = IRSENSOR_OFF;
 744              		.loc 1 349 0
 745 0002 074B     		ldr	r3, .L60
 746 0004 0422     		movs	r2, #4
 747 0006 1A80     		strh	r2, [r3]	@ movhi
 350:Src/adc.c     ****   HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 748              		.loc 1 350 0
 749 0008 064C     		ldr	r4, .L60+4
 750 000a 0022     		movs	r2, #0
 751 000c 0221     		movs	r1, #2
 752 000e 2046     		mov	r0, r4
 753 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 754              	.LVL36:
 351:Src/adc.c     ****   HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 755              		.loc 1 351 0
 756 0014 0022     		movs	r2, #0
 757 0016 0121     		movs	r1, #1
 758 0018 2046     		mov	r0, r4
 759 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 760              	.LVL37:
 352:Src/adc.c     **** }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 21


 761              		.loc 1 352 0
 762 001e 10BD     		pop	{r4, pc}
 763              	.L61:
 764              		.align	2
 765              	.L60:
 766 0020 00000000 		.word	adc_counter
 767 0024 00000240 		.word	1073872896
 768              		.cfi_endproc
 769              	.LFE133:
 771              		.section	.text.Adc_CheckConvert,"ax",%progbits
 772              		.align	1
 773              		.global	Adc_CheckConvert
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	Adc_CheckConvert:
 780              	.LFB134:
 353:Src/adc.c     **** 
 354:Src/adc.c     **** void Adc_CheckConvert(void)
 355:Src/adc.c     **** {
 781              		.loc 1 355 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785 0000 08B5     		push	{r3, lr}
 786              	.LCFI15:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 3, -8
 789              		.cfi_offset 14, -4
 356:Src/adc.c     ****   if (adc_counter == FINISH_CONVERT)
 790              		.loc 1 356 0
 791 0002 084B     		ldr	r3, .L66
 792 0004 B3F90030 		ldrsh	r3, [r3]
 793 0008 032B     		cmp	r3, #3
 794 000a 00D0     		beq	.L65
 795              	.L62:
 357:Src/adc.c     ****   {
 358:Src/adc.c     ****     update_sensor_data();
 359:Src/adc.c     ****     adc_counter = 0;
 360:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 361:Src/adc.c     ****   }
 362:Src/adc.c     **** }
 796              		.loc 1 362 0
 797 000c 08BD     		pop	{r3, pc}
 798              	.L65:
 358:Src/adc.c     ****     adc_counter = 0;
 799              		.loc 1 358 0
 800 000e FFF7FEFF 		bl	update_sensor_data
 801              	.LVL38:
 359:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 802              		.loc 1 359 0
 803 0012 044B     		ldr	r3, .L66
 804 0014 0022     		movs	r2, #0
 805 0016 1A80     		strh	r2, [r3]	@ movhi
 360:Src/adc.c     ****   }
 806              		.loc 1 360 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 22


 807 0018 0422     		movs	r2, #4
 808 001a 0349     		ldr	r1, .L66+4
 809 001c 0348     		ldr	r0, .L66+8
 810 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 811              	.LVL39:
 812              		.loc 1 362 0
 813 0022 F3E7     		b	.L62
 814              	.L67:
 815              		.align	2
 816              	.L66:
 817 0024 00000000 		.word	adc_counter
 818 0028 00000000 		.word	ADCBuff
 819 002c 00000000 		.word	hadc2
 820              		.cfi_endproc
 821              	.LFE134:
 823              		.section	.text.Adc_GetSensor,"ax",%progbits
 824              		.align	1
 825              		.global	Adc_GetSensor
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu fpv4-sp-d16
 831              	Adc_GetSensor:
 832              	.LFB135:
 363:Src/adc.c     **** 
 364:Src/adc.c     **** // DMA の変換式を記�?
 365:Src/adc.c     **** void Adc_GetSensor(void)
 366:Src/adc.c     **** {
 833              		.loc 1 366 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 8
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837 0000 10B5     		push	{r4, lr}
 838              	.LCFI16:
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 4, -8
 841              		.cfi_offset 14, -4
 842 0002 82B0     		sub	sp, sp, #8
 843              	.LCFI17:
 844              		.cfi_def_cfa_offset 16
 367:Src/adc.c     ****   volatile unsigned char i;
 368:Src/adc.c     ****   switch (adc_counter)
 845              		.loc 1 368 0
 846 0004 494B     		ldr	r3, .L81
 847 0006 B3F90030 		ldrsh	r3, [r3]
 848 000a 012B     		cmp	r3, #1
 849 000c 2ED0     		beq	.L70
 850 000e 022B     		cmp	r3, #2
 851 0010 61D0     		beq	.L71
 852 0012 0BB1     		cbz	r3, .L80
 853              	.L68:
 369:Src/adc.c     ****   {
 370:Src/adc.c     ****   case OFF_VALUE:
 371:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 372:Src/adc.c     ****     ADCOffData[0] = ADCBuff[0];
 373:Src/adc.c     ****     ADCOffData[1] = ADCBuff[1];
 374:Src/adc.c     ****     ADCOffData[2] = ADCBuff[2];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 23


 375:Src/adc.c     ****     ADCOffData[3] = ADCBuff[3];
 376:Src/adc.c     **** 
 377:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_SET);
 378:Src/adc.c     **** 
 379:Src/adc.c     ****     for (i = 0; i < 200; i++)
 380:Src/adc.c     ****     {
 381:Src/adc.c     ****     }
 382:Src/adc.c     **** 
 383:Src/adc.c     ****     adc_counter = FRONT_VALUE;
 384:Src/adc.c     **** 
 385:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 386:Src/adc.c     ****     break;
 387:Src/adc.c     **** 
 388:Src/adc.c     ****   case FRONT_VALUE:
 389:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 390:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 391:Src/adc.c     **** 
 392:Src/adc.c     ****     ADCOntData[1] = ADCBuff[1];
 393:Src/adc.c     ****     ADCOntData[2] = ADCBuff[2];
 394:Src/adc.c     **** 
 395:Src/adc.c     ****     //sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
 396:Src/adc.c     ****     sen_fl.now = ADCOntData[1] - ADCOffData[1];
 397:Src/adc.c     **** 
 398:Src/adc.c     ****     //sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 399:Src/adc.c     ****     sen_fr.now = ADCOntData[2] - ADCOffData[2];
 400:Src/adc.c     **** 
 401:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_SET);
 402:Src/adc.c     **** 
 403:Src/adc.c     ****     for (i = 0; i < 200; i++)
 404:Src/adc.c     ****     {
 405:Src/adc.c     ****     }
 406:Src/adc.c     **** 
 407:Src/adc.c     ****     adc_counter = SIDE_VALUE;
 408:Src/adc.c     **** 
 409:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 410:Src/adc.c     ****     break;
 411:Src/adc.c     **** 
 412:Src/adc.c     ****   case SIDE_VALUE:
 413:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 414:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 415:Src/adc.c     **** 
 416:Src/adc.c     ****     ADCOntData[0] = ADCBuff[0];
 417:Src/adc.c     ****     ADCOntData[3] = ADCBuff[3];
 418:Src/adc.c     **** 
 419:Src/adc.c     ****     //sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 420:Src/adc.c     ****     sen_l.now = ADCOntData[0] - ADCOffData[0];
 421:Src/adc.c     **** 
 422:Src/adc.c     ****     //sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 423:Src/adc.c     ****     sen_r.now = ADCOntData[3] - ADCOffData[3];
 424:Src/adc.c     **** 
 425:Src/adc.c     ****     for (i = 0; i < 200; i++)
 426:Src/adc.c     ****     {
 427:Src/adc.c     ****     }
 428:Src/adc.c     **** 
 429:Src/adc.c     ****     adc_counter = FINISH_CONVERT;
 430:Src/adc.c     ****     break;
 431:Src/adc.c     **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 24


 432:Src/adc.c     ****   default:
 433:Src/adc.c     ****     break;
 434:Src/adc.c     ****   }
 435:Src/adc.c     **** }
 854              		.loc 1 435 0
 855 0014 02B0     		add	sp, sp, #8
 856              	.LCFI18:
 857              		.cfi_remember_state
 858              		.cfi_def_cfa_offset 8
 859              		@ sp needed
 860 0016 10BD     		pop	{r4, pc}
 861              	.L80:
 862              	.LCFI19:
 863              		.cfi_restore_state
 371:Src/adc.c     ****     ADCOffData[0] = ADCBuff[0];
 864              		.loc 1 371 0
 865 0018 4548     		ldr	r0, .L81+4
 866 001a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 867              	.LVL40:
 372:Src/adc.c     ****     ADCOffData[1] = ADCBuff[1];
 868              		.loc 1 372 0
 869 001e 454A     		ldr	r2, .L81+8
 870 0020 1188     		ldrh	r1, [r2]
 871 0022 454B     		ldr	r3, .L81+12
 872 0024 1980     		strh	r1, [r3]	@ movhi
 373:Src/adc.c     ****     ADCOffData[2] = ADCBuff[2];
 873              		.loc 1 373 0
 874 0026 5188     		ldrh	r1, [r2, #2]
 875 0028 5980     		strh	r1, [r3, #2]	@ movhi
 374:Src/adc.c     ****     ADCOffData[3] = ADCBuff[3];
 876              		.loc 1 374 0
 877 002a 9188     		ldrh	r1, [r2, #4]
 878 002c 9980     		strh	r1, [r3, #4]	@ movhi
 375:Src/adc.c     **** 
 879              		.loc 1 375 0
 880 002e D288     		ldrh	r2, [r2, #6]
 881 0030 DA80     		strh	r2, [r3, #6]	@ movhi
 377:Src/adc.c     **** 
 882              		.loc 1 377 0
 883 0032 0122     		movs	r2, #1
 884 0034 0221     		movs	r1, #2
 885 0036 4148     		ldr	r0, .L81+16
 886 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 887              	.LVL41:
 379:Src/adc.c     ****     {
 888              		.loc 1 379 0
 889 003c 0023     		movs	r3, #0
 890 003e 8DF80730 		strb	r3, [sp, #7]
 891 0042 05E0     		b	.L73
 892              	.L74:
 379:Src/adc.c     ****     {
 893              		.loc 1 379 0 is_stmt 0 discriminator 3
 894 0044 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 895 0048 0133     		adds	r3, r3, #1
 896 004a DBB2     		uxtb	r3, r3
 897 004c 8DF80730 		strb	r3, [sp, #7]
 898              	.L73:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 25


 379:Src/adc.c     ****     {
 899              		.loc 1 379 0 discriminator 1
 900 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 901 0054 DBB2     		uxtb	r3, r3
 902 0056 C72B     		cmp	r3, #199
 903 0058 F4D9     		bls	.L74
 383:Src/adc.c     **** 
 904              		.loc 1 383 0 is_stmt 1
 905 005a 344B     		ldr	r3, .L81
 906 005c 0122     		movs	r2, #1
 907 005e 1A80     		strh	r2, [r3]	@ movhi
 385:Src/adc.c     ****     break;
 908              		.loc 1 385 0
 909 0060 0422     		movs	r2, #4
 910 0062 3449     		ldr	r1, .L81+8
 911 0064 3248     		ldr	r0, .L81+4
 912 0066 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 913              	.LVL42:
 386:Src/adc.c     **** 
 914              		.loc 1 386 0
 915 006a D3E7     		b	.L68
 916              	.L70:
 389:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 917              		.loc 1 389 0
 918 006c 3048     		ldr	r0, .L81+4
 919 006e FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 920              	.LVL43:
 390:Src/adc.c     **** 
 921              		.loc 1 390 0
 922 0072 324C     		ldr	r4, .L81+16
 923 0074 0022     		movs	r2, #0
 924 0076 0221     		movs	r1, #2
 925 0078 2046     		mov	r0, r4
 926 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 927              	.LVL44:
 392:Src/adc.c     ****     ADCOntData[2] = ADCBuff[2];
 928              		.loc 1 392 0
 929 007e 2D4B     		ldr	r3, .L81+8
 930 0080 5A88     		ldrh	r2, [r3, #2]
 931 0082 2F49     		ldr	r1, .L81+20
 932 0084 4A80     		strh	r2, [r1, #2]	@ movhi
 393:Src/adc.c     **** 
 933              		.loc 1 393 0
 934 0086 9B88     		ldrh	r3, [r3, #4]
 935 0088 8B80     		strh	r3, [r1, #4]	@ movhi
 396:Src/adc.c     **** 
 936              		.loc 1 396 0
 937 008a 2B49     		ldr	r1, .L81+12
 938 008c 4888     		ldrh	r0, [r1, #2]
 939 008e 121A     		subs	r2, r2, r0
 940 0090 2C48     		ldr	r0, .L81+24
 941 0092 0280     		strh	r2, [r0]	@ movhi
 399:Src/adc.c     **** 
 942              		.loc 1 399 0
 943 0094 8A88     		ldrh	r2, [r1, #4]
 944 0096 9B1A     		subs	r3, r3, r2
 945 0098 2B4A     		ldr	r2, .L81+28
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 26


 946 009a 1380     		strh	r3, [r2]	@ movhi
 401:Src/adc.c     **** 
 947              		.loc 1 401 0
 948 009c 0122     		movs	r2, #1
 949 009e 1146     		mov	r1, r2
 950 00a0 2046     		mov	r0, r4
 951 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 952              	.LVL45:
 403:Src/adc.c     ****     {
 953              		.loc 1 403 0
 954 00a6 0023     		movs	r3, #0
 955 00a8 8DF80730 		strb	r3, [sp, #7]
 956 00ac 05E0     		b	.L75
 957              	.L76:
 403:Src/adc.c     ****     {
 958              		.loc 1 403 0 is_stmt 0 discriminator 3
 959 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 960 00b2 0133     		adds	r3, r3, #1
 961 00b4 DBB2     		uxtb	r3, r3
 962 00b6 8DF80730 		strb	r3, [sp, #7]
 963              	.L75:
 403:Src/adc.c     ****     {
 964              		.loc 1 403 0 discriminator 1
 965 00ba 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 966 00be DBB2     		uxtb	r3, r3
 967 00c0 C72B     		cmp	r3, #199
 968 00c2 F4D9     		bls	.L76
 407:Src/adc.c     **** 
 969              		.loc 1 407 0 is_stmt 1
 970 00c4 194B     		ldr	r3, .L81
 971 00c6 0222     		movs	r2, #2
 972 00c8 1A80     		strh	r2, [r3]	@ movhi
 409:Src/adc.c     ****     break;
 973              		.loc 1 409 0
 974 00ca 0422     		movs	r2, #4
 975 00cc 1949     		ldr	r1, .L81+8
 976 00ce 1848     		ldr	r0, .L81+4
 977 00d0 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 978              	.LVL46:
 410:Src/adc.c     **** 
 979              		.loc 1 410 0
 980 00d4 9EE7     		b	.L68
 981              	.L71:
 413:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 982              		.loc 1 413 0
 983 00d6 1648     		ldr	r0, .L81+4
 984 00d8 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 985              	.LVL47:
 414:Src/adc.c     **** 
 986              		.loc 1 414 0
 987 00dc 0022     		movs	r2, #0
 988 00de 0121     		movs	r1, #1
 989 00e0 1648     		ldr	r0, .L81+16
 990 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 991              	.LVL48:
 416:Src/adc.c     ****     ADCOntData[3] = ADCBuff[3];
 992              		.loc 1 416 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 27


 993 00e6 134B     		ldr	r3, .L81+8
 994 00e8 1A88     		ldrh	r2, [r3]
 995 00ea 1549     		ldr	r1, .L81+20
 996 00ec 0A80     		strh	r2, [r1]	@ movhi
 417:Src/adc.c     **** 
 997              		.loc 1 417 0
 998 00ee DB88     		ldrh	r3, [r3, #6]
 999 00f0 CB80     		strh	r3, [r1, #6]	@ movhi
 420:Src/adc.c     **** 
 1000              		.loc 1 420 0
 1001 00f2 1149     		ldr	r1, .L81+12
 1002 00f4 0888     		ldrh	r0, [r1]
 1003 00f6 121A     		subs	r2, r2, r0
 1004 00f8 1448     		ldr	r0, .L81+32
 1005 00fa 0280     		strh	r2, [r0]	@ movhi
 423:Src/adc.c     **** 
 1006              		.loc 1 423 0
 1007 00fc CA88     		ldrh	r2, [r1, #6]
 1008 00fe 9B1A     		subs	r3, r3, r2
 1009 0100 134A     		ldr	r2, .L81+36
 1010 0102 1380     		strh	r3, [r2]	@ movhi
 425:Src/adc.c     ****     {
 1011              		.loc 1 425 0
 1012 0104 0023     		movs	r3, #0
 1013 0106 8DF80730 		strb	r3, [sp, #7]
 1014 010a 05E0     		b	.L77
 1015              	.L78:
 425:Src/adc.c     ****     {
 1016              		.loc 1 425 0 is_stmt 0 discriminator 3
 1017 010c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1018 0110 0133     		adds	r3, r3, #1
 1019 0112 DBB2     		uxtb	r3, r3
 1020 0114 8DF80730 		strb	r3, [sp, #7]
 1021              	.L77:
 425:Src/adc.c     ****     {
 1022              		.loc 1 425 0 discriminator 1
 1023 0118 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1024 011c DBB2     		uxtb	r3, r3
 1025 011e C72B     		cmp	r3, #199
 1026 0120 F4D9     		bls	.L78
 429:Src/adc.c     ****     break;
 1027              		.loc 1 429 0 is_stmt 1
 1028 0122 024B     		ldr	r3, .L81
 1029 0124 0322     		movs	r2, #3
 1030 0126 1A80     		strh	r2, [r3]	@ movhi
 1031              		.loc 1 435 0
 1032 0128 74E7     		b	.L68
 1033              	.L82:
 1034 012a 00BF     		.align	2
 1035              	.L81:
 1036 012c 00000000 		.word	adc_counter
 1037 0130 00000000 		.word	hadc2
 1038 0134 00000000 		.word	ADCBuff
 1039 0138 00000000 		.word	ADCOffData
 1040 013c 00000240 		.word	1073872896
 1041 0140 00000000 		.word	ADCOntData
 1042 0144 00000000 		.word	sen_fl
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 28


 1043 0148 00000000 		.word	sen_fr
 1044 014c 00000000 		.word	sen_l
 1045 0150 00000000 		.word	sen_r
 1046              		.cfi_endproc
 1047              	.LFE135:
 1049              		.section	.text.Adc_GetBatt,"ax",%progbits
 1050              		.align	1
 1051              		.global	Adc_GetBatt
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv4-sp-d16
 1057              	Adc_GetBatt:
 1058              	.LFB136:
 436:Src/adc.c     **** 
 437:Src/adc.c     **** float Adc_GetBatt(void)
 438:Src/adc.c     **** {
 1059              		.loc 1 438 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063 0000 38B5     		push	{r3, r4, r5, lr}
 1064              	.LCFI20:
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 3, -16
 1067              		.cfi_offset 4, -12
 1068              		.cfi_offset 5, -8
 1069              		.cfi_offset 14, -4
 1070 0002 2DED028B 		vpush.64	{d8}
 1071              	.LCFI21:
 1072              		.cfi_def_cfa_offset 24
 1073              		.cfi_offset 80, -24
 1074              		.cfi_offset 81, -20
 1075              	.LVL49:
 1076              	.LBB4:
 439:Src/adc.c     ****   float batt = 0;
 440:Src/adc.c     ****   for (int i = 0; i < 10; i++)
 1077              		.loc 1 440 0
 1078 0006 0024     		movs	r4, #0
 1079              	.LBE4:
 439:Src/adc.c     ****   float batt = 0;
 1080              		.loc 1 439 0
 1081 0008 9FED2E8A 		vldr.32	s16, .L102
 1082              	.LBB5:
 1083              		.loc 1 440 0
 1084 000c 16E0     		b	.L84
 1085              	.LVL50:
 1086              	.L86:
 441:Src/adc.c     ****   {
 442:Src/adc.c     ****     HAL_ADC_Start(&hadc1); // ad convert start
 1087              		.loc 1 442 0
 1088 000e 2E48     		ldr	r0, .L102+4
 1089 0010 FFF7FEFF 		bl	HAL_ADC_Start
 1090              	.LVL51:
 1091              	.L85:
 443:Src/adc.c     ****     while (HAL_ADC_PollForConversion(&hadc1, 50) != HAL_OK)
 1092              		.loc 1 443 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 29


 1093 0014 3221     		movs	r1, #50
 1094 0016 2C48     		ldr	r0, .L102+4
 1095 0018 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1096              	.LVL52:
 1097 001c 0028     		cmp	r0, #0
 1098 001e F9D1     		bne	.L85
 444:Src/adc.c     ****     {
 445:Src/adc.c     ****     } // trans
 446:Src/adc.c     ****     batt += HAL_ADC_GetValue(&hadc1);
 1099              		.loc 1 446 0 discriminator 2
 1100 0020 294D     		ldr	r5, .L102+4
 1101 0022 2846     		mov	r0, r5
 1102 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 1103              	.LVL53:
 1104 0028 07EE900A 		vmov	s15, r0	@ int
 1105 002c F8EE677A 		vcvt.f32.u32	s15, s15
 1106 0030 38EE278A 		vadd.f32	s16, s16, s15
 1107              	.LVL54:
 447:Src/adc.c     ****     HAL_ADC_Stop(&hadc1);
 1108              		.loc 1 447 0 discriminator 2
 1109 0034 2846     		mov	r0, r5
 1110 0036 FFF7FEFF 		bl	HAL_ADC_Stop
 1111              	.LVL55:
 440:Src/adc.c     ****   {
 1112              		.loc 1 440 0 discriminator 2
 1113 003a 0134     		adds	r4, r4, #1
 1114              	.LVL56:
 1115              	.L84:
 440:Src/adc.c     ****   {
 1116              		.loc 1 440 0 is_stmt 0 discriminator 1
 1117 003c 092C     		cmp	r4, #9
 1118 003e E6DD     		ble	.L86
 1119              	.LBE5:
 448:Src/adc.c     ****   }
 449:Src/adc.c     ****   batt = batt / 10.0f / 4095.0f * 3.2f * 3.3f;
 1120              		.loc 1 449 0 is_stmt 1
 1121 0040 F2EE047A 		vmov.f32	s15, #1.0e+1
 1122 0044 88EE277A 		vdiv.f32	s14, s16, s15
 1123 0048 DFED207A 		vldr.32	s15, .L102+8
 1124 004c 87EE278A 		vdiv.f32	s16, s14, s15
 1125              	.LVL57:
 1126 0050 DFED1F7A 		vldr.32	s15, .L102+12
 1127 0054 28EE278A 		vmul.f32	s16, s16, s15
 1128 0058 DFED1E7A 		vldr.32	s15, .L102+16
 1129 005c 28EE278A 		vmul.f32	s16, s16, s15
 1130              	.LVL58:
 450:Src/adc.c     ****   if (batt > 8.0f)
 1131              		.loc 1 450 0
 1132 0060 F2EE007A 		vmov.f32	s15, #8.0e+0
 1133 0064 B4EEE78A 		vcmpe.f32	s16, s15
 1134 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1135 006c 0ADC     		bgt	.L100
 451:Src/adc.c     ****   {
 452:Src/adc.c     ****     Gpio_FullColor(BLUE);
 453:Src/adc.c     ****   }
 454:Src/adc.c     ****   else if (batt > 7.5)
 1136              		.loc 1 454 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 30


 1137 006e F1EE0E7A 		vmov.f32	s15, #7.5e+0
 1138 0072 B4EEE78A 		vcmpe.f32	s16, s15
 1139 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1140 007a 0BDD     		ble	.L98
 455:Src/adc.c     ****   {
 456:Src/adc.c     ****     Gpio_FullColor(YELLOW);
 1141              		.loc 1 456 0
 1142 007c 0120     		movs	r0, #1
 1143 007e FFF7FEFF 		bl	Gpio_FullColor
 1144              	.LVL59:
 1145 0082 02E0     		b	.L83
 1146              	.L100:
 452:Src/adc.c     ****   }
 1147              		.loc 1 452 0
 1148 0084 0620     		movs	r0, #6
 1149 0086 FFF7FEFF 		bl	Gpio_FullColor
 1150              	.LVL60:
 1151              	.L83:
 457:Src/adc.c     ****   }
 458:Src/adc.c     ****   else if (batt > 7.0)
 459:Src/adc.c     ****   {
 460:Src/adc.c     ****     Gpio_FullColor(RED);
 461:Src/adc.c     ****   }
 462:Src/adc.c     ****   else
 463:Src/adc.c     ****   {
 464:Src/adc.c     ****     while (1)
 465:Src/adc.c     ****     {
 466:Src/adc.c     ****       Gpio_FullColor(RED);
 467:Src/adc.c     ****       HAL_Delay(200);
 468:Src/adc.c     ****       Gpio_FullColor(DARK);
 469:Src/adc.c     ****       HAL_Delay(200);
 470:Src/adc.c     ****     }
 471:Src/adc.c     ****   }
 472:Src/adc.c     ****   return batt;
 473:Src/adc.c     **** }
 1152              		.loc 1 473 0
 1153 008a B0EE480A 		vmov.f32	s0, s16
 1154 008e BDEC028B 		vldm	sp!, {d8}
 1155              	.LCFI22:
 1156              		.cfi_remember_state
 1157              		.cfi_restore 80
 1158              		.cfi_restore 81
 1159              		.cfi_def_cfa_offset 16
 1160              	.LVL61:
 1161 0092 38BD     		pop	{r3, r4, r5, pc}
 1162              	.LVL62:
 1163              	.L98:
 1164              	.LCFI23:
 1165              		.cfi_restore_state
 458:Src/adc.c     ****   {
 1166              		.loc 1 458 0
 1167 0094 F1EE0C7A 		vmov.f32	s15, #7.0e+0
 1168 0098 B4EEE78A 		vcmpe.f32	s16, s15
 1169 009c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1170 00a0 0CDC     		bgt	.L101
 1171              	.L92:
 466:Src/adc.c     ****       HAL_Delay(200);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 31


 1172              		.loc 1 466 0 discriminator 1
 1173 00a2 0320     		movs	r0, #3
 1174 00a4 FFF7FEFF 		bl	Gpio_FullColor
 1175              	.LVL63:
 467:Src/adc.c     ****       Gpio_FullColor(DARK);
 1176              		.loc 1 467 0 discriminator 1
 1177 00a8 C820     		movs	r0, #200
 1178 00aa FFF7FEFF 		bl	HAL_Delay
 1179              	.LVL64:
 468:Src/adc.c     ****       HAL_Delay(200);
 1180              		.loc 1 468 0 discriminator 1
 1181 00ae 0720     		movs	r0, #7
 1182 00b0 FFF7FEFF 		bl	Gpio_FullColor
 1183              	.LVL65:
 469:Src/adc.c     ****     }
 1184              		.loc 1 469 0 discriminator 1
 1185 00b4 C820     		movs	r0, #200
 1186 00b6 FFF7FEFF 		bl	HAL_Delay
 1187              	.LVL66:
 1188 00ba F2E7     		b	.L92
 1189              	.L101:
 460:Src/adc.c     ****   }
 1190              		.loc 1 460 0
 1191 00bc 0320     		movs	r0, #3
 1192 00be FFF7FEFF 		bl	Gpio_FullColor
 1193              	.LVL67:
 1194 00c2 E2E7     		b	.L83
 1195              	.L103:
 1196              		.align	2
 1197              	.L102:
 1198 00c4 00000000 		.word	0
 1199 00c8 00000000 		.word	hadc1
 1200 00cc 00F07F45 		.word	1166012416
 1201 00d0 CDCC4C40 		.word	1078774989
 1202 00d4 33335340 		.word	1079194419
 1203              		.cfi_endproc
 1204              	.LFE136:
 1206              		.comm	hdma_adc2,96,4
 1207              		.comm	hadc2,72,4
 1208              		.comm	hadc1,72,4
 1209              		.comm	cnt_100ms,1,1
 1210              		.comm	adc_counter,2,2
 1211              		.comm	ADCOntData,8,4
 1212              		.comm	ADCOffData,8,4
 1213              		.comm	ADCBuff,8,4
 1214              		.comm	sen_front_reference_f,2,2
 1215              		.comm	sen_r,30,4
 1216              		.comm	sen_fr,30,4
 1217              		.comm	sen_front,30,4
 1218              		.comm	sen_fl,30,4
 1219              		.comm	sen_l,30,4
 1220              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 1221              		.align	2
 1222              	.LC0:
 1223 0000 5372632F 		.ascii	"Src/adc.c\000"
 1223      6164632E 
 1223      6300
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 32


 1224              		.text
 1225              	.Letext0:
 1226              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1227              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1228              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1229              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1230              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1231              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1232              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1233              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1234              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1235              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1236              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1237              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1238              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1239              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1240              		.file 16 "Inc/adc.h"
 1241              		.file 17 "Inc/gpio.h"
 1242              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1243              		.file 19 "Inc/dma.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 33


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:116    .text.MX_ADC1_Init:0000005c $d
                            *COM*:00000048 hadc1
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:124    .text.MX_ADC2_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:131    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:283    .text.MX_ADC2_Init:000000b8 $d
                            *COM*:00000048 hadc2
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:291    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:298    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:453    .text.HAL_ADC_MspInit:000000c0 $d
                            *COM*:00000060 hdma_adc2
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:465    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:472    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:539    .text.HAL_ADC_MspDeInit:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:548    .text.Adc_SetSensorValue:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:555    .text.Adc_SetSensorValue:00000000 Adc_SetSensorValue
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:592    .text.Adc_SetSensorValue:00000028 $d
                            *COM*:0000001e sen_l
                            *COM*:0000001e sen_front
                            *COM*:00000002 sen_front_reference_f
                            *COM*:0000001e sen_r
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:600    .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:607    .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:677    .text.update_sensor_data:0000006c $d
                            *COM*:0000001e sen_fl
                            *COM*:0000001e sen_fr
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:686    .text.Adc_IrSensorStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:693    .text.Adc_IrSensorStart:00000000 Adc_IrSensorStart
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:719    .text.Adc_IrSensorStart:00000014 $d
                            *COM*:00000002 adc_counter
                            *COM*:00000008 ADCBuff
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:726    .text.Adc_IrSensorFinish:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:733    .text.Adc_IrSensorFinish:00000000 Adc_IrSensorFinish
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:766    .text.Adc_IrSensorFinish:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:772    .text.Adc_CheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:779    .text.Adc_CheckConvert:00000000 Adc_CheckConvert
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:817    .text.Adc_CheckConvert:00000024 $d
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:824    .text.Adc_GetSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:831    .text.Adc_GetSensor:00000000 Adc_GetSensor
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:1036   .text.Adc_GetSensor:0000012c $d
                            *COM*:00000008 ADCOffData
                            *COM*:00000008 ADCOntData
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:1050   .text.Adc_GetBatt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:1057   .text.Adc_GetBatt:00000000 Adc_GetBatt
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:1198   .text.Adc_GetBatt:000000c4 $d
                            *COM*:00000001 cnt_100ms
C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s:1221   .rodata.MX_ADC1_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccDLZAoJ.s 			page 34


HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_ADC_Start_DMA
HAL_GPIO_WritePin
HAL_ADC_Stop_DMA
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
Gpio_FullColor
HAL_Delay
