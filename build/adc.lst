ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB126:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 2


  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** #include "stdint.h"
  48:Src/adc.c     **** //define
  49:Src/adc.c     **** #define OFF_VALUE 0
  50:Src/adc.c     **** #define FRONT_VALUE 1
  51:Src/adc.c     **** #define SIDE_VALUE 2
  52:Src/adc.c     **** #define FINISH_CONVERT 3
  53:Src/adc.c     **** #define IRSENSOR_OFF 4
  54:Src/adc.c     **** 
  55:Src/adc.c     **** #define ADC_CONVERT_DATA_SIZE ((uint32_t)  4)
  56:Src/adc.c     **** 
  57:Src/adc.c     **** #define TRUE 1
  58:Src/adc.c     **** #define FALSE 0
  59:Src/adc.c     **** 
  60:Src/adc.c     **** //valuable
  61:Src/adc.c     **** sensor_t sen_l;
  62:Src/adc.c     **** sensor_t sen_fl;
  63:Src/adc.c     **** sensor_t sen_front;
  64:Src/adc.c     **** sensor_t sen_fr;
  65:Src/adc.c     **** sensor_t sen_r;
  66:Src/adc.c     **** 
  67:Src/adc.c     **** uint16_t ADCBuff[ADC_CONVERT_DATA_SIZE];
  68:Src/adc.c     **** uint16_t ADCOffData[ADC_CONVERT_DATA_SIZE];
  69:Src/adc.c     **** uint16_t ADCOntData[ADC_CONVERT_DATA_SIZE];
  70:Src/adc.c     **** int16_t adc_counter;
  71:Src/adc.c     **** /* USER CODE END 0 */
  72:Src/adc.c     **** 
  73:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  74:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  75:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
  76:Src/adc.c     **** 
  77:Src/adc.c     **** /* ADC1 init function */
  78:Src/adc.c     **** void MX_ADC1_Init(void)
  79:Src/adc.c     **** {
  28              		.loc 1 79 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 3


  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  80:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  81:Src/adc.c     **** 
  82:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  83:Src/adc.c     ****     */
  84:Src/adc.c     ****   hadc1.Instance = ADC1;
  39              		.loc 1 84 0
  40 0004 1548     		ldr	r0, .L7
  41 0006 164B     		ldr	r3, .L7+4
  42 0008 0360     		str	r3, [r0]
  85:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
  43              		.loc 1 85 0
  44 000a 0023     		movs	r3, #0
  45 000c 4360     		str	r3, [r0, #4]
  86:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  46              		.loc 1 86 0
  47 000e 8360     		str	r3, [r0, #8]
  87:Src/adc.c     ****   hadc1.Init.ScanConvMode = DISABLE;
  48              		.loc 1 87 0
  49 0010 0361     		str	r3, [r0, #16]
  88:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  50              		.loc 1 88 0
  51 0012 8361     		str	r3, [r0, #24]
  89:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  52              		.loc 1 89 0
  53 0014 0362     		str	r3, [r0, #32]
  90:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  54              		.loc 1 90 0
  55 0016 C362     		str	r3, [r0, #44]
  91:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  56              		.loc 1 91 0
  57 0018 124A     		ldr	r2, .L7+8
  58 001a 8262     		str	r2, [r0, #40]
  92:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  59              		.loc 1 92 0
  60 001c C360     		str	r3, [r0, #12]
  93:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  61              		.loc 1 93 0
  62 001e 0122     		movs	r2, #1
  63 0020 C261     		str	r2, [r0, #28]
  94:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  64              		.loc 1 94 0
  65 0022 0363     		str	r3, [r0, #48]
  95:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  66              		.loc 1 95 0
  67 0024 4261     		str	r2, [r0, #20]
  96:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  68              		.loc 1 96 0
  69 0026 FFF7FEFF 		bl	HAL_ADC_Init
  70              	.LVL0:
  71 002a 68B9     		cbnz	r0, .L5
  72              	.L2:
  97:Src/adc.c     ****   {
  98:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  99:Src/adc.c     ****   }
 100:Src/adc.c     **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 4


 101:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 102:Src/adc.c     ****     */
 103:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_15;
  73              		.loc 1 103 0
  74 002c 0F23     		movs	r3, #15
  75 002e 0093     		str	r3, [sp]
 104:Src/adc.c     ****   sConfig.Rank = 1;
  76              		.loc 1 104 0
  77 0030 0123     		movs	r3, #1
  78 0032 0193     		str	r3, [sp, #4]
 105:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
  79              		.loc 1 105 0
  80 0034 0023     		movs	r3, #0
  81 0036 0293     		str	r3, [sp, #8]
 106:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  82              		.loc 1 106 0
  83 0038 6946     		mov	r1, sp
  84 003a 0848     		ldr	r0, .L7
  85 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  86              	.LVL1:
  87 0040 38B9     		cbnz	r0, .L6
  88              	.L1:
 107:Src/adc.c     ****   {
 108:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 109:Src/adc.c     ****   }
 110:Src/adc.c     **** 
 111:Src/adc.c     **** }
  89              		.loc 1 111 0
  90 0042 05B0     		add	sp, sp, #20
  91              	.LCFI2:
  92              		.cfi_remember_state
  93              		.cfi_def_cfa_offset 4
  94              		@ sp needed
  95 0044 5DF804FB 		ldr	pc, [sp], #4
  96              	.L5:
  97              	.LCFI3:
  98              		.cfi_restore_state
  98:Src/adc.c     ****   }
  99              		.loc 1 98 0
 100 0048 6221     		movs	r1, #98
 101 004a 0748     		ldr	r0, .L7+12
 102 004c FFF7FEFF 		bl	_Error_Handler
 103              	.LVL2:
 104 0050 ECE7     		b	.L2
 105              	.L6:
 108:Src/adc.c     ****   }
 106              		.loc 1 108 0
 107 0052 6C21     		movs	r1, #108
 108 0054 0448     		ldr	r0, .L7+12
 109 0056 FFF7FEFF 		bl	_Error_Handler
 110              	.LVL3:
 111              		.loc 1 111 0
 112 005a F2E7     		b	.L1
 113              	.L8:
 114              		.align	2
 115              	.L7:
 116 005c 00000000 		.word	hadc1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 5


 117 0060 00200140 		.word	1073815552
 118 0064 0100000F 		.word	251658241
 119 0068 00000000 		.word	.LC0
 120              		.cfi_endproc
 121              	.LFE126:
 123              		.section	.text.MX_ADC2_Init,"ax",%progbits
 124              		.align	1
 125              		.global	MX_ADC2_Init
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	MX_ADC2_Init:
 132              	.LFB127:
 112:Src/adc.c     **** /* ADC2 init function */
 113:Src/adc.c     **** void MX_ADC2_Init(void)
 114:Src/adc.c     **** {
 133              		.loc 1 114 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 16
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 00B5     		push	{lr}
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 14, -4
 141 0002 85B0     		sub	sp, sp, #20
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 24
 115:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 116:Src/adc.c     **** 
 117:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 118:Src/adc.c     ****     */
 119:Src/adc.c     ****   hadc2.Instance = ADC2;
 144              		.loc 1 119 0
 145 0004 2C48     		ldr	r0, .L21
 146 0006 2D4B     		ldr	r3, .L21+4
 147 0008 0360     		str	r3, [r0]
 120:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 148              		.loc 1 120 0
 149 000a 0022     		movs	r2, #0
 150 000c 4260     		str	r2, [r0, #4]
 121:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_10B;
 151              		.loc 1 121 0
 152 000e 4FF08073 		mov	r3, #16777216
 153 0012 8360     		str	r3, [r0, #8]
 122:Src/adc.c     ****   hadc2.Init.ScanConvMode = ENABLE;
 154              		.loc 1 122 0
 155 0014 0123     		movs	r3, #1
 156 0016 0361     		str	r3, [r0, #16]
 123:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 157              		.loc 1 123 0
 158 0018 8361     		str	r3, [r0, #24]
 124:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 159              		.loc 1 124 0
 160 001a 0262     		str	r2, [r0, #32]
 125:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 161              		.loc 1 125 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 6


 162 001c C262     		str	r2, [r0, #44]
 126:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 163              		.loc 1 126 0
 164 001e 2849     		ldr	r1, .L21+8
 165 0020 8162     		str	r1, [r0, #40]
 127:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 166              		.loc 1 127 0
 167 0022 C260     		str	r2, [r0, #12]
 128:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 4;
 168              		.loc 1 128 0
 169 0024 0422     		movs	r2, #4
 170 0026 C261     		str	r2, [r0, #28]
 129:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 171              		.loc 1 129 0
 172 0028 0363     		str	r3, [r0, #48]
 130:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 173              		.loc 1 130 0
 174 002a 4361     		str	r3, [r0, #20]
 131:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 175              		.loc 1 131 0
 176 002c FFF7FEFF 		bl	HAL_ADC_Init
 177              	.LVL4:
 178 0030 40BB     		cbnz	r0, .L16
 179              	.L10:
 132:Src/adc.c     ****   {
 133:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 134:Src/adc.c     ****   }
 135:Src/adc.c     **** 
 136:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 137:Src/adc.c     ****     */
 138:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 180              		.loc 1 138 0
 181 0032 0223     		movs	r3, #2
 182 0034 0093     		str	r3, [sp]
 139:Src/adc.c     ****   sConfig.Rank = 1;
 183              		.loc 1 139 0
 184 0036 0123     		movs	r3, #1
 185 0038 0193     		str	r3, [sp, #4]
 140:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 186              		.loc 1 140 0
 187 003a 0023     		movs	r3, #0
 188 003c 0293     		str	r3, [sp, #8]
 141:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 189              		.loc 1 141 0
 190 003e 6946     		mov	r1, sp
 191 0040 1D48     		ldr	r0, .L21
 192 0042 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 193              	.LVL5:
 194 0046 10BB     		cbnz	r0, .L17
 195              	.L11:
 142:Src/adc.c     ****   {
 143:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 144:Src/adc.c     ****   }
 145:Src/adc.c     **** 
 146:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 147:Src/adc.c     ****     */
 148:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 7


 196              		.loc 1 148 0
 197 0048 0323     		movs	r3, #3
 198 004a 0093     		str	r3, [sp]
 149:Src/adc.c     ****   sConfig.Rank = 2;
 199              		.loc 1 149 0
 200 004c 0223     		movs	r3, #2
 201 004e 0193     		str	r3, [sp, #4]
 150:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 202              		.loc 1 150 0
 203 0050 6946     		mov	r1, sp
 204 0052 1948     		ldr	r0, .L21
 205 0054 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 206              	.LVL6:
 207 0058 F0B9     		cbnz	r0, .L18
 208              	.L12:
 151:Src/adc.c     ****   {
 152:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 153:Src/adc.c     ****   }
 154:Src/adc.c     **** 
 155:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 156:Src/adc.c     ****     */
 157:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_10;
 209              		.loc 1 157 0
 210 005a 0A23     		movs	r3, #10
 211 005c 0093     		str	r3, [sp]
 158:Src/adc.c     ****   sConfig.Rank = 3;
 212              		.loc 1 158 0
 213 005e 0323     		movs	r3, #3
 214 0060 0193     		str	r3, [sp, #4]
 159:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 215              		.loc 1 159 0
 216 0062 6946     		mov	r1, sp
 217 0064 1448     		ldr	r0, .L21
 218 0066 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 219              	.LVL7:
 220 006a D0B9     		cbnz	r0, .L19
 221              	.L13:
 160:Src/adc.c     ****   {
 161:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 162:Src/adc.c     ****   }
 163:Src/adc.c     **** 
 164:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 165:Src/adc.c     ****     */
 166:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_11;
 222              		.loc 1 166 0
 223 006c 0B23     		movs	r3, #11
 224 006e 0093     		str	r3, [sp]
 167:Src/adc.c     ****   sConfig.Rank = 4;
 225              		.loc 1 167 0
 226 0070 0423     		movs	r3, #4
 227 0072 0193     		str	r3, [sp, #4]
 168:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 228              		.loc 1 168 0
 229 0074 6946     		mov	r1, sp
 230 0076 1048     		ldr	r0, .L21
 231 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 232              	.LVL8:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 8


 233 007c B0B9     		cbnz	r0, .L20
 234              	.L9:
 169:Src/adc.c     ****   {
 170:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 171:Src/adc.c     ****   }
 172:Src/adc.c     **** 
 173:Src/adc.c     **** }
 235              		.loc 1 173 0
 236 007e 05B0     		add	sp, sp, #20
 237              	.LCFI6:
 238              		.cfi_remember_state
 239              		.cfi_def_cfa_offset 4
 240              		@ sp needed
 241 0080 5DF804FB 		ldr	pc, [sp], #4
 242              	.L16:
 243              	.LCFI7:
 244              		.cfi_restore_state
 133:Src/adc.c     ****   }
 245              		.loc 1 133 0
 246 0084 8521     		movs	r1, #133
 247 0086 0F48     		ldr	r0, .L21+12
 248 0088 FFF7FEFF 		bl	_Error_Handler
 249              	.LVL9:
 250 008c D1E7     		b	.L10
 251              	.L17:
 143:Src/adc.c     ****   }
 252              		.loc 1 143 0
 253 008e 8F21     		movs	r1, #143
 254 0090 0C48     		ldr	r0, .L21+12
 255 0092 FFF7FEFF 		bl	_Error_Handler
 256              	.LVL10:
 257 0096 D7E7     		b	.L11
 258              	.L18:
 152:Src/adc.c     ****   }
 259              		.loc 1 152 0
 260 0098 9821     		movs	r1, #152
 261 009a 0A48     		ldr	r0, .L21+12
 262 009c FFF7FEFF 		bl	_Error_Handler
 263              	.LVL11:
 264 00a0 DBE7     		b	.L12
 265              	.L19:
 161:Src/adc.c     ****   }
 266              		.loc 1 161 0
 267 00a2 A121     		movs	r1, #161
 268 00a4 0748     		ldr	r0, .L21+12
 269 00a6 FFF7FEFF 		bl	_Error_Handler
 270              	.LVL12:
 271 00aa DFE7     		b	.L13
 272              	.L20:
 170:Src/adc.c     ****   }
 273              		.loc 1 170 0
 274 00ac AA21     		movs	r1, #170
 275 00ae 0548     		ldr	r0, .L21+12
 276 00b0 FFF7FEFF 		bl	_Error_Handler
 277              	.LVL13:
 278              		.loc 1 173 0
 279 00b4 E3E7     		b	.L9
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 9


 280              	.L22:
 281 00b6 00BF     		.align	2
 282              	.L21:
 283 00b8 00000000 		.word	hadc2
 284 00bc 00210140 		.word	1073815808
 285 00c0 0100000F 		.word	251658241
 286 00c4 00000000 		.word	.LC0
 287              		.cfi_endproc
 288              	.LFE127:
 290              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_ADC_MspInit
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	HAL_ADC_MspInit:
 299              	.LFB128:
 174:Src/adc.c     **** 
 175:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 176:Src/adc.c     **** {
 300              		.loc 1 176 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 32
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              	.LVL14:
 305 0000 70B5     		push	{r4, r5, r6, lr}
 306              	.LCFI8:
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 4, -16
 309              		.cfi_offset 5, -12
 310              		.cfi_offset 6, -8
 311              		.cfi_offset 14, -4
 312 0002 88B0     		sub	sp, sp, #32
 313              	.LCFI9:
 314              		.cfi_def_cfa_offset 48
 177:Src/adc.c     **** 
 178:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 179:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 315              		.loc 1 179 0
 316 0004 0368     		ldr	r3, [r0]
 317 0006 2E4A     		ldr	r2, .L31
 318 0008 9342     		cmp	r3, r2
 319 000a 05D0     		beq	.L28
 320 000c 0446     		mov	r4, r0
 180:Src/adc.c     ****   {
 181:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 182:Src/adc.c     **** 
 183:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 184:Src/adc.c     ****     /* ADC1 clock enable */
 185:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 186:Src/adc.c     ****   
 187:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 188:Src/adc.c     ****     PC5     ------> ADC1_IN15 
 189:Src/adc.c     ****     */
 190:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5;
 191:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 10


 192:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 193:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 194:Src/adc.c     **** 
 195:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 196:Src/adc.c     **** 
 197:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 198:Src/adc.c     ****   }
 199:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 321              		.loc 1 199 0
 322 000e 2D4A     		ldr	r2, .L31+4
 323 0010 9342     		cmp	r3, r2
 324 0012 17D0     		beq	.L29
 325              	.LVL15:
 326              	.L23:
 200:Src/adc.c     ****   {
 201:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 202:Src/adc.c     **** 
 203:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 204:Src/adc.c     ****     /* ADC2 clock enable */
 205:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_ENABLE();
 206:Src/adc.c     ****   
 207:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 208:Src/adc.c     ****     PC0     ------> ADC2_IN10
 209:Src/adc.c     ****     PC1     ------> ADC2_IN11
 210:Src/adc.c     ****     PA2     ------> ADC2_IN2
 211:Src/adc.c     ****     PA3     ------> ADC2_IN3 
 212:Src/adc.c     ****     */
 213:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 214:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 215:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 216:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 217:Src/adc.c     **** 
 218:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 219:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 220:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 221:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222:Src/adc.c     **** 
 223:Src/adc.c     ****     /* ADC2 DMA Init */
 224:Src/adc.c     ****     /* ADC2 Init */
 225:Src/adc.c     ****     hdma_adc2.Instance = DMA2_Stream2;
 226:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 227:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 228:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 229:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 230:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 231:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 232:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_NORMAL;
 233:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 234:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 235:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 236:Src/adc.c     ****     {
 237:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 238:Src/adc.c     ****     }
 239:Src/adc.c     **** 
 240:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc2);
 241:Src/adc.c     **** 
 242:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 11


 243:Src/adc.c     **** 
 244:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 245:Src/adc.c     ****   }
 246:Src/adc.c     **** }
 327              		.loc 1 246 0
 328 0014 08B0     		add	sp, sp, #32
 329              	.LCFI10:
 330              		.cfi_remember_state
 331              		.cfi_def_cfa_offset 16
 332              		@ sp needed
 333 0016 70BD     		pop	{r4, r5, r6, pc}
 334              	.LVL16:
 335              	.L28:
 336              	.LCFI11:
 337              		.cfi_restore_state
 338              	.LBB2:
 185:Src/adc.c     ****   
 339              		.loc 1 185 0
 340 0018 0021     		movs	r1, #0
 341 001a 0191     		str	r1, [sp, #4]
 342 001c 2A4B     		ldr	r3, .L31+8
 343 001e 5A6C     		ldr	r2, [r3, #68]
 344 0020 42F48072 		orr	r2, r2, #256
 345 0024 5A64     		str	r2, [r3, #68]
 346 0026 5B6C     		ldr	r3, [r3, #68]
 347 0028 03F48073 		and	r3, r3, #256
 348 002c 0193     		str	r3, [sp, #4]
 349 002e 019B     		ldr	r3, [sp, #4]
 350              	.LBE2:
 190:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 351              		.loc 1 190 0
 352 0030 2023     		movs	r3, #32
 353 0032 0393     		str	r3, [sp, #12]
 191:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 354              		.loc 1 191 0
 355 0034 0323     		movs	r3, #3
 356 0036 0493     		str	r3, [sp, #16]
 192:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 357              		.loc 1 192 0
 358 0038 0591     		str	r1, [sp, #20]
 193:Src/adc.c     **** 
 359              		.loc 1 193 0
 360 003a 03A9     		add	r1, sp, #12
 361 003c 2348     		ldr	r0, .L31+12
 362              	.LVL17:
 363 003e FFF7FEFF 		bl	HAL_GPIO_Init
 364              	.LVL18:
 365 0042 E7E7     		b	.L23
 366              	.LVL19:
 367              	.L29:
 368              	.LBB3:
 205:Src/adc.c     ****   
 369              		.loc 1 205 0
 370 0044 0025     		movs	r5, #0
 371 0046 0295     		str	r5, [sp, #8]
 372 0048 1F4B     		ldr	r3, .L31+8
 373 004a 5A6C     		ldr	r2, [r3, #68]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 12


 374 004c 42F40072 		orr	r2, r2, #512
 375 0050 5A64     		str	r2, [r3, #68]
 376 0052 5B6C     		ldr	r3, [r3, #68]
 377 0054 03F40073 		and	r3, r3, #512
 378 0058 0293     		str	r3, [sp, #8]
 379 005a 029B     		ldr	r3, [sp, #8]
 380              	.LBE3:
 213:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 381              		.loc 1 213 0
 382 005c 0326     		movs	r6, #3
 383 005e 0396     		str	r6, [sp, #12]
 214:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 384              		.loc 1 214 0
 385 0060 0496     		str	r6, [sp, #16]
 215:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 386              		.loc 1 215 0
 387 0062 0595     		str	r5, [sp, #20]
 216:Src/adc.c     **** 
 388              		.loc 1 216 0
 389 0064 03A9     		add	r1, sp, #12
 390 0066 1948     		ldr	r0, .L31+12
 391              	.LVL20:
 392 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 393              	.LVL21:
 218:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 394              		.loc 1 218 0
 395 006c 0C23     		movs	r3, #12
 396 006e 0393     		str	r3, [sp, #12]
 219:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 219 0
 398 0070 0496     		str	r6, [sp, #16]
 220:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 399              		.loc 1 220 0
 400 0072 0595     		str	r5, [sp, #20]
 221:Src/adc.c     **** 
 401              		.loc 1 221 0
 402 0074 0DEB0301 		add	r1, sp, r3
 403 0078 1548     		ldr	r0, .L31+16
 404 007a FFF7FEFF 		bl	HAL_GPIO_Init
 405              	.LVL22:
 225:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 406              		.loc 1 225 0
 407 007e 1548     		ldr	r0, .L31+20
 408 0080 154B     		ldr	r3, .L31+24
 409 0082 0360     		str	r3, [r0]
 226:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 410              		.loc 1 226 0
 411 0084 4FF00073 		mov	r3, #33554432
 412 0088 4360     		str	r3, [r0, #4]
 227:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 413              		.loc 1 227 0
 414 008a 8560     		str	r5, [r0, #8]
 228:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 415              		.loc 1 228 0
 416 008c C560     		str	r5, [r0, #12]
 229:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 417              		.loc 1 229 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 13


 418 008e 4FF48063 		mov	r3, #1024
 419 0092 0361     		str	r3, [r0, #16]
 230:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 420              		.loc 1 230 0
 421 0094 4FF40063 		mov	r3, #2048
 422 0098 4361     		str	r3, [r0, #20]
 231:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_NORMAL;
 423              		.loc 1 231 0
 424 009a 4FF40053 		mov	r3, #8192
 425 009e 8361     		str	r3, [r0, #24]
 232:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 426              		.loc 1 232 0
 427 00a0 C561     		str	r5, [r0, #28]
 233:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 428              		.loc 1 233 0
 429 00a2 0562     		str	r5, [r0, #32]
 234:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 430              		.loc 1 234 0
 431 00a4 4562     		str	r5, [r0, #36]
 235:Src/adc.c     ****     {
 432              		.loc 1 235 0
 433 00a6 FFF7FEFF 		bl	HAL_DMA_Init
 434              	.LVL23:
 435 00aa 18B9     		cbnz	r0, .L30
 436              	.L26:
 240:Src/adc.c     **** 
 437              		.loc 1 240 0
 438 00ac 094B     		ldr	r3, .L31+20
 439 00ae A363     		str	r3, [r4, #56]
 440 00b0 9C63     		str	r4, [r3, #56]
 441              		.loc 1 246 0
 442 00b2 AFE7     		b	.L23
 443              	.L30:
 237:Src/adc.c     ****     }
 444              		.loc 1 237 0
 445 00b4 ED21     		movs	r1, #237
 446 00b6 0948     		ldr	r0, .L31+28
 447 00b8 FFF7FEFF 		bl	_Error_Handler
 448              	.LVL24:
 449 00bc F6E7     		b	.L26
 450              	.L32:
 451 00be 00BF     		.align	2
 452              	.L31:
 453 00c0 00200140 		.word	1073815552
 454 00c4 00210140 		.word	1073815808
 455 00c8 00380240 		.word	1073887232
 456 00cc 00080240 		.word	1073874944
 457 00d0 00000240 		.word	1073872896
 458 00d4 00000000 		.word	hdma_adc2
 459 00d8 40640240 		.word	1073898560
 460 00dc 00000000 		.word	.LC0
 461              		.cfi_endproc
 462              	.LFE128:
 464              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 465              		.align	1
 466              		.global	HAL_ADC_MspDeInit
 467              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 14


 468              		.thumb
 469              		.thumb_func
 470              		.fpu fpv4-sp-d16
 472              	HAL_ADC_MspDeInit:
 473              	.LFB129:
 247:Src/adc.c     **** 
 248:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 249:Src/adc.c     **** {
 474              		.loc 1 249 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL25:
 479 0000 10B5     		push	{r4, lr}
 480              	.LCFI12:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 4, -8
 483              		.cfi_offset 14, -4
 250:Src/adc.c     **** 
 251:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 484              		.loc 1 251 0
 485 0002 0368     		ldr	r3, [r0]
 486 0004 114A     		ldr	r2, .L39
 487 0006 9342     		cmp	r3, r2
 488 0008 04D0     		beq	.L37
 489 000a 0446     		mov	r4, r0
 252:Src/adc.c     ****   {
 253:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 254:Src/adc.c     **** 
 255:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 256:Src/adc.c     ****     /* Peripheral clock disable */
 257:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 258:Src/adc.c     ****   
 259:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 260:Src/adc.c     ****     PC5     ------> ADC1_IN15 
 261:Src/adc.c     ****     */
 262:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_5);
 263:Src/adc.c     **** 
 264:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 265:Src/adc.c     **** 
 266:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 267:Src/adc.c     ****   }
 268:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 490              		.loc 1 268 0
 491 000c 104A     		ldr	r2, .L39+4
 492 000e 9342     		cmp	r3, r2
 493 0010 0BD0     		beq	.L38
 494              	.LVL26:
 495              	.L33:
 269:Src/adc.c     ****   {
 270:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 271:Src/adc.c     **** 
 272:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 273:Src/adc.c     ****     /* Peripheral clock disable */
 274:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_DISABLE();
 275:Src/adc.c     ****   
 276:Src/adc.c     ****     /**ADC2 GPIO Configuration    
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 15


 277:Src/adc.c     ****     PC0     ------> ADC2_IN10
 278:Src/adc.c     ****     PC1     ------> ADC2_IN11
 279:Src/adc.c     ****     PA2     ------> ADC2_IN2
 280:Src/adc.c     ****     PA3     ------> ADC2_IN3 
 281:Src/adc.c     ****     */
 282:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_1);
 283:Src/adc.c     **** 
 284:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 285:Src/adc.c     **** 
 286:Src/adc.c     ****     /* ADC2 DMA DeInit */
 287:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 288:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 289:Src/adc.c     **** 
 290:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 291:Src/adc.c     ****   }
 292:Src/adc.c     **** } 
 496              		.loc 1 292 0
 497 0012 10BD     		pop	{r4, pc}
 498              	.LVL27:
 499              	.L37:
 257:Src/adc.c     ****   
 500              		.loc 1 257 0
 501 0014 02F58C32 		add	r2, r2, #71680
 502 0018 536C     		ldr	r3, [r2, #68]
 503 001a 23F48073 		bic	r3, r3, #256
 504 001e 5364     		str	r3, [r2, #68]
 262:Src/adc.c     **** 
 505              		.loc 1 262 0
 506 0020 2021     		movs	r1, #32
 507 0022 0C48     		ldr	r0, .L39+8
 508              	.LVL28:
 509 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 510              	.LVL29:
 511 0028 F3E7     		b	.L33
 512              	.LVL30:
 513              	.L38:
 274:Src/adc.c     ****   
 514              		.loc 1 274 0
 515 002a 0B4A     		ldr	r2, .L39+12
 516 002c 536C     		ldr	r3, [r2, #68]
 517 002e 23F40073 		bic	r3, r3, #512
 518 0032 5364     		str	r3, [r2, #68]
 282:Src/adc.c     **** 
 519              		.loc 1 282 0
 520 0034 0321     		movs	r1, #3
 521 0036 0748     		ldr	r0, .L39+8
 522              	.LVL31:
 523 0038 FFF7FEFF 		bl	HAL_GPIO_DeInit
 524              	.LVL32:
 284:Src/adc.c     **** 
 525              		.loc 1 284 0
 526 003c 0C21     		movs	r1, #12
 527 003e 0748     		ldr	r0, .L39+16
 528 0040 FFF7FEFF 		bl	HAL_GPIO_DeInit
 529              	.LVL33:
 287:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 530              		.loc 1 287 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 16


 531 0044 A06B     		ldr	r0, [r4, #56]
 532 0046 FFF7FEFF 		bl	HAL_DMA_DeInit
 533              	.LVL34:
 534              		.loc 1 292 0
 535 004a E2E7     		b	.L33
 536              	.L40:
 537              		.align	2
 538              	.L39:
 539 004c 00200140 		.word	1073815552
 540 0050 00210140 		.word	1073815808
 541 0054 00080240 		.word	1073874944
 542 0058 00380240 		.word	1073887232
 543 005c 00000240 		.word	1073872896
 544              		.cfi_endproc
 545              	.LFE129:
 547              		.section	.text.Adc_SetSensorValue,"ax",%progbits
 548              		.align	1
 549              		.global	Adc_SetSensorValue
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	Adc_SetSensorValue:
 556              	.LFB130:
 293:Src/adc.c     **** 
 294:Src/adc.c     **** /* USER CODE BEGIN 1 */
 295:Src/adc.c     **** void Adc_SetSensorValue(void){
 557              		.loc 1 295 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 296:Src/adc.c     ****   sen_l.reference = 119;
 562              		.loc 1 296 0
 563 0000 0A4B     		ldr	r3, .L42
 564 0002 7722     		movs	r2, #119
 565 0004 9A80     		strh	r2, [r3, #4]	@ movhi
 297:Src/adc.c     ****   sen_l.threshold = 90;
 566              		.loc 1 297 0
 567 0006 5A22     		movs	r2, #90
 568 0008 DA80     		strh	r2, [r3, #6]	@ movhi
 298:Src/adc.c     **** 
 299:Src/adc.c     ****   sen_fl.reference = 191;
 569              		.loc 1 299 0
 570 000a 094B     		ldr	r3, .L42+4
 571 000c BF22     		movs	r2, #191
 572 000e 9A80     		strh	r2, [r3, #4]	@ movhi
 300:Src/adc.c     **** 
 301:Src/adc.c     ****   sen_front.reference = 195;
 573              		.loc 1 301 0
 574 0010 084B     		ldr	r3, .L42+8
 575 0012 C322     		movs	r2, #195
 576 0014 9A80     		strh	r2, [r3, #4]	@ movhi
 302:Src/adc.c     ****   sen_front.threshold = 120;
 577              		.loc 1 302 0
 578 0016 7822     		movs	r2, #120
 579 0018 DA80     		strh	r2, [r3, #6]	@ movhi
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 17


 303:Src/adc.c     **** 
 304:Src/adc.c     ****   sen_fr.reference = 201;
 580              		.loc 1 304 0
 581 001a 074B     		ldr	r3, .L42+12
 582 001c C921     		movs	r1, #201
 583 001e 9980     		strh	r1, [r3, #4]	@ movhi
 305:Src/adc.c     **** 
 306:Src/adc.c     ****   sen_r.reference = 146;
 584              		.loc 1 306 0
 585 0020 064B     		ldr	r3, .L42+16
 586 0022 9221     		movs	r1, #146
 587 0024 9980     		strh	r1, [r3, #4]	@ movhi
 307:Src/adc.c     ****   sen_r.threshold = 120;
 588              		.loc 1 307 0
 589 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 308:Src/adc.c     **** }
 590              		.loc 1 308 0
 591 0028 7047     		bx	lr
 592              	.L43:
 593 002a 00BF     		.align	2
 594              	.L42:
 595 002c 00000000 		.word	sen_l
 596 0030 00000000 		.word	sen_fl
 597 0034 00000000 		.word	sen_front
 598 0038 00000000 		.word	sen_fr
 599 003c 00000000 		.word	sen_r
 600              		.cfi_endproc
 601              	.LFE130:
 603              		.section	.text.update_sensor_data,"ax",%progbits
 604              		.align	1
 605              		.global	update_sensor_data
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv4-sp-d16
 611              	update_sensor_data:
 612              	.LFB131:
 309:Src/adc.c     **** 
 310:Src/adc.c     **** void update_sensor_data(void)
 311:Src/adc.c     **** {
 613              		.loc 1 311 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 312:Src/adc.c     **** 
 313:Src/adc.c     ****   sen_front.now = (sen_fl.now + sen_fr.now) / 2;
 618              		.loc 1 313 0
 619 0000 1A4B     		ldr	r3, .L52
 620 0002 B3F90030 		ldrsh	r3, [r3]
 621 0006 1A4A     		ldr	r2, .L52+4
 622 0008 B2F90020 		ldrsh	r2, [r2]
 623 000c 1344     		add	r3, r3, r2
 624 000e 03EBD373 		add	r3, r3, r3, lsr #31
 625 0012 43F34F03 		sbfx	r3, r3, #1, #16
 626 0016 174A     		ldr	r2, .L52+8
 627 0018 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 18


 314:Src/adc.c     **** 
 315:Src/adc.c     ****   if (sen_front.now < sen_front.threshold)
 628              		.loc 1 315 0
 629 001a B2F90620 		ldrsh	r2, [r2, #6]
 630 001e 9342     		cmp	r3, r2
 631 0020 17DA     		bge	.L45
 316:Src/adc.c     ****   {
 317:Src/adc.c     ****     sen_front.is_wall = FALSE;
 632              		.loc 1 317 0
 633 0022 144B     		ldr	r3, .L52+8
 634 0024 0022     		movs	r2, #0
 635 0026 1A73     		strb	r2, [r3, #12]
 636              	.L46:
 318:Src/adc.c     ****   }
 319:Src/adc.c     ****   else
 320:Src/adc.c     ****   {
 321:Src/adc.c     ****     sen_front.is_wall = TRUE;
 322:Src/adc.c     ****   }
 323:Src/adc.c     **** 
 324:Src/adc.c     ****   if (sen_l.now < sen_l.threshold)
 637              		.loc 1 324 0
 638 0028 134B     		ldr	r3, .L52+12
 639 002a B3F90020 		ldrsh	r2, [r3]
 640 002e B3F90630 		ldrsh	r3, [r3, #6]
 641 0032 9A42     		cmp	r2, r3
 642 0034 11DA     		bge	.L47
 325:Src/adc.c     ****   {
 326:Src/adc.c     ****     sen_l.is_wall = FALSE;
 643              		.loc 1 326 0
 644 0036 104B     		ldr	r3, .L52+12
 645 0038 0022     		movs	r2, #0
 646 003a 1A73     		strb	r2, [r3, #12]
 647              	.L48:
 327:Src/adc.c     ****   }
 328:Src/adc.c     ****   else
 329:Src/adc.c     ****   {
 330:Src/adc.c     ****     sen_l.is_wall = TRUE;
 331:Src/adc.c     ****   }
 332:Src/adc.c     **** 
 333:Src/adc.c     ****   if (sen_r.now < sen_r.threshold)
 648              		.loc 1 333 0
 649 003c 0F4B     		ldr	r3, .L52+16
 650 003e B3F90020 		ldrsh	r2, [r3]
 651 0042 B3F90630 		ldrsh	r3, [r3, #6]
 652 0046 9A42     		cmp	r2, r3
 653 0048 0BDB     		blt	.L51
 334:Src/adc.c     ****   {
 335:Src/adc.c     ****     sen_r.is_wall = FALSE;
 336:Src/adc.c     ****   }
 337:Src/adc.c     ****   else
 338:Src/adc.c     ****   {
 339:Src/adc.c     ****     sen_r.is_wall = TRUE;
 654              		.loc 1 339 0
 655 004a 0C4B     		ldr	r3, .L52+16
 656 004c 0122     		movs	r2, #1
 657 004e 1A73     		strb	r2, [r3, #12]
 340:Src/adc.c     ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 19


 341:Src/adc.c     **** }
 658              		.loc 1 341 0
 659 0050 7047     		bx	lr
 660              	.L45:
 321:Src/adc.c     ****   }
 661              		.loc 1 321 0
 662 0052 084B     		ldr	r3, .L52+8
 663 0054 0122     		movs	r2, #1
 664 0056 1A73     		strb	r2, [r3, #12]
 665 0058 E6E7     		b	.L46
 666              	.L47:
 330:Src/adc.c     ****   }
 667              		.loc 1 330 0
 668 005a 074B     		ldr	r3, .L52+12
 669 005c 0122     		movs	r2, #1
 670 005e 1A73     		strb	r2, [r3, #12]
 671 0060 ECE7     		b	.L48
 672              	.L51:
 335:Src/adc.c     ****   }
 673              		.loc 1 335 0
 674 0062 064B     		ldr	r3, .L52+16
 675 0064 0022     		movs	r2, #0
 676 0066 1A73     		strb	r2, [r3, #12]
 677 0068 7047     		bx	lr
 678              	.L53:
 679 006a 00BF     		.align	2
 680              	.L52:
 681 006c 00000000 		.word	sen_fl
 682 0070 00000000 		.word	sen_fr
 683 0074 00000000 		.word	sen_front
 684 0078 00000000 		.word	sen_l
 685 007c 00000000 		.word	sen_r
 686              		.cfi_endproc
 687              	.LFE131:
 689              		.section	.text.Adc_IrSensorStart,"ax",%progbits
 690              		.align	1
 691              		.global	Adc_IrSensorStart
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	Adc_IrSensorStart:
 698              	.LFB132:
 342:Src/adc.c     **** 
 343:Src/adc.c     **** void Adc_IrSensorStart(void)
 344:Src/adc.c     **** {
 699              		.loc 1 344 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703 0000 08B5     		push	{r3, lr}
 704              	.LCFI13:
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 345:Src/adc.c     ****   adc_counter = 0;
 708              		.loc 1 345 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 20


 709 0002 044B     		ldr	r3, .L56
 710 0004 0022     		movs	r2, #0
 711 0006 1A80     		strh	r2, [r3]	@ movhi
 346:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 712              		.loc 1 346 0
 713 0008 0422     		movs	r2, #4
 714 000a 0349     		ldr	r1, .L56+4
 715 000c 0348     		ldr	r0, .L56+8
 716 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 717              	.LVL35:
 347:Src/adc.c     **** }
 718              		.loc 1 347 0
 719 0012 08BD     		pop	{r3, pc}
 720              	.L57:
 721              		.align	2
 722              	.L56:
 723 0014 00000000 		.word	adc_counter
 724 0018 00000000 		.word	ADCBuff
 725 001c 00000000 		.word	hadc2
 726              		.cfi_endproc
 727              	.LFE132:
 729              		.section	.text.Adc_IrSensorFinish,"ax",%progbits
 730              		.align	1
 731              		.global	Adc_IrSensorFinish
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	Adc_IrSensorFinish:
 738              	.LFB133:
 348:Src/adc.c     **** 
 349:Src/adc.c     **** void Adc_IrSensorFinish(void)
 350:Src/adc.c     **** {
 739              		.loc 1 350 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743 0000 10B5     		push	{r4, lr}
 744              	.LCFI14:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 4, -8
 747              		.cfi_offset 14, -4
 351:Src/adc.c     ****   adc_counter = IRSENSOR_OFF;
 748              		.loc 1 351 0
 749 0002 074B     		ldr	r3, .L60
 750 0004 0422     		movs	r2, #4
 751 0006 1A80     		strh	r2, [r3]	@ movhi
 352:Src/adc.c     ****   HAL_GPIO_WritePin(ir_front_GPIO_Port,ir_front_Pin,GPIO_PIN_RESET);
 752              		.loc 1 352 0
 753 0008 064C     		ldr	r4, .L60+4
 754 000a 0022     		movs	r2, #0
 755 000c 0221     		movs	r1, #2
 756 000e 2046     		mov	r0, r4
 757 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 758              	.LVL36:
 353:Src/adc.c     ****   HAL_GPIO_WritePin(ir_side_GPIO_Port,ir_side_Pin,GPIO_PIN_RESET);
 759              		.loc 1 353 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 21


 760 0014 0022     		movs	r2, #0
 761 0016 0121     		movs	r1, #1
 762 0018 2046     		mov	r0, r4
 763 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 764              	.LVL37:
 354:Src/adc.c     **** }
 765              		.loc 1 354 0
 766 001e 10BD     		pop	{r4, pc}
 767              	.L61:
 768              		.align	2
 769              	.L60:
 770 0020 00000000 		.word	adc_counter
 771 0024 00000240 		.word	1073872896
 772              		.cfi_endproc
 773              	.LFE133:
 775              		.section	.text.Adc_CheckConvert,"ax",%progbits
 776              		.align	1
 777              		.global	Adc_CheckConvert
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 781              		.fpu fpv4-sp-d16
 783              	Adc_CheckConvert:
 784              	.LFB134:
 355:Src/adc.c     **** 
 356:Src/adc.c     **** void Adc_CheckConvert(void)
 357:Src/adc.c     **** {
 785              		.loc 1 357 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789 0000 08B5     		push	{r3, lr}
 790              	.LCFI15:
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 3, -8
 793              		.cfi_offset 14, -4
 358:Src/adc.c     ****   if (adc_counter == FINISH_CONVERT)
 794              		.loc 1 358 0
 795 0002 104B     		ldr	r3, .L66
 796 0004 B3F90030 		ldrsh	r3, [r3]
 797 0008 032B     		cmp	r3, #3
 798 000a 00D0     		beq	.L65
 799              	.L62:
 359:Src/adc.c     ****   {
 360:Src/adc.c     ****     update_sensor_data();
 361:Src/adc.c     ****     adc_counter = 0;
 362:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 363:Src/adc.c     **** 
 364:Src/adc.c     ****     sen_l.diff_1ms = sen_l.now - sen_l.befor_1ms;
 365:Src/adc.c     ****     sen_l.befor_1ms = sen_l.now;
 366:Src/adc.c     **** 
 367:Src/adc.c     ****     sen_r.diff_1ms = sen_r.now - sen_r.befor_1ms;
 368:Src/adc.c     ****     sen_r.befor_1ms = sen_r.now;
 369:Src/adc.c     ****   }
 370:Src/adc.c     **** }
 800              		.loc 1 370 0
 801 000c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 22


 802              	.L65:
 360:Src/adc.c     ****     adc_counter = 0;
 803              		.loc 1 360 0
 804 000e FFF7FEFF 		bl	update_sensor_data
 805              	.LVL38:
 361:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 806              		.loc 1 361 0
 807 0012 0C4B     		ldr	r3, .L66
 808 0014 0022     		movs	r2, #0
 809 0016 1A80     		strh	r2, [r3]	@ movhi
 362:Src/adc.c     **** 
 810              		.loc 1 362 0
 811 0018 0422     		movs	r2, #4
 812 001a 0B49     		ldr	r1, .L66+4
 813 001c 0B48     		ldr	r0, .L66+8
 814 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 815              	.LVL39:
 364:Src/adc.c     ****     sen_l.befor_1ms = sen_l.now;
 816              		.loc 1 364 0
 817 0022 0B4B     		ldr	r3, .L66+12
 818 0024 B3F90010 		ldrsh	r1, [r3]
 819 0028 8AB2     		uxth	r2, r1
 820 002a 5888     		ldrh	r0, [r3, #2]
 821 002c 121A     		subs	r2, r2, r0
 822 002e 5A81     		strh	r2, [r3, #10]	@ movhi
 365:Src/adc.c     **** 
 823              		.loc 1 365 0
 824 0030 5980     		strh	r1, [r3, #2]	@ movhi
 367:Src/adc.c     ****     sen_r.befor_1ms = sen_r.now;
 825              		.loc 1 367 0
 826 0032 084B     		ldr	r3, .L66+16
 827 0034 B3F90010 		ldrsh	r1, [r3]
 828 0038 8AB2     		uxth	r2, r1
 829 003a 5888     		ldrh	r0, [r3, #2]
 830 003c 121A     		subs	r2, r2, r0
 831 003e 5A81     		strh	r2, [r3, #10]	@ movhi
 368:Src/adc.c     ****   }
 832              		.loc 1 368 0
 833 0040 5980     		strh	r1, [r3, #2]	@ movhi
 834              		.loc 1 370 0
 835 0042 E3E7     		b	.L62
 836              	.L67:
 837              		.align	2
 838              	.L66:
 839 0044 00000000 		.word	adc_counter
 840 0048 00000000 		.word	ADCBuff
 841 004c 00000000 		.word	hadc2
 842 0050 00000000 		.word	sen_l
 843 0054 00000000 		.word	sen_r
 844              		.cfi_endproc
 845              	.LFE134:
 847              		.section	.text.Adc_GetSensor,"ax",%progbits
 848              		.align	1
 849              		.global	Adc_GetSensor
 850              		.syntax unified
 851              		.thumb
 852              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 23


 853              		.fpu fpv4-sp-d16
 855              	Adc_GetSensor:
 856              	.LFB135:
 371:Src/adc.c     **** 
 372:Src/adc.c     **** // DMA の変換式を記�?
 373:Src/adc.c     **** void Adc_GetSensor(void)
 374:Src/adc.c     **** {
 857              		.loc 1 374 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 8
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861 0000 10B5     		push	{r4, lr}
 862              	.LCFI16:
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 4, -8
 865              		.cfi_offset 14, -4
 866 0002 82B0     		sub	sp, sp, #8
 867              	.LCFI17:
 868              		.cfi_def_cfa_offset 16
 375:Src/adc.c     ****   volatile unsigned char i;
 376:Src/adc.c     ****   switch (adc_counter)
 869              		.loc 1 376 0
 870 0004 494B     		ldr	r3, .L81
 871 0006 B3F90030 		ldrsh	r3, [r3]
 872 000a 012B     		cmp	r3, #1
 873 000c 2ED0     		beq	.L70
 874 000e 022B     		cmp	r3, #2
 875 0010 61D0     		beq	.L71
 876 0012 0BB1     		cbz	r3, .L80
 877              	.L68:
 377:Src/adc.c     ****   {
 378:Src/adc.c     ****   case OFF_VALUE:
 379:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 380:Src/adc.c     ****     ADCOffData[0] = ADCBuff[0];
 381:Src/adc.c     ****     ADCOffData[1] = ADCBuff[1];
 382:Src/adc.c     ****     ADCOffData[2] = ADCBuff[2];
 383:Src/adc.c     ****     ADCOffData[3] = ADCBuff[3];
 384:Src/adc.c     **** 
 385:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_SET);
 386:Src/adc.c     ****     
 387:Src/adc.c     ****     for (i = 0; i < 200; i++)
 388:Src/adc.c     ****     {
 389:Src/adc.c     ****     }
 390:Src/adc.c     ****     
 391:Src/adc.c     ****     adc_counter = FRONT_VALUE;
 392:Src/adc.c     **** 
 393:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 394:Src/adc.c     ****     break;
 395:Src/adc.c     **** 
 396:Src/adc.c     ****   case FRONT_VALUE:
 397:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 398:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 399:Src/adc.c     **** 
 400:Src/adc.c     ****     ADCOntData[1] = ADCBuff[1];
 401:Src/adc.c     ****     ADCOntData[2] = ADCBuff[2];
 402:Src/adc.c     **** 
 403:Src/adc.c     ****     //sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 24


 404:Src/adc.c     ****     sen_fl.now = ADCOntData[1] - ADCOffData[1];
 405:Src/adc.c     **** 
 406:Src/adc.c     ****     //sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 407:Src/adc.c     ****     sen_fr.now = ADCOntData[2] - ADCOffData[2];
 408:Src/adc.c     **** 
 409:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_SET);
 410:Src/adc.c     **** 
 411:Src/adc.c     ****     
 412:Src/adc.c     ****     for (i = 0; i < 200; i++)
 413:Src/adc.c     ****     {
 414:Src/adc.c     ****     }
 415:Src/adc.c     ****     
 416:Src/adc.c     ****     adc_counter = SIDE_VALUE;
 417:Src/adc.c     **** 
 418:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 419:Src/adc.c     ****     break;
 420:Src/adc.c     **** 
 421:Src/adc.c     ****   case SIDE_VALUE:
 422:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 423:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 424:Src/adc.c     **** 
 425:Src/adc.c     ****     ADCOntData[0] = ADCBuff[0];
 426:Src/adc.c     ****     ADCOntData[3] = ADCBuff[3];
 427:Src/adc.c     **** 
 428:Src/adc.c     ****     //sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 429:Src/adc.c     ****     sen_l.now = ADCOntData[0] - ADCOffData[0];
 430:Src/adc.c     **** 
 431:Src/adc.c     ****     //sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 432:Src/adc.c     ****     sen_r.now = ADCOntData[3] - ADCOffData[3];
 433:Src/adc.c     ****     
 434:Src/adc.c     ****     for (i = 0; i < 200; i++)
 435:Src/adc.c     ****     {
 436:Src/adc.c     ****     }
 437:Src/adc.c     ****     
 438:Src/adc.c     ****     adc_counter = FINISH_CONVERT;
 439:Src/adc.c     ****     break;
 440:Src/adc.c     **** 
 441:Src/adc.c     ****   default:
 442:Src/adc.c     ****     break;
 443:Src/adc.c     ****   }
 444:Src/adc.c     **** }
 878              		.loc 1 444 0
 879 0014 02B0     		add	sp, sp, #8
 880              	.LCFI18:
 881              		.cfi_remember_state
 882              		.cfi_def_cfa_offset 8
 883              		@ sp needed
 884 0016 10BD     		pop	{r4, pc}
 885              	.L80:
 886              	.LCFI19:
 887              		.cfi_restore_state
 379:Src/adc.c     ****     ADCOffData[0] = ADCBuff[0];
 888              		.loc 1 379 0
 889 0018 4548     		ldr	r0, .L81+4
 890 001a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 891              	.LVL40:
 380:Src/adc.c     ****     ADCOffData[1] = ADCBuff[1];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 25


 892              		.loc 1 380 0
 893 001e 454A     		ldr	r2, .L81+8
 894 0020 1188     		ldrh	r1, [r2]
 895 0022 454B     		ldr	r3, .L81+12
 896 0024 1980     		strh	r1, [r3]	@ movhi
 381:Src/adc.c     ****     ADCOffData[2] = ADCBuff[2];
 897              		.loc 1 381 0
 898 0026 5188     		ldrh	r1, [r2, #2]
 899 0028 5980     		strh	r1, [r3, #2]	@ movhi
 382:Src/adc.c     ****     ADCOffData[3] = ADCBuff[3];
 900              		.loc 1 382 0
 901 002a 9188     		ldrh	r1, [r2, #4]
 902 002c 9980     		strh	r1, [r3, #4]	@ movhi
 383:Src/adc.c     **** 
 903              		.loc 1 383 0
 904 002e D288     		ldrh	r2, [r2, #6]
 905 0030 DA80     		strh	r2, [r3, #6]	@ movhi
 385:Src/adc.c     ****     
 906              		.loc 1 385 0
 907 0032 0122     		movs	r2, #1
 908 0034 0221     		movs	r1, #2
 909 0036 4148     		ldr	r0, .L81+16
 910 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 911              	.LVL41:
 387:Src/adc.c     ****     {
 912              		.loc 1 387 0
 913 003c 0023     		movs	r3, #0
 914 003e 8DF80730 		strb	r3, [sp, #7]
 915 0042 05E0     		b	.L73
 916              	.L74:
 387:Src/adc.c     ****     {
 917              		.loc 1 387 0 is_stmt 0 discriminator 3
 918 0044 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 919 0048 0133     		adds	r3, r3, #1
 920 004a DBB2     		uxtb	r3, r3
 921 004c 8DF80730 		strb	r3, [sp, #7]
 922              	.L73:
 387:Src/adc.c     ****     {
 923              		.loc 1 387 0 discriminator 1
 924 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 925 0054 DBB2     		uxtb	r3, r3
 926 0056 C72B     		cmp	r3, #199
 927 0058 F4D9     		bls	.L74
 391:Src/adc.c     **** 
 928              		.loc 1 391 0 is_stmt 1
 929 005a 344B     		ldr	r3, .L81
 930 005c 0122     		movs	r2, #1
 931 005e 1A80     		strh	r2, [r3]	@ movhi
 393:Src/adc.c     ****     break;
 932              		.loc 1 393 0
 933 0060 0422     		movs	r2, #4
 934 0062 3449     		ldr	r1, .L81+8
 935 0064 3248     		ldr	r0, .L81+4
 936 0066 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 937              	.LVL42:
 394:Src/adc.c     **** 
 938              		.loc 1 394 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 26


 939 006a D3E7     		b	.L68
 940              	.L70:
 397:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 941              		.loc 1 397 0
 942 006c 3048     		ldr	r0, .L81+4
 943 006e FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 944              	.LVL43:
 398:Src/adc.c     **** 
 945              		.loc 1 398 0
 946 0072 324C     		ldr	r4, .L81+16
 947 0074 0022     		movs	r2, #0
 948 0076 0221     		movs	r1, #2
 949 0078 2046     		mov	r0, r4
 950 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 951              	.LVL44:
 400:Src/adc.c     ****     ADCOntData[2] = ADCBuff[2];
 952              		.loc 1 400 0
 953 007e 2D4B     		ldr	r3, .L81+8
 954 0080 5A88     		ldrh	r2, [r3, #2]
 955 0082 2F49     		ldr	r1, .L81+20
 956 0084 4A80     		strh	r2, [r1, #2]	@ movhi
 401:Src/adc.c     **** 
 957              		.loc 1 401 0
 958 0086 9B88     		ldrh	r3, [r3, #4]
 959 0088 8B80     		strh	r3, [r1, #4]	@ movhi
 404:Src/adc.c     **** 
 960              		.loc 1 404 0
 961 008a 2B49     		ldr	r1, .L81+12
 962 008c 4888     		ldrh	r0, [r1, #2]
 963 008e 121A     		subs	r2, r2, r0
 964 0090 2C48     		ldr	r0, .L81+24
 965 0092 0280     		strh	r2, [r0]	@ movhi
 407:Src/adc.c     **** 
 966              		.loc 1 407 0
 967 0094 8A88     		ldrh	r2, [r1, #4]
 968 0096 9B1A     		subs	r3, r3, r2
 969 0098 2B4A     		ldr	r2, .L81+28
 970 009a 1380     		strh	r3, [r2]	@ movhi
 409:Src/adc.c     **** 
 971              		.loc 1 409 0
 972 009c 0122     		movs	r2, #1
 973 009e 1146     		mov	r1, r2
 974 00a0 2046     		mov	r0, r4
 975 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 976              	.LVL45:
 412:Src/adc.c     ****     {
 977              		.loc 1 412 0
 978 00a6 0023     		movs	r3, #0
 979 00a8 8DF80730 		strb	r3, [sp, #7]
 980 00ac 05E0     		b	.L75
 981              	.L76:
 412:Src/adc.c     ****     {
 982              		.loc 1 412 0 is_stmt 0 discriminator 3
 983 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 984 00b2 0133     		adds	r3, r3, #1
 985 00b4 DBB2     		uxtb	r3, r3
 986 00b6 8DF80730 		strb	r3, [sp, #7]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 27


 987              	.L75:
 412:Src/adc.c     ****     {
 988              		.loc 1 412 0 discriminator 1
 989 00ba 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 990 00be DBB2     		uxtb	r3, r3
 991 00c0 C72B     		cmp	r3, #199
 992 00c2 F4D9     		bls	.L76
 416:Src/adc.c     **** 
 993              		.loc 1 416 0 is_stmt 1
 994 00c4 194B     		ldr	r3, .L81
 995 00c6 0222     		movs	r2, #2
 996 00c8 1A80     		strh	r2, [r3]	@ movhi
 418:Src/adc.c     ****     break;
 997              		.loc 1 418 0
 998 00ca 0422     		movs	r2, #4
 999 00cc 1949     		ldr	r1, .L81+8
 1000 00ce 1848     		ldr	r0, .L81+4
 1001 00d0 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1002              	.LVL46:
 419:Src/adc.c     **** 
 1003              		.loc 1 419 0
 1004 00d4 9EE7     		b	.L68
 1005              	.L71:
 422:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 1006              		.loc 1 422 0
 1007 00d6 1648     		ldr	r0, .L81+4
 1008 00d8 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 1009              	.LVL47:
 423:Src/adc.c     **** 
 1010              		.loc 1 423 0
 1011 00dc 0022     		movs	r2, #0
 1012 00de 0121     		movs	r1, #1
 1013 00e0 1648     		ldr	r0, .L81+16
 1014 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1015              	.LVL48:
 425:Src/adc.c     ****     ADCOntData[3] = ADCBuff[3];
 1016              		.loc 1 425 0
 1017 00e6 134B     		ldr	r3, .L81+8
 1018 00e8 1A88     		ldrh	r2, [r3]
 1019 00ea 1549     		ldr	r1, .L81+20
 1020 00ec 0A80     		strh	r2, [r1]	@ movhi
 426:Src/adc.c     **** 
 1021              		.loc 1 426 0
 1022 00ee DB88     		ldrh	r3, [r3, #6]
 1023 00f0 CB80     		strh	r3, [r1, #6]	@ movhi
 429:Src/adc.c     **** 
 1024              		.loc 1 429 0
 1025 00f2 1149     		ldr	r1, .L81+12
 1026 00f4 0888     		ldrh	r0, [r1]
 1027 00f6 121A     		subs	r2, r2, r0
 1028 00f8 1448     		ldr	r0, .L81+32
 1029 00fa 0280     		strh	r2, [r0]	@ movhi
 432:Src/adc.c     ****     
 1030              		.loc 1 432 0
 1031 00fc CA88     		ldrh	r2, [r1, #6]
 1032 00fe 9B1A     		subs	r3, r3, r2
 1033 0100 134A     		ldr	r2, .L81+36
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 28


 1034 0102 1380     		strh	r3, [r2]	@ movhi
 434:Src/adc.c     ****     {
 1035              		.loc 1 434 0
 1036 0104 0023     		movs	r3, #0
 1037 0106 8DF80730 		strb	r3, [sp, #7]
 1038 010a 05E0     		b	.L77
 1039              	.L78:
 434:Src/adc.c     ****     {
 1040              		.loc 1 434 0 is_stmt 0 discriminator 3
 1041 010c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1042 0110 0133     		adds	r3, r3, #1
 1043 0112 DBB2     		uxtb	r3, r3
 1044 0114 8DF80730 		strb	r3, [sp, #7]
 1045              	.L77:
 434:Src/adc.c     ****     {
 1046              		.loc 1 434 0 discriminator 1
 1047 0118 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1048 011c DBB2     		uxtb	r3, r3
 1049 011e C72B     		cmp	r3, #199
 1050 0120 F4D9     		bls	.L78
 438:Src/adc.c     ****     break;
 1051              		.loc 1 438 0 is_stmt 1
 1052 0122 024B     		ldr	r3, .L81
 1053 0124 0322     		movs	r2, #3
 1054 0126 1A80     		strh	r2, [r3]	@ movhi
 1055              		.loc 1 444 0
 1056 0128 74E7     		b	.L68
 1057              	.L82:
 1058 012a 00BF     		.align	2
 1059              	.L81:
 1060 012c 00000000 		.word	adc_counter
 1061 0130 00000000 		.word	hadc2
 1062 0134 00000000 		.word	ADCBuff
 1063 0138 00000000 		.word	ADCOffData
 1064 013c 00000240 		.word	1073872896
 1065 0140 00000000 		.word	ADCOntData
 1066 0144 00000000 		.word	sen_fl
 1067 0148 00000000 		.word	sen_fr
 1068 014c 00000000 		.word	sen_l
 1069 0150 00000000 		.word	sen_r
 1070              		.cfi_endproc
 1071              	.LFE135:
 1073              		.section	.text.Adc_GetBatt,"ax",%progbits
 1074              		.align	1
 1075              		.global	Adc_GetBatt
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu fpv4-sp-d16
 1081              	Adc_GetBatt:
 1082              	.LFB136:
 445:Src/adc.c     **** 
 446:Src/adc.c     **** float Adc_GetBatt(void)
 447:Src/adc.c     **** {
 1083              		.loc 1 447 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 29


 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087 0000 38B5     		push	{r3, r4, r5, lr}
 1088              	.LCFI20:
 1089              		.cfi_def_cfa_offset 16
 1090              		.cfi_offset 3, -16
 1091              		.cfi_offset 4, -12
 1092              		.cfi_offset 5, -8
 1093              		.cfi_offset 14, -4
 1094 0002 2DED028B 		vpush.64	{d8}
 1095              	.LCFI21:
 1096              		.cfi_def_cfa_offset 24
 1097              		.cfi_offset 80, -24
 1098              		.cfi_offset 81, -20
 1099              	.LVL49:
 1100              	.LBB4:
 448:Src/adc.c     ****   float batt = 0;
 449:Src/adc.c     ****   for (int i = 0; i < 10; i++)
 1101              		.loc 1 449 0
 1102 0006 0024     		movs	r4, #0
 1103              	.LBE4:
 448:Src/adc.c     ****   float batt = 0;
 1104              		.loc 1 448 0
 1105 0008 9FED178A 		vldr.32	s16, .L88
 1106              	.LBB5:
 1107              		.loc 1 449 0
 1108 000c 16E0     		b	.L84
 1109              	.LVL50:
 1110              	.L86:
 450:Src/adc.c     ****   {
 451:Src/adc.c     ****     HAL_ADC_Start(&hadc1); // ad convert start
 1111              		.loc 1 451 0
 1112 000e 1748     		ldr	r0, .L88+4
 1113 0010 FFF7FEFF 		bl	HAL_ADC_Start
 1114              	.LVL51:
 1115              	.L85:
 452:Src/adc.c     ****     while (HAL_ADC_PollForConversion(&hadc1, 50) != HAL_OK)
 1116              		.loc 1 452 0 discriminator 1
 1117 0014 3221     		movs	r1, #50
 1118 0016 1548     		ldr	r0, .L88+4
 1119 0018 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1120              	.LVL52:
 1121 001c 0028     		cmp	r0, #0
 1122 001e F9D1     		bne	.L85
 453:Src/adc.c     ****     {
 454:Src/adc.c     ****     } // trans
 455:Src/adc.c     ****     batt += HAL_ADC_GetValue(&hadc1);
 1123              		.loc 1 455 0 discriminator 2
 1124 0020 124D     		ldr	r5, .L88+4
 1125 0022 2846     		mov	r0, r5
 1126 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 1127              	.LVL53:
 1128 0028 07EE900A 		vmov	s15, r0	@ int
 1129 002c F8EE677A 		vcvt.f32.u32	s15, s15
 1130 0030 38EE278A 		vadd.f32	s16, s16, s15
 1131              	.LVL54:
 456:Src/adc.c     ****     HAL_ADC_Stop(&hadc1);
 1132              		.loc 1 456 0 discriminator 2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 30


 1133 0034 2846     		mov	r0, r5
 1134 0036 FFF7FEFF 		bl	HAL_ADC_Stop
 1135              	.LVL55:
 449:Src/adc.c     ****   {
 1136              		.loc 1 449 0 discriminator 2
 1137 003a 0134     		adds	r4, r4, #1
 1138              	.LVL56:
 1139              	.L84:
 449:Src/adc.c     ****   {
 1140              		.loc 1 449 0 is_stmt 0 discriminator 1
 1141 003c 092C     		cmp	r4, #9
 1142 003e E6DD     		ble	.L86
 1143              	.LBE5:
 457:Src/adc.c     ****   }
 458:Src/adc.c     ****   batt = batt / 10.0f / 4095.0f * 3.2f * 3.3f;
 1144              		.loc 1 458 0 is_stmt 1
 1145 0040 F2EE047A 		vmov.f32	s15, #1.0e+1
 1146 0044 C8EE276A 		vdiv.f32	s13, s16, s15
 1147 0048 9FED097A 		vldr.32	s14, .L88+8
 1148 004c C6EE877A 		vdiv.f32	s15, s13, s14
 1149 0050 9FED087A 		vldr.32	s14, .L88+12
 1150 0054 67EE877A 		vmul.f32	s15, s15, s14
 1151              	.LVL57:
 459:Src/adc.c     ****   /*
 460:Src/adc.c     ****   //finish
 461:Src/adc.c     ****   while(1){
 462:Src/adc.c     ****     LED_Control((unsigned char)batt);
 463:Src/adc.c     ****     if(Push()==1){
 464:Src/adc.c     ****       Output_Buzzer(HZ_C_H);
 465:Src/adc.c     ****       HAL_Delay(500);
 466:Src/adc.c     ****       break;
 467:Src/adc.c     ****     }
 468:Src/adc.c     ****   }
 469:Src/adc.c     ****   */
 470:Src/adc.c     ****   return batt;
 471:Src/adc.c     **** }
 1152              		.loc 1 471 0
 1153 0058 9FED070A 		vldr.32	s0, .L88+16
 1154 005c 27EE800A 		vmul.f32	s0, s15, s0
 1155              	.LVL58:
 1156 0060 BDEC028B 		vldm	sp!, {d8}
 1157              	.LCFI22:
 1158              		.cfi_restore 80
 1159              		.cfi_restore 81
 1160              		.cfi_def_cfa_offset 16
 1161 0064 38BD     		pop	{r3, r4, r5, pc}
 1162              	.LVL59:
 1163              	.L89:
 1164 0066 00BF     		.align	2
 1165              	.L88:
 1166 0068 00000000 		.word	0
 1167 006c 00000000 		.word	hadc1
 1168 0070 00F07F45 		.word	1166012416
 1169 0074 CDCC4C40 		.word	1078774989
 1170 0078 33335340 		.word	1079194419
 1171              		.cfi_endproc
 1172              	.LFE136:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 31


 1174              		.comm	hdma_adc2,96,4
 1175              		.comm	hadc2,72,4
 1176              		.comm	hadc1,72,4
 1177              		.comm	adc_counter,2,2
 1178              		.comm	ADCOntData,8,4
 1179              		.comm	ADCOffData,8,4
 1180              		.comm	ADCBuff,8,4
 1181              		.comm	sen_r,14,4
 1182              		.comm	sen_fr,14,4
 1183              		.comm	sen_front,14,4
 1184              		.comm	sen_fl,14,4
 1185              		.comm	sen_l,14,4
 1186              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 1187              		.align	2
 1188              	.LC0:
 1189 0000 5372632F 		.ascii	"Src/adc.c\000"
 1189      6164632E 
 1189      6300
 1190              		.text
 1191              	.Letext0:
 1192              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1193              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1194              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1195              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1196              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1197              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1198              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1199              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1200              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1201              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1202              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1203              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1204              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1205              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1206              		.file 16 "Inc/adc.h"
 1207              		.file 17 "Inc/dma.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:116    .text.MX_ADC1_Init:0000005c $d
                            *COM*:00000048 hadc1
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:124    .text.MX_ADC2_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:131    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:283    .text.MX_ADC2_Init:000000b8 $d
                            *COM*:00000048 hadc2
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:291    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:298    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:453    .text.HAL_ADC_MspInit:000000c0 $d
                            *COM*:00000060 hdma_adc2
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:465    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:472    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:539    .text.HAL_ADC_MspDeInit:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:548    .text.Adc_SetSensorValue:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:555    .text.Adc_SetSensorValue:00000000 Adc_SetSensorValue
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:595    .text.Adc_SetSensorValue:0000002c $d
                            *COM*:0000000e sen_l
                            *COM*:0000000e sen_fl
                            *COM*:0000000e sen_front
                            *COM*:0000000e sen_fr
                            *COM*:0000000e sen_r
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:604    .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:611    .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:681    .text.update_sensor_data:0000006c $d
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:690    .text.Adc_IrSensorStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:697    .text.Adc_IrSensorStart:00000000 Adc_IrSensorStart
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:723    .text.Adc_IrSensorStart:00000014 $d
                            *COM*:00000002 adc_counter
                            *COM*:00000008 ADCBuff
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:730    .text.Adc_IrSensorFinish:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:737    .text.Adc_IrSensorFinish:00000000 Adc_IrSensorFinish
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:770    .text.Adc_IrSensorFinish:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:776    .text.Adc_CheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:783    .text.Adc_CheckConvert:00000000 Adc_CheckConvert
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:839    .text.Adc_CheckConvert:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:848    .text.Adc_GetSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:855    .text.Adc_GetSensor:00000000 Adc_GetSensor
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:1060   .text.Adc_GetSensor:0000012c $d
                            *COM*:00000008 ADCOffData
                            *COM*:00000008 ADCOntData
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:1074   .text.Adc_GetBatt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:1081   .text.Adc_GetBatt:00000000 Adc_GetBatt
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:1166   .text.Adc_GetBatt:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s:1187   .rodata.MX_ADC1_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cciH2diK.s 			page 33


HAL_ADC_Start_DMA
HAL_GPIO_WritePin
HAL_ADC_Stop_DMA
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
