ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB126:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 2


  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** #include "dma.h"
  45:Src/adc.c     **** 
  46:Src/adc.c     **** /* USER CODE BEGIN 0 */
  47:Src/adc.c     **** 
  48:Src/adc.c     **** //define
  49:Src/adc.c     **** #define OFF_VALUE 0
  50:Src/adc.c     **** #define FRONT_VALUE 1
  51:Src/adc.c     **** #define SIDE_VALUE 2
  52:Src/adc.c     **** #define FINISH_CONVERT 3
  53:Src/adc.c     **** #define IRSENSOR_OFF 4
  54:Src/adc.c     **** 
  55:Src/adc.c     **** #define ADC_CONVERT_DATA_SIZE ((uint32_t)  4)
  56:Src/adc.c     **** 
  57:Src/adc.c     **** #define TRUE 1
  58:Src/adc.c     **** #define FALSE 0
  59:Src/adc.c     **** 
  60:Src/adc.c     **** //valuable
  61:Src/adc.c     **** sensor_t sen_l;
  62:Src/adc.c     **** sensor_t sen_fl;
  63:Src/adc.c     **** sensor_t sen_front;
  64:Src/adc.c     **** sensor_t sen_fr;
  65:Src/adc.c     **** sensor_t sen_r;
  66:Src/adc.c     **** 
  67:Src/adc.c     **** uint16_t ADCBuff[ADC_CONVERT_DATA_SIZE];
  68:Src/adc.c     **** uint16_t ADCOffData[ADC_CONVERT_DATA_SIZE];
  69:Src/adc.c     **** uint16_t ADCOntData[ADC_CONVERT_DATA_SIZE];
  70:Src/adc.c     **** int16_t adc_counter;
  71:Src/adc.c     **** /* USER CODE END 0 */
  72:Src/adc.c     **** 
  73:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  74:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  75:Src/adc.c     **** DMA_HandleTypeDef hdma_adc2;
  76:Src/adc.c     **** 
  77:Src/adc.c     **** /* ADC1 init function */
  78:Src/adc.c     **** void MX_ADC1_Init(void)
  79:Src/adc.c     **** {
  28              		.loc 1 79 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 3


  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  80:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  81:Src/adc.c     **** 
  82:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  83:Src/adc.c     ****     */
  84:Src/adc.c     ****   hadc1.Instance = ADC1;
  39              		.loc 1 84 0
  40 0004 1648     		ldr	r0, .L7
  41 0006 174B     		ldr	r3, .L7+4
  42 0008 0360     		str	r3, [r0]
  85:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  43              		.loc 1 85 0
  44 000a 4FF48033 		mov	r3, #65536
  45 000e 4360     		str	r3, [r0, #4]
  86:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  46              		.loc 1 86 0
  47 0010 0023     		movs	r3, #0
  48 0012 8360     		str	r3, [r0, #8]
  87:Src/adc.c     ****   hadc1.Init.ScanConvMode = DISABLE;
  49              		.loc 1 87 0
  50 0014 0361     		str	r3, [r0, #16]
  88:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  51              		.loc 1 88 0
  52 0016 8361     		str	r3, [r0, #24]
  89:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  53              		.loc 1 89 0
  54 0018 0362     		str	r3, [r0, #32]
  90:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  55              		.loc 1 90 0
  56 001a C362     		str	r3, [r0, #44]
  91:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  57              		.loc 1 91 0
  58 001c 124A     		ldr	r2, .L7+8
  59 001e 8262     		str	r2, [r0, #40]
  92:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  60              		.loc 1 92 0
  61 0020 C360     		str	r3, [r0, #12]
  93:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  62              		.loc 1 93 0
  63 0022 0122     		movs	r2, #1
  64 0024 C261     		str	r2, [r0, #28]
  94:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  65              		.loc 1 94 0
  66 0026 0363     		str	r3, [r0, #48]
  95:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  67              		.loc 1 95 0
  68 0028 4261     		str	r2, [r0, #20]
  96:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  69              		.loc 1 96 0
  70 002a FFF7FEFF 		bl	HAL_ADC_Init
  71              	.LVL0:
  72 002e 68B9     		cbnz	r0, .L5
  73              	.L2:
  97:Src/adc.c     ****   {
  98:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  99:Src/adc.c     ****   }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 4


 100:Src/adc.c     **** 
 101:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 102:Src/adc.c     ****     */
 103:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_15;
  74              		.loc 1 103 0
  75 0030 0F23     		movs	r3, #15
  76 0032 0093     		str	r3, [sp]
 104:Src/adc.c     ****   sConfig.Rank = 1;
  77              		.loc 1 104 0
  78 0034 0123     		movs	r3, #1
  79 0036 0193     		str	r3, [sp, #4]
 105:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
  80              		.loc 1 105 0
  81 0038 0023     		movs	r3, #0
  82 003a 0293     		str	r3, [sp, #8]
 106:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  83              		.loc 1 106 0
  84 003c 6946     		mov	r1, sp
  85 003e 0848     		ldr	r0, .L7
  86 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  87              	.LVL1:
  88 0044 38B9     		cbnz	r0, .L6
  89              	.L1:
 107:Src/adc.c     ****   {
 108:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 109:Src/adc.c     ****   }
 110:Src/adc.c     **** 
 111:Src/adc.c     **** }
  90              		.loc 1 111 0
  91 0046 05B0     		add	sp, sp, #20
  92              	.LCFI2:
  93              		.cfi_remember_state
  94              		.cfi_def_cfa_offset 4
  95              		@ sp needed
  96 0048 5DF804FB 		ldr	pc, [sp], #4
  97              	.L5:
  98              	.LCFI3:
  99              		.cfi_restore_state
  98:Src/adc.c     ****   }
 100              		.loc 1 98 0
 101 004c 6221     		movs	r1, #98
 102 004e 0748     		ldr	r0, .L7+12
 103 0050 FFF7FEFF 		bl	_Error_Handler
 104              	.LVL2:
 105 0054 ECE7     		b	.L2
 106              	.L6:
 108:Src/adc.c     ****   }
 107              		.loc 1 108 0
 108 0056 6C21     		movs	r1, #108
 109 0058 0448     		ldr	r0, .L7+12
 110 005a FFF7FEFF 		bl	_Error_Handler
 111              	.LVL3:
 112              		.loc 1 111 0
 113 005e F2E7     		b	.L1
 114              	.L8:
 115              		.align	2
 116              	.L7:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 5


 117 0060 00000000 		.word	hadc1
 118 0064 00200140 		.word	1073815552
 119 0068 0100000F 		.word	251658241
 120 006c 00000000 		.word	.LC0
 121              		.cfi_endproc
 122              	.LFE126:
 124              		.section	.text.MX_ADC2_Init,"ax",%progbits
 125              		.align	1
 126              		.global	MX_ADC2_Init
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	MX_ADC2_Init:
 133              	.LFB127:
 112:Src/adc.c     **** /* ADC2 init function */
 113:Src/adc.c     **** void MX_ADC2_Init(void)
 114:Src/adc.c     **** {
 134              		.loc 1 114 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 00B5     		push	{lr}
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 14, -4
 142 0002 85B0     		sub	sp, sp, #20
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 24
 115:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 116:Src/adc.c     **** 
 117:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 118:Src/adc.c     ****     */
 119:Src/adc.c     ****   hadc2.Instance = ADC2;
 145              		.loc 1 119 0
 146 0004 2D48     		ldr	r0, .L21
 147 0006 2E4B     		ldr	r3, .L21+4
 148 0008 0360     		str	r3, [r0]
 120:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 149              		.loc 1 120 0
 150 000a 4FF48033 		mov	r3, #65536
 151 000e 4360     		str	r3, [r0, #4]
 121:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_10B;
 152              		.loc 1 121 0
 153 0010 4FF08073 		mov	r3, #16777216
 154 0014 8360     		str	r3, [r0, #8]
 122:Src/adc.c     ****   hadc2.Init.ScanConvMode = ENABLE;
 155              		.loc 1 122 0
 156 0016 0123     		movs	r3, #1
 157 0018 0361     		str	r3, [r0, #16]
 123:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = ENABLE;
 158              		.loc 1 123 0
 159 001a 8361     		str	r3, [r0, #24]
 124:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 160              		.loc 1 124 0
 161 001c 0022     		movs	r2, #0
 162 001e 0262     		str	r2, [r0, #32]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 6


 125:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 163              		.loc 1 125 0
 164 0020 C262     		str	r2, [r0, #44]
 126:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 165              		.loc 1 126 0
 166 0022 2849     		ldr	r1, .L21+8
 167 0024 8162     		str	r1, [r0, #40]
 127:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 168              		.loc 1 127 0
 169 0026 C260     		str	r2, [r0, #12]
 128:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 4;
 170              		.loc 1 128 0
 171 0028 0422     		movs	r2, #4
 172 002a C261     		str	r2, [r0, #28]
 129:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = ENABLE;
 173              		.loc 1 129 0
 174 002c 0363     		str	r3, [r0, #48]
 130:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 175              		.loc 1 130 0
 176 002e 4361     		str	r3, [r0, #20]
 131:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 177              		.loc 1 131 0
 178 0030 FFF7FEFF 		bl	HAL_ADC_Init
 179              	.LVL4:
 180 0034 40BB     		cbnz	r0, .L16
 181              	.L10:
 132:Src/adc.c     ****   {
 133:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 134:Src/adc.c     ****   }
 135:Src/adc.c     **** 
 136:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 137:Src/adc.c     ****     */
 138:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 182              		.loc 1 138 0
 183 0036 0223     		movs	r3, #2
 184 0038 0093     		str	r3, [sp]
 139:Src/adc.c     ****   sConfig.Rank = 1;
 185              		.loc 1 139 0
 186 003a 0123     		movs	r3, #1
 187 003c 0193     		str	r3, [sp, #4]
 140:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 188              		.loc 1 140 0
 189 003e 0023     		movs	r3, #0
 190 0040 0293     		str	r3, [sp, #8]
 141:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 191              		.loc 1 141 0
 192 0042 6946     		mov	r1, sp
 193 0044 1D48     		ldr	r0, .L21
 194 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 195              	.LVL5:
 196 004a 10BB     		cbnz	r0, .L17
 197              	.L11:
 142:Src/adc.c     ****   {
 143:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 144:Src/adc.c     ****   }
 145:Src/adc.c     **** 
 146:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 7


 147:Src/adc.c     ****     */
 148:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 198              		.loc 1 148 0
 199 004c 0323     		movs	r3, #3
 200 004e 0093     		str	r3, [sp]
 149:Src/adc.c     ****   sConfig.Rank = 2;
 201              		.loc 1 149 0
 202 0050 0223     		movs	r3, #2
 203 0052 0193     		str	r3, [sp, #4]
 150:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 204              		.loc 1 150 0
 205 0054 6946     		mov	r1, sp
 206 0056 1948     		ldr	r0, .L21
 207 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 208              	.LVL6:
 209 005c F0B9     		cbnz	r0, .L18
 210              	.L12:
 151:Src/adc.c     ****   {
 152:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 153:Src/adc.c     ****   }
 154:Src/adc.c     **** 
 155:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 156:Src/adc.c     ****     */
 157:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_10;
 211              		.loc 1 157 0
 212 005e 0A23     		movs	r3, #10
 213 0060 0093     		str	r3, [sp]
 158:Src/adc.c     ****   sConfig.Rank = 3;
 214              		.loc 1 158 0
 215 0062 0323     		movs	r3, #3
 216 0064 0193     		str	r3, [sp, #4]
 159:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 217              		.loc 1 159 0
 218 0066 6946     		mov	r1, sp
 219 0068 1448     		ldr	r0, .L21
 220 006a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 221              	.LVL7:
 222 006e D0B9     		cbnz	r0, .L19
 223              	.L13:
 160:Src/adc.c     ****   {
 161:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 162:Src/adc.c     ****   }
 163:Src/adc.c     **** 
 164:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 165:Src/adc.c     ****     */
 166:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_11;
 224              		.loc 1 166 0
 225 0070 0B23     		movs	r3, #11
 226 0072 0093     		str	r3, [sp]
 167:Src/adc.c     ****   sConfig.Rank = 4;
 227              		.loc 1 167 0
 228 0074 0423     		movs	r3, #4
 229 0076 0193     		str	r3, [sp, #4]
 168:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 230              		.loc 1 168 0
 231 0078 6946     		mov	r1, sp
 232 007a 1048     		ldr	r0, .L21
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 8


 233 007c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 234              	.LVL8:
 235 0080 B0B9     		cbnz	r0, .L20
 236              	.L9:
 169:Src/adc.c     ****   {
 170:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 171:Src/adc.c     ****   }
 172:Src/adc.c     **** 
 173:Src/adc.c     **** }
 237              		.loc 1 173 0
 238 0082 05B0     		add	sp, sp, #20
 239              	.LCFI6:
 240              		.cfi_remember_state
 241              		.cfi_def_cfa_offset 4
 242              		@ sp needed
 243 0084 5DF804FB 		ldr	pc, [sp], #4
 244              	.L16:
 245              	.LCFI7:
 246              		.cfi_restore_state
 133:Src/adc.c     ****   }
 247              		.loc 1 133 0
 248 0088 8521     		movs	r1, #133
 249 008a 0F48     		ldr	r0, .L21+12
 250 008c FFF7FEFF 		bl	_Error_Handler
 251              	.LVL9:
 252 0090 D1E7     		b	.L10
 253              	.L17:
 143:Src/adc.c     ****   }
 254              		.loc 1 143 0
 255 0092 8F21     		movs	r1, #143
 256 0094 0C48     		ldr	r0, .L21+12
 257 0096 FFF7FEFF 		bl	_Error_Handler
 258              	.LVL10:
 259 009a D7E7     		b	.L11
 260              	.L18:
 152:Src/adc.c     ****   }
 261              		.loc 1 152 0
 262 009c 9821     		movs	r1, #152
 263 009e 0A48     		ldr	r0, .L21+12
 264 00a0 FFF7FEFF 		bl	_Error_Handler
 265              	.LVL11:
 266 00a4 DBE7     		b	.L12
 267              	.L19:
 161:Src/adc.c     ****   }
 268              		.loc 1 161 0
 269 00a6 A121     		movs	r1, #161
 270 00a8 0748     		ldr	r0, .L21+12
 271 00aa FFF7FEFF 		bl	_Error_Handler
 272              	.LVL12:
 273 00ae DFE7     		b	.L13
 274              	.L20:
 170:Src/adc.c     ****   }
 275              		.loc 1 170 0
 276 00b0 AA21     		movs	r1, #170
 277 00b2 0548     		ldr	r0, .L21+12
 278 00b4 FFF7FEFF 		bl	_Error_Handler
 279              	.LVL13:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 9


 280              		.loc 1 173 0
 281 00b8 E3E7     		b	.L9
 282              	.L22:
 283 00ba 00BF     		.align	2
 284              	.L21:
 285 00bc 00000000 		.word	hadc2
 286 00c0 00210140 		.word	1073815808
 287 00c4 0100000F 		.word	251658241
 288 00c8 00000000 		.word	.LC0
 289              		.cfi_endproc
 290              	.LFE127:
 292              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 293              		.align	1
 294              		.global	HAL_ADC_MspInit
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	HAL_ADC_MspInit:
 301              	.LFB128:
 174:Src/adc.c     **** 
 175:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 176:Src/adc.c     **** {
 302              		.loc 1 176 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 32
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              	.LVL14:
 307 0000 70B5     		push	{r4, r5, r6, lr}
 308              	.LCFI8:
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 4, -16
 311              		.cfi_offset 5, -12
 312              		.cfi_offset 6, -8
 313              		.cfi_offset 14, -4
 314 0002 88B0     		sub	sp, sp, #32
 315              	.LCFI9:
 316              		.cfi_def_cfa_offset 48
 177:Src/adc.c     **** 
 178:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 179:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 317              		.loc 1 179 0
 318 0004 0368     		ldr	r3, [r0]
 319 0006 2E4A     		ldr	r2, .L31
 320 0008 9342     		cmp	r3, r2
 321 000a 05D0     		beq	.L28
 322 000c 0446     		mov	r4, r0
 180:Src/adc.c     ****   {
 181:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 182:Src/adc.c     **** 
 183:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 184:Src/adc.c     ****     /* ADC1 clock enable */
 185:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 186:Src/adc.c     ****   
 187:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 188:Src/adc.c     ****     PC5     ------> ADC1_IN15 
 189:Src/adc.c     ****     */
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 10


 190:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5;
 191:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 192:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 193:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 194:Src/adc.c     **** 
 195:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 196:Src/adc.c     **** 
 197:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 198:Src/adc.c     ****   }
 199:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 323              		.loc 1 199 0
 324 000e 2D4A     		ldr	r2, .L31+4
 325 0010 9342     		cmp	r3, r2
 326 0012 17D0     		beq	.L29
 327              	.LVL15:
 328              	.L23:
 200:Src/adc.c     ****   {
 201:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 202:Src/adc.c     **** 
 203:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 204:Src/adc.c     ****     /* ADC2 clock enable */
 205:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_ENABLE();
 206:Src/adc.c     ****   
 207:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 208:Src/adc.c     ****     PC0     ------> ADC2_IN10
 209:Src/adc.c     ****     PC1     ------> ADC2_IN11
 210:Src/adc.c     ****     PA2     ------> ADC2_IN2
 211:Src/adc.c     ****     PA3     ------> ADC2_IN3 
 212:Src/adc.c     ****     */
 213:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 214:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 215:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 216:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 217:Src/adc.c     **** 
 218:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 219:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 220:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 221:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222:Src/adc.c     **** 
 223:Src/adc.c     ****     /* ADC2 DMA Init */
 224:Src/adc.c     ****     /* ADC2 Init */
 225:Src/adc.c     ****     hdma_adc2.Instance = DMA2_Stream2;
 226:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 227:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 228:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 229:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 230:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 231:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 232:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_NORMAL;
 233:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 234:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 235:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 236:Src/adc.c     ****     {
 237:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 238:Src/adc.c     ****     }
 239:Src/adc.c     **** 
 240:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc2);
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 11


 241:Src/adc.c     **** 
 242:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 243:Src/adc.c     **** 
 244:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 245:Src/adc.c     ****   }
 246:Src/adc.c     **** }
 329              		.loc 1 246 0
 330 0014 08B0     		add	sp, sp, #32
 331              	.LCFI10:
 332              		.cfi_remember_state
 333              		.cfi_def_cfa_offset 16
 334              		@ sp needed
 335 0016 70BD     		pop	{r4, r5, r6, pc}
 336              	.LVL16:
 337              	.L28:
 338              	.LCFI11:
 339              		.cfi_restore_state
 340              	.LBB2:
 185:Src/adc.c     ****   
 341              		.loc 1 185 0
 342 0018 0021     		movs	r1, #0
 343 001a 0191     		str	r1, [sp, #4]
 344 001c 2A4B     		ldr	r3, .L31+8
 345 001e 5A6C     		ldr	r2, [r3, #68]
 346 0020 42F48072 		orr	r2, r2, #256
 347 0024 5A64     		str	r2, [r3, #68]
 348 0026 5B6C     		ldr	r3, [r3, #68]
 349 0028 03F48073 		and	r3, r3, #256
 350 002c 0193     		str	r3, [sp, #4]
 351 002e 019B     		ldr	r3, [sp, #4]
 352              	.LBE2:
 190:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 353              		.loc 1 190 0
 354 0030 2023     		movs	r3, #32
 355 0032 0393     		str	r3, [sp, #12]
 191:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 356              		.loc 1 191 0
 357 0034 0323     		movs	r3, #3
 358 0036 0493     		str	r3, [sp, #16]
 192:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 359              		.loc 1 192 0
 360 0038 0591     		str	r1, [sp, #20]
 193:Src/adc.c     **** 
 361              		.loc 1 193 0
 362 003a 03A9     		add	r1, sp, #12
 363 003c 2348     		ldr	r0, .L31+12
 364              	.LVL17:
 365 003e FFF7FEFF 		bl	HAL_GPIO_Init
 366              	.LVL18:
 367 0042 E7E7     		b	.L23
 368              	.LVL19:
 369              	.L29:
 370              	.LBB3:
 205:Src/adc.c     ****   
 371              		.loc 1 205 0
 372 0044 0025     		movs	r5, #0
 373 0046 0295     		str	r5, [sp, #8]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 12


 374 0048 1F4B     		ldr	r3, .L31+8
 375 004a 5A6C     		ldr	r2, [r3, #68]
 376 004c 42F40072 		orr	r2, r2, #512
 377 0050 5A64     		str	r2, [r3, #68]
 378 0052 5B6C     		ldr	r3, [r3, #68]
 379 0054 03F40073 		and	r3, r3, #512
 380 0058 0293     		str	r3, [sp, #8]
 381 005a 029B     		ldr	r3, [sp, #8]
 382              	.LBE3:
 213:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 383              		.loc 1 213 0
 384 005c 0326     		movs	r6, #3
 385 005e 0396     		str	r6, [sp, #12]
 214:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 386              		.loc 1 214 0
 387 0060 0496     		str	r6, [sp, #16]
 215:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 388              		.loc 1 215 0
 389 0062 0595     		str	r5, [sp, #20]
 216:Src/adc.c     **** 
 390              		.loc 1 216 0
 391 0064 03A9     		add	r1, sp, #12
 392 0066 1948     		ldr	r0, .L31+12
 393              	.LVL20:
 394 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 395              	.LVL21:
 218:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 396              		.loc 1 218 0
 397 006c 0C23     		movs	r3, #12
 398 006e 0393     		str	r3, [sp, #12]
 219:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 399              		.loc 1 219 0
 400 0070 0496     		str	r6, [sp, #16]
 220:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 401              		.loc 1 220 0
 402 0072 0595     		str	r5, [sp, #20]
 221:Src/adc.c     **** 
 403              		.loc 1 221 0
 404 0074 0DEB0301 		add	r1, sp, r3
 405 0078 1548     		ldr	r0, .L31+16
 406 007a FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL22:
 225:Src/adc.c     ****     hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 408              		.loc 1 225 0
 409 007e 1548     		ldr	r0, .L31+20
 410 0080 154B     		ldr	r3, .L31+24
 411 0082 0360     		str	r3, [r0]
 226:Src/adc.c     ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 412              		.loc 1 226 0
 413 0084 4FF00073 		mov	r3, #33554432
 414 0088 4360     		str	r3, [r0, #4]
 227:Src/adc.c     ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 415              		.loc 1 227 0
 416 008a 8560     		str	r5, [r0, #8]
 228:Src/adc.c     ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 417              		.loc 1 228 0
 418 008c C560     		str	r5, [r0, #12]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 13


 229:Src/adc.c     ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 419              		.loc 1 229 0
 420 008e 4FF48063 		mov	r3, #1024
 421 0092 0361     		str	r3, [r0, #16]
 230:Src/adc.c     ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 422              		.loc 1 230 0
 423 0094 4FF40063 		mov	r3, #2048
 424 0098 4361     		str	r3, [r0, #20]
 231:Src/adc.c     ****     hdma_adc2.Init.Mode = DMA_NORMAL;
 425              		.loc 1 231 0
 426 009a 4FF40053 		mov	r3, #8192
 427 009e 8361     		str	r3, [r0, #24]
 232:Src/adc.c     ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 428              		.loc 1 232 0
 429 00a0 C561     		str	r5, [r0, #28]
 233:Src/adc.c     ****     hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 430              		.loc 1 233 0
 431 00a2 0562     		str	r5, [r0, #32]
 234:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 432              		.loc 1 234 0
 433 00a4 4562     		str	r5, [r0, #36]
 235:Src/adc.c     ****     {
 434              		.loc 1 235 0
 435 00a6 FFF7FEFF 		bl	HAL_DMA_Init
 436              	.LVL23:
 437 00aa 18B9     		cbnz	r0, .L30
 438              	.L26:
 240:Src/adc.c     **** 
 439              		.loc 1 240 0
 440 00ac 094B     		ldr	r3, .L31+20
 441 00ae A363     		str	r3, [r4, #56]
 442 00b0 9C63     		str	r4, [r3, #56]
 443              		.loc 1 246 0
 444 00b2 AFE7     		b	.L23
 445              	.L30:
 237:Src/adc.c     ****     }
 446              		.loc 1 237 0
 447 00b4 ED21     		movs	r1, #237
 448 00b6 0948     		ldr	r0, .L31+28
 449 00b8 FFF7FEFF 		bl	_Error_Handler
 450              	.LVL24:
 451 00bc F6E7     		b	.L26
 452              	.L32:
 453 00be 00BF     		.align	2
 454              	.L31:
 455 00c0 00200140 		.word	1073815552
 456 00c4 00210140 		.word	1073815808
 457 00c8 00380240 		.word	1073887232
 458 00cc 00080240 		.word	1073874944
 459 00d0 00000240 		.word	1073872896
 460 00d4 00000000 		.word	hdma_adc2
 461 00d8 40640240 		.word	1073898560
 462 00dc 00000000 		.word	.LC0
 463              		.cfi_endproc
 464              	.LFE128:
 466              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 467              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 14


 468              		.global	HAL_ADC_MspDeInit
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu fpv4-sp-d16
 474              	HAL_ADC_MspDeInit:
 475              	.LFB129:
 247:Src/adc.c     **** 
 248:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 249:Src/adc.c     **** {
 476              		.loc 1 249 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              	.LVL25:
 481 0000 10B5     		push	{r4, lr}
 482              	.LCFI12:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 250:Src/adc.c     **** 
 251:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 486              		.loc 1 251 0
 487 0002 0368     		ldr	r3, [r0]
 488 0004 114A     		ldr	r2, .L39
 489 0006 9342     		cmp	r3, r2
 490 0008 04D0     		beq	.L37
 491 000a 0446     		mov	r4, r0
 252:Src/adc.c     ****   {
 253:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 254:Src/adc.c     **** 
 255:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 256:Src/adc.c     ****     /* Peripheral clock disable */
 257:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 258:Src/adc.c     ****   
 259:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 260:Src/adc.c     ****     PC5     ------> ADC1_IN15 
 261:Src/adc.c     ****     */
 262:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_5);
 263:Src/adc.c     **** 
 264:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 265:Src/adc.c     **** 
 266:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 267:Src/adc.c     ****   }
 268:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 492              		.loc 1 268 0
 493 000c 104A     		ldr	r2, .L39+4
 494 000e 9342     		cmp	r3, r2
 495 0010 0BD0     		beq	.L38
 496              	.LVL26:
 497              	.L33:
 269:Src/adc.c     ****   {
 270:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 271:Src/adc.c     **** 
 272:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 273:Src/adc.c     ****     /* Peripheral clock disable */
 274:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_DISABLE();
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 15


 275:Src/adc.c     ****   
 276:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 277:Src/adc.c     ****     PC0     ------> ADC2_IN10
 278:Src/adc.c     ****     PC1     ------> ADC2_IN11
 279:Src/adc.c     ****     PA2     ------> ADC2_IN2
 280:Src/adc.c     ****     PA3     ------> ADC2_IN3 
 281:Src/adc.c     ****     */
 282:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_1);
 283:Src/adc.c     **** 
 284:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 285:Src/adc.c     **** 
 286:Src/adc.c     ****     /* ADC2 DMA DeInit */
 287:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 288:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 289:Src/adc.c     **** 
 290:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 291:Src/adc.c     ****   }
 292:Src/adc.c     **** } 
 498              		.loc 1 292 0
 499 0012 10BD     		pop	{r4, pc}
 500              	.LVL27:
 501              	.L37:
 257:Src/adc.c     ****   
 502              		.loc 1 257 0
 503 0014 02F58C32 		add	r2, r2, #71680
 504 0018 536C     		ldr	r3, [r2, #68]
 505 001a 23F48073 		bic	r3, r3, #256
 506 001e 5364     		str	r3, [r2, #68]
 262:Src/adc.c     **** 
 507              		.loc 1 262 0
 508 0020 2021     		movs	r1, #32
 509 0022 0C48     		ldr	r0, .L39+8
 510              	.LVL28:
 511 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 512              	.LVL29:
 513 0028 F3E7     		b	.L33
 514              	.LVL30:
 515              	.L38:
 274:Src/adc.c     ****   
 516              		.loc 1 274 0
 517 002a 0B4A     		ldr	r2, .L39+12
 518 002c 536C     		ldr	r3, [r2, #68]
 519 002e 23F40073 		bic	r3, r3, #512
 520 0032 5364     		str	r3, [r2, #68]
 282:Src/adc.c     **** 
 521              		.loc 1 282 0
 522 0034 0321     		movs	r1, #3
 523 0036 0748     		ldr	r0, .L39+8
 524              	.LVL31:
 525 0038 FFF7FEFF 		bl	HAL_GPIO_DeInit
 526              	.LVL32:
 284:Src/adc.c     **** 
 527              		.loc 1 284 0
 528 003c 0C21     		movs	r1, #12
 529 003e 0748     		ldr	r0, .L39+16
 530 0040 FFF7FEFF 		bl	HAL_GPIO_DeInit
 531              	.LVL33:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 16


 287:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 532              		.loc 1 287 0
 533 0044 A06B     		ldr	r0, [r4, #56]
 534 0046 FFF7FEFF 		bl	HAL_DMA_DeInit
 535              	.LVL34:
 536              		.loc 1 292 0
 537 004a E2E7     		b	.L33
 538              	.L40:
 539              		.align	2
 540              	.L39:
 541 004c 00200140 		.word	1073815552
 542 0050 00210140 		.word	1073815808
 543 0054 00080240 		.word	1073874944
 544 0058 00380240 		.word	1073887232
 545 005c 00000240 		.word	1073872896
 546              		.cfi_endproc
 547              	.LFE129:
 549              		.section	.text.Adc_SetSensorConstant,"ax",%progbits
 550              		.align	1
 551              		.global	Adc_SetSensorConstant
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	Adc_SetSensorConstant:
 558              	.LFB130:
 293:Src/adc.c     **** 
 294:Src/adc.c     **** /* USER CODE BEGIN 1 */
 295:Src/adc.c     **** void Adc_SetSensorConstant(void)
 296:Src/adc.c     **** {
 559              		.loc 1 296 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 297:Src/adc.c     ****   sen_l.reference = 578;
 564              		.loc 1 297 0
 565 0000 0E4B     		ldr	r3, .L42
 566 0002 40F24222 		movw	r2, #578
 567 0006 9A80     		strh	r2, [r3, #4]	@ movhi
 298:Src/adc.c     ****   sen_l.threshold = 472;
 568              		.loc 1 298 0
 569 0008 4FF4EC72 		mov	r2, #472
 570 000c DA80     		strh	r2, [r3, #6]	@ movhi
 299:Src/adc.c     **** 
 300:Src/adc.c     ****   sen_fl.reference = 786;
 571              		.loc 1 300 0
 572 000e 0C4B     		ldr	r3, .L42+4
 573 0010 40F21232 		movw	r2, #786
 574 0014 9A80     		strh	r2, [r3, #4]	@ movhi
 301:Src/adc.c     **** 
 302:Src/adc.c     ****   sen_front.reference = 793;
 575              		.loc 1 302 0
 576 0016 0B4B     		ldr	r3, .L42+8
 577 0018 40F21932 		movw	r2, #793
 578 001c 9A80     		strh	r2, [r3, #4]	@ movhi
 303:Src/adc.c     ****   sen_front.threshold = 610;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 17


 579              		.loc 1 303 0
 580 001e 40F26222 		movw	r2, #610
 581 0022 DA80     		strh	r2, [r3, #6]	@ movhi
 304:Src/adc.c     **** 
 305:Src/adc.c     ****   sen_fr.reference = 803;
 582              		.loc 1 305 0
 583 0024 084B     		ldr	r3, .L42+12
 584 0026 40F22332 		movw	r2, #803
 585 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 306:Src/adc.c     **** 
 307:Src/adc.c     ****   sen_r.reference = 670;
 586              		.loc 1 307 0
 587 002c 074B     		ldr	r3, .L42+16
 588 002e 40F29E22 		movw	r2, #670
 589 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 308:Src/adc.c     ****   sen_r.threshold = 570;
 590              		.loc 1 308 0
 591 0034 40F23A22 		movw	r2, #570
 592 0038 DA80     		strh	r2, [r3, #6]	@ movhi
 309:Src/adc.c     **** }
 593              		.loc 1 309 0
 594 003a 7047     		bx	lr
 595              	.L43:
 596              		.align	2
 597              	.L42:
 598 003c 00000000 		.word	sen_l
 599 0040 00000000 		.word	sen_fl
 600 0044 00000000 		.word	sen_front
 601 0048 00000000 		.word	sen_fr
 602 004c 00000000 		.word	sen_r
 603              		.cfi_endproc
 604              	.LFE130:
 606              		.section	.text.update_sensor_data,"ax",%progbits
 607              		.align	1
 608              		.global	update_sensor_data
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	update_sensor_data:
 615              	.LFB131:
 310:Src/adc.c     **** 
 311:Src/adc.c     **** void update_sensor_data(void)
 312:Src/adc.c     **** {
 616              		.loc 1 312 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 313:Src/adc.c     **** 
 314:Src/adc.c     ****   sen_front.now = (sen_fl.now + sen_fr.now) / 2;
 621              		.loc 1 314 0
 622 0000 1A4B     		ldr	r3, .L52
 623 0002 B3F90030 		ldrsh	r3, [r3]
 624 0006 1A4A     		ldr	r2, .L52+4
 625 0008 B2F90020 		ldrsh	r2, [r2]
 626 000c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 18


 627 000e 03EBD373 		add	r3, r3, r3, lsr #31
 628 0012 43F34F03 		sbfx	r3, r3, #1, #16
 629 0016 174A     		ldr	r2, .L52+8
 630 0018 1380     		strh	r3, [r2]	@ movhi
 315:Src/adc.c     **** 
 316:Src/adc.c     ****   if (sen_front.now < sen_front.threshold)
 631              		.loc 1 316 0
 632 001a B2F90620 		ldrsh	r2, [r2, #6]
 633 001e 9342     		cmp	r3, r2
 634 0020 17DA     		bge	.L45
 317:Src/adc.c     ****   {
 318:Src/adc.c     ****     sen_front.is_wall = FALSE;
 635              		.loc 1 318 0
 636 0022 144B     		ldr	r3, .L52+8
 637 0024 0022     		movs	r2, #0
 638 0026 1A73     		strb	r2, [r3, #12]
 639              	.L46:
 319:Src/adc.c     ****   }
 320:Src/adc.c     ****   else
 321:Src/adc.c     ****   {
 322:Src/adc.c     ****     sen_front.is_wall = TRUE;
 323:Src/adc.c     ****   }
 324:Src/adc.c     **** 
 325:Src/adc.c     ****   if (sen_l.now < sen_l.threshold)
 640              		.loc 1 325 0
 641 0028 134B     		ldr	r3, .L52+12
 642 002a B3F90020 		ldrsh	r2, [r3]
 643 002e B3F90630 		ldrsh	r3, [r3, #6]
 644 0032 9A42     		cmp	r2, r3
 645 0034 11DA     		bge	.L47
 326:Src/adc.c     ****   {
 327:Src/adc.c     ****     sen_l.is_wall = FALSE;
 646              		.loc 1 327 0
 647 0036 104B     		ldr	r3, .L52+12
 648 0038 0022     		movs	r2, #0
 649 003a 1A73     		strb	r2, [r3, #12]
 650              	.L48:
 328:Src/adc.c     ****   }
 329:Src/adc.c     ****   else
 330:Src/adc.c     ****   {
 331:Src/adc.c     ****     sen_l.is_wall = TRUE;
 332:Src/adc.c     ****   }
 333:Src/adc.c     **** 
 334:Src/adc.c     ****   if (sen_r.now < sen_r.threshold)
 651              		.loc 1 334 0
 652 003c 0F4B     		ldr	r3, .L52+16
 653 003e B3F90020 		ldrsh	r2, [r3]
 654 0042 B3F90630 		ldrsh	r3, [r3, #6]
 655 0046 9A42     		cmp	r2, r3
 656 0048 0BDB     		blt	.L51
 335:Src/adc.c     ****   {
 336:Src/adc.c     ****     sen_r.is_wall = FALSE;
 337:Src/adc.c     ****   }
 338:Src/adc.c     ****   else
 339:Src/adc.c     ****   {
 340:Src/adc.c     ****     sen_r.is_wall = TRUE;
 657              		.loc 1 340 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 19


 658 004a 0C4B     		ldr	r3, .L52+16
 659 004c 0122     		movs	r2, #1
 660 004e 1A73     		strb	r2, [r3, #12]
 341:Src/adc.c     ****   }
 342:Src/adc.c     **** }
 661              		.loc 1 342 0
 662 0050 7047     		bx	lr
 663              	.L45:
 322:Src/adc.c     ****   }
 664              		.loc 1 322 0
 665 0052 084B     		ldr	r3, .L52+8
 666 0054 0122     		movs	r2, #1
 667 0056 1A73     		strb	r2, [r3, #12]
 668 0058 E6E7     		b	.L46
 669              	.L47:
 331:Src/adc.c     ****   }
 670              		.loc 1 331 0
 671 005a 074B     		ldr	r3, .L52+12
 672 005c 0122     		movs	r2, #1
 673 005e 1A73     		strb	r2, [r3, #12]
 674 0060 ECE7     		b	.L48
 675              	.L51:
 336:Src/adc.c     ****   }
 676              		.loc 1 336 0
 677 0062 064B     		ldr	r3, .L52+16
 678 0064 0022     		movs	r2, #0
 679 0066 1A73     		strb	r2, [r3, #12]
 680 0068 7047     		bx	lr
 681              	.L53:
 682 006a 00BF     		.align	2
 683              	.L52:
 684 006c 00000000 		.word	sen_fl
 685 0070 00000000 		.word	sen_fr
 686 0074 00000000 		.word	sen_front
 687 0078 00000000 		.word	sen_l
 688 007c 00000000 		.word	sen_r
 689              		.cfi_endproc
 690              	.LFE131:
 692              		.section	.text.Adc_IrSensorStart,"ax",%progbits
 693              		.align	1
 694              		.global	Adc_IrSensorStart
 695              		.syntax unified
 696              		.thumb
 697              		.thumb_func
 698              		.fpu fpv4-sp-d16
 700              	Adc_IrSensorStart:
 701              	.LFB132:
 343:Src/adc.c     **** 
 344:Src/adc.c     **** void Adc_IrSensorStart(void)
 345:Src/adc.c     **** {
 702              		.loc 1 345 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706 0000 08B5     		push	{r3, lr}
 707              	.LCFI13:
 708              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 20


 709              		.cfi_offset 3, -8
 710              		.cfi_offset 14, -4
 346:Src/adc.c     ****   adc_counter = 0;
 711              		.loc 1 346 0
 712 0002 044B     		ldr	r3, .L56
 713 0004 0022     		movs	r2, #0
 714 0006 1A80     		strh	r2, [r3]	@ movhi
 347:Src/adc.c     ****   HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 715              		.loc 1 347 0
 716 0008 0422     		movs	r2, #4
 717 000a 0349     		ldr	r1, .L56+4
 718 000c 0348     		ldr	r0, .L56+8
 719 000e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 720              	.LVL35:
 348:Src/adc.c     **** }
 721              		.loc 1 348 0
 722 0012 08BD     		pop	{r3, pc}
 723              	.L57:
 724              		.align	2
 725              	.L56:
 726 0014 00000000 		.word	adc_counter
 727 0018 00000000 		.word	ADCBuff
 728 001c 00000000 		.word	hadc2
 729              		.cfi_endproc
 730              	.LFE132:
 732              		.section	.text.Adc_IrSensorFinish,"ax",%progbits
 733              		.align	1
 734              		.global	Adc_IrSensorFinish
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv4-sp-d16
 740              	Adc_IrSensorFinish:
 741              	.LFB133:
 349:Src/adc.c     **** 
 350:Src/adc.c     **** void Adc_IrSensorFinish(void)
 351:Src/adc.c     **** {
 742              		.loc 1 351 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746 0000 10B5     		push	{r4, lr}
 747              	.LCFI14:
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 4, -8
 750              		.cfi_offset 14, -4
 352:Src/adc.c     ****   adc_counter = IRSENSOR_OFF;
 751              		.loc 1 352 0
 752 0002 074B     		ldr	r3, .L60
 753 0004 0422     		movs	r2, #4
 754 0006 1A80     		strh	r2, [r3]	@ movhi
 353:Src/adc.c     ****   HAL_GPIO_WritePin(ir_front_GPIO_Port,ir_front_Pin,GPIO_PIN_RESET);
 755              		.loc 1 353 0
 756 0008 064C     		ldr	r4, .L60+4
 757 000a 0022     		movs	r2, #0
 758 000c 0221     		movs	r1, #2
 759 000e 2046     		mov	r0, r4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 21


 760 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 761              	.LVL36:
 354:Src/adc.c     ****   HAL_GPIO_WritePin(ir_side_GPIO_Port,ir_side_Pin,GPIO_PIN_RESET);
 762              		.loc 1 354 0
 763 0014 0022     		movs	r2, #0
 764 0016 0121     		movs	r1, #1
 765 0018 2046     		mov	r0, r4
 766 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 767              	.LVL37:
 355:Src/adc.c     **** }
 768              		.loc 1 355 0
 769 001e 10BD     		pop	{r4, pc}
 770              	.L61:
 771              		.align	2
 772              	.L60:
 773 0020 00000000 		.word	adc_counter
 774 0024 00000240 		.word	1073872896
 775              		.cfi_endproc
 776              	.LFE133:
 778              		.section	.text.Adc_CheckConvert,"ax",%progbits
 779              		.align	1
 780              		.global	Adc_CheckConvert
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu fpv4-sp-d16
 786              	Adc_CheckConvert:
 787              	.LFB134:
 356:Src/adc.c     **** 
 357:Src/adc.c     **** void Adc_CheckConvert(void)
 358:Src/adc.c     **** {
 788              		.loc 1 358 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792 0000 08B5     		push	{r3, lr}
 793              	.LCFI15:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 3, -8
 796              		.cfi_offset 14, -4
 359:Src/adc.c     ****   if (adc_counter == FINISH_CONVERT)
 797              		.loc 1 359 0
 798 0002 104B     		ldr	r3, .L66
 799 0004 B3F90030 		ldrsh	r3, [r3]
 800 0008 032B     		cmp	r3, #3
 801 000a 00D0     		beq	.L65
 802              	.L62:
 360:Src/adc.c     ****   {
 361:Src/adc.c     ****     update_sensor_data();
 362:Src/adc.c     ****     adc_counter = 0;
 363:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 364:Src/adc.c     **** 
 365:Src/adc.c     ****     sen_l.diff_1ms = sen_l.now - sen_l.befor_1ms;
 366:Src/adc.c     ****     sen_l.befor_1ms = sen_l.now;
 367:Src/adc.c     **** 
 368:Src/adc.c     ****     sen_r.diff_1ms = sen_r.now - sen_r.befor_1ms;
 369:Src/adc.c     ****     sen_r.befor_1ms = sen_r.now;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 22


 370:Src/adc.c     ****   }
 371:Src/adc.c     **** }
 803              		.loc 1 371 0
 804 000c 08BD     		pop	{r3, pc}
 805              	.L65:
 361:Src/adc.c     ****     adc_counter = 0;
 806              		.loc 1 361 0
 807 000e FFF7FEFF 		bl	update_sensor_data
 808              	.LVL38:
 362:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff, ADC_CONVERT_DATA_SIZE);
 809              		.loc 1 362 0
 810 0012 0C4B     		ldr	r3, .L66
 811 0014 0022     		movs	r2, #0
 812 0016 1A80     		strh	r2, [r3]	@ movhi
 363:Src/adc.c     **** 
 813              		.loc 1 363 0
 814 0018 0422     		movs	r2, #4
 815 001a 0B49     		ldr	r1, .L66+4
 816 001c 0B48     		ldr	r0, .L66+8
 817 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 818              	.LVL39:
 365:Src/adc.c     ****     sen_l.befor_1ms = sen_l.now;
 819              		.loc 1 365 0
 820 0022 0B4B     		ldr	r3, .L66+12
 821 0024 B3F90010 		ldrsh	r1, [r3]
 822 0028 8AB2     		uxth	r2, r1
 823 002a 5888     		ldrh	r0, [r3, #2]
 824 002c 121A     		subs	r2, r2, r0
 825 002e 5A81     		strh	r2, [r3, #10]	@ movhi
 366:Src/adc.c     **** 
 826              		.loc 1 366 0
 827 0030 5980     		strh	r1, [r3, #2]	@ movhi
 368:Src/adc.c     ****     sen_r.befor_1ms = sen_r.now;
 828              		.loc 1 368 0
 829 0032 084B     		ldr	r3, .L66+16
 830 0034 B3F90010 		ldrsh	r1, [r3]
 831 0038 8AB2     		uxth	r2, r1
 832 003a 5888     		ldrh	r0, [r3, #2]
 833 003c 121A     		subs	r2, r2, r0
 834 003e 5A81     		strh	r2, [r3, #10]	@ movhi
 369:Src/adc.c     ****   }
 835              		.loc 1 369 0
 836 0040 5980     		strh	r1, [r3, #2]	@ movhi
 837              		.loc 1 371 0
 838 0042 E3E7     		b	.L62
 839              	.L67:
 840              		.align	2
 841              	.L66:
 842 0044 00000000 		.word	adc_counter
 843 0048 00000000 		.word	ADCBuff
 844 004c 00000000 		.word	hadc2
 845 0050 00000000 		.word	sen_l
 846 0054 00000000 		.word	sen_r
 847              		.cfi_endproc
 848              	.LFE134:
 850              		.section	.text.Adc_GetSensor,"ax",%progbits
 851              		.align	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 23


 852              		.global	Adc_GetSensor
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 856              		.fpu fpv4-sp-d16
 858              	Adc_GetSensor:
 859              	.LFB135:
 372:Src/adc.c     **** 
 373:Src/adc.c     **** // DMA の変換式を記�?
 374:Src/adc.c     **** void Adc_GetSensor(void)
 375:Src/adc.c     **** {
 860              		.loc 1 375 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864 0000 10B5     		push	{r4, lr}
 865              	.LCFI16:
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 4, -8
 868              		.cfi_offset 14, -4
 869 0002 82B0     		sub	sp, sp, #8
 870              	.LCFI17:
 871              		.cfi_def_cfa_offset 16
 376:Src/adc.c     ****   volatile unsigned char i;
 377:Src/adc.c     ****   switch (adc_counter)
 872              		.loc 1 377 0
 873 0004 494B     		ldr	r3, .L81
 874 0006 B3F90030 		ldrsh	r3, [r3]
 875 000a 012B     		cmp	r3, #1
 876 000c 2ED0     		beq	.L70
 877 000e 022B     		cmp	r3, #2
 878 0010 61D0     		beq	.L71
 879 0012 0BB1     		cbz	r3, .L80
 880              	.L68:
 378:Src/adc.c     ****   {
 379:Src/adc.c     ****   case OFF_VALUE:
 380:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 381:Src/adc.c     ****     ADCOffData[0] = ADCBuff[0];
 382:Src/adc.c     ****     ADCOffData[1] = ADCBuff[1];
 383:Src/adc.c     ****     ADCOffData[2] = ADCBuff[2];
 384:Src/adc.c     ****     ADCOffData[3] = ADCBuff[3];
 385:Src/adc.c     **** 
 386:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_SET);
 387:Src/adc.c     ****     
 388:Src/adc.c     ****     for (i = 0; i < 200; i++)
 389:Src/adc.c     ****     {
 390:Src/adc.c     ****     }
 391:Src/adc.c     ****     
 392:Src/adc.c     ****     adc_counter = FRONT_VALUE;
 393:Src/adc.c     **** 
 394:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 395:Src/adc.c     ****     break;
 396:Src/adc.c     **** 
 397:Src/adc.c     ****   case FRONT_VALUE:
 398:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 399:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 400:Src/adc.c     **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 24


 401:Src/adc.c     ****     ADCOntData[1] = ADCBuff[1];
 402:Src/adc.c     ****     ADCOntData[2] = ADCBuff[2];
 403:Src/adc.c     **** 
 404:Src/adc.c     ****     //sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
 405:Src/adc.c     ****     sen_fl.now = ADCOntData[1] - ADCOffData[1];
 406:Src/adc.c     **** 
 407:Src/adc.c     ****     //sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 408:Src/adc.c     ****     sen_fr.now = ADCOntData[2] - ADCOffData[2];
 409:Src/adc.c     **** 
 410:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_SET);
 411:Src/adc.c     **** 
 412:Src/adc.c     ****     
 413:Src/adc.c     ****     for (i = 0; i < 200; i++)
 414:Src/adc.c     ****     {
 415:Src/adc.c     ****     }
 416:Src/adc.c     ****     
 417:Src/adc.c     ****     adc_counter = SIDE_VALUE;
 418:Src/adc.c     **** 
 419:Src/adc.c     ****     HAL_ADC_Start_DMA(&hadc2, (uint32_t *)ADCBuff,ADC_CONVERT_DATA_SIZE);
 420:Src/adc.c     ****     break;
 421:Src/adc.c     **** 
 422:Src/adc.c     ****   case SIDE_VALUE:
 423:Src/adc.c     ****     HAL_ADC_Stop_DMA(&hadc2);
 424:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 425:Src/adc.c     **** 
 426:Src/adc.c     ****     ADCOntData[0] = ADCBuff[0];
 427:Src/adc.c     ****     ADCOntData[3] = ADCBuff[3];
 428:Src/adc.c     **** 
 429:Src/adc.c     ****     //sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 430:Src/adc.c     ****     sen_l.now = ADCOntData[0] - ADCOffData[0];
 431:Src/adc.c     **** 
 432:Src/adc.c     ****     //sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 433:Src/adc.c     ****     sen_r.now = ADCOntData[3] - ADCOffData[3];
 434:Src/adc.c     ****     
 435:Src/adc.c     ****     for (i = 0; i < 200; i++)
 436:Src/adc.c     ****     {
 437:Src/adc.c     ****     }
 438:Src/adc.c     ****     
 439:Src/adc.c     ****     adc_counter = FINISH_CONVERT;
 440:Src/adc.c     ****     break;
 441:Src/adc.c     **** 
 442:Src/adc.c     ****   default:
 443:Src/adc.c     ****     break;
 444:Src/adc.c     ****   }
 445:Src/adc.c     **** }
 881              		.loc 1 445 0
 882 0014 02B0     		add	sp, sp, #8
 883              	.LCFI18:
 884              		.cfi_remember_state
 885              		.cfi_def_cfa_offset 8
 886              		@ sp needed
 887 0016 10BD     		pop	{r4, pc}
 888              	.L80:
 889              	.LCFI19:
 890              		.cfi_restore_state
 380:Src/adc.c     ****     ADCOffData[0] = ADCBuff[0];
 891              		.loc 1 380 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 25


 892 0018 4548     		ldr	r0, .L81+4
 893 001a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 894              	.LVL40:
 381:Src/adc.c     ****     ADCOffData[1] = ADCBuff[1];
 895              		.loc 1 381 0
 896 001e 454A     		ldr	r2, .L81+8
 897 0020 1188     		ldrh	r1, [r2]
 898 0022 454B     		ldr	r3, .L81+12
 899 0024 1980     		strh	r1, [r3]	@ movhi
 382:Src/adc.c     ****     ADCOffData[2] = ADCBuff[2];
 900              		.loc 1 382 0
 901 0026 5188     		ldrh	r1, [r2, #2]
 902 0028 5980     		strh	r1, [r3, #2]	@ movhi
 383:Src/adc.c     ****     ADCOffData[3] = ADCBuff[3];
 903              		.loc 1 383 0
 904 002a 9188     		ldrh	r1, [r2, #4]
 905 002c 9980     		strh	r1, [r3, #4]	@ movhi
 384:Src/adc.c     **** 
 906              		.loc 1 384 0
 907 002e D288     		ldrh	r2, [r2, #6]
 908 0030 DA80     		strh	r2, [r3, #6]	@ movhi
 386:Src/adc.c     ****     
 909              		.loc 1 386 0
 910 0032 0122     		movs	r2, #1
 911 0034 0221     		movs	r1, #2
 912 0036 4148     		ldr	r0, .L81+16
 913 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 914              	.LVL41:
 388:Src/adc.c     ****     {
 915              		.loc 1 388 0
 916 003c 0023     		movs	r3, #0
 917 003e 8DF80730 		strb	r3, [sp, #7]
 918 0042 05E0     		b	.L73
 919              	.L74:
 388:Src/adc.c     ****     {
 920              		.loc 1 388 0 is_stmt 0 discriminator 3
 921 0044 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 922 0048 0133     		adds	r3, r3, #1
 923 004a DBB2     		uxtb	r3, r3
 924 004c 8DF80730 		strb	r3, [sp, #7]
 925              	.L73:
 388:Src/adc.c     ****     {
 926              		.loc 1 388 0 discriminator 1
 927 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 928 0054 DBB2     		uxtb	r3, r3
 929 0056 C72B     		cmp	r3, #199
 930 0058 F4D9     		bls	.L74
 392:Src/adc.c     **** 
 931              		.loc 1 392 0 is_stmt 1
 932 005a 344B     		ldr	r3, .L81
 933 005c 0122     		movs	r2, #1
 934 005e 1A80     		strh	r2, [r3]	@ movhi
 394:Src/adc.c     ****     break;
 935              		.loc 1 394 0
 936 0060 0422     		movs	r2, #4
 937 0062 3449     		ldr	r1, .L81+8
 938 0064 3248     		ldr	r0, .L81+4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 26


 939 0066 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 940              	.LVL42:
 395:Src/adc.c     **** 
 941              		.loc 1 395 0
 942 006a D3E7     		b	.L68
 943              	.L70:
 398:Src/adc.c     ****     HAL_GPIO_WritePin(ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET);
 944              		.loc 1 398 0
 945 006c 3048     		ldr	r0, .L81+4
 946 006e FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 947              	.LVL43:
 399:Src/adc.c     **** 
 948              		.loc 1 399 0
 949 0072 324C     		ldr	r4, .L81+16
 950 0074 0022     		movs	r2, #0
 951 0076 0221     		movs	r1, #2
 952 0078 2046     		mov	r0, r4
 953 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 954              	.LVL44:
 401:Src/adc.c     ****     ADCOntData[2] = ADCBuff[2];
 955              		.loc 1 401 0
 956 007e 2D4B     		ldr	r3, .L81+8
 957 0080 5A88     		ldrh	r2, [r3, #2]
 958 0082 2F49     		ldr	r1, .L81+20
 959 0084 4A80     		strh	r2, [r1, #2]	@ movhi
 402:Src/adc.c     **** 
 960              		.loc 1 402 0
 961 0086 9B88     		ldrh	r3, [r3, #4]
 962 0088 8B80     		strh	r3, [r1, #4]	@ movhi
 405:Src/adc.c     **** 
 963              		.loc 1 405 0
 964 008a 2B49     		ldr	r1, .L81+12
 965 008c 4888     		ldrh	r0, [r1, #2]
 966 008e 121A     		subs	r2, r2, r0
 967 0090 2C48     		ldr	r0, .L81+24
 968 0092 0280     		strh	r2, [r0]	@ movhi
 408:Src/adc.c     **** 
 969              		.loc 1 408 0
 970 0094 8A88     		ldrh	r2, [r1, #4]
 971 0096 9B1A     		subs	r3, r3, r2
 972 0098 2B4A     		ldr	r2, .L81+28
 973 009a 1380     		strh	r3, [r2]	@ movhi
 410:Src/adc.c     **** 
 974              		.loc 1 410 0
 975 009c 0122     		movs	r2, #1
 976 009e 1146     		mov	r1, r2
 977 00a0 2046     		mov	r0, r4
 978 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 979              	.LVL45:
 413:Src/adc.c     ****     {
 980              		.loc 1 413 0
 981 00a6 0023     		movs	r3, #0
 982 00a8 8DF80730 		strb	r3, [sp, #7]
 983 00ac 05E0     		b	.L75
 984              	.L76:
 413:Src/adc.c     ****     {
 985              		.loc 1 413 0 is_stmt 0 discriminator 3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 27


 986 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 987 00b2 0133     		adds	r3, r3, #1
 988 00b4 DBB2     		uxtb	r3, r3
 989 00b6 8DF80730 		strb	r3, [sp, #7]
 990              	.L75:
 413:Src/adc.c     ****     {
 991              		.loc 1 413 0 discriminator 1
 992 00ba 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 993 00be DBB2     		uxtb	r3, r3
 994 00c0 C72B     		cmp	r3, #199
 995 00c2 F4D9     		bls	.L76
 417:Src/adc.c     **** 
 996              		.loc 1 417 0 is_stmt 1
 997 00c4 194B     		ldr	r3, .L81
 998 00c6 0222     		movs	r2, #2
 999 00c8 1A80     		strh	r2, [r3]	@ movhi
 419:Src/adc.c     ****     break;
 1000              		.loc 1 419 0
 1001 00ca 0422     		movs	r2, #4
 1002 00cc 1949     		ldr	r1, .L81+8
 1003 00ce 1848     		ldr	r0, .L81+4
 1004 00d0 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1005              	.LVL46:
 420:Src/adc.c     **** 
 1006              		.loc 1 420 0
 1007 00d4 9EE7     		b	.L68
 1008              	.L71:
 423:Src/adc.c     ****     HAL_GPIO_WritePin(ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET);
 1009              		.loc 1 423 0
 1010 00d6 1648     		ldr	r0, .L81+4
 1011 00d8 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 1012              	.LVL47:
 424:Src/adc.c     **** 
 1013              		.loc 1 424 0
 1014 00dc 0022     		movs	r2, #0
 1015 00de 0121     		movs	r1, #1
 1016 00e0 1648     		ldr	r0, .L81+16
 1017 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1018              	.LVL48:
 426:Src/adc.c     ****     ADCOntData[3] = ADCBuff[3];
 1019              		.loc 1 426 0
 1020 00e6 134B     		ldr	r3, .L81+8
 1021 00e8 1A88     		ldrh	r2, [r3]
 1022 00ea 1549     		ldr	r1, .L81+20
 1023 00ec 0A80     		strh	r2, [r1]	@ movhi
 427:Src/adc.c     **** 
 1024              		.loc 1 427 0
 1025 00ee DB88     		ldrh	r3, [r3, #6]
 1026 00f0 CB80     		strh	r3, [r1, #6]	@ movhi
 430:Src/adc.c     **** 
 1027              		.loc 1 430 0
 1028 00f2 1149     		ldr	r1, .L81+12
 1029 00f4 0888     		ldrh	r0, [r1]
 1030 00f6 121A     		subs	r2, r2, r0
 1031 00f8 1448     		ldr	r0, .L81+32
 1032 00fa 0280     		strh	r2, [r0]	@ movhi
 433:Src/adc.c     ****     
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 28


 1033              		.loc 1 433 0
 1034 00fc CA88     		ldrh	r2, [r1, #6]
 1035 00fe 9B1A     		subs	r3, r3, r2
 1036 0100 134A     		ldr	r2, .L81+36
 1037 0102 1380     		strh	r3, [r2]	@ movhi
 435:Src/adc.c     ****     {
 1038              		.loc 1 435 0
 1039 0104 0023     		movs	r3, #0
 1040 0106 8DF80730 		strb	r3, [sp, #7]
 1041 010a 05E0     		b	.L77
 1042              	.L78:
 435:Src/adc.c     ****     {
 1043              		.loc 1 435 0 is_stmt 0 discriminator 3
 1044 010c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1045 0110 0133     		adds	r3, r3, #1
 1046 0112 DBB2     		uxtb	r3, r3
 1047 0114 8DF80730 		strb	r3, [sp, #7]
 1048              	.L77:
 435:Src/adc.c     ****     {
 1049              		.loc 1 435 0 discriminator 1
 1050 0118 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1051 011c DBB2     		uxtb	r3, r3
 1052 011e C72B     		cmp	r3, #199
 1053 0120 F4D9     		bls	.L78
 439:Src/adc.c     ****     break;
 1054              		.loc 1 439 0 is_stmt 1
 1055 0122 024B     		ldr	r3, .L81
 1056 0124 0322     		movs	r2, #3
 1057 0126 1A80     		strh	r2, [r3]	@ movhi
 1058              		.loc 1 445 0
 1059 0128 74E7     		b	.L68
 1060              	.L82:
 1061 012a 00BF     		.align	2
 1062              	.L81:
 1063 012c 00000000 		.word	adc_counter
 1064 0130 00000000 		.word	hadc2
 1065 0134 00000000 		.word	ADCBuff
 1066 0138 00000000 		.word	ADCOffData
 1067 013c 00000240 		.word	1073872896
 1068 0140 00000000 		.word	ADCOntData
 1069 0144 00000000 		.word	sen_fl
 1070 0148 00000000 		.word	sen_fr
 1071 014c 00000000 		.word	sen_l
 1072 0150 00000000 		.word	sen_r
 1073              		.cfi_endproc
 1074              	.LFE135:
 1076              		.section	.text.Adc_GetBatt,"ax",%progbits
 1077              		.align	1
 1078              		.global	Adc_GetBatt
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1082              		.fpu fpv4-sp-d16
 1084              	Adc_GetBatt:
 1085              	.LFB136:
 446:Src/adc.c     **** 
 447:Src/adc.c     **** float Adc_GetBatt(void)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 29


 448:Src/adc.c     **** {
 1086              		.loc 1 448 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090 0000 38B5     		push	{r3, r4, r5, lr}
 1091              	.LCFI20:
 1092              		.cfi_def_cfa_offset 16
 1093              		.cfi_offset 3, -16
 1094              		.cfi_offset 4, -12
 1095              		.cfi_offset 5, -8
 1096              		.cfi_offset 14, -4
 1097 0002 2DED028B 		vpush.64	{d8}
 1098              	.LCFI21:
 1099              		.cfi_def_cfa_offset 24
 1100              		.cfi_offset 80, -24
 1101              		.cfi_offset 81, -20
 1102              	.LVL49:
 1103              	.LBB4:
 449:Src/adc.c     ****   float batt = 0;
 450:Src/adc.c     ****   for (int i = 0; i < 10; i++)
 1104              		.loc 1 450 0
 1105 0006 0024     		movs	r4, #0
 1106              	.LBE4:
 449:Src/adc.c     ****   float batt = 0;
 1107              		.loc 1 449 0
 1108 0008 9FED178A 		vldr.32	s16, .L88
 1109              	.LBB5:
 1110              		.loc 1 450 0
 1111 000c 16E0     		b	.L84
 1112              	.LVL50:
 1113              	.L86:
 451:Src/adc.c     ****   {
 452:Src/adc.c     ****     HAL_ADC_Start(&hadc1); // ad convert start
 1114              		.loc 1 452 0
 1115 000e 1748     		ldr	r0, .L88+4
 1116 0010 FFF7FEFF 		bl	HAL_ADC_Start
 1117              	.LVL51:
 1118              	.L85:
 453:Src/adc.c     ****     while (HAL_ADC_PollForConversion(&hadc1, 50) != HAL_OK)
 1119              		.loc 1 453 0 discriminator 1
 1120 0014 3221     		movs	r1, #50
 1121 0016 1548     		ldr	r0, .L88+4
 1122 0018 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1123              	.LVL52:
 1124 001c 0028     		cmp	r0, #0
 1125 001e F9D1     		bne	.L85
 454:Src/adc.c     ****     {
 455:Src/adc.c     ****     } // trans
 456:Src/adc.c     ****     batt += HAL_ADC_GetValue(&hadc1);
 1126              		.loc 1 456 0 discriminator 2
 1127 0020 124D     		ldr	r5, .L88+4
 1128 0022 2846     		mov	r0, r5
 1129 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 1130              	.LVL53:
 1131 0028 07EE900A 		vmov	s15, r0	@ int
 1132 002c F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 30


 1133 0030 38EE278A 		vadd.f32	s16, s16, s15
 1134              	.LVL54:
 457:Src/adc.c     ****     HAL_ADC_Stop(&hadc1);
 1135              		.loc 1 457 0 discriminator 2
 1136 0034 2846     		mov	r0, r5
 1137 0036 FFF7FEFF 		bl	HAL_ADC_Stop
 1138              	.LVL55:
 450:Src/adc.c     ****   {
 1139              		.loc 1 450 0 discriminator 2
 1140 003a 0134     		adds	r4, r4, #1
 1141              	.LVL56:
 1142              	.L84:
 450:Src/adc.c     ****   {
 1143              		.loc 1 450 0 is_stmt 0 discriminator 1
 1144 003c 092C     		cmp	r4, #9
 1145 003e E6DD     		ble	.L86
 1146              	.LBE5:
 458:Src/adc.c     ****   }
 459:Src/adc.c     ****   batt = batt / 10.0f / 4095.0f * 3.2f * 3.3f;
 1147              		.loc 1 459 0 is_stmt 1
 1148 0040 F2EE047A 		vmov.f32	s15, #1.0e+1
 1149 0044 C8EE276A 		vdiv.f32	s13, s16, s15
 1150 0048 9FED097A 		vldr.32	s14, .L88+8
 1151 004c C6EE877A 		vdiv.f32	s15, s13, s14
 1152 0050 9FED087A 		vldr.32	s14, .L88+12
 1153 0054 67EE877A 		vmul.f32	s15, s15, s14
 1154              	.LVL57:
 460:Src/adc.c     ****   /*
 461:Src/adc.c     ****   //finish
 462:Src/adc.c     ****   while(1){
 463:Src/adc.c     ****     LED_Control((unsigned char)batt);
 464:Src/adc.c     ****     if(Push()==1){
 465:Src/adc.c     ****       Output_Buzzer(HZ_C_H);
 466:Src/adc.c     ****       HAL_Delay(500);
 467:Src/adc.c     ****       break;
 468:Src/adc.c     ****     }
 469:Src/adc.c     ****   }
 470:Src/adc.c     ****   */
 471:Src/adc.c     ****   return batt;
 472:Src/adc.c     **** }
 1155              		.loc 1 472 0
 1156 0058 9FED070A 		vldr.32	s0, .L88+16
 1157 005c 27EE800A 		vmul.f32	s0, s15, s0
 1158              	.LVL58:
 1159 0060 BDEC028B 		vldm	sp!, {d8}
 1160              	.LCFI22:
 1161              		.cfi_restore 80
 1162              		.cfi_restore 81
 1163              		.cfi_def_cfa_offset 16
 1164 0064 38BD     		pop	{r3, r4, r5, pc}
 1165              	.LVL59:
 1166              	.L89:
 1167 0066 00BF     		.align	2
 1168              	.L88:
 1169 0068 00000000 		.word	0
 1170 006c 00000000 		.word	hadc1
 1171 0070 00F07F45 		.word	1166012416
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 31


 1172 0074 CDCC4C40 		.word	1078774989
 1173 0078 33335340 		.word	1079194419
 1174              		.cfi_endproc
 1175              	.LFE136:
 1177              		.comm	hdma_adc2,96,4
 1178              		.comm	hadc2,72,4
 1179              		.comm	hadc1,72,4
 1180              		.comm	adc_counter,2,2
 1181              		.comm	ADCOntData,8,4
 1182              		.comm	ADCOffData,8,4
 1183              		.comm	ADCBuff,8,4
 1184              		.comm	sen_r,14,4
 1185              		.comm	sen_fr,14,4
 1186              		.comm	sen_front,14,4
 1187              		.comm	sen_fl,14,4
 1188              		.comm	sen_l,14,4
 1189              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 1190              		.align	2
 1191              	.LC0:
 1192 0000 5372632F 		.ascii	"Src/adc.c\000"
 1192      6164632E 
 1192      6300
 1193              		.text
 1194              	.Letext0:
 1195              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1196              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1197              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1198              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1199              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1200              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1201              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1202              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1203              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1204              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1205              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1206              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1207              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1208              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1209              		.file 16 "Inc/adc.h"
 1210              		.file 17 "Inc/dma.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:117    .text.MX_ADC1_Init:00000060 $d
                            *COM*:00000048 hadc1
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:125    .text.MX_ADC2_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:132    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:285    .text.MX_ADC2_Init:000000bc $d
                            *COM*:00000048 hadc2
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:293    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:300    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:455    .text.HAL_ADC_MspInit:000000c0 $d
                            *COM*:00000060 hdma_adc2
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:467    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:474    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:541    .text.HAL_ADC_MspDeInit:0000004c $d
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:550    .text.Adc_SetSensorConstant:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:557    .text.Adc_SetSensorConstant:00000000 Adc_SetSensorConstant
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:598    .text.Adc_SetSensorConstant:0000003c $d
                            *COM*:0000000e sen_l
                            *COM*:0000000e sen_fl
                            *COM*:0000000e sen_front
                            *COM*:0000000e sen_fr
                            *COM*:0000000e sen_r
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:607    .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:614    .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:684    .text.update_sensor_data:0000006c $d
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:693    .text.Adc_IrSensorStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:700    .text.Adc_IrSensorStart:00000000 Adc_IrSensorStart
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:726    .text.Adc_IrSensorStart:00000014 $d
                            *COM*:00000002 adc_counter
                            *COM*:00000008 ADCBuff
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:733    .text.Adc_IrSensorFinish:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:740    .text.Adc_IrSensorFinish:00000000 Adc_IrSensorFinish
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:773    .text.Adc_IrSensorFinish:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:779    .text.Adc_CheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:786    .text.Adc_CheckConvert:00000000 Adc_CheckConvert
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:842    .text.Adc_CheckConvert:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:851    .text.Adc_GetSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:858    .text.Adc_GetSensor:00000000 Adc_GetSensor
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:1063   .text.Adc_GetSensor:0000012c $d
                            *COM*:00000008 ADCOffData
                            *COM*:00000008 ADCOntData
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:1077   .text.Adc_GetBatt:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:1084   .text.Adc_GetBatt:00000000 Adc_GetBatt
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:1169   .text.Adc_GetBatt:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s:1190   .rodata.MX_ADC1_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccq10WBe.s 			page 33


HAL_ADC_Start_DMA
HAL_GPIO_WritePin
HAL_ADC_Stop_DMA
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
